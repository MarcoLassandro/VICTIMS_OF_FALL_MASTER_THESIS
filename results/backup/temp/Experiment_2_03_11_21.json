[{"dataset_variant": "complete", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "regressor": "[GradientBoostingRegressor(criterion = 'mse')]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "[1,2,3]", "scaler": "[MinMaxScaler()]", "regressor__n_estimators": "[100, 150, 200]", "regressor__max_depth": "[5, 10, 15]", "regressor__criterion": "['mse', 'mae']"}], "metrics": "['neg_mean_absolute_error']", "n_split_outer_kcv": 10}, "best_params": "{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}", "mean_test_score": -1.1624113915409353, "cv_results": "{'mean_fit_time': array([0.20940163, 0.27255361, 0.29010661, 0.22933636, 0.3757952 ,\n       0.50625346, 0.27579875, 0.40070398, 0.64839988, 1.17149663,\n       1.82509975, 2.27815473, 1.46723201, 2.24016678, 2.99230065,\n       1.38210263, 1.98931947, 2.6562005 , 0.15930114, 0.23939865,\n       0.34779828, 0.28369997, 0.39440062, 0.57710011, 0.28699799,\n       0.39389844, 0.50269706, 1.18349869, 1.84879928, 2.69112539,\n       1.61941602, 4.34310367, 4.24496164, 2.61698196, 2.43279939,\n       3.18100164, 0.2267004 , 0.28549829, 0.40079799, 0.31710179,\n       0.43749998, 0.58249846, 0.29989946, 0.43469465, 0.5556978 ,\n       1.49449892, 2.89122493, 4.26759672, 1.86201844, 4.76662326,\n       4.38446038, 1.85797789, 4.28234146, 3.94156337, 0.1645983 ,\n       0.25550387, 0.33030119, 0.24969935, 0.33940005, 0.46369884,\n       0.25749791, 0.35270338, 0.51330104, 1.04399722, 1.48603418,\n       3.39916747, 1.72130384, 2.26980028, 3.34049721, 2.73622661,\n       2.04460168, 2.78110046, 0.17429924, 0.28680089, 0.36089959,\n       0.28499866, 0.41919873, 0.53430073, 0.27120306, 0.4129045 ,\n       0.52162747, 1.47779269, 2.33221319, 4.20742633, 1.62410035,\n       4.26455443, 4.66184525, 2.62473283, 2.39389846, 3.1862011 ,\n       0.22119906, 0.30429962, 0.40719888, 0.29469929, 0.4510957 ,\n       0.66089728, 0.30100248, 0.43869951, 0.56319611, 1.56799777,\n       4.086689  , 3.31904166, 2.09046841, 5.18616123, 5.91686652,\n       2.23034675, 3.76734121, 4.12754197]), 'std_fit_time': array([0.05623506, 0.064696  , 0.01977652, 0.01972908, 0.05926331,\n       0.05744465, 0.02482816, 0.03496865, 0.10999129, 0.24320925,\n       0.2798313 , 0.20109854, 0.18516881, 0.18675428, 0.18096153,\n       0.13233848, 0.1608286 , 0.25049297, 0.01655999, 0.01288055,\n       0.04523178, 0.03366508, 0.02022955, 0.07101168, 0.03327098,\n       0.02039698, 0.02082367, 0.04378195, 0.06818221, 0.26195022,\n       0.16721993, 0.84633712, 1.1460189 , 0.82042033, 0.21627972,\n       0.20286195, 0.02373488, 0.01932214, 0.06326401, 0.02739842,\n       0.0319452 , 0.02520476, 0.03000145, 0.02049653, 0.02697249,\n       0.14301064, 0.83582695, 1.03567929, 0.13942487, 0.6208563 ,\n       0.35031716, 0.12125065, 0.68149036, 0.37744055, 0.01750748,\n       0.02660717, 0.03490452, 0.0385122 , 0.02033342, 0.03279509,\n       0.02863259, 0.02574419, 0.08136248, 0.09194732, 0.05124784,\n       0.89752376, 0.68841635, 0.24698329, 0.66497196, 0.9867915 ,\n       0.15305282, 0.26491457, 0.02084758, 0.03888544, 0.04051211,\n       0.02901107, 0.04192473, 0.04464638, 0.01675546, 0.02127915,\n       0.02493509, 0.21938094, 0.47339664, 1.0501324 , 0.13384973,\n       0.77821587, 0.96714768, 0.87579122, 0.20567098, 0.23494944,\n       0.03104104, 0.04771716, 0.04297815, 0.01759586, 0.02666242,\n       0.07487872, 0.03019865, 0.03194576, 0.0218085 , 0.15930979,\n       0.79660615, 0.28345422, 0.36928039, 1.17515202, 1.04499278,\n       0.76093447, 0.92815984, 1.17009202]), 'mean_score_time': array([0.0026993 , 0.00209956, 0.00190043, 0.0024008 , 0.00270095,\n       0.00375092, 0.00370021, 0.00390177, 0.00440159, 0.00170171,\n       0.00239933, 0.00219829, 0.00240119, 0.00240073, 0.00380049,\n       0.00270085, 0.002701  , 0.00300164, 0.0020014 , 0.00200067,\n       0.00230021, 0.00220098, 0.00250208, 0.00340042, 0.00220153,\n       0.00250187, 0.0031014 , 0.00169885, 0.00200121, 0.00210044,\n       0.00319915, 0.00320098, 0.00319903, 0.00430341, 0.00279911,\n       0.0051986 , 0.00169926, 0.00200069, 0.002     , 0.00239906,\n       0.00290065, 0.00549953, 0.00330327, 0.00280313, 0.00419936,\n       0.00230365, 0.00249867, 0.00250115, 0.00239995, 0.00359647,\n       0.00250163, 0.00320113, 0.00515451, 0.00430348, 0.00159986,\n       0.00470343, 0.00260131, 0.00290101, 0.00310283, 0.00360136,\n       0.00390127, 0.00289977, 0.0034991 , 0.00160131, 0.00220122,\n       0.0063251 , 0.00280004, 0.00260077, 0.0042001 , 0.00270123,\n       0.00259969, 0.00700278, 0.0019032 , 0.00319853, 0.00239978,\n       0.00240092, 0.00300207, 0.00299976, 0.00309842, 0.00319612,\n       0.00407326, 0.00370409, 0.00610564, 0.00189955, 0.00230184,\n       0.00405748, 0.0050004 , 0.0035552 , 0.00349984, 0.00460041,\n       0.0016012 , 0.00180409, 0.00219848, 0.00230491, 0.0028007 ,\n       0.00450408, 0.00279789, 0.00520203, 0.0033006 , 0.00430138,\n       0.00320008, 0.00230014, 0.01130216, 0.00360312, 0.00430052,\n       0.00229843, 0.00737493, 0.00300198]), 'std_score_time': array([8.97136217e-04, 5.36630945e-04, 5.38363649e-04, 4.88629243e-04,\n       6.40393637e-04, 1.66939373e-03, 1.61812804e-03, 2.42941861e-03,\n       1.49715249e-03, 6.40906226e-04, 1.01960113e-03, 7.47276239e-04,\n       8.01962249e-04, 9.15795222e-04, 2.40034907e-03, 1.18691281e-03,\n       8.99169022e-04, 4.46010584e-04, 4.45404516e-04, 4.48790424e-04,\n       6.39864261e-04, 3.99348361e-04, 6.69833086e-04, 6.61733463e-04,\n       4.00384625e-04, 5.00204113e-04, 3.00638035e-04, 9.00393174e-04,\n       2.09225039e-06, 5.37801793e-04, 1.77373671e-03, 1.83332602e-03,\n       1.46642916e-03, 3.72143853e-03, 3.98452474e-04, 3.76399355e-03,\n       4.57354114e-04, 2.94762897e-06, 3.13626931e-06, 6.58195891e-04,\n       9.43147809e-04, 6.53265851e-03, 2.24329654e-03, 4.00711529e-04,\n       3.37332342e-03, 1.74010103e-03, 9.23167808e-04, 9.21552177e-04,\n       1.02003555e-03, 1.56089518e-03, 6.74228732e-04, 1.47244782e-03,\n       2.02701693e-03, 2.41378616e-03, 4.89746386e-04, 5.49637116e-03,\n       1.36582744e-03, 2.07138341e-03, 8.32221768e-04, 1.20168698e-03,\n       3.14450258e-03, 9.43575504e-04, 6.69201599e-04, 4.89719761e-04,\n       8.70356336e-04, 4.20720320e-03, 1.16656578e-03, 9.20645674e-04,\n       4.35480691e-03, 1.41901104e-03, 6.63139713e-04, 9.12081680e-03,\n       8.35321533e-04, 3.42607835e-03, 9.15820950e-04, 4.90622196e-04,\n       4.48096733e-04, 6.31330637e-04, 2.07166621e-03, 1.24468690e-03,\n       2.18014659e-03, 2.79906412e-03, 1.00763378e-02, 2.98368217e-04,\n       9.01106729e-04, 1.96308483e-03, 4.22097216e-03, 1.49604242e-03,\n       1.68583169e-03, 4.47659821e-03, 4.90257852e-04, 6.07205572e-04,\n       5.97402103e-04, 6.49084449e-04, 1.16572992e-03, 2.29242036e-03,\n       1.16452628e-03, 4.66414147e-03, 1.18758024e-03, 3.43819809e-03,\n       2.71545715e-03, 1.00691462e-03, 2.31235884e-02, 1.85488591e-03,\n       1.84608770e-03, 6.35429698e-04, 4.01268935e-03, 1.48186990e-03]), 'param_reduce_dim': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1)],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_reduce_dim__n_components': masked_array(data=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__criterion': masked_array(data=['mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae'],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__max_depth': masked_array(data=[5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10,\n                   15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5,\n                   10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__n_estimators': masked_array(data=[100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_scaler': masked_array(data=[MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler()],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}], 'split0_test_score': array([-1.46816786, -1.41496401, -1.42177359, -1.50542923, -1.5386223 ,\n       -1.49394671, -1.78921397, -1.77382174, -1.8155325 , -1.33662674,\n       -1.39503608, -1.50419027, -1.54747167, -1.39877106, -1.34659882,\n       -1.47574071, -1.50071716, -1.549369  , -1.33281331, -1.40519177,\n       -1.43086342, -1.45086085, -1.43122903, -1.45004327, -1.48705801,\n       -1.47771311, -1.45700619, -1.42059646, -1.35464578, -1.32517865,\n       -1.49815995, -1.50814551, -1.59483436, -1.45419314, -1.5572801 ,\n       -1.42005742, -1.29523427, -1.29497494, -1.31296658, -1.44661541,\n       -1.45393223, -1.43279048, -1.52711945, -1.55841042, -1.55457179,\n       -1.32422361, -1.29701777, -1.34360101, -1.46506481, -1.37639366,\n       -1.46919304, -1.52893039, -1.6303744 , -1.57307257, -1.21553393,\n       -1.17983159, -1.22303384, -1.36190036, -1.37825799, -1.33532221,\n       -1.45172785, -1.46316028, -1.47573898, -0.94668373, -1.05220146,\n       -1.08138568, -1.12937593, -1.18714325, -1.18392245, -1.17264978,\n       -1.22322883, -1.24676502, -1.11100772, -1.16663925, -1.17839377,\n       -1.29636429, -1.28764174, -1.3473184 , -1.37227551, -1.42149655,\n       -1.38585446, -1.16910244, -1.30450416, -1.25907004, -1.08497247,\n       -1.20630925, -1.11592622, -1.12624951, -1.25080454, -1.14544937,\n       -1.24999208, -1.34793925, -1.29788373, -1.21097484, -1.26327393,\n       -1.23972226, -1.28840242, -1.23937685, -1.24966877, -1.34129065,\n       -1.3116732 , -1.40004424, -1.37614961, -1.37650759, -1.23486195,\n       -1.46059181, -1.56404379, -1.38220044]), 'split1_test_score': array([-1.34369518, -1.38051329, -1.44113348, -1.2582661 , -1.30058143,\n       -1.26732162, -1.28590818, -1.26279864, -1.25829422, -1.36131606,\n       -1.36799681, -1.31632496, -1.1940584 , -1.38060307, -1.34060386,\n       -1.26769051, -1.28001863, -1.32323709, -1.02526317, -1.06865676,\n       -1.02272041, -1.00345579, -1.02664277, -1.03806394, -1.01549072,\n       -1.00048301, -0.98810081, -1.1609951 , -1.08986155, -1.05878356,\n       -1.14279192, -1.13813512, -1.05926943, -0.98447555, -0.97549979,\n       -0.98375355, -1.14388088, -1.04408893, -1.06129272, -0.84279116,\n       -0.88379592, -0.78688753, -1.03220133, -1.01847077, -1.04246156,\n       -1.1131103 , -1.1893981 , -1.21520512, -1.05431959, -1.02372925,\n       -1.03499205, -1.20406037, -1.09968556, -1.0814831 , -1.11809333,\n       -1.094703  , -1.09575201, -1.16181152, -1.19304007, -1.21148541,\n       -1.16485274, -1.15630109, -1.13804741, -1.14930711, -1.06243939,\n       -1.03972822, -1.29257971, -1.30693622, -1.29126731, -1.2022287 ,\n       -1.26845571, -1.27811973, -1.14243059, -1.13409059, -1.12768636,\n       -1.18348004, -1.18480181, -1.20763446, -1.06547026, -1.09084646,\n       -1.05380342, -1.09453337, -1.17308752, -1.13382226, -1.39598558,\n       -1.39959486, -1.26822557, -1.21305628, -1.32470176, -1.29457664,\n       -1.09823807, -1.09103743, -1.09600742, -1.31361292, -1.27590233,\n       -1.30558589, -1.33659474, -1.33723802, -1.34942032, -1.15579839,\n       -1.05657084, -1.113843  , -1.16946947, -1.31285287, -1.41873405,\n       -1.20785532, -1.28366234, -1.24522906]), 'split2_test_score': array([-1.17788598, -1.20611699, -1.293481  , -1.52596764, -1.47170545,\n       -1.51268002, -1.54535322, -1.54789047, -1.47068616, -1.28443828,\n       -1.27595968, -1.19586068, -1.25870428, -1.24487305, -1.14194232,\n       -1.15382758, -1.16213822, -1.23243327, -1.08266832, -1.04574306,\n       -1.0369035 , -1.06411457, -1.1551664 , -1.13657509, -1.39014302,\n       -1.39189714, -1.37368856, -0.97398099, -0.94681088, -1.04545911,\n       -1.18525098, -1.10728805, -1.06845217, -1.05473814, -1.00598659,\n       -0.98567006, -1.04409919, -1.02685715, -1.02739671, -1.16433692,\n       -1.20893199, -1.19919885, -1.59412775, -1.63544442, -1.60240504,\n       -0.98585382, -0.89441963, -1.00969613, -1.18117404, -1.11038813,\n       -1.18542745, -1.19038681, -1.0943428 , -1.22354051, -0.98135765,\n       -0.99336758, -0.98902827, -1.18876181, -1.21266418, -1.23135737,\n       -1.25687549, -1.30498331, -1.24313823, -1.09317428, -1.08280555,\n       -1.06397854, -1.22771357, -1.18440889, -1.16831701, -1.23953113,\n       -1.22080304, -1.23801587, -1.04285996, -1.07956663, -1.04294843,\n       -1.09531089, -1.0593605 , -1.06190529, -1.09793895, -1.12063599,\n       -1.11272361, -1.11051466, -1.06601174, -1.1877357 , -1.23265522,\n       -1.2787222 , -1.29655081, -1.15767518, -1.13710278, -1.16057745,\n       -1.07119646, -1.05415425, -1.06062243, -1.23549623, -1.17912772,\n       -1.23219564, -1.25705524, -1.31271585, -1.3378782 , -1.12661399,\n       -1.0041598 , -1.00636748, -1.13562783, -1.19914243, -1.36530077,\n       -1.26273705, -1.17650278, -1.17690907]), 'split3_test_score': array([-1.48092446, -1.37857789, -1.38739314, -1.71187966, -1.73323367,\n       -1.69536663, -1.83150804, -1.8339002 , -1.84599638, -1.57645789,\n       -1.60723198, -1.5653826 , -1.47993109, -1.50922964, -1.42937181,\n       -1.56257374, -1.59359339, -1.52629566, -1.44941458, -1.46635236,\n       -1.42858743, -1.44228856, -1.44909475, -1.44558403, -1.4515154 ,\n       -1.45948971, -1.43539285, -1.46841741, -1.4821356 , -1.43162845,\n       -1.56407264, -1.41867244, -1.40794142, -1.43561692, -1.44561089,\n       -1.42994243, -1.50850774, -1.50924727, -1.50975697, -1.7003099 ,\n       -1.67635181, -1.70886183, -1.79421628, -1.7792333 , -1.80376215,\n       -1.5466149 , -1.54728066, -1.49801358, -1.55493319, -1.59883016,\n       -1.47926336, -1.39355743, -1.41817724, -1.52845526, -1.34235058,\n       -1.32499795, -1.31296149, -1.80944843, -1.77858589, -1.77937127,\n       -1.78639924, -1.79207552, -1.76839495, -1.57299335, -1.61153444,\n       -1.58758113, -1.61872731, -1.6476896 , -1.73862542, -1.65552807,\n       -1.62715214, -1.65695165, -1.36143044, -1.37004964, -1.35056301,\n       -1.43300534, -1.42578084, -1.42251618, -1.58052329, -1.58361444,\n       -1.60885578, -1.57189829, -1.55163611, -1.52113429, -1.58607666,\n       -1.6536048 , -1.59109782, -1.67659495, -1.66801878, -1.64155376,\n       -1.49608054, -1.49149312, -1.42613829, -1.89197045, -1.95080489,\n       -1.87038772, -1.89918639, -1.88876795, -1.93405472, -1.66031595,\n       -1.61612437, -1.66392614, -1.86076446, -1.94143749, -1.79392275,\n       -1.9851261 , -2.0383972 , -2.01441895]), 'split4_test_score': array([-1.21953732, -1.21971289, -1.22064266, -1.40703386, -1.46275372,\n       -1.41179425, -1.4366338 , -1.42382815, -1.45003632, -1.28287631,\n       -1.34998014, -1.2664552 , -1.27632852, -1.31114836, -1.30153084,\n       -1.36675736, -1.36504255, -1.31492245, -1.13919499, -1.1302926 ,\n       -1.11475517, -1.25990356, -1.23851653, -1.25007435, -1.3625408 ,\n       -1.3602867 , -1.34631353, -1.19165303, -1.21388631, -1.25171794,\n       -1.24387184, -1.28240552, -1.11513773, -1.2258984 , -1.27004016,\n       -1.32453567, -1.14004136, -1.14832557, -1.13253506, -1.25175075,\n       -1.34960174, -1.2433526 , -1.28782346, -1.26973113, -1.25047732,\n       -1.10344318, -1.14845497, -1.18315851, -1.12588959, -1.18859161,\n       -1.19124895, -1.14652482, -1.12042886, -1.13620467, -1.05742693,\n       -1.03422357, -1.07700466, -1.29330115, -1.21378577, -1.26245626,\n       -1.26644534, -1.27052853, -1.27156219, -1.07260714, -1.17677441,\n       -1.1856085 , -1.14022492, -1.0783658 , -1.15815331, -1.15441631,\n       -1.04855976, -1.1861229 , -1.02560653, -0.99629119, -1.04367803,\n       -1.1733943 , -1.17160775, -1.20592327, -1.25317447, -1.24919411,\n       -1.26575014, -0.95393992, -1.07529522, -1.03734988, -1.10913609,\n       -1.12233141, -1.01213056, -1.27893693, -1.19047359, -1.1888996 ,\n       -1.04309338, -1.09955402, -1.07321009, -1.19510098, -1.19677757,\n       -1.21085859, -1.34237936, -1.35528291, -1.33932504, -1.01621507,\n       -1.01943818, -1.07076365, -1.02580848, -1.12951158, -1.08065731,\n       -1.16010972, -1.15058345, -1.22700736]), 'split5_test_score': array([-1.22244658, -1.20514076, -1.21122362, -1.50579983, -1.53134962,\n       -1.51625234, -1.70470179, -1.70999723, -1.69924646, -1.2955343 ,\n       -1.32337511, -1.31581053, -1.39915534, -1.11849125, -1.32278667,\n       -1.31209071, -1.3418237 , -1.2031432 , -1.19347043, -1.21480947,\n       -1.1997965 , -1.54021548, -1.55156073, -1.52366876, -1.68394686,\n       -1.64870673, -1.67046934, -1.25025051, -1.26395124, -1.20994415,\n       -1.5441609 , -1.45539686, -1.54750948, -1.42715555, -1.53175789,\n       -1.36070936, -1.27927173, -1.28655261, -1.29489572, -1.47384965,\n       -1.49149579, -1.45806139, -1.51293271, -1.4733159 , -1.49744233,\n       -1.23607327, -1.26903075, -1.24011844, -1.55618011, -1.46581192,\n       -1.51680076, -1.29810506, -1.37651297, -1.36420419, -1.09166118,\n       -1.0160441 , -1.02685718, -1.15326513, -1.15168537, -1.12795247,\n       -1.38813705, -1.42324221, -1.41246596, -1.0542838 , -1.09114995,\n       -1.12935959, -1.29083859, -1.21455602, -1.21774096, -1.12152299,\n       -1.14102755, -1.21636504, -1.22333611, -1.20631646, -1.23549377,\n       -1.30971121, -1.25961744, -1.28069069, -1.43930313, -1.39509365,\n       -1.42563572, -1.19582129, -1.20705836, -1.24716294, -1.32482834,\n       -1.34814008, -1.38147196, -1.3834849 , -1.35355538, -1.40800622,\n       -1.12564058, -1.23154601, -1.1661488 , -1.18544024, -1.18210662,\n       -1.1818657 , -1.4297025 , -1.46299271, -1.47708022, -1.18446308,\n       -1.20484671, -1.22202526, -1.31686991, -1.31166048, -1.19715376,\n       -1.35325675, -1.44420079, -1.3779571 ]), 'split6_test_score': array([-0.97305837, -0.94348312, -0.92771479, -1.23382584, -1.16957369,\n       -1.23943425, -1.43144069, -1.50736821, -1.46212836, -1.27233262,\n       -1.1372216 , -1.13354673, -1.32953461, -1.34251763, -1.45070949,\n       -1.33134239, -1.24029737, -1.33799923, -0.98611079, -0.97043214,\n       -0.92020089, -1.30873927, -1.27709523, -1.27975269, -1.55622798,\n       -1.53155418, -1.56404985, -1.04666804, -1.10704471, -1.03430378,\n       -1.12333419, -1.16795887, -1.14496775, -1.10828875, -1.22116828,\n       -1.11294126, -1.02912221, -1.02170968, -0.98905372, -1.27555594,\n       -1.29249582, -1.31259141, -1.52676248, -1.52718932, -1.4793756 ,\n       -1.1324215 , -1.06566219, -1.0395235 , -1.12624218, -1.17246917,\n       -1.16110519, -1.16320649, -1.18154741, -1.16351912, -0.98206166,\n       -0.92423966, -0.89782721, -1.003244  , -1.08540359, -1.08864082,\n       -1.01482287, -1.00511215, -0.99922731, -1.17752695, -1.17217076,\n       -1.06259994, -1.04081301, -1.12247859, -1.14795892, -1.09150875,\n       -1.111714  , -1.14787911, -0.9961346 , -0.99458578, -1.01290131,\n       -1.2102409 , -1.24355373, -1.18442209, -1.24889297, -1.21389142,\n       -1.23544738, -1.08825996, -0.99723228, -1.04964799, -0.96515089,\n       -0.85071035, -0.85432525, -0.87559445, -0.9513463 , -0.91489243,\n       -1.02913789, -1.04854589, -1.00401163, -1.33139667, -1.32623413,\n       -1.31942809, -1.3871097 , -1.37153773, -1.39245597, -1.13264509,\n       -1.11552718, -1.25556839, -1.08634397, -1.12461522, -1.00913177,\n       -1.07618866, -1.02837366, -1.05274487]), 'split7_test_score': array([-1.66576109, -1.61332276, -1.63031973, -1.75779701, -1.80285707,\n       -1.76761029, -1.78990331, -1.82822086, -1.83372862, -1.78353688,\n       -1.79120325, -1.79028608, -1.72276423, -1.71227562, -1.72266962,\n       -1.81676594, -1.75326377, -1.82628767, -1.49908096, -1.46908815,\n       -1.4539377 , -1.6791784 , -1.67882939, -1.69625236, -1.76354009,\n       -1.74657634, -1.7206043 , -1.6310959 , -1.56048245, -1.56292576,\n       -1.53052966, -1.35077394, -1.45847184, -1.50627394, -1.50136679,\n       -1.54193732, -1.52907883, -1.48639336, -1.47993462, -1.56522369,\n       -1.59185656, -1.56399823, -1.60150909, -1.57628556, -1.57961928,\n       -1.4771259 , -1.43958621, -1.50365203, -1.61307388, -1.63667829,\n       -1.56418664, -1.53017729, -1.53390314, -1.46019161, -1.61492728,\n       -1.62738713, -1.64783869, -1.98080834, -1.94243071, -1.9882316 ,\n       -2.0383572 , -2.05035614, -2.05047443, -1.63337639, -1.61068503,\n       -1.61829927, -1.90388823, -1.76328666, -1.84937393, -1.69462953,\n       -1.78494567, -1.83096623, -1.62726989, -1.58911546, -1.57947275,\n       -1.92214439, -1.95651344, -1.9142056 , -2.10634086, -2.10611965,\n       -2.09358291, -1.67804747, -1.60260538, -1.68082903, -1.72707809,\n       -1.80405476, -1.80585544, -1.8059557 , -1.80411895, -1.76826039,\n       -1.55703945, -1.60400234, -1.57189357, -1.99948733, -2.0379692 ,\n       -2.02915062, -2.0099871 , -1.99683864, -1.99814533, -1.70794825,\n       -1.63969836, -1.75197503, -1.60744434, -1.54543554, -1.60557956,\n       -1.71150256, -1.67137789, -1.71118171]), 'split8_test_score': array([-1.5525052 , -1.52341637, -1.49059073, -1.36684116, -1.50827585,\n       -1.39903129, -1.53758158, -1.55582873, -1.60250202, -1.56658513,\n       -1.57182275, -1.59391985, -1.67132809, -1.60104856, -1.60196658,\n       -1.57924143, -1.50650104, -1.51361092, -1.33577941, -1.36911473,\n       -1.38480091, -1.48327311, -1.47517709, -1.48497814, -1.61192942,\n       -1.64351465, -1.61807612, -1.32846331, -1.28895531, -1.26290787,\n       -1.36293936, -1.35386346, -1.28460915, -1.3378002 , -1.38326913,\n       -1.31320912, -1.29850864, -1.34050095, -1.37137066, -1.47407184,\n       -1.42861933, -1.45914426, -1.51286996, -1.54345661, -1.50359737,\n       -1.32652156, -1.38822823, -1.41457729, -1.42834715, -1.43919857,\n       -1.43931682, -1.43641155, -1.41444288, -1.40607368, -1.3013018 ,\n       -1.28121811, -1.29560798, -1.58935578, -1.56478023, -1.57264126,\n       -1.62636352, -1.63600349, -1.60286301, -1.33861825, -1.30767783,\n       -1.21897012, -1.27666199, -1.32922434, -1.3460393 , -1.24745854,\n       -1.20778817, -1.29970148, -1.22776737, -1.19621342, -1.20104   ,\n       -1.33442277, -1.38270187, -1.36219665, -1.37966703, -1.37039013,\n       -1.35038587, -1.36165918, -1.31349587, -1.3048118 , -1.26444697,\n       -1.41400774, -1.23413209, -1.2261671 , -1.2355409 , -1.24346945,\n       -1.31032897, -1.33493628, -1.3657405 , -1.2380433 , -1.25237964,\n       -1.2286326 , -1.18788554, -1.21967028, -1.21747245, -1.23797467,\n       -1.24379991, -1.30488957, -1.17040165, -1.25030057, -1.2010735 ,\n       -1.1753798 , -1.15540799, -1.18640872]), 'split9_test_score': array([-1.21766218, -1.17869048, -1.16540763, -1.30360591, -1.23362756,\n       -1.27313629, -1.343349  , -1.32520667, -1.35526765, -1.24537963,\n       -1.31084707, -1.29797778, -1.33728872, -1.3466839 , -1.32762987,\n       -1.33551462, -1.45281973, -1.3951925 , -1.09827427, -1.14518434,\n       -1.12005717, -1.47468962, -1.50569181, -1.48203987, -1.49109587,\n       -1.48843118, -1.53385191, -1.17179747, -1.21642715, -1.20733936,\n       -1.37274961, -1.47613764, -1.34079101, -1.61105464, -1.48785353,\n       -1.55339834, -1.18100564, -1.16501927, -1.1924146 , -1.65152278,\n       -1.61895984, -1.66383171, -1.42541224, -1.44929267, -1.43350446,\n       -1.14651449, -1.08598595, -1.2009913 , -1.25588717, -1.31549068,\n       -1.311527  , -1.29967107, -1.31347606, -1.36744324, -1.15802842,\n       -1.14810122, -1.1113306 , -1.37744057, -1.30748798, -1.33944944,\n       -1.60929093, -1.63253988, -1.62031188, -1.07047849, -1.21814879,\n       -1.19891682, -1.10377066, -1.15258443, -1.15692062, -1.23132468,\n       -1.25991109, -1.28025403, -1.0982265 , -1.08898386, -1.09664201,\n       -1.1296887 , -1.0960428 , -1.08742819, -1.30632899, -1.31467288,\n       -1.33771443, -0.99617473, -1.05758483, -1.01456987, -0.87229824,\n       -0.95150829, -0.92466914, -0.90244296, -0.89484956, -0.88894021,\n       -1.04840066, -1.05741688, -1.06517779, -1.09491996, -1.14089253,\n       -1.07231064, -1.24579196, -1.23680952, -1.24441679, -0.9693417 ,\n       -1.07900603, -1.0144137 , -0.96220893, -1.02011282, -0.89702682,\n       -0.97706075, -0.98208134, -0.96493857]), 'mean_test_score': array([-1.33216442, -1.30639386, -1.31896804, -1.45764463, -1.47525804,\n       -1.45765737, -1.56955936, -1.57688609, -1.57934187, -1.40050838,\n       -1.41306745, -1.39797547, -1.42165649, -1.39656422, -1.39858099,\n       -1.4201545 , -1.41962156, -1.4222491 , -1.21420702, -1.22848654,\n       -1.21126231, -1.37067192, -1.37890037, -1.37870325, -1.48134882,\n       -1.47486527, -1.47075535, -1.26439182, -1.2524201 , -1.23901886,\n       -1.35678611, -1.32587774, -1.30219843, -1.31454952, -1.33798332,\n       -1.30261545, -1.24487505, -1.23236697, -1.23716174, -1.3846028 ,\n       -1.3996041 , -1.38287183, -1.48149747, -1.48308301, -1.47472169,\n       -1.23919025, -1.23250645, -1.26485369, -1.33611117, -1.33275814,\n       -1.33530613, -1.31910313, -1.31828913, -1.33041879, -1.18627428,\n       -1.16241139, -1.16772419, -1.39193371, -1.38281218, -1.39369081,\n       -1.46032722, -1.47343026, -1.45822244, -1.21090495, -1.23855876,\n       -1.21864278, -1.30245939, -1.29866738, -1.32583192, -1.28107985,\n       -1.2893586 , -1.33811411, -1.18560697, -1.18218523, -1.18688194,\n       -1.30877628, -1.30676219, -1.30742408, -1.38499155, -1.38659553,\n       -1.38697537, -1.22199513, -1.23485115, -1.24361338, -1.25626285,\n       -1.30289837, -1.24843849, -1.2646158 , -1.28105126, -1.26546255,\n       -1.20291481, -1.23606255, -1.21268343, -1.36964429, -1.38054686,\n       -1.36901378, -1.43840949, -1.44212305, -1.45399178, -1.25326068,\n       -1.22908446, -1.28038165, -1.27110887, -1.32115766, -1.28034423,\n       -1.33698085, -1.34946312, -1.33389959]), 'std_test_score': array([0.19778495, 0.18429037, 0.18845578, 0.16981712, 0.19095369,\n       0.16846121, 0.18805951, 0.19423304, 0.20051499, 0.17020298,\n       0.18044653, 0.19572851, 0.16965033, 0.16354828, 0.15562425,\n       0.18158694, 0.16845924, 0.17656988, 0.17024992, 0.17543417,\n       0.18785396, 0.20097501, 0.18894286, 0.18825129, 0.19591103,\n       0.1952391 , 0.19899781, 0.19002657, 0.1741626 , 0.16244289,\n       0.16462392, 0.13872477, 0.18883327, 0.19972612, 0.20206622,\n       0.19805126, 0.16401195, 0.17128893, 0.17600465, 0.24392093,\n       0.22142518, 0.25403062, 0.19326311, 0.19836608, 0.19548788,\n       0.16866581, 0.18553727, 0.16422998, 0.19905886, 0.19642319,\n       0.17294804, 0.1387778 , 0.17952979, 0.16190824, 0.18354401,\n       0.19621458, 0.20303389, 0.29549707, 0.27276763, 0.27947205,\n       0.29329973, 0.29634182, 0.29847205, 0.21859978, 0.20068458,\n       0.20110025, 0.25148381, 0.21729532, 0.24310833, 0.20297313,\n       0.22097186, 0.21105949, 0.18058855, 0.17122685, 0.16330814,\n       0.22668093, 0.2423724 , 0.2303918 , 0.28076622, 0.27751848,\n       0.27886561, 0.22865097, 0.19826006, 0.20493332, 0.25267643,\n       0.27719351, 0.27969461, 0.28183961, 0.26837931, 0.26680231,\n       0.18411916, 0.19046563, 0.18136604, 0.29571773, 0.31187049,\n       0.29947469, 0.26768771, 0.2608931 , 0.26646955, 0.23707337,\n       0.22039759, 0.24615954, 0.26504717, 0.24983274, 0.25914218,\n       0.29206887, 0.31349685, 0.29842765]), 'rank_test_score': array([ 57,  45,  51,  94, 102,  95, 106, 107, 108,  85,  86,  82,  89,\n        81,  83,  88,  87,  90,  11,  14,   9,  69,  71,  70, 103, 101,\n        98,  30,  27,  22,  66,  55,  41,  49,  63,  43,  25,  16,  20,\n        75,  84,  74, 104, 105, 100,  23,  17,  32,  61,  58,  60,  52,\n        50,  56,   5,   1,   2,  79,  73,  80,  97,  99,  96,   8,  21,\n        12,  42,  40,  54,  38,  39,  64,   4,   3,   6,  48,  46,  47,\n        76,  77,  78,  13,  18,  24,  29,  44,  26,  31,  37,  33,   7,\n        19,  10,  68,  72,  67,  91,  92,  93,  28,  15,  36,  34,  53,\n        35,  62,  65,  59]), 'split0_train_score': array([-3.71378046e-01, -2.14435545e-01, -1.28648048e-01, -2.33928784e-03,\n       -2.77674890e-04, -4.19666504e-05, -4.56600003e-05, -2.35849044e-07,\n       -1.20886261e-09, -4.74866789e-01, -3.74354038e-01, -2.52665605e-01,\n       -1.83201521e-02, -6.75234824e-03, -1.12278248e-03, -1.19572366e-03,\n       -9.22480632e-06, -1.60404206e-08, -2.51921277e-01, -1.41656527e-01,\n       -8.98259620e-02, -3.20253395e-04, -8.04182003e-06, -2.68947956e-06,\n       -4.54025296e-05, -2.33994431e-07, -1.20595442e-09, -3.85100284e-01,\n       -2.86871522e-01, -2.34000477e-01, -1.04161000e-02, -5.66777504e-03,\n       -7.44127227e-04, -1.89518357e-04, -1.33463972e-06, -2.93722836e-09,\n       -2.26919062e-01, -1.28427853e-01, -7.31503497e-02, -1.81592143e-04,\n       -8.60748649e-06, -8.91059508e-07, -4.54025296e-05, -2.33994431e-07,\n       -1.20595442e-09, -3.89143556e-01, -3.11286062e-01, -2.41118865e-01,\n       -6.86823046e-03, -2.92413414e-03, -9.42638066e-04, -6.25767033e-05,\n       -1.51724871e-03, -1.14952829e-03, -3.14238347e-01, -1.92685208e-01,\n       -1.16533677e-01, -2.94230901e-04, -9.60112846e-05, -2.34158190e-05,\n       -4.54025296e-05, -2.33994431e-07, -1.20595442e-09, -5.00029563e-01,\n       -3.39349435e-01, -3.11684117e-01, -6.17598380e-03, -6.10701359e-04,\n       -1.23372584e-03, -1.05704101e-04, -6.03607627e-07, -1.19686484e-06,\n       -2.74508586e-01, -1.72989582e-01, -9.56853637e-02, -9.40169979e-05,\n       -8.95697954e-06, -4.07827446e-06, -4.54025296e-05, -2.33994431e-07,\n       -1.20595442e-09, -4.52865843e-01, -3.50052324e-01, -3.17570521e-01,\n       -7.56592115e-03, -2.73080896e-03, -1.15818991e-03, -2.50341669e-04,\n       -5.86057618e-07, -3.07012926e-06, -2.79398726e-01, -1.57063568e-01,\n       -9.25995251e-02, -8.63254699e-05, -3.29202215e-06, -4.60974231e-07,\n       -4.54025296e-05, -2.33994431e-07, -1.20595442e-09, -3.80799293e-01,\n       -2.91414183e-01, -2.43042517e-01, -6.94110165e-03, -9.42162895e-03,\n       -8.84439790e-04, -6.13890805e-03, -3.37501124e-03, -8.31461159e-05]), 'split1_train_score': array([-3.56771295e-01, -2.09451202e-01, -1.30707487e-01, -5.33842676e-03,\n       -1.56230906e-03, -1.44206160e-04, -4.71021347e-05, -2.42753814e-07,\n       -1.25109862e-09, -4.72085622e-01, -3.82988843e-01, -3.06184225e-01,\n       -1.15006026e-02, -8.80987461e-03, -1.86979078e-03, -1.78785627e-04,\n       -3.40015862e-06, -9.29434883e-09, -2.55801240e-01, -1.71913419e-01,\n       -9.18079292e-02, -2.95999599e-04, -1.08394394e-05, -2.24291138e-06,\n       -4.55636416e-05, -2.34824766e-07, -1.21023411e-09, -3.93293603e-01,\n       -3.44157533e-01, -2.41356791e-01, -4.56960352e-03, -1.00139739e-03,\n       -9.47714663e-04, -7.09516823e-05, -2.16909964e-06, -5.05286320e-09,\n       -2.25332842e-01, -1.23299962e-01, -8.08600279e-02, -1.61458946e-04,\n       -1.48701357e-05, -2.65508027e-06, -4.55322163e-05, -2.34662807e-07,\n       -1.20939940e-09, -3.34342257e-01, -2.97161890e-01, -2.24002094e-01,\n       -1.61574051e-03, -3.86320342e-04, -5.91142218e-04, -1.29442052e-04,\n       -5.90191292e-06, -3.56626482e-09, -3.17047344e-01, -1.66244809e-01,\n       -1.02179772e-01, -4.72301009e-04, -4.71042331e-05, -1.00470368e-05,\n       -4.55322163e-05, -2.34662807e-07, -1.20939940e-09, -4.15149794e-01,\n       -3.16280555e-01, -2.65573820e-01, -7.52667955e-03, -2.69666667e-03,\n       -3.00459301e-03, -2.48347106e-04, -1.56414636e-04, -2.24932600e-05,\n       -2.56486342e-01, -1.43325590e-01, -8.54049269e-02, -7.96829694e-05,\n       -1.19560903e-06, -7.88029682e-08, -4.55322163e-05, -2.34662807e-07,\n       -1.20939940e-09, -3.83948202e-01, -2.95168848e-01, -2.41192239e-01,\n       -1.87256319e-03, -3.52116379e-03, -4.04131314e-04, -1.31107197e-04,\n       -1.87851804e-03, -6.39387948e-06, -2.54427740e-01, -1.53658031e-01,\n       -9.28417184e-02, -6.00431296e-05, -9.85495160e-07, -1.96105782e-07,\n       -4.55322163e-05, -2.34662807e-07, -1.20939940e-09, -3.41191454e-01,\n       -3.37238465e-01, -2.39077091e-01, -5.03277204e-03, -2.96371533e-03,\n       -1.90436019e-04, -5.61864608e-04, -1.48807612e-04, -3.84072997e-06]), 'split2_train_score': array([-3.30646456e-01, -1.93097187e-01, -1.07739804e-01, -3.79313020e-04,\n       -9.44112426e-05, -1.52339189e-05, -4.56105626e-05, -2.35066587e-07,\n       -1.21147990e-09, -4.88692966e-01, -3.85132897e-01, -2.97469467e-01,\n       -4.19115735e-03, -1.19651865e-03, -3.98818010e-04, -5.58429333e-05,\n       -3.55274005e-07, -3.59656588e-08, -2.49807798e-01, -1.40108930e-01,\n       -8.35074997e-02, -9.15324533e-05, -1.16738463e-06, -4.47296753e-07,\n       -4.56105626e-05, -2.35066587e-07, -1.21147990e-09, -4.12948808e-01,\n       -3.36194783e-01, -2.43632049e-01, -3.06512082e-03, -4.95403431e-04,\n       -4.56305296e-04, -1.56587804e-03, -9.45628393e-06, -1.11981773e-04,\n       -2.14943673e-01, -1.24761680e-01, -6.82611495e-02, -6.85179446e-05,\n       -1.21317591e-06, -2.46791743e-07, -4.56105626e-05, -2.35066587e-07,\n       -1.21147990e-09, -3.62704712e-01, -2.64714923e-01, -2.13102134e-01,\n       -5.66634575e-03, -2.04743680e-03, -1.63710723e-03, -5.66509213e-03,\n       -2.26168490e-03, -3.26180737e-06, -2.79659776e-01, -1.62788481e-01,\n       -9.51980952e-02, -2.99295050e-04, -1.57116376e-05, -1.35767667e-06,\n       -4.56105626e-05, -2.35066587e-07, -1.21147990e-09, -4.32663185e-01,\n       -3.10832608e-01, -2.45826731e-01, -5.20054599e-03, -1.45770302e-03,\n       -1.64582706e-03, -2.01955285e-03, -1.96290382e-03, -3.78359054e-09,\n       -2.32600160e-01, -1.25178476e-01, -6.90688963e-02, -1.02762285e-04,\n       -7.01053074e-06, -3.42606421e-06, -4.56105626e-05, -2.35066587e-07,\n       -1.21147990e-09, -3.38191987e-01, -3.14281019e-01, -2.31766989e-01,\n       -2.72667274e-03, -1.35613613e-03, -1.28380686e-03, -2.05539466e-04,\n       -2.33491619e-06, -1.01134326e-07, -2.12275339e-01, -1.27090861e-01,\n       -7.84781265e-02, -7.72851808e-05, -1.76252254e-06, -6.21552758e-07,\n       -4.56105626e-05, -2.35066587e-07, -1.21147990e-09, -3.78774124e-01,\n       -2.78590602e-01, -2.32962553e-01, -1.37217071e-02, -3.12159416e-03,\n       -2.77838080e-04, -1.28748380e-03, -1.02491936e-03, -3.93923651e-08]), 'split3_train_score': array([-3.10043551e-01, -1.88378261e-01, -1.11997006e-01, -5.10066710e-04,\n       -1.44256184e-04, -3.34341612e-05, -4.55675984e-05, -2.34748675e-07,\n       -1.21033812e-09, -5.21563507e-01, -3.87378461e-01, -2.90996385e-01,\n       -6.47296854e-03, -1.12267762e-03, -5.39145917e-04, -5.05915405e-04,\n       -7.88982038e-05, -9.23951762e-04, -2.46424575e-01, -1.43866625e-01,\n       -8.45946046e-02, -8.08008284e-05, -1.40580123e-06, -1.86785297e-08,\n       -4.56053911e-05, -2.34644625e-07, -1.21134298e-09, -3.45729388e-01,\n       -2.73896340e-01, -1.81253102e-01, -4.25746538e-03, -2.10573635e-03,\n       -6.98990713e-04, -6.44432072e-05, -2.60101265e-05, -3.25111065e-09,\n       -2.35452922e-01, -1.28676229e-01, -6.80899400e-02, -4.83985355e-05,\n       -2.60764675e-07, -1.71864976e-09, -4.55158706e-05, -2.34578566e-07,\n       -1.20896519e-09, -3.42244850e-01, -2.66771089e-01, -2.03053454e-01,\n       -1.57939856e-03, -6.09011891e-04, -9.22291889e-05, -1.95172094e-03,\n       -9.49473908e-06, -3.43842148e-08, -2.77510124e-01, -1.64770471e-01,\n       -9.70713258e-02, -2.18301119e-04, -9.65509387e-06, -6.58145624e-08,\n       -4.61171307e-05, -2.37677325e-07, -1.22493550e-09, -3.89834631e-01,\n       -2.90739404e-01, -2.89846237e-01, -8.41921040e-03, -1.75552328e-03,\n       -2.18502107e-03, -3.76210569e-03, -4.23162340e-07, -1.52684199e-07,\n       -2.36206092e-01, -1.31619435e-01, -7.29818896e-02, -8.56420756e-05,\n       -2.42982975e-06, -1.82301981e-07, -4.55158706e-05, -2.34578566e-07,\n       -1.20896520e-09, -3.69036642e-01, -2.76897586e-01, -1.97597421e-01,\n       -2.32274988e-03, -6.29409074e-04, -1.75567541e-04, -1.23668759e-03,\n       -9.01737264e-04, -8.08352128e-04, -2.02676533e-01, -1.16554337e-01,\n       -6.53949908e-02, -6.12850989e-05, -5.99301836e-07, -1.49833596e-08,\n       -4.55158706e-05, -2.34578566e-07, -1.20896519e-09, -3.58251044e-01,\n       -2.55562145e-01, -2.33483772e-01, -6.26593755e-03, -5.83648924e-03,\n       -9.04064097e-04, -9.24154533e-04, -8.90343749e-06, -1.67360518e-03]), 'split4_train_score': array([-3.40201715e-01, -1.95094744e-01, -1.14665257e-01, -3.60845682e-04,\n       -3.38803294e-05, -4.44320530e-06, -4.57243056e-05, -2.35652792e-07,\n       -1.21451851e-09, -4.80038176e-01, -3.69944823e-01, -2.74411258e-01,\n       -6.44206627e-03, -1.78017253e-03, -1.08953738e-03, -1.20642937e-04,\n       -5.35049903e-07, -1.71101651e-09, -2.62123803e-01, -1.48243622e-01,\n       -8.76356626e-02, -2.83499139e-04, -3.06262654e-05, -3.62711034e-06,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -3.87393564e-01,\n       -3.17678396e-01, -2.32604868e-01, -2.53867657e-03, -6.22397431e-04,\n       -4.88792575e-04, -5.11408748e-05, -2.76829036e-07, -4.02893384e-08,\n       -2.56107596e-01, -1.54393754e-01, -9.52301031e-02, -2.06561574e-04,\n       -2.62356995e-05, -2.37704585e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -3.40945535e-01, -2.55593873e-01, -1.99394004e-01,\n       -5.99044289e-03, -8.12642809e-04, -1.73968171e-04, -6.56979157e-04,\n       -6.61156378e-07, -1.83153482e-09, -3.09174286e-01, -1.74168399e-01,\n       -1.17155779e-01, -3.41766421e-04, -9.62747397e-06, -8.12504027e-06,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.45151367e-01,\n       -2.96053722e-01, -2.72424204e-01, -7.18070323e-03, -6.01389711e-04,\n       -1.26835624e-03, -2.40697982e-04, -3.07799070e-06, -1.16160639e-06,\n       -2.91333930e-01, -1.42308472e-01, -1.02421571e-01, -6.70962450e-05,\n       -1.24893172e-06, -1.88757240e-07, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -4.02421750e-01, -2.98863590e-01, -2.72996144e-01,\n       -3.31806853e-03, -8.15896592e-04, -1.21075629e-03, -8.03507366e-05,\n       -2.70594702e-06, -2.41100422e-09, -2.39749822e-01, -1.45268903e-01,\n       -8.85948659e-02, -6.67623125e-05, -1.25321261e-06, -1.62607997e-08,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -3.93693589e-01,\n       -3.47337896e-01, -2.42924946e-01, -2.85716880e-03, -7.83085052e-04,\n       -4.84736367e-04, -2.93582964e-04, -4.85088731e-05, -8.23453489e-06]), 'split5_train_score': array([-3.36096097e-01, -1.95266108e-01, -1.18481806e-01, -4.53423521e-04,\n       -1.24774595e-04, -2.35184686e-05, -4.56725634e-05, -2.35386125e-07,\n       -1.21312715e-09, -5.10303714e-01, -3.77653347e-01, -3.22626095e-01,\n       -6.03498003e-03, -4.15535825e-03, -1.02503407e-03, -1.82639889e-04,\n       -5.55573293e-04, -2.04793324e-09, -2.65901788e-01, -1.52460603e-01,\n       -9.39161986e-02, -5.18733610e-05, -3.21567840e-07, -5.20288162e-09,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -3.69844230e-01,\n       -3.24395820e-01, -2.65169926e-01, -3.11961611e-03, -3.56112712e-04,\n       -2.02244720e-04, -6.91747531e-05, -4.98033323e-06, -2.33550853e-08,\n       -2.31415886e-01, -1.29062199e-01, -7.11688560e-02, -8.28830156e-05,\n       -1.14228256e-06, -8.57987761e-09, -4.56964906e-05, -2.35509440e-07,\n       -1.21376269e-09, -3.48506454e-01, -2.94829877e-01, -2.43055298e-01,\n       -1.89070978e-03, -3.48323959e-04, -1.25072423e-04, -5.41746198e-05,\n       -4.54834219e-07, -1.54868558e-09, -2.95661841e-01, -1.63274896e-01,\n       -9.70313126e-02, -7.90994607e-04, -1.65978311e-04, -1.55248203e-05,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.73679341e-01,\n       -3.32031574e-01, -2.88215189e-01, -2.04312820e-03, -1.36716733e-03,\n       -3.76174638e-04, -8.62644157e-03, -1.31231518e-05, -8.63847028e-03,\n       -2.54956021e-01, -1.43503113e-01, -8.21630736e-02, -1.41792150e-04,\n       -9.45827088e-06, -1.43338865e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -3.83125054e-01, -2.51378017e-01, -2.25814324e-01,\n       -3.18803628e-03, -1.16055824e-03, -3.62204882e-04, -3.00528824e-03,\n       -5.20722913e-03, -4.76046737e-03, -2.47774371e-01, -1.39975399e-01,\n       -8.42795631e-02, -1.16416000e-04, -1.34212350e-06, -2.99753937e-07,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -3.50049334e-01,\n       -2.80853157e-01, -2.50522491e-01, -5.29952013e-03, -2.80598808e-03,\n       -9.88004364e-04, -8.90588966e-03, -7.92501980e-03, -8.21523818e-03]), 'split6_train_score': array([-3.57318421e-01, -1.97261821e-01, -1.20711431e-01, -1.01537230e-03,\n       -2.37736670e-04, -1.50095106e-05, -4.56895349e-05, -2.35386125e-07,\n       -1.21357793e-09, -5.79795940e-01, -3.76207831e-01, -3.44713967e-01,\n       -4.84062199e-03, -3.43917240e-03, -2.53233176e-04, -5.09724350e-05,\n       -2.44664851e-07, -1.79317655e-09, -2.82094284e-01, -1.67466941e-01,\n       -1.01306772e-01, -2.01609363e-04, -2.84376091e-05, -2.54627055e-06,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.62099180e-01,\n       -3.18871996e-01, -2.55436639e-01, -6.88610562e-03, -7.01642428e-04,\n       -3.03762466e-04, -8.47262123e-05, -6.35673897e-07, -2.81931156e-09,\n       -2.69195165e-01, -1.54655881e-01, -8.75384807e-02, -3.00458836e-04,\n       -4.19532576e-06, -1.16396760e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -3.69397188e-01, -2.64267950e-01, -2.22307871e-01,\n       -3.95464252e-03, -7.11027462e-04, -5.98466487e-04, -2.39753334e-02,\n       -5.19800990e-07, -4.28065925e-09, -2.83997674e-01, -1.62964330e-01,\n       -9.79180984e-02, -2.96478383e-04, -9.88685979e-06, -3.81201521e-06,\n       -4.56917899e-05, -2.35485214e-07, -1.21363783e-09, -4.45702361e-01,\n       -3.90668218e-01, -2.57175281e-01, -1.61715404e-03, -1.25525511e-03,\n       -4.90998469e-04, -2.03833470e-03, -3.32645974e-07, -2.13151640e-07,\n       -2.46380404e-01, -1.43899718e-01, -8.52086216e-02, -2.99546988e-04,\n       -2.21712481e-05, -1.45183102e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -4.09781644e-01, -3.45019601e-01, -2.48645157e-01,\n       -1.68451715e-02, -3.35314790e-03, -8.95839164e-04, -1.58095450e-04,\n       -7.25006155e-06, -3.26346605e-07, -2.37024676e-01, -1.33555170e-01,\n       -7.27282111e-02, -1.18325529e-04, -5.18917030e-06, -3.38664446e-07,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.47052375e-01,\n       -3.22005686e-01, -2.91976650e-01, -2.88486812e-02, -1.45629489e-03,\n       -4.47123492e-04, -1.11978247e-03, -4.56384891e-05, -5.20092054e-02]), 'split7_train_score': array([-3.20792010e-01, -1.90391342e-01, -1.15432565e-01, -6.09741906e-04,\n       -8.08826550e-05, -8.96593315e-06, -4.56044526e-05, -2.35035624e-07,\n       -1.21131777e-09, -4.65980097e-01, -3.55235031e-01, -2.12174876e-01,\n       -5.96914691e-03, -1.00144840e-03, -4.14740868e-04, -1.40773306e-04,\n       -2.98300337e-07, -1.97019304e-09, -2.29663633e-01, -1.33781766e-01,\n       -7.64783668e-02, -7.43147958e-05, -2.06436445e-06, -4.16349227e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.48850755e-01,\n       -2.82384137e-01, -1.90077825e-01, -1.34386581e-02, -3.61942217e-03,\n       -2.14611422e-04, -1.46744569e-04, -1.64423365e-06, -5.66021674e-03,\n       -2.22374093e-01, -1.31110387e-01, -7.88300301e-02, -5.83593588e-05,\n       -4.53958775e-07, -5.64253288e-09, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.77331302e-01, -2.55932129e-01, -2.32380265e-01,\n       -3.05466607e-02, -9.66587593e-02, -5.81835643e-02, -1.00823575e-03,\n       -2.23705018e-04, -7.31632591e-08, -2.67414424e-01, -1.63388961e-01,\n       -1.01990810e-01, -1.16078970e-03, -1.94394594e-04, -2.88913442e-05,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.42068594e-01,\n       -3.38480333e-01, -2.97575830e-01, -1.14673475e-02, -2.40607279e-03,\n       -1.79353261e-03, -3.59254328e-03, -5.47708223e-04, -9.88358576e-07,\n       -2.64856383e-01, -1.52162709e-01, -9.22805576e-02, -1.02368517e-04,\n       -1.54587621e-06, -1.38061427e-07, -4.55885806e-05, -2.34953296e-07,\n       -1.21089634e-09, -3.73731299e-01, -3.07278651e-01, -2.05435736e-01,\n       -7.49030092e-03, -2.16767130e-03, -9.55732863e-04, -7.03484335e-05,\n       -4.57126415e-07, -1.82641491e-09, -2.28678950e-01, -1.38535728e-01,\n       -8.35032051e-02, -6.75890501e-05, -8.97585922e-07, -4.92487537e-08,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.16868793e-01,\n       -3.36884715e-01, -2.19543015e-01, -4.01143907e-03, -3.14227741e-03,\n       -2.20636728e-04, -1.01932372e-04, -3.84871432e-05, -5.92110232e-07]), 'split8_train_score': array([-3.61247826e-01, -1.89842802e-01, -1.14094412e-01, -7.30413047e-04,\n       -1.33508996e-04, -3.60170155e-05, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -4.81368935e-01, -4.21325219e-01, -2.99463101e-01,\n       -9.51723829e-03, -3.66349718e-03, -8.80446322e-04, -9.82060894e-03,\n       -1.08949034e-02, -8.79569359e-03, -2.51368501e-01, -1.45665550e-01,\n       -9.30271880e-02, -5.46257395e-05, -6.09321710e-07, -6.02393760e-09,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.14836535e-01,\n       -2.90170472e-01, -2.02752539e-01, -4.09229398e-03, -3.30347718e-04,\n       -3.35567866e-04, -1.18134807e-04, -9.83692472e-07, -1.41032891e-05,\n       -2.09439301e-01, -1.18858061e-01, -6.89643698e-02, -5.45760454e-05,\n       -5.74675221e-07, -2.05105806e-09, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.32525440e-01, -2.91816176e-01, -2.45603038e-01,\n       -2.85849739e-03, -6.92783714e-04, -2.31528503e-04, -9.38570557e-05,\n       -4.58195362e-07, -3.18258408e-07, -3.02011638e-01, -1.74344892e-01,\n       -9.91875925e-02, -7.34145629e-05, -2.25572316e-06, -1.32759402e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.89896408e-01,\n       -3.55662509e-01, -2.54049300e-01, -8.36092623e-03, -1.06146758e-03,\n       -2.04035460e-04, -1.77154693e-04, -3.88201027e-07, -2.81922171e-08,\n       -2.49710565e-01, -1.30781153e-01, -7.92570394e-02, -7.98044842e-05,\n       -4.86523395e-06, -6.85204569e-07, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.98313247e-01, -3.03951225e-01, -2.30093622e-01,\n       -4.27512444e-03, -5.68680880e-04, -3.02331014e-04, -7.01088364e-05,\n       -3.90419951e-07, -4.23932247e-04, -2.08878424e-01, -1.14103855e-01,\n       -7.50345819e-02, -5.31008884e-05, -1.18058997e-06, -9.68442170e-08,\n       -4.55885806e-05, -2.34953296e-07, -1.21089634e-09, -3.62063242e-01,\n       -2.80697878e-01, -2.48336651e-01, -4.83894957e-03, -1.52506035e-03,\n       -3.83861985e-04, -8.42285959e-05, -3.77113718e-07, -1.86396165e-09]), 'split9_train_score': array([-3.56528174e-01, -2.12427804e-01, -1.27082877e-01, -2.41164504e-03,\n       -1.15582047e-04, -3.94172512e-05, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -4.74191910e-01, -3.63424303e-01, -2.70759944e-01,\n       -1.48398357e-02, -3.19451430e-03, -1.30996492e-03, -2.91050294e-04,\n       -4.01258339e-05, -3.37802736e-07, -2.74365254e-01, -1.59540786e-01,\n       -9.52896878e-02, -1.51376582e-04, -1.12379850e-05, -1.66849554e-06,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.83778174e-01,\n       -3.29229348e-01, -2.62041124e-01, -4.67180087e-03, -1.06627254e-03,\n       -7.93106453e-04, -7.42498774e-05, -1.44855542e-06, -3.16459321e-09,\n       -2.59225534e-01, -1.20305356e-01, -7.55758954e-02, -1.87262382e-04,\n       -6.57105182e-06, -6.45426164e-07, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -4.10693421e-01, -2.94360577e-01, -2.06911470e-01,\n       -2.81515925e-03, -4.18214905e-04, -5.87753807e-04, -1.16531474e-04,\n       -3.53170358e-07, -3.97350760e-09, -2.96175997e-01, -1.63212856e-01,\n       -9.55845139e-02, -4.73431554e-04, -1.91105653e-05, -5.62633829e-06,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.14552581e-01,\n       -3.15983828e-01, -2.65718902e-01, -4.66715582e-03, -1.11291104e-03,\n       -4.70020552e-04, -5.58118683e-05, -2.24081053e-04, -2.45544760e-06,\n       -2.73057362e-01, -1.57427211e-01, -9.09544221e-02, -9.65094616e-05,\n       -1.95996625e-05, -4.89682171e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -4.45227205e-01, -3.62703271e-01, -2.36600480e-01,\n       -2.09693866e-02, -2.83684098e-03, -7.33864925e-04, -1.18816939e-04,\n       -1.21688118e-03, -6.53088977e-04, -2.82920823e-01, -1.51570415e-01,\n       -8.53867617e-02, -8.00257044e-05, -2.74065370e-06, -8.60143850e-08,\n       -4.56261156e-05, -2.35393356e-07, -1.21317514e-09, -4.08617390e-01,\n       -3.34611261e-01, -2.37509096e-01, -2.48585999e-03, -1.49605889e-03,\n       -7.08719717e-04, -8.14528658e-05, -3.21637182e-07, -6.50536732e-06]), 'mean_train_score': array([-3.44102359e-01, -1.98564681e-01, -1.18956069e-01, -1.41485358e-03,\n       -2.80501668e-04, -3.62212275e-05, -4.57808314e-05, -2.35978538e-07,\n       -1.21561133e-09, -4.94888766e-01, -3.79364479e-01, -2.87146492e-01,\n       -8.81287698e-03, -3.51155822e-03, -8.90349392e-04, -1.25429554e-03,\n       -1.15835590e-03, -9.72005198e-04, -2.56947215e-01, -1.50470477e-01,\n       -8.97389871e-02, -1.60588525e-04, -9.47515587e-06, -1.36678187e-06,\n       -4.55965557e-05, -2.34954867e-07, -1.21110819e-09, -3.90387452e-01,\n       -3.10385035e-01, -2.30832534e-01, -5.70554410e-03, -1.59665072e-03,\n       -5.18522340e-04, -2.43496238e-04, -4.89394675e-06, -5.78638267e-04,\n       -2.35040607e-01, -1.31355136e-01, -7.67669202e-02, -1.35006878e-04,\n       -6.41245564e-06, -7.99736325e-07, -4.55868538e-05, -2.34944397e-07,\n       -1.21085049e-09, -3.60783472e-01, -2.79673455e-01, -2.23092849e-01,\n       -6.37858278e-03, -1.05608655e-02, -6.31634704e-03, -3.37139433e-03,\n       -4.02048244e-04, -1.15323110e-04, -2.94289145e-01, -1.68784330e-01,\n       -1.01985098e-01, -4.42100330e-04, -5.69735777e-05, -9.69986648e-06,\n       -4.56465098e-05, -2.35251850e-07, -1.21243504e-09, -4.34872782e-01,\n       -3.28608219e-01, -2.74808961e-01, -6.26588347e-03, -1.43248579e-03,\n       -1.26722849e-03, -2.08666939e-03, -2.90905649e-04, -8.66716363e-04,\n       -2.58009584e-01, -1.44319546e-01, -8.55426362e-02, -1.14922217e-04,\n       -7.84821724e-06, -1.65595082e-06, -4.55844611e-05, -2.34932065e-07,\n       -1.21078694e-09, -3.95664287e-01, -3.10559413e-01, -2.40771263e-01,\n       -7.05739953e-03, -1.91403139e-03, -7.48242476e-04, -5.32668456e-04,\n       -9.21809014e-04, -6.65573645e-04, -2.39380540e-01, -1.37737627e-01,\n       -8.18841550e-02, -7.87158363e-05, -1.92426777e-06, -2.18040267e-07,\n       -4.55882146e-05, -2.34976071e-07, -1.21101482e-09, -3.83736064e-01,\n       -3.06519599e-01, -2.43937878e-01, -8.03031371e-03, -3.25521924e-03,\n       -5.48986064e-04, -1.94992799e-03, -1.26159947e-03, -6.20004088e-03]), 'std_train_score': array([1.86848834e-02, 9.29374314e-03, 7.28063555e-03, 1.49816926e-03,\n       4.32641376e-04, 3.81001805e-05, 4.43078403e-07, 2.28176893e-09,\n       1.19338407e-11, 3.28405820e-02, 1.68356305e-02, 3.52827379e-02,\n       4.45500880e-03, 2.43890761e-03, 4.73749847e-04, 2.87380606e-03,\n       3.24957891e-03, 2.62240294e-03, 1.41652073e-02, 1.17052475e-02,\n       6.65385232e-03, 1.01157644e-04, 1.07954246e-05, 1.27984994e-06,\n       7.51838045e-08, 4.00755685e-10, 1.99704767e-12, 3.23729116e-02,\n       2.35803850e-02, 2.82023255e-02, 3.37832084e-03, 1.66330593e-03,\n       2.48960082e-04, 4.42691321e-04, 7.50986682e-06, 1.69418328e-03,\n       1.89434040e-02, 1.21712761e-02, 8.55733574e-03, 8.06706904e-05,\n       7.97800870e-06, 9.45008871e-07, 8.32363142e-08, 4.28981183e-10,\n       2.21091252e-12, 2.45613904e-02, 1.91549257e-02, 1.62564088e-02,\n       8.25721498e-03, 2.87102800e-02, 1.72947811e-02, 7.06080913e-03,\n       7.64918590e-04, 3.44736397e-04, 1.58942571e-02, 9.02246103e-03,\n       7.75842255e-03, 2.99946994e-04, 6.72428172e-05, 9.47717213e-06,\n       1.75738694e-07, 9.05717742e-10, 4.66792096e-12, 3.29911539e-02,\n       2.81586418e-02, 2.00983532e-02, 2.85742986e-03, 6.55173579e-04,\n       8.62824734e-04, 2.57550180e-03, 5.81513120e-04, 2.59059283e-03,\n       1.72997992e-02, 1.33121511e-02, 9.70915821e-03, 6.44278871e-05,\n       7.16626404e-06, 1.72201701e-06, 8.03439443e-08, 4.14074559e-10,\n       2.13408591e-12, 3.28148330e-02, 3.24710277e-02, 3.24769441e-02,\n       6.28124285e-03, 1.08545192e-03, 3.90906641e-04, 8.88894556e-04,\n       1.56335353e-03, 1.39613374e-03, 2.63183429e-02, 1.42084325e-02,\n       8.45452588e-03, 2.15109679e-05, 1.35115344e-06, 1.96495453e-07,\n       8.13195756e-08, 4.36755116e-10, 2.25201058e-12, 3.14996004e-02,\n       3.08077504e-02, 1.80612003e-02, 7.55232965e-03, 2.45846760e-03,\n       2.84345589e-04, 2.88392895e-03, 2.43636836e-03, 1.54623753e-02])}"}, {"dataset_variant": "only_binary", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "regressor": "[GradientBoostingRegressor(criterion = 'mse')]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "[1,2,3]", "scaler": "[MinMaxScaler()]", "regressor__n_estimators": "[100, 150, 200]", "regressor__max_depth": "[5, 10, 15]", "regressor__criterion": "['mse', 'mae']"}], "metrics": "['neg_mean_absolute_error']", "n_split_outer_kcv": 10}, "best_params": "{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}", "mean_test_score": -1.2114137322183813, "cv_results": "{'mean_fit_time': array([0.17770097, 0.25080276, 0.31425557, 0.260374  , 0.36818826,\n       0.43503711, 0.22880251, 0.34439664, 0.44919538, 0.98459876,\n       2.15342801, 3.14494755, 1.37076397, 3.59459972, 3.37179601,\n       1.38429906, 2.24250336, 4.28428199, 0.1827831 , 0.24490259,\n       0.32579937, 0.25079994, 0.37089984, 0.50159919, 0.2651341 ,\n       0.38413918, 0.50361555, 1.28310201, 2.11780126, 4.43345666,\n       1.70230417, 3.02067358, 5.19759364, 1.62180347, 2.45239966,\n       4.99500473, 0.27039742, 0.28579943, 0.38779585, 0.31009789,\n       0.45840023, 0.60799646, 0.30239928, 0.45679989, 0.59749846,\n       1.4804991 , 3.95279427, 3.15721738, 2.81927342, 3.98157053,\n       4.90051863, 3.13795364, 2.95448067, 5.53690846, 0.1417007 ,\n       0.21449945, 0.27750003, 0.24529994, 0.36479952, 0.4904022 ,\n       0.24959943, 0.39029937, 0.48529856, 1.01009917, 1.57310009,\n       3.7200067 , 1.42280595, 2.20521567, 4.69839406, 1.38189533,\n       2.01419799, 2.82350016, 0.15510066, 0.24250093, 0.33140023,\n       0.25840032, 0.38679938, 0.5134038 , 0.30390015, 0.43120193,\n       0.57619965, 1.31130145, 2.29572709, 4.05228724, 1.62124455,\n       4.14415081, 3.96532154, 2.36101363, 3.58469379, 3.47353303,\n       0.22120039, 0.29300034, 0.38089852, 0.31370046, 0.47170274,\n       0.57943859, 0.30080061, 0.43719881, 0.63130269, 1.95264485,\n       3.53329766, 4.11228781, 2.82379861, 3.82852249, 6.2956327 ,\n       3.11898174, 2.91924396, 4.70688856]), 'std_fit_time': array([0.02773136, 0.03034494, 0.02949724, 0.03711844, 0.05563822,\n       0.01448665, 0.00523072, 0.0160948 , 0.02853144, 0.06457806,\n       0.72041758, 0.95565999, 0.23004128, 0.96361199, 0.57166946,\n       0.14235061, 0.48417474, 0.98174621, 0.0240194 , 0.01366278,\n       0.01408328, 0.01155789, 0.01461208, 0.02129876, 0.01486783,\n       0.01658286, 0.02295002, 0.10267062, 0.28244439, 0.94572379,\n       0.14100808, 0.69240666, 1.03171322, 0.1117422 , 0.19055843,\n       0.89112089, 0.14932362, 0.03954782, 0.03996392, 0.02957591,\n       0.04050894, 0.05102479, 0.01963148, 0.04038868, 0.04226463,\n       0.08838176, 0.53589551, 0.228448  , 0.99944723, 0.89669306,\n       1.04779059, 0.73462027, 0.32363326, 0.94857072, 0.01387859,\n       0.01265027, 0.01800628, 0.03235595, 0.04870814, 0.04285513,\n       0.03872253, 0.06045018, 0.05786064, 0.10036912, 0.1021168 ,\n       0.62699959, 0.1324555 , 0.31762794, 0.99461384, 0.10759976,\n       0.09369307, 0.18610107, 0.00537541, 0.01397809, 0.02776997,\n       0.01351273, 0.02591837, 0.02702481, 0.04192127, 0.05865387,\n       0.08543343, 0.15188656, 0.73628176, 0.98323993, 0.09208242,\n       0.9380868 , 0.61789854, 0.97219724, 0.96648922, 0.35038025,\n       0.02703702, 0.04257925, 0.03845302, 0.03575307, 0.05154434,\n       0.02550715, 0.02522139, 0.01362816, 0.08698641, 0.75964074,\n       1.02910773, 0.9942738 , 1.06327909, 1.02867337, 0.99228597,\n       0.94956681, 0.13842789, 0.7248954 ]), 'mean_score_time': array([0.00229979, 0.00279751, 0.00219946, 0.00269849, 0.00320282,\n       0.00240149, 0.00260007, 0.00260317, 0.00330119, 0.00140052,\n       0.00529914, 0.00320218, 0.0026001 , 0.00410075, 0.00290151,\n       0.00220237, 0.0037133 , 0.00320747, 0.00220327, 0.00190091,\n       0.0024003 , 0.00270066, 0.00480158, 0.00320013, 0.00311108,\n       0.0030998 , 0.00310118, 0.00240192, 0.00660064, 0.00420101,\n       0.00210149, 0.0046998 , 0.0029017 , 0.00290096, 0.00320058,\n       0.00529945, 0.00220063, 0.0029022 , 0.00200059, 0.00290022,\n       0.00420113, 0.00330153, 0.00310268, 0.00310228, 0.00360508,\n       0.00149825, 0.00340261, 0.00220056, 0.00500085, 0.0026011 ,\n       0.00380108, 0.00440011, 0.00340068, 0.00350189, 0.00259981,\n       0.00210052, 0.00240047, 0.00310123, 0.00259953, 0.00460033,\n       0.00290048, 0.00300181, 0.00380108, 0.00169706, 0.00219948,\n       0.00479655, 0.00249796, 0.002898  , 0.00289931, 0.0044035 ,\n       0.00270166, 0.00350063, 0.0021987 , 0.00249748, 0.00199883,\n       0.0027997 , 0.00300086, 0.004299  , 0.0021992 , 0.0041986 ,\n       0.00330231, 0.00210023, 0.0022984 , 0.00210161, 0.00189743,\n       0.00439842, 0.00330262, 0.00545604, 0.00370138, 0.00349998,\n       0.00219955, 0.00180004, 0.00250027, 0.00310159, 0.00439854,\n       0.00370774, 0.00230083, 0.00350144, 0.0038976 , 0.00260198,\n       0.0023989 , 0.00325291, 0.00219843, 0.0037997 , 0.00290029,\n       0.00460289, 0.0040005 , 0.00410132]), 'std_score_time': array([0.00200183, 0.00188544, 0.00039993, 0.00090191, 0.00087385,\n       0.00048947, 0.000914  , 0.00048984, 0.00100544, 0.00049044,\n       0.00303573, 0.00278554, 0.00091554, 0.00225591, 0.00083096,\n       0.00039919, 0.00207774, 0.00076747, 0.00108376, 0.00070148,\n       0.00091752, 0.00100482, 0.0057914 , 0.00059779, 0.00106193,\n       0.00151271, 0.00053708, 0.00149281, 0.00914761, 0.00302657,\n       0.00030087, 0.00343295, 0.00082858, 0.00121955, 0.00133131,\n       0.00371392, 0.00107781, 0.00216582, 0.00044703, 0.00069814,\n       0.0017774 , 0.00090006, 0.00137554, 0.00169979, 0.00102038,\n       0.00049938, 0.00220193, 0.00059909, 0.00435823, 0.0004896 ,\n       0.00183067, 0.00245598, 0.00174277, 0.00102413, 0.00190837,\n       0.00083092, 0.00091623, 0.0027384 , 0.00048968, 0.00518121,\n       0.00181307, 0.00063298, 0.00177687, 0.00045769, 0.00074752,\n       0.00497205, 0.00067013, 0.00181198, 0.00113464, 0.00557   ,\n       0.00064073, 0.00128453, 0.00097955, 0.0006655 , 0.00063169,\n       0.00097793, 0.00077427, 0.00340711, 0.00039804, 0.00396568,\n       0.00134571, 0.00094316, 0.00110313, 0.00104673, 0.00069601,\n       0.00382576, 0.00173814, 0.00878256, 0.00346513, 0.00050002,\n       0.00124949, 0.00039958, 0.00092307, 0.00157732, 0.00253633,\n       0.00134327, 0.0006417 , 0.00162839, 0.00129913, 0.00143106,\n       0.00091588, 0.00199272, 0.0003997 , 0.00208749, 0.00144585,\n       0.00395243, 0.00346281, 0.00234285]), 'param_reduce_dim': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1)],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_reduce_dim__n_components': masked_array(data=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__criterion': masked_array(data=['mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae'],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__max_depth': masked_array(data=[5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10,\n                   15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5,\n                   10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__n_estimators': masked_array(data=[100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_scaler': masked_array(data=[MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler()],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}], 'split0_test_score': array([-1.27061705, -1.27482086, -1.32620412, -1.39920115, -1.42221212,\n       -1.41187031, -1.55829718, -1.53298179, -1.54034285, -1.25809606,\n       -1.26808224, -1.31674378, -1.28807672, -1.48666883, -1.36853909,\n       -1.29759392, -1.34213927, -1.42547925, -1.30936508, -1.33874436,\n       -1.34812063, -1.4215134 , -1.41930516, -1.42562549, -1.49773949,\n       -1.52477628, -1.5366108 , -1.44052433, -1.52561424, -1.5966567 ,\n       -1.46739398, -1.48061712, -1.48292012, -1.62133201, -1.51402666,\n       -1.60208483, -1.33646346, -1.34018241, -1.34188378, -1.3921859 ,\n       -1.41714817, -1.40953437, -1.51686775, -1.50532136, -1.50944093,\n       -1.50502222, -1.55812064, -1.53740672, -1.38964715, -1.45511317,\n       -1.4309039 , -1.51050777, -1.41923163, -1.5241211 , -1.418627  ,\n       -1.4102315 , -1.42121751, -1.61539541, -1.59548762, -1.59909685,\n       -1.61861547, -1.63748663, -1.59739783, -1.23064196, -1.32338214,\n       -1.16805445, -1.49630084, -1.47192693, -1.49520019, -1.46675508,\n       -1.4557437 , -1.61735099, -1.41619087, -1.46264705, -1.48891217,\n       -1.6054993 , -1.53932237, -1.57531392, -1.64401903, -1.60386522,\n       -1.57798597, -1.37266293, -1.27646054, -1.43835832, -1.52117864,\n       -1.43911351, -1.57933921, -1.50081178, -1.43656576, -1.39823815,\n       -1.46756693, -1.50261159, -1.46527249, -1.62551158, -1.64015887,\n       -1.67882232, -1.72310681, -1.77854987, -1.70725609, -1.42494555,\n       -1.47179878, -1.47997308, -1.36228164, -1.24295239, -1.47271559,\n       -1.39633027, -1.33811091, -1.36972058]), 'split1_test_score': array([-1.31928969, -1.22308173, -1.29451841, -1.24943693, -1.24524664,\n       -1.26528834, -1.26980281, -1.27824675, -1.29319029, -1.23134182,\n       -1.28378023, -1.26842651, -1.33021309, -1.26808577, -1.25161567,\n       -1.23088999, -1.25971247, -1.17592206, -1.12401253, -1.09963   ,\n       -1.11290518, -1.17089538, -1.21037619, -1.21539263, -1.29663598,\n       -1.26953953, -1.2680582 , -1.04869166, -0.97095439, -0.9930172 ,\n       -1.15027446, -1.11077641, -1.14368401, -0.95003344, -0.9479936 ,\n       -1.05095214, -1.00866851, -1.02612249, -1.04589115, -1.15891351,\n       -1.08917729, -1.05688914, -1.1006678 , -1.0904983 , -1.09338807,\n       -0.86233518, -0.93926584, -0.90321629, -0.95157466, -1.05378261,\n       -0.9887722 , -1.05465744, -0.9958959 , -0.99527668, -1.07163728,\n       -1.0763626 , -1.03148821, -0.99634248, -0.97326168, -1.01284974,\n       -0.98063968, -0.93029697, -1.00349478, -1.01442407, -0.9310064 ,\n       -1.12273479, -1.07882206, -1.11826457, -1.14589487, -1.10089937,\n       -1.05710702, -1.05433208, -0.95804964, -0.95327547, -0.94504604,\n       -1.05026934, -1.0442444 , -1.08642025, -1.23795783, -1.28541813,\n       -1.21843243, -0.86814635, -0.90544369, -0.97606684, -0.83492498,\n       -0.88331686, -0.89706831, -1.08571143, -0.9666344 , -0.99430171,\n       -0.86979514, -0.88298368, -0.89404587, -1.21556128, -1.20465548,\n       -1.22160861, -1.40077104, -1.34441705, -1.35228574, -0.84251542,\n       -0.80153576, -0.89892912, -1.09681907, -1.13104514, -1.18606993,\n       -1.1397797 , -1.09245772, -1.07591937]), 'split2_test_score': array([-1.19650659, -1.18434947, -1.13902435, -1.15729981, -1.20896448,\n       -1.19674838, -1.5005875 , -1.49323934, -1.51261307, -1.28719291,\n       -1.20293334, -1.24981327, -1.43726141, -1.77022699, -1.38585825,\n       -1.60985922, -1.43773631, -1.58334377, -1.28047762, -1.24484622,\n       -1.21564766, -1.64746029, -1.58916177, -1.56761255, -1.55998381,\n       -1.56485235, -1.58690563, -1.31609494, -1.28037834, -1.22110177,\n       -1.46031074, -1.4982334 , -1.51165553, -1.49978463, -1.50298888,\n       -1.42994691, -1.26540003, -1.23789062, -1.26341363, -1.51503969,\n       -1.50650175, -1.54580246, -1.59666232, -1.59520193, -1.62533298,\n       -1.16024828, -1.21708424, -1.21913806, -1.54312006, -1.41397514,\n       -1.40002753, -1.52190565, -1.63356893, -1.56148151, -1.21043349,\n       -1.23127453, -1.22911245, -1.38651416, -1.43727477, -1.41612655,\n       -1.62800016, -1.62810708, -1.60390985, -1.26770274, -1.28032959,\n       -1.15446476, -1.2260289 , -1.21926827, -1.29524854, -1.1382886 ,\n       -1.18047934, -1.15862041, -1.25346306, -1.26933407, -1.24879753,\n       -1.54729093, -1.52374025, -1.5323225 , -1.67475938, -1.65674731,\n       -1.66969557, -1.15817497, -1.3154399 , -1.33378211, -1.20195312,\n       -1.14128777, -1.19828765, -1.28442908, -1.18200439, -1.22527082,\n       -1.3377275 , -1.37447161, -1.35642428, -1.57466087, -1.56815797,\n       -1.5257868 , -1.60024177, -1.62347917, -1.6101154 , -1.26362119,\n       -1.34200045, -1.25547138, -1.20126636, -1.15574858, -1.23025504,\n       -1.13340207, -1.20376716, -1.09460245]), 'split3_test_score': array([-1.56901167, -1.53918438, -1.5602467 , -1.75784542, -1.75707572,\n       -1.76765696, -1.72566896, -1.74459141, -1.74001316, -1.79597056,\n       -1.84609576, -1.78953028, -1.77913236, -1.57074834, -1.60990001,\n       -1.73153849, -1.67552012, -1.75229845, -1.67818803, -1.71253872,\n       -1.71546812, -1.82173056, -1.77846031, -1.85376824, -1.8460442 ,\n       -1.84243871, -1.83821852, -1.57713757, -1.61877488, -1.63498793,\n       -1.54659712, -1.49922975, -1.54565052, -1.51923348, -1.54044194,\n       -1.47294609, -1.6331336 , -1.6107819 , -1.61990027, -1.7628874 ,\n       -1.74771577, -1.76291708, -1.7957577 , -1.77084693, -1.77688608,\n       -1.5358158 , -1.56969691, -1.62215393, -1.69540156, -1.68333266,\n       -1.73723757, -1.69141632, -1.59477712, -1.68996503, -1.29584772,\n       -1.34721182, -1.31168899, -1.47864661, -1.50119398, -1.49286267,\n       -1.78898594, -1.78310708, -1.79377956, -1.52853187, -1.45347028,\n       -1.41806284, -1.52033403, -1.50791809, -1.47943859, -1.51120429,\n       -1.50408735, -1.5045068 , -1.44453834, -1.47164078, -1.44755697,\n       -1.57521914, -1.56480806, -1.55066055, -1.74725745, -1.73337148,\n       -1.74172982, -1.54433444, -1.42374977, -1.64044656, -1.51194528,\n       -1.39038415, -1.63637081, -1.61335056, -1.64889002, -1.56321321,\n       -1.52142681, -1.52288678, -1.45589534, -1.47590914, -1.47238556,\n       -1.47780552, -1.6600591 , -1.68364594, -1.67656985, -1.59231805,\n       -1.46340273, -1.5118521 , -1.62072464, -1.58648133, -1.67601284,\n       -1.69453654, -1.78981852, -1.68382566]), 'split4_test_score': array([-1.12062844, -1.15337454, -1.15901245, -1.51105839, -1.47648641,\n       -1.49658401, -1.45338691, -1.49340073, -1.47538996, -1.24285859,\n       -1.18070912, -1.348625  , -1.30410929, -1.33742596, -1.32324015,\n       -1.26482434, -1.42374291, -1.53409886, -1.12368065, -1.11412258,\n       -1.12581791, -1.08646821, -1.07665913, -1.11713334, -1.38056206,\n       -1.36581002, -1.37946767, -1.03856964, -0.98030341, -1.06940291,\n       -1.11453812, -1.14507909, -1.05943199, -1.08071582, -1.10520059,\n       -1.16002207, -1.1741247 , -1.19315973, -1.20439803, -1.05392757,\n       -1.05226253, -1.02043603, -1.04130322, -1.02402214, -1.02889308,\n       -1.14897477, -1.09114023, -1.1060322 , -1.11372845, -1.30538363,\n       -1.12370258, -1.31788822, -1.29503276, -1.30957373, -1.06916728,\n       -1.11207995, -1.12166115, -1.27754723, -1.30769284, -1.29955766,\n       -1.46393434, -1.48032212, -1.4564914 , -0.90815957, -1.08082366,\n       -0.97566712, -1.11813261, -1.27403181, -1.32114529, -1.3376702 ,\n       -1.2566095 , -1.33568604, -0.96115443, -0.92644149, -0.95692706,\n       -1.13281241, -1.16060483, -1.13741682, -1.17036865, -1.1631772 ,\n       -1.18595895, -0.93434386, -0.93859853, -1.02134014, -1.3282574 ,\n       -1.16995856, -1.23106373, -1.33044343, -1.46025642, -1.43756427,\n       -1.04094888, -1.07618103, -1.07268152, -1.08492789, -1.03795885,\n       -1.11271249, -1.00382193, -0.9949945 , -1.0228687 , -0.97084653,\n       -0.99473519, -1.03287159, -1.29600773, -1.27217548, -1.22148315,\n       -1.15206191, -1.32960588, -1.32031208]), 'split5_test_score': array([-1.17236935, -1.17671857, -1.14889918, -1.38823779, -1.39531617,\n       -1.3744005 , -1.31052201, -1.27127774, -1.29862979, -1.27890075,\n       -1.30368453, -1.26572995, -1.27879242, -1.27894858, -1.31468029,\n       -1.40484051, -1.43539525, -1.49676954, -1.06461753, -1.06532146,\n       -1.07700654, -1.1603041 , -1.22384011, -1.22187807, -1.3649104 ,\n       -1.3606247 , -1.33438352, -1.17080952, -1.24978627, -1.26878061,\n       -1.06532523, -1.27430494, -1.13613954, -1.13204694, -1.11681522,\n       -1.17522052, -1.08644621, -1.12382688, -1.10382947, -1.23935982,\n       -1.22874991, -1.25422556, -1.37083816, -1.37070674, -1.36523488,\n       -1.30032334, -1.31310272, -1.32110916, -1.18553907, -1.17252484,\n       -1.24807351, -1.27201262, -1.21867963, -1.21880553, -1.12024925,\n       -1.07465967, -1.07206855, -1.08983276, -1.12039956, -1.08834821,\n       -1.31158852, -1.36718602, -1.28797837, -0.98715235, -0.99334027,\n       -0.96986519, -1.17661079, -1.09767039, -1.12885192, -1.09788226,\n       -1.08929614, -1.12388373, -1.1185252 , -1.07066656, -1.06882106,\n       -1.34064482, -1.30272088, -1.25509539, -1.33361537, -1.28815429,\n       -1.28154508, -1.04113149, -1.03092506, -1.14038494, -1.09338926,\n       -1.12250174, -1.21851801, -1.33684966, -1.35654756, -1.33378945,\n       -1.1094782 , -1.12422584, -1.16662554, -1.30143125, -1.32693954,\n       -1.34578453, -1.34254457, -1.40176063, -1.38864804, -1.02407921,\n       -1.07788251, -1.00366937, -1.16754017, -1.14623977, -1.27847223,\n       -1.12089976, -1.44592876, -1.33258224]), 'split6_test_score': array([-1.07978281, -1.04215052, -1.03657619, -1.45145872, -1.46298957,\n       -1.4397399 , -1.43677209, -1.44755747, -1.46190454, -1.11765069,\n       -1.22793875, -1.22588747, -1.33635368, -1.36074661, -1.43929219,\n       -1.42209379, -1.51187898, -1.38493123, -1.21092196, -1.17827241,\n       -1.12487959, -1.52113931, -1.52404914, -1.5428473 , -1.71220307,\n       -1.68993502, -1.71264939, -1.07212301, -1.07328381, -1.07321409,\n       -1.37458108, -1.28851512, -1.30347952, -1.56190237, -1.4945477 ,\n       -1.56207839, -1.21437889, -1.2105199 , -1.11750156, -1.50607375,\n       -1.47321327, -1.42088689, -1.4451747 , -1.38260066, -1.46785448,\n       -1.11676902, -1.07988974, -1.09757926, -1.10875207, -1.09043126,\n       -1.30630861, -1.23315322, -1.12272269, -1.1205159 , -1.03092127,\n       -1.02909923, -1.03003815, -0.94417099, -0.93856467, -0.91380807,\n       -0.94888795, -0.96660122, -0.96562196, -1.19522271, -1.1657253 ,\n       -1.16020093, -1.3048873 , -1.30926074, -1.42153277, -1.33595645,\n       -1.37942649, -1.26335847, -1.06728941, -1.06902364, -1.05419132,\n       -1.24036497, -1.25840487, -1.22815364, -1.37338783, -1.36310449,\n       -1.34505269, -1.07907156, -1.22070505, -1.09025328, -1.24462751,\n       -1.27349992, -1.32191799, -1.29072582, -1.23096039, -1.23661241,\n       -1.06681287, -0.99970263, -0.99590867, -1.25573032, -1.27992914,\n       -1.26239182, -1.29756376, -1.29893667, -1.3225449 , -1.15968489,\n       -1.2429688 , -1.06664239, -1.18006262, -1.14881595, -1.06881126,\n       -1.3190104 , -1.34705133, -1.27837429]), 'split7_test_score': array([-1.879744  , -1.86604387, -1.97147949, -2.00028769, -1.99244573,\n       -1.96628285, -1.95841302, -1.95000872, -1.94559208, -2.02550981,\n       -1.99532695, -1.91985506, -1.98236148, -2.14947418, -2.14642653,\n       -2.15181581, -2.38828319, -2.09195186, -1.59872057, -1.65408054,\n       -1.58691446, -1.92735428, -1.89690043, -1.88804227, -2.02746579,\n       -2.04583847, -2.02007056, -1.80586269, -1.69090655, -1.68157831,\n       -1.87466231, -1.91958164, -1.79824998, -1.79521825, -1.78247554,\n       -1.84743842, -1.54464883, -1.52203685, -1.52893727, -2.00718584,\n       -1.99582544, -1.96612732, -2.01371244, -2.03846579, -2.04055801,\n       -1.65223198, -1.63177684, -1.70685545, -1.85956438, -1.72638991,\n       -1.68491212, -1.98266311, -1.94422727, -1.88882738, -1.43715925,\n       -1.38396275, -1.37382131, -1.54180684, -1.59679211, -1.62628181,\n       -1.78917978, -1.78769834, -1.76489325, -1.56992309, -1.45929145,\n       -1.64213236, -1.5174621 , -1.56793923, -1.46411366, -1.59718945,\n       -1.689844  , -1.59050928, -1.46813872, -1.46424544, -1.5138997 ,\n       -1.66406349, -1.67243565, -1.62811422, -1.71595296, -1.71770625,\n       -1.75991735, -1.63571986, -1.59987123, -1.64672367, -1.82821891,\n       -1.76608047, -1.72890191, -1.68333474, -1.80262026, -1.82384412,\n       -1.60086892, -1.59655992, -1.59558586, -1.83012746, -1.8805816 ,\n       -1.81555943, -1.81555299, -1.85428816, -1.83933419, -1.68459074,\n       -1.7659259 , -1.68616321, -1.60430979, -1.6570633 , -1.67962906,\n       -1.72552686, -1.64569301, -1.55863512]), 'split8_test_score': array([-1.5452135 , -1.55014208, -1.54975322, -1.74361272, -1.72381077,\n       -1.72390415, -1.73818054, -1.77928874, -1.73404044, -1.54116421,\n       -1.47034281, -1.62141679, -1.43866838, -1.54309621, -1.47317185,\n       -1.66793622, -1.72351091, -1.75689982, -1.40289538, -1.38556962,\n       -1.38297671, -1.3520883 , -1.32448083, -1.3760673 , -1.5580108 ,\n       -1.59694944, -1.59662972, -1.32259941, -1.349089  , -1.3445728 ,\n       -1.42647836, -1.3706997 , -1.39667378, -1.37728333, -1.39975119,\n       -1.38031276, -1.34138169, -1.34021054, -1.34392598, -1.48683788,\n       -1.47201888, -1.47523988, -1.52629733, -1.5184125 , -1.53454679,\n       -1.41246305, -1.40003328, -1.41900454, -1.38879185, -1.37008356,\n       -1.31966562, -1.33503634, -1.37771199, -1.32000701, -1.45259395,\n       -1.43096136, -1.4291574 , -1.44409478, -1.43323717, -1.45096614,\n       -1.42928886, -1.44023506, -1.45226007, -1.27885526, -1.27827041,\n       -1.2588193 , -1.34413492, -1.29770686, -1.30803658, -1.33905105,\n       -1.28551388, -1.35491417, -1.31118201, -1.29143349, -1.27866238,\n       -1.62391759, -1.39096002, -1.40140708, -1.67462841, -1.6715514 ,\n       -1.65055463, -1.26325224, -1.21320629, -1.16724178, -1.16536197,\n       -1.21479022, -1.24078901, -1.35658977, -1.24761956, -1.24622963,\n       -1.39927962, -1.36686836, -1.38431176, -1.60546077, -1.60801884,\n       -1.5871362 , -1.7716262 , -1.80321097, -1.83358995, -1.23373415,\n       -1.21104625, -1.28739934, -1.39276076, -1.31029155, -1.38330273,\n       -1.30207086, -1.25349438, -1.35834428]), 'split9_test_score': array([-1.3445632 , -1.29543669, -1.27110758, -1.55102195, -1.54518251,\n       -1.56205817, -1.63474553, -1.62924328, -1.62170015, -1.36921782,\n       -1.32019458, -1.44206906, -1.48928605, -1.55106135, -1.60262491,\n       -1.51101696, -1.4731088 , -1.49896834, -1.20454971, -1.20752515,\n       -1.22006197, -1.3947035 , -1.35932107, -1.37025776, -1.32079653,\n       -1.31935304, -1.3344503 , -1.21058689, -1.24802029, -1.10196915,\n       -1.24829759, -1.29640501, -1.21038032, -1.17539348, -1.18878744,\n       -1.14149307, -1.26301929, -1.16285264, -1.20137458, -1.51006167,\n       -1.46374258, -1.49048704, -1.4367634 , -1.41712407, -1.40572085,\n       -1.11853168, -1.13595912, -1.08283497, -1.15686897, -1.28951611,\n       -1.2026676 , -1.34850192, -1.25776921, -1.25806734, -1.25705342,\n       -1.29230132, -1.30250557, -1.55874922, -1.53752646, -1.55846493,\n       -1.64800446, -1.65932184, -1.6404226 , -1.30689959, -1.32665619,\n       -1.24413559, -1.37043999, -1.22196331, -1.21936593, -1.33620409,\n       -1.23407678, -1.33532997, -1.20062669, -1.18849807, -1.19740443,\n       -1.47757306, -1.46272986, -1.42826209, -1.54647876, -1.522207  ,\n       -1.52073725, -1.23407486, -1.28936082, -1.23183341, -1.30388748,\n       -1.31156455, -1.28604296, -1.30091215, -1.34650025, -1.39990258,\n       -1.25141893, -1.21847727, -1.24702461, -1.52087461, -1.55347629,\n       -1.58119234, -1.61246474, -1.63015558, -1.58430331, -1.12121131,\n       -1.11138066, -1.0983391 , -1.19405996, -1.30420773, -1.30119656,\n       -1.23519688, -1.22575243, -1.28936449]), 'mean_test_score': array([-1.34977263, -1.33053027, -1.34568217, -1.52094606, -1.52297301,\n       -1.52045336, -1.55863765, -1.5619836 , -1.56234163, -1.41479032,\n       -1.40990883, -1.44480972, -1.46642549, -1.53164828, -1.49153489,\n       -1.52924093, -1.56710282, -1.57006632, -1.29974291, -1.30006511,\n       -1.29097988, -1.45036573, -1.44025541, -1.45786249, -1.55643521,\n       -1.55801175, -1.56074443, -1.30029996, -1.29871112, -1.29852815,\n       -1.3728459 , -1.38834422, -1.35882653, -1.37129438, -1.35930288,\n       -1.38224952, -1.28676652, -1.2767584 , -1.27710557, -1.4632473 ,\n       -1.44463556, -1.44025458, -1.48440448, -1.47132004, -1.48478561,\n       -1.28127153, -1.29360696, -1.30153306, -1.33929882, -1.35605329,\n       -1.34422712, -1.42677426, -1.38596171, -1.38866412, -1.23636899,\n       -1.23881447, -1.23227593, -1.33331005, -1.34414309, -1.34583626,\n       -1.46071251, -1.46803624, -1.45662497, -1.22875132, -1.22922957,\n       -1.21141373, -1.31531535, -1.30859502, -1.32788283, -1.32611008,\n       -1.31321842, -1.33384919, -1.21991584, -1.21672061, -1.22002187,\n       -1.42576551, -1.39199712, -1.38231665, -1.51184257, -1.50053028,\n       -1.49516097, -1.21309126, -1.22137609, -1.26864311, -1.30337446,\n       -1.27124978, -1.33382996, -1.37831584, -1.3678599 , -1.36589663,\n       -1.26653238, -1.26649687, -1.26337759, -1.44901952, -1.45722621,\n       -1.46088001, -1.52277529, -1.54134385, -1.53375162, -1.2317547 ,\n       -1.2482677 , -1.23213107, -1.31158327, -1.29550212, -1.34979484,\n       -1.32188152, -1.36716801, -1.33616806]), 'std_test_score': array([0.23552462, 0.23537096, 0.26451593, 0.24076754, 0.2289059 ,\n       0.22651644, 0.20000842, 0.20592106, 0.19340203, 0.27333677,\n       0.2684149 , 0.23462341, 0.22247531, 0.25356273, 0.24530762,\n       0.26346486, 0.30367279, 0.23725666, 0.19437758, 0.21460852,\n       0.20556344, 0.26786846, 0.24584081, 0.24638271, 0.22893261,\n       0.2355891 , 0.23120918, 0.23692463, 0.23983447, 0.24352624,\n       0.2297434 , 0.21978523, 0.2188143 , 0.25971262, 0.24454404,\n       0.23823077, 0.18120193, 0.17083615, 0.1759988 , 0.26613061,\n       0.27001783, 0.27471497, 0.2743751 , 0.28215654, 0.28264882,\n       0.23048754, 0.22697856, 0.250997  , 0.27482714, 0.21452869,\n       0.22078383, 0.24928275, 0.26303601, 0.25936339, 0.15352904,\n       0.14677175, 0.14995427, 0.23183174, 0.23645626, 0.2432245 ,\n       0.28623785, 0.29052969, 0.27547516, 0.20606173, 0.17240161,\n       0.19001907, 0.15545124, 0.15204579, 0.1281821 , 0.16312865,\n       0.18616234, 0.18267741, 0.18152879, 0.19816428, 0.20258547,\n       0.20894522, 0.18784729, 0.18397373, 0.20281631, 0.1975475 ,\n       0.20817411, 0.23748492, 0.20416491, 0.22823211, 0.25755489,\n       0.22176894, 0.23493827, 0.16609086, 0.22595568, 0.21116634,\n       0.22647919, 0.23004111, 0.21573332, 0.21650566, 0.23349909,\n       0.20960137, 0.24250182, 0.25945738, 0.2453092 , 0.25564268,\n       0.26192287, 0.24446339, 0.1734391 , 0.17588881, 0.19375269,\n       0.2128795 , 0.20003961, 0.17431387]), 'rank_test_score': array([ 51,  41,  49,  94,  96,  93, 103, 105, 106,  69,  68,  75,  84,\n        98,  89,  97, 107, 108,  29,  30,  24,  77,  73,  80, 101, 102,\n       104,  31,  28,  27,  60,  65,  54,  59,  55,  62,  23,  20,  21,\n        83,  74,  72,  87,  86,  88,  22,  25,  32,  46,  53,  48,  71,\n        64,  66,  12,  13,  11,  42,  47,  50,  81,  85,  78,   7,   8,\n         1,  37,  34,  40,  39,  36,  44,   4,   3,   5,  70,  67,  63,\n        92,  91,  90,   2,   6,  18,  33,  19,  43,  61,  58,  56,  17,\n        16,  15,  76,  79,  82,  95, 100,  99,   9,  14,  10,  35,  26,\n        52,  38,  57,  45]), 'split0_train_score': array([-3.54287713e-01, -2.14741262e-01, -1.25617234e-01, -1.56050798e-03,\n       -1.49855014e-04, -2.65595182e-05, -4.54025296e-05, -2.33994431e-07,\n       -1.20595442e-09, -4.55389913e-01, -3.93093374e-01, -2.82942555e-01,\n       -9.07315464e-03, -9.45814193e-04, -1.38035844e-03, -6.60356216e-03,\n       -3.12830001e-03, -6.53595034e-03, -2.60416183e-01, -1.56194199e-01,\n       -9.49461427e-02, -6.06777374e-04, -6.39811304e-05, -4.88139775e-06,\n       -4.54025296e-05, -2.33994431e-07, -1.20595442e-09, -3.78087853e-01,\n       -2.97859471e-01, -2.12769861e-01, -5.88595979e-03, -2.51828292e-03,\n       -2.15554536e-03, -1.66689550e-03, -4.33667236e-06, -1.15914397e-06,\n       -2.56420706e-01, -1.47942676e-01, -8.70224993e-02, -2.04308352e-04,\n       -2.34887303e-05, -3.02185723e-06, -4.54025296e-05, -2.33994431e-07,\n       -1.20595442e-09, -3.63929672e-01, -2.89266607e-01, -1.96155492e-01,\n       -1.10736475e-02, -3.19493610e-03, -7.71908996e-04, -8.30601328e-05,\n       -2.78637322e-06, -2.93641026e-07, -3.21767647e-01, -1.88787910e-01,\n       -1.21426677e-01, -3.61600551e-04, -8.04897994e-05, -7.83348006e-06,\n       -4.54025296e-05, -2.33994431e-07, -1.20595442e-09, -4.35980103e-01,\n       -3.16174252e-01, -3.09677798e-01, -1.06183137e-02, -4.68075486e-03,\n       -8.48665025e-04, -1.76890153e-04, -2.34756077e-02, -8.87384641e-08,\n       -2.70228472e-01, -1.55297384e-01, -8.76591450e-02, -2.48075452e-04,\n       -2.40691885e-05, -3.38503225e-06, -4.54025296e-05, -2.33994431e-07,\n       -1.20595442e-09, -4.19209601e-01, -3.40764759e-01, -2.29292871e-01,\n       -1.37106236e-02, -1.32017208e-03, -1.02121949e-03, -1.98917746e-03,\n       -4.76385925e-03, -1.52279572e-04, -2.70147725e-01, -1.39299339e-01,\n       -8.13543216e-02, -1.83354619e-04, -1.35591351e-05, -1.69674614e-06,\n       -4.54025296e-05, -2.33994431e-07, -1.20595442e-09, -4.13981544e-01,\n       -2.90356959e-01, -2.27413294e-01, -1.65331745e-02, -4.71719041e-03,\n       -3.59803936e-03, -2.89603447e-03, -6.19667964e-03, -2.11769248e-06]), 'split1_train_score': array([-3.55655038e-01, -2.19643254e-01, -1.32638139e-01, -1.41920737e-03,\n       -2.07519331e-04, -5.70152545e-05, -4.55418295e-05, -2.34712352e-07,\n       -1.20965474e-09, -4.81135463e-01, -3.63914643e-01, -2.25895800e-01,\n       -6.42317356e-03, -3.78373477e-03, -2.24038474e-04, -5.22997370e-05,\n       -3.59763183e-06, -1.40105123e-09, -2.57676822e-01, -1.48363157e-01,\n       -8.61298427e-02, -5.42416101e-04, -2.43568629e-05, -3.79673660e-06,\n       -4.55322163e-05, -2.34662807e-07, -1.20939939e-09, -3.41756179e-01,\n       -2.76689563e-01, -2.35419261e-01, -1.59793125e-02, -2.69197726e-03,\n       -4.41565259e-03, -3.05210002e-04, -1.47418880e-02, -1.01590052e-02,\n       -2.29712611e-01, -1.31085019e-01, -8.01099364e-02, -1.85914934e-04,\n       -3.08185471e-05, -3.21117019e-06, -4.55322163e-05, -2.34662807e-07,\n       -1.20939939e-09, -3.37446662e-01, -2.84821154e-01, -2.33628387e-01,\n       -9.45561527e-03, -5.63231850e-03, -6.04800103e-04, -1.63632534e-04,\n       -2.39614918e-06, -9.44120252e-04, -3.22171382e-01, -2.15662234e-01,\n       -1.21701197e-01, -1.25272267e-04, -2.15849816e-05, -3.02433761e-06,\n       -4.55837542e-05, -2.34662807e-07, -1.21259629e-09, -3.94875113e-01,\n       -3.37675342e-01, -2.29646753e-01, -9.24659576e-03, -2.67672038e-03,\n       -3.62462948e-03, -1.04914642e-04, -8.45492841e-07, -3.79907906e-08,\n       -2.99260778e-01, -1.90002606e-01, -1.01713482e-01, -2.27736889e-04,\n       -1.20991594e-05, -4.41986392e-06, -4.55322163e-05, -2.34662807e-07,\n       -1.20939940e-09, -3.84789470e-01, -3.45848997e-01, -2.38867941e-01,\n       -2.66434578e-03, -3.45448389e-03, -2.73991303e-04, -6.61152309e-04,\n       -8.45159825e-07, -6.91058085e-07, -2.98686422e-01, -1.69788241e-01,\n       -8.93049438e-02, -2.14250482e-04, -3.39309816e-05, -1.38502980e-06,\n       -4.55734159e-05, -2.34875141e-07, -1.21049372e-09, -4.20549375e-01,\n       -3.03168119e-01, -2.65654729e-01, -2.63776916e-03, -1.37426285e-03,\n       -6.72315123e-04, -8.00052093e-03, -3.67028374e-05, -2.96954284e-04]), 'split2_train_score': array([-3.59264729e-01, -2.08942705e-01, -1.25984314e-01, -8.71489570e-04,\n       -7.70177340e-05, -3.74699760e-05, -4.56105626e-05, -2.35066587e-07,\n       -1.21147990e-09, -5.17388845e-01, -3.61579780e-01, -3.07168251e-01,\n       -2.43044763e-02, -2.79553749e-03, -1.13750995e-03, -7.51651107e-05,\n       -3.39364470e-05, -1.48050446e-09, -2.39215993e-01, -1.30253227e-01,\n       -7.26975799e-02, -9.75591563e-05, -3.64661444e-06, -4.70852479e-07,\n       -4.62768307e-05, -2.38500382e-07, -1.23405376e-09, -4.21444903e-01,\n       -3.13379577e-01, -2.54726436e-01, -7.16951206e-03, -5.81028461e-03,\n       -7.23001743e-04, -2.03042661e-02, -3.65505446e-02, -4.32114582e-04,\n       -2.51382235e-01, -1.33731442e-01, -8.84140320e-02, -1.05078647e-04,\n       -5.80377385e-06, -1.30797206e-06, -4.56105626e-05, -2.35066587e-07,\n       -1.21147990e-09, -3.83619198e-01, -3.05876504e-01, -2.32857545e-01,\n       -1.68129566e-02, -2.93381644e-03, -1.84740578e-03, -3.93469717e-02,\n       -1.85167462e-02, -1.50328457e-02, -3.12312401e-01, -1.81115228e-01,\n       -1.09953743e-01, -3.96929967e-04, -7.15294224e-06, -6.39203552e-06,\n       -4.56105626e-05, -2.35066587e-07, -1.21147990e-09, -4.12985180e-01,\n       -3.16955460e-01, -2.38254681e-01, -5.68010483e-03, -1.33686906e-03,\n       -7.19350495e-04, -7.74988513e-04, -1.10001537e-04, -9.12944185e-09,\n       -2.55570588e-01, -1.45426902e-01, -8.70807540e-02, -9.83968962e-05,\n       -7.19387512e-06, -4.14995965e-07, -4.56105626e-05, -2.35066587e-07,\n       -1.21147990e-09, -4.08040917e-01, -3.23761046e-01, -2.85445099e-01,\n       -6.37480759e-03, -2.98819618e-03, -1.06879940e-03, -2.61663552e-04,\n       -8.12557837e-06, -4.08900129e-08, -2.34658658e-01, -1.46030854e-01,\n       -8.52401854e-02, -7.34571687e-05, -8.64429554e-07, -3.13227289e-08,\n       -4.56105626e-05, -2.35066587e-07, -1.21147990e-09, -4.06949046e-01,\n       -2.93333549e-01, -2.62993046e-01, -7.26761631e-03, -1.96696585e-03,\n       -1.54839274e-03, -1.60007296e-03, -3.79408890e-04, -5.28013373e-03]), 'split3_train_score': array([-3.14254166e-01, -1.96329130e-01, -1.14024824e-01, -4.48909989e-04,\n       -8.82028080e-05, -1.21333740e-05, -4.55158706e-05, -2.34578566e-07,\n       -1.20896519e-09, -4.23551240e-01, -3.55616437e-01, -2.37225444e-01,\n       -7.40379054e-03, -2.57175911e-02, -6.98859429e-04, -7.99285901e-03,\n       -1.90804751e-06, -4.68551396e-05, -2.40843256e-01, -1.28503091e-01,\n       -7.42838510e-02, -9.12259930e-05, -1.54239334e-06, -2.34488366e-06,\n       -4.55158706e-05, -2.34578566e-07, -1.20896519e-09, -3.99109502e-01,\n       -2.99996547e-01, -2.17526891e-01, -1.12913284e-02, -2.91619199e-03,\n       -1.97396542e-03, -1.09816545e-03, -4.71634525e-03, -1.66689857e-08,\n       -2.30442548e-01, -1.27180553e-01, -6.64802826e-02, -1.02386551e-04,\n       -2.36521976e-06, -7.45196355e-07, -4.55158706e-05, -2.34578566e-07,\n       -1.20896519e-09, -3.65868439e-01, -2.85691612e-01, -2.13679476e-01,\n       -1.36393640e-02, -2.79864119e-03, -1.09246387e-03, -9.39501416e-03,\n       -7.12548986e-03, -1.81081645e-03, -2.88621884e-01, -1.62775122e-01,\n       -1.02208828e-01, -1.44051110e-04, -4.16400032e-06, -2.14081942e-06,\n       -4.56003722e-05, -2.35014068e-07, -1.21120972e-09, -3.92178523e-01,\n       -3.19054255e-01, -2.28033801e-01, -5.01775104e-03, -1.19239661e-03,\n       -8.29633490e-04, -9.00503190e-03, -3.64122953e-06, -3.39628142e-07,\n       -2.56195617e-01, -1.44531455e-01, -8.65758794e-02, -5.84307717e-05,\n       -2.66491702e-06, -1.02215835e-07, -4.55158706e-05, -2.34578566e-07,\n       -1.20896521e-09, -3.64183189e-01, -2.44729802e-01, -1.79894222e-01,\n       -2.41456579e-03, -2.27020237e-03, -3.08316903e-04, -6.62085022e-03,\n       -6.14454002e-03, -7.70400801e-06, -2.40238572e-01, -1.35342651e-01,\n       -7.38020738e-02, -6.03893153e-05, -5.00573302e-07, -6.55803465e-08,\n       -4.55700024e-05, -2.37021778e-07, -1.22155697e-09, -3.38307984e-01,\n       -3.29535935e-01, -2.09561993e-01, -1.51636423e-02, -4.25089540e-03,\n       -1.98997658e-03, -2.22942310e-04, -5.56567779e-04, -3.88266890e-06]), 'split4_train_score': array([-3.19415131e-01, -1.88629337e-01, -1.12487376e-01, -5.68318403e-05,\n       -7.44545386e-07, -1.22227066e-07, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -4.61825723e-01, -3.26351155e-01, -2.21824877e-01,\n       -1.17780582e-02, -5.81070538e-03, -2.54336244e-03, -6.66497962e-04,\n       -2.77008436e-04, -1.18899642e-04, -2.41351347e-01, -1.34476011e-01,\n       -7.32011523e-02, -1.31053864e-04, -2.68375561e-06, -2.41503118e-07,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -3.92324703e-01,\n       -2.82655436e-01, -2.39209145e-01, -6.51033800e-03, -1.35677786e-03,\n       -2.77741992e-04, -1.30274201e-04, -7.25869238e-04, -2.70999978e-03,\n       -2.22990442e-01, -1.22039536e-01, -6.91950054e-02, -1.92966911e-04,\n       -1.35778265e-05, -1.89437670e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -3.55364807e-01, -2.80770940e-01, -2.31530355e-01,\n       -3.99342865e-03, -1.22718808e-03, -5.74765203e-04, -2.17020160e-04,\n       -7.93858698e-06, -3.74429493e-08, -3.12014180e-01, -1.92386527e-01,\n       -1.15293642e-01, -8.75649433e-04, -1.25068286e-04, -2.41468925e-05,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.67122335e-01,\n       -3.58422119e-01, -2.59972073e-01, -6.34016622e-03, -3.23237534e-03,\n       -1.54360740e-03, -1.44481983e-04, -1.36320163e-05, -1.88734364e-06,\n       -2.99060450e-01, -1.52448386e-01, -8.39189331e-02, -2.48454376e-04,\n       -1.10612368e-05, -2.09334816e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -4.62240647e-01, -3.36134676e-01, -2.44507359e-01,\n       -8.05210314e-03, -2.24068463e-03, -4.52506455e-04, -4.05721353e-04,\n       -4.91757973e-06, -2.56022099e-09, -2.86447922e-01, -1.85556774e-01,\n       -1.15371138e-01, -3.01718858e-04, -3.71839299e-05, -1.02711943e-05,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.13426253e-01,\n       -3.39541855e-01, -2.71839294e-01, -1.54954149e-02, -3.02400736e-03,\n       -1.15082380e-03, -3.08312729e-04, -6.13367927e-07, -6.96006290e-04]), 'split5_train_score': array([-3.22776402e-01, -1.91209115e-01, -1.11152980e-01, -7.81605024e-04,\n       -1.18116344e-04, -3.07166061e-06, -4.56914338e-05, -2.35483379e-07,\n       -1.21362836e-09, -5.04203310e-01, -3.73487834e-01, -3.11642287e-01,\n       -4.71646043e-03, -1.95120279e-03, -5.74569998e-04, -6.35000620e-05,\n       -1.63693730e-06, -1.89737591e-09, -2.51028608e-01, -1.45172371e-01,\n       -8.04837999e-02, -4.03688742e-04, -2.64745041e-05, -3.50903488e-06,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -4.12689497e-01,\n       -2.88017589e-01, -2.72813150e-01, -8.23658435e-03, -3.65894146e-03,\n       -1.08597530e-03, -3.05616089e-03, -9.96508604e-07, -4.96874104e-08,\n       -2.31500286e-01, -1.28338057e-01, -5.80838251e-02, -1.63954391e-04,\n       -8.05130825e-06, -1.34054608e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -3.46404085e-01, -2.91445263e-01, -2.08467920e-01,\n       -5.58234566e-03, -3.13013772e-03, -4.68146682e-04, -2.68242095e-04,\n       -1.79120539e-02, -7.22114534e-06, -3.08163249e-01, -2.03211307e-01,\n       -1.23796654e-01, -8.93340917e-04, -1.65894662e-04, -4.22753325e-05,\n       -4.64834153e-05, -2.39102612e-07, -1.31500244e-09, -4.51863117e-01,\n       -3.27207536e-01, -2.73975857e-01, -5.89270881e-03, -3.51853868e-03,\n       -5.45275333e-03, -2.94195457e-04, -1.02063094e-05, -3.08544929e-06,\n       -2.57477215e-01, -1.64196814e-01, -9.86615192e-02, -3.99364309e-04,\n       -1.04466843e-04, -5.07177149e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312717e-09, -4.08571778e-01, -3.16178648e-01, -2.59257790e-01,\n       -5.11878113e-03, -8.65432867e-04, -3.09460231e-04, -5.93672868e-05,\n       -6.75650972e-06, -2.22130463e-08, -2.79073380e-01, -1.48161040e-01,\n       -8.49157166e-02, -1.25323741e-04, -1.44712268e-05, -5.25316451e-07,\n       -4.56725634e-05, -2.35386125e-07, -1.21312717e-09, -3.86347276e-01,\n       -3.33123930e-01, -2.49276455e-01, -8.31338417e-03, -4.30947240e-03,\n       -7.60160257e-04, -8.12362739e-03, -3.10780063e-02, -4.65041697e-07]), 'split6_train_score': array([-3.89795204e-01, -2.35710871e-01, -1.44865249e-01, -6.52024999e-04,\n       -6.77101925e-05, -2.32815153e-05, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -5.01226206e-01, -3.73744120e-01, -2.83416204e-01,\n       -1.85640635e-02, -3.01054400e-03, -4.12557398e-03, -6.72597726e-05,\n       -1.29582468e-06, -2.24014447e-09, -2.57008900e-01, -1.41572939e-01,\n       -8.33285920e-02, -1.80494937e-04, -5.58398342e-05, -1.24713515e-06,\n       -4.56725634e-05, -2.35386125e-07, -1.21312716e-09, -3.60592529e-01,\n       -2.79198387e-01, -1.93136015e-01, -6.54238264e-03, -2.12259624e-03,\n       -8.31413384e-04, -5.61070632e-04, -2.96854413e-05, -4.12700340e-08,\n       -2.55147869e-01, -1.44152978e-01, -7.99859195e-02, -4.33954289e-04,\n       -2.95074590e-05, -2.15127978e-06, -4.56725634e-05, -2.35386125e-07,\n       -1.21312716e-09, -3.88621018e-01, -3.01970445e-01, -2.17951646e-01,\n       -3.15361084e-02, -1.65428074e-03, -2.04502075e-03, -1.05358752e-03,\n       -1.13732026e-06, -3.20657276e-03, -2.84537663e-01, -1.67070003e-01,\n       -1.04564128e-01, -3.36762433e-04, -1.25148841e-05, -1.75354012e-06,\n       -4.56915762e-05, -2.35621370e-07, -1.22384600e-09, -4.52264517e-01,\n       -3.35044062e-01, -2.78391284e-01, -7.15291811e-03, -3.28531737e-03,\n       -8.02693195e-04, -3.50945756e-04, -6.48113310e-04, -2.24117177e-05,\n       -2.75077957e-01, -1.57248647e-01, -9.21568837e-02, -9.78958508e-05,\n       -1.57509971e-06, -1.13263378e-06, -4.59044383e-05, -2.36373564e-07,\n       -1.21780412e-09, -4.01966828e-01, -3.13498966e-01, -2.34958856e-01,\n       -4.47732412e-03, -2.38703553e-03, -6.05127935e-04, -1.96470293e-03,\n       -3.02027490e-04, -2.59869213e-04, -2.62675231e-01, -1.44498446e-01,\n       -8.72764305e-02, -6.72163364e-05, -1.34272863e-06, -9.17409696e-08,\n       -4.56853810e-05, -2.35452184e-07, -1.21346759e-09, -3.85337688e-01,\n       -2.84225724e-01, -2.27170056e-01, -6.00294706e-03, -3.13826705e-03,\n       -8.68218863e-04, -2.02184939e-03, -9.65848203e-04, -9.23612572e-04]), 'split7_train_score': array([-3.08718779e-01, -1.81183552e-01, -1.10006881e-01, -9.89072355e-04,\n       -1.47018553e-04, -3.20110577e-05, -4.57397797e-05, -2.36286843e-07,\n       -1.21491141e-09, -4.28226912e-01, -3.11630820e-01, -2.02214687e-01,\n       -6.78107262e-03, -3.03337515e-03, -1.92331201e-03, -1.62937729e-04,\n       -5.26504055e-07, -2.04238560e-04, -2.38937243e-01, -1.45955117e-01,\n       -7.20168547e-02, -2.13790906e-04, -2.35220128e-05, -7.24922185e-06,\n       -4.56446414e-05, -2.35242221e-07, -1.21238539e-09, -3.85142552e-01,\n       -3.34632063e-01, -2.33587403e-01, -1.19007878e-02, -3.37818185e-03,\n       -1.70300206e-03, -4.08672748e-03, -1.60390102e-06, -1.57879051e-08,\n       -2.47989031e-01, -1.35021545e-01, -7.42528519e-02, -3.43152144e-04,\n       -7.42561919e-06, -3.00777064e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.56836098e-01, -2.26632624e-01, -2.15560984e-01,\n       -6.04898651e-03, -1.00691398e-02, -6.36460976e-04, -4.95064087e-04,\n       -1.94634504e-05, -3.47979193e-08, -2.69635172e-01, -1.66818517e-01,\n       -9.77781197e-02, -6.32086286e-04, -7.56614753e-05, -1.75590180e-05,\n       -4.56313065e-05, -2.35173496e-07, -1.21203117e-09, -4.29557780e-01,\n       -3.42125324e-01, -2.73395235e-01, -1.02274554e-02, -2.43316932e-03,\n       -3.85237305e-04, -4.67777017e-04, -3.84299820e-05, -6.12949770e-09,\n       -2.50804497e-01, -1.49908563e-01, -8.98725830e-02, -7.81001289e-05,\n       -4.14326399e-06, -1.86529585e-07, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.97145380e-01, -3.26270932e-01, -2.31044043e-01,\n       -7.58096238e-03, -1.19309841e-03, -9.68046325e-04, -9.67965189e-03,\n       -4.50921858e-06, -1.63931984e-07, -2.57170077e-01, -1.44607292e-01,\n       -7.98248960e-02, -8.61340236e-05, -7.54458711e-07, -2.65019114e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.30472511e-01,\n       -3.58510376e-01, -2.40467111e-01, -6.78799317e-03, -7.12331946e-03,\n       -9.42758669e-04, -4.88820810e-04, -7.18465843e-07, -6.94076210e-05]), 'split8_train_score': array([-3.78781855e-01, -2.27496229e-01, -1.41670465e-01, -1.07486715e-03,\n       -1.16193961e-04, -4.18688410e-05, -4.56581373e-05, -2.36429109e-07,\n       -1.21274385e-09, -4.67625785e-01, -3.61175687e-01, -2.54028340e-01,\n       -9.30078911e-03, -3.67091578e-03, -3.52172138e-03, -5.01404922e-05,\n       -1.05018765e-04, -1.79111528e-09, -2.46490477e-01, -1.28961434e-01,\n       -7.72039776e-02, -1.56845409e-04, -2.67035456e-05, -2.16243504e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.19418111e-01,\n       -3.33131001e-01, -2.63761410e-01, -4.89150475e-03, -6.25742146e-03,\n       -5.93939832e-04, -7.04965885e-04, -8.96222713e-05, -9.05783789e-09,\n       -2.59397859e-01, -1.41303084e-01, -8.04015732e-02, -4.61575391e-04,\n       -6.76014512e-05, -4.22061259e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089634e-09, -3.67780446e-01, -3.05088090e-01, -2.43450798e-01,\n       -6.12041641e-03, -1.86292718e-03, -5.46452659e-04, -6.70656627e-05,\n       -9.07592119e-07, -3.93786667e-06, -3.07333226e-01, -1.81646317e-01,\n       -1.13560775e-01, -1.70029325e-04, -7.66645168e-06, -2.23338337e-06,\n       -4.58875175e-05, -2.36855079e-07, -1.21832272e-09, -3.88934897e-01,\n       -3.77660147e-01, -2.91628569e-01, -1.05936680e-02, -4.30597358e-03,\n       -6.49734126e-04, -3.88236998e-04, -9.86040439e-06, -5.66506995e-09,\n       -2.59105031e-01, -1.33247592e-01, -8.64649499e-02, -8.99759809e-05,\n       -4.20896848e-06, -7.78040272e-07, -4.58237666e-05, -2.36165392e-07,\n       -1.21714319e-09, -3.72023200e-01, -2.86454619e-01, -2.80589297e-01,\n       -8.46712731e-03, -2.24482162e-03, -1.39316402e-03, -1.33034132e-04,\n       -1.06611345e-05, -4.73652078e-09, -2.48471695e-01, -1.22861129e-01,\n       -8.24053282e-02, -1.50487735e-04, -8.01213294e-06, -3.87011890e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.19381264e-01,\n       -2.86865391e-01, -2.55896495e-01, -1.04188203e-02, -2.12540473e-03,\n       -1.35788522e-03, -1.08845846e-03, -2.65276458e-04, -3.39030415e-09]), 'split9_train_score': array([-3.57837301e-01, -2.09367785e-01, -1.18255674e-01, -4.73357744e-04,\n       -1.10363743e-04, -1.46629851e-05, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -4.17980816e-01, -2.98027380e-01, -2.25370396e-01,\n       -5.71540370e-03, -4.70166834e-03, -5.22809662e-04, -1.92563445e-04,\n       -6.73204966e-07, -5.51280438e-06, -2.65246815e-01, -1.43761391e-01,\n       -7.87195007e-02, -1.35501845e-04, -9.87853390e-06, -9.37141901e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.91988284e-01,\n       -2.56888711e-01, -3.12418916e-01, -3.38755775e-03, -1.31774326e-03,\n       -6.61728394e-04, -2.87980701e-04, -1.10008325e-04, -3.20776236e-04,\n       -2.27588661e-01, -1.55223871e-01, -7.16423429e-02, -2.12163533e-04,\n       -1.57913979e-05, -2.35596276e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089634e-09, -3.84796556e-01, -2.94491921e-01, -2.45230363e-01,\n       -6.60197768e-03, -1.59095988e-03, -1.43203185e-03, -1.82061230e-04,\n       -1.74581454e-04, -3.78930856e-08, -2.89440257e-01, -1.93920865e-01,\n       -1.19843584e-01, -5.71276874e-04, -9.49480541e-05, -1.79309256e-05,\n       -4.58661245e-05, -2.36913032e-07, -1.21961612e-09, -4.34661563e-01,\n       -3.34479338e-01, -2.49139962e-01, -8.65085754e-03, -2.11585680e-03,\n       -3.44199098e-04, -1.42504057e-04, -7.03235741e-07, -3.21425565e-05,\n       -2.76628097e-01, -1.61515491e-01, -9.26401161e-02, -2.92765242e-04,\n       -3.69961416e-05, -6.18390619e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.94828683e-01, -3.31208237e-01, -2.26241044e-01,\n       -1.06094025e-02, -9.26398669e-04, -6.27987306e-04, -1.32667903e-03,\n       -2.02042180e-06, -1.31191105e-04, -2.68529372e-01, -1.77281211e-01,\n       -8.64482077e-02, -9.78468693e-05, -5.56445389e-06, -9.56541945e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.20142161e-01,\n       -3.05804050e-01, -2.33736180e-01, -8.16773524e-03, -1.77523674e-03,\n       -1.20601182e-03, -1.40029211e-03, -2.96741630e-05, -2.59268360e-06]), 'mean_train_score': array([-3.46078632e-01, -2.07325324e-01, -1.23670314e-01, -8.32787402e-04,\n       -1.08274223e-04, -2.48196409e-05, -4.56093850e-05, -2.35227681e-07,\n       -1.21144885e-09, -4.65855421e-01, -3.51862123e-01, -2.55172884e-01,\n       -1.04060443e-02, -5.54210890e-03, -1.66521158e-03, -1.59267855e-03,\n       -3.55390181e-04, -6.91146529e-04, -2.49821564e-01, -1.40321294e-01,\n       -7.93011293e-02, -2.55935433e-04, -2.38629187e-05, -2.48941509e-06,\n       -4.56566940e-05, -2.35304337e-07, -1.21319323e-09, -3.90255411e-01,\n       -2.96244834e-01, -2.43536849e-01, -8.17952680e-03, -3.20283989e-03,\n       -1.44219661e-03, -3.22017169e-03, -5.69709002e-03, -1.36231874e-03,\n       -2.41257225e-01, -1.36601876e-01, -7.55588268e-02, -2.40545514e-04,\n       -2.04431333e-05, -2.32567444e-06, -4.55844611e-05, -2.34932065e-07,\n       -1.21078694e-09, -3.65066698e-01, -2.86605516e-01, -2.23851297e-01,\n       -1.10864847e-02, -3.40943457e-03, -1.00194569e-03, -5.12717193e-03,\n       -4.37635009e-03, -2.10059180e-03, -3.01599706e-01, -1.85339403e-01,\n       -1.13012735e-01, -4.50699916e-04, -5.95145537e-05, -1.25289765e-05,\n       -4.57429722e-05, -2.35778961e-07, -1.22431859e-09, -4.26042313e-01,\n       -3.36479784e-01, -2.63211601e-01, -7.94205395e-03, -2.87779720e-03,\n       -1.52005030e-03, -1.18499665e-03, -2.43110413e-03, -6.00143486e-06,\n       -2.69940870e-01, -1.55382384e-01, -9.06744246e-02, -1.83919590e-04,\n       -2.08478694e-05, -2.37683375e-06, -4.56311672e-05, -2.35152019e-07,\n       -1.21187932e-09, -4.01299969e-01, -3.16485068e-01, -2.41009852e-01,\n       -6.94700433e-03, -1.98905262e-03, -7.02861936e-04, -2.31020002e-03,\n       -1.12482624e-03, -5.51969288e-05, -2.64609905e-01, -1.51342698e-01,\n       -8.65943242e-02, -1.36017915e-04, -1.16184051e-05, -1.56755037e-06,\n       -4.55952760e-05, -2.35204226e-07, -1.21218959e-09, -4.03489510e-01,\n       -3.12446589e-01, -2.44400865e-01, -9.67884970e-03, -3.38050223e-03,\n       -1.40945824e-03, -2.61509315e-03, -3.95094961e-03, -7.27517598e-04]), 'std_train_score': array([2.66727705e-02, 1.68514106e-02, 1.20564615e-02, 4.32659719e-04,\n       5.27556011e-05, 1.70041440e-05, 9.51980288e-08, 7.06392390e-10,\n       2.52848749e-12, 3.35220110e-02, 2.85562418e-02, 3.66695623e-02,\n       5.97487219e-03, 6.84608328e-03, 1.27290159e-03, 2.87495883e-03,\n       9.28018056e-04, 1.94935599e-03, 9.27039074e-03, 8.88562952e-03,\n       6.87607152e-03, 1.80718135e-04, 2.04896768e-05, 2.22249339e-06,\n       2.22412819e-07, 1.14626562e-09, 7.28730875e-12, 2.41215013e-02,\n       2.37038059e-02, 3.23775632e-02, 3.60405428e-03, 1.59085627e-03,\n       1.15770982e-03, 5.82751207e-03, 1.11869972e-02, 3.03776208e-03,\n       1.32880962e-02, 9.82241946e-03, 8.97649328e-03, 1.21433745e-04,\n       1.83191149e-05, 1.00231106e-06, 8.03439443e-08, 4.14074558e-10,\n       2.13408784e-12, 1.60330831e-02, 2.16253711e-02, 1.51247607e-02,\n       7.81609045e-03, 2.52106098e-03, 5.49098809e-04, 1.17265385e-02,\n       7.23180964e-03, 4.43073569e-03, 1.66079407e-02, 1.60981310e-02,\n       8.62724978e-03, 2.69532419e-04, 5.45082612e-05, 1.24674577e-05,\n       2.79911153e-07, 1.39855023e-09, 3.06094854e-11, 2.62543244e-02,\n       1.84385205e-02, 2.57139261e-02, 2.06584782e-03, 1.09664971e-03,\n       1.59395713e-03, 2.61365210e-03, 7.01737498e-03, 1.09016683e-05,\n       1.67725796e-02, 1.43622194e-02, 5.42696831e-03, 1.09063876e-04,\n       2.97992991e-05, 2.12017903e-06, 1.39502845e-07, 6.79939312e-10,\n       3.43168115e-12, 2.58839810e-02, 2.87454035e-02, 2.84908558e-02,\n       3.34285685e-03, 8.35742051e-04, 3.68007907e-04, 3.07293771e-03,\n       2.18835284e-03, 8.80482998e-05, 1.92455313e-02, 1.87788164e-02,\n       1.04645241e-02, 7.37931313e-05, 1.29455657e-05, 2.95207023e-06,\n       7.66169474e-08, 7.21865230e-10, 3.72039809e-12, 2.57715855e-02,\n       2.45151227e-02, 1.90646780e-02, 4.39150135e-03, 1.66664276e-03,\n       8.20539458e-04, 2.83158833e-03, 9.21737745e-03, 1.54975819e-03])}"}, {"dataset_variant": "only_totals", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "regressor": "[GradientBoostingRegressor(criterion = 'mse')]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "[1,2,3]", "scaler": "[MinMaxScaler()]", "regressor__n_estimators": "[100, 150, 200]", "regressor__max_depth": "[5, 10, 15]", "regressor__criterion": "['mse', 'mae']"}], "metrics": "['neg_mean_absolute_error']", "n_split_outer_kcv": 10}, "best_params": "{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}", "mean_test_score": -1.1087817903658999, "cv_results": "{'mean_fit_time': array([0.15550475, 0.24339519, 0.28069799, 0.21749947, 0.33330112,\n       0.41679938, 0.23339601, 0.33890185, 0.44450088, 0.94369802,\n       1.9174438 , 3.13180239, 1.46340017, 2.0825603 , 2.90410213,\n       1.30579805, 3.64265664, 2.71051989, 0.16209874, 0.24337485,\n       0.32229977, 0.26279843, 0.38449972, 0.49229822, 0.27049811,\n       0.38970108, 0.51090126, 1.13579848, 1.78669779, 2.91114321,\n       2.71393695, 2.45620012, 3.64558284, 1.54170067, 2.84556172,\n       4.0976671 , 0.18639755, 0.28250046, 0.36740072, 0.30330386,\n       0.48419662, 0.58549995, 0.2987978 , 0.44239779, 0.53679807,\n       1.33100457, 2.16869893, 4.56250279, 1.75299895, 3.39970157,\n       5.36766295, 1.73240139, 2.62940152, 3.83389866, 0.13339968,\n       0.19119997, 0.25789928, 0.21549935, 0.30560002, 0.41429942,\n       0.22629931, 0.32630055, 0.5090986 , 1.04030201, 1.50358422,\n       1.99884052, 1.37295871, 2.15003448, 3.32690682, 2.5240777 ,\n       2.25013926, 2.80663214, 0.16600082, 0.26270103, 0.31710315,\n       0.26439996, 0.37080147, 0.54670594, 0.27583053, 0.40781233,\n       0.55299637, 1.10499687, 2.28710845, 3.68499875, 1.48524799,\n       2.35560954, 4.0813278 , 2.6179981 , 2.32989774, 4.57647743,\n       0.37974861, 0.39895828, 0.39740791, 0.36100104, 0.46669869,\n       0.57171764, 0.3296412 , 0.46309922, 0.58890033, 1.42149875,\n       2.16094666, 2.82775993, 1.86960249, 4.32318032, 5.36368434,\n       2.10991938, 2.97008595, 4.67503405]), 'std_fit_time': array([0.02110217, 0.02737387, 0.01779754, 0.0086641 , 0.01977184,\n       0.00950466, 0.01795418, 0.01282561, 0.01312363, 0.03823106,\n       0.82251656, 0.81600806, 0.52657811, 0.22088856, 0.15111549,\n       0.08444538, 0.66963016, 0.16505852, 0.01605194, 0.01829199,\n       0.02849548, 0.02069638, 0.027347  , 0.03045042, 0.01598101,\n       0.03420111, 0.03075805, 0.06965333, 0.09292173, 0.88008674,\n       0.76508706, 0.21101467, 0.19690574, 0.13912342, 0.86108093,\n       1.04587785, 0.01619865, 0.03143716, 0.03642573, 0.03375057,\n       0.07224122, 0.0444522 , 0.02377324, 0.03028098, 0.02572951,\n       0.05835836, 0.20397761, 0.56262138, 0.12081663, 0.84274888,\n       1.02491024, 0.12386098, 0.20843298, 0.59091532, 0.03174736,\n       0.01415496, 0.01600213, 0.01916408, 0.01499495, 0.03051648,\n       0.01673271, 0.02566729, 0.09854308, 0.14249435, 0.20466825,\n       0.18177657, 0.24123283, 0.19443057, 0.89151337, 0.63048242,\n       0.39492554, 0.33409581, 0.01998615, 0.03418841, 0.01835612,\n       0.02208836, 0.02137179, 0.080086  , 0.03571023, 0.05377219,\n       0.08158568, 0.03272961, 0.93139927, 1.03592197, 0.13677445,\n       0.14418293, 0.95917398, 0.91858844, 0.2053288 , 1.01268124,\n       0.26595243, 0.10651011, 0.0555083 , 0.05197594, 0.05723682,\n       0.05008241, 0.04123824, 0.05108207, 0.06826905, 0.14587243,\n       0.1763827 , 0.17763417, 0.22837097, 0.92598971, 0.85482447,\n       0.56651953, 0.90742967, 1.2573043 ]), 'mean_score_time': array([0.00599866, 0.00379989, 0.00210185, 0.00420406, 0.00330679,\n       0.00450318, 0.00240035, 0.00279739, 0.00290143, 0.00190008,\n       0.00300102, 0.00279953, 0.00229943, 0.00250077, 0.00369692,\n       0.00250361, 0.00505142, 0.00410001, 0.00229788, 0.00259635,\n       0.00200019, 0.00260184, 0.00289927, 0.00300212, 0.0024039 ,\n       0.00319903, 0.00380249, 0.00280049, 0.00180037, 0.00319872,\n       0.00575895, 0.00360167, 0.00279937, 0.00239975, 0.00539918,\n       0.00410237, 0.00170102, 0.00199852, 0.00260148, 0.00340114,\n       0.00510099, 0.00350139, 0.00310271, 0.00270197, 0.0031002 ,\n       0.00199683, 0.00260034, 0.00409975, 0.00220013, 0.00449858,\n       0.00279944, 0.00299737, 0.00329797, 0.00330226, 0.00190182,\n       0.00170012, 0.00210099, 0.00310161, 0.00310228, 0.0028007 ,\n       0.00210061, 0.00250103, 0.00330107, 0.00240123, 0.00180027,\n       0.00255361, 0.00190017, 0.0027004 , 0.00370827, 0.00440254,\n       0.00359924, 0.00320342, 0.00229964, 0.00310266, 0.00279725,\n       0.00389934, 0.00239964, 0.00589905, 0.00300157, 0.0028007 ,\n       0.00280118, 0.00170131, 0.0030021 , 0.0020005 , 0.00299971,\n       0.00260074, 0.00310128, 0.00250032, 0.0037004 , 0.00570912,\n       0.00249982, 0.0025003 , 0.00300229, 0.00290112, 0.0035013 ,\n       0.00439639, 0.00259929, 0.00300117, 0.00330079, 0.00209963,\n       0.00280256, 0.00229976, 0.00380268, 0.00240195, 0.00531676,\n       0.00230005, 0.00310144, 0.00360162]), 'std_score_time': array([0.00590038, 0.00517372, 0.000706  , 0.00239968, 0.00078456,\n       0.00280198, 0.0012003 , 0.00116626, 0.00053883, 0.00083059,\n       0.00219001, 0.00132731, 0.00100633, 0.00102476, 0.00200377,\n       0.00092333, 0.00316953, 0.00175657, 0.00126717, 0.00127296,\n       0.00063362, 0.00102181, 0.0009387 , 0.0006323 , 0.00091957,\n       0.00193778, 0.00153374, 0.00218114, 0.00087287, 0.00278573,\n       0.00428864, 0.00179785, 0.00074769, 0.00091919, 0.00283762,\n       0.00137766, 0.00064125, 0.00044592, 0.00102154, 0.00210701,\n       0.00731371, 0.00201244, 0.00216723, 0.00045793, 0.00082789,\n       0.00063369, 0.00249851, 0.0045502 , 0.00039948, 0.00250082,\n       0.00116182, 0.00154629, 0.00078084, 0.00045836, 0.00029921,\n       0.00045838, 0.00070016, 0.00266357, 0.00266348, 0.0006001 ,\n       0.00029925, 0.00067022, 0.00064036, 0.00135745, 0.00040012,\n       0.00106935, 0.00030026, 0.00148569, 0.00222249, 0.00350002,\n       0.00184732, 0.00060637, 0.00078083, 0.00230157, 0.00208822,\n       0.00326813, 0.00049142, 0.00720435, 0.00178849, 0.00116314,\n       0.00040067, 0.00064117, 0.00205188, 0.00089356, 0.00154952,\n       0.00049058, 0.00157811, 0.00120175, 0.00228274, 0.0022396 ,\n       0.00156626, 0.00066663, 0.00276401, 0.00137808, 0.00185778,\n       0.00253535, 0.00066259, 0.00077331, 0.00126678, 0.00104368,\n       0.00140087, 0.0011878 , 0.00231861, 0.00092036, 0.00309977,\n       0.00045929, 0.00137515, 0.00210777]), 'param_reduce_dim': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1)],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_reduce_dim__n_components': masked_array(data=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__criterion': masked_array(data=['mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mae',\n                   'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mse', 'mse', 'mse', 'mse', 'mse', 'mse',\n                   'mse', 'mse', 'mse', 'mae', 'mae', 'mae', 'mae', 'mae',\n                   'mae', 'mae', 'mae', 'mae'],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__max_depth': masked_array(data=[5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10,\n                   15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5,\n                   10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__n_estimators': masked_array(data=[100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200, 100, 150,\n                   200, 100, 150, 200, 100, 150, 200, 100, 150, 200, 100,\n                   150, 200, 100, 150, 200, 100, 150, 200, 100, 150, 200,\n                   100, 150, 200, 100, 150, 200, 100, 150, 200],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_scaler': masked_array(data=[MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler()],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mse', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 150, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__criterion': 'mae', 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}], 'split0_test_score': array([-1.42240498, -1.43409041, -1.41206106, -1.2854053 , -1.296354  ,\n       -1.27950382, -1.71760471, -1.7426893 , -1.71287881, -1.37244544,\n       -1.33978018, -1.49797314, -1.30968504, -1.26934928, -1.34269301,\n       -1.46559992, -1.4442526 , -1.45945991, -1.27650202, -1.29246938,\n       -1.34204152, -1.27519478, -1.31567342, -1.26990317, -1.5593812 ,\n       -1.55782067, -1.55393713, -1.29093367, -1.35275654, -1.36277989,\n       -1.42896196, -1.46743249, -1.37632025, -1.60271673, -1.60299493,\n       -1.5205566 , -1.25540671, -1.29584269, -1.28896569, -1.26680065,\n       -1.31314972, -1.2902989 , -1.49008437, -1.49632139, -1.52104269,\n       -1.19795985, -1.31113907, -1.34701688, -1.43757725, -1.40779312,\n       -1.31711072, -1.46436174, -1.5222035 , -1.55763546, -1.17747377,\n       -1.18165299, -1.17299715, -1.17727644, -1.26452318, -1.26931399,\n       -1.57198628, -1.55723338, -1.56077388, -1.06835669, -1.05812515,\n       -1.09654582, -1.0192676 , -1.09840269, -1.12103177, -1.05826878,\n       -1.10505652, -1.07198432, -1.18621281, -1.21624861, -1.18360743,\n       -1.00238322, -1.01314971, -1.00620201, -1.18337205, -1.16724359,\n       -1.21420313, -1.33269171, -1.35278272, -1.3350008 , -1.27873942,\n       -1.30894467, -1.16219709, -1.1782409 , -1.19243145, -1.18069101,\n       -1.27774168, -1.27946657, -1.28602882, -1.37665321, -1.34065994,\n       -1.38866087, -1.31995028, -1.3108751 , -1.28502864, -1.3001464 ,\n       -1.41592837, -1.44879647, -1.17861265, -1.35612154, -1.27988105,\n       -1.25844126, -1.2789503 , -1.35338801]), 'split1_test_score': array([-1.2534581 , -1.30310866, -1.26286935, -1.28433699, -1.30393397,\n       -1.29358485, -1.33463511, -1.38646536, -1.35928846, -1.09841973,\n       -1.24265492, -1.3230343 , -1.29973887, -1.27699426, -1.35167886,\n       -1.2108283 , -1.27009429, -1.27530341, -1.19442406, -1.18804389,\n       -1.17900598, -1.24072198, -1.31521934, -1.26945461, -1.22705277,\n       -1.20172735, -1.18597269, -1.0898159 , -1.03781275, -1.12781241,\n       -1.01386442, -0.90751598, -0.89280907, -1.00048987, -0.87613986,\n       -0.86241777, -1.18280807, -1.19891563, -1.19790746, -1.16778814,\n       -1.15984252, -1.16380336, -1.18003264, -1.17645236, -1.12035691,\n       -1.18840425, -1.2337103 , -1.18279579, -1.01854477, -0.93822343,\n       -1.0233035 , -0.97539735, -0.93158767, -0.93944925, -1.09654236,\n       -1.07706909, -1.08632343, -0.93087907, -0.93855747, -0.93214931,\n       -1.05451687, -1.04753189, -1.04840999, -1.21468317, -1.27868693,\n       -1.27624314, -1.3323626 , -1.15517415, -1.32619283, -1.26670261,\n       -1.31875787, -1.28276509, -1.13617852, -1.1226428 , -1.09381325,\n       -1.04771008, -1.06488387, -1.03189675, -1.20171921, -1.21048998,\n       -1.2243433 , -1.24176724, -1.07457838, -1.16181928, -1.38568009,\n       -1.23491458, -1.30753153, -1.39798083, -1.35962567, -1.44750049,\n       -1.27445357, -1.27203276, -1.25481518, -1.09012097, -1.11807864,\n       -1.11447634, -1.01212115, -1.01913692, -1.03833277, -1.14272597,\n       -1.17195145, -1.13161788, -1.18168859, -1.2384119 , -1.3268006 ,\n       -1.1945727 , -1.2285659 , -1.20620725]), 'split2_test_score': array([-1.21673311, -1.2094489 , -1.21024108, -1.27778475, -1.27288141,\n       -1.31407854, -1.50014489, -1.53336975, -1.5091303 , -1.23630323,\n       -1.34949088, -1.12791947, -1.18200074, -1.22755603, -1.2357543 ,\n       -1.22213668, -1.18215783, -1.25148563, -1.0998997 , -1.08261736,\n       -1.11691085, -1.27185987, -1.29856576, -1.2993979 , -1.15047297,\n       -1.17025814, -1.19057104, -0.9766085 , -1.09699083, -1.08565349,\n       -1.19764466, -1.02817237, -1.15300027, -1.03994993, -1.01865013,\n       -1.08650492, -1.06532585, -1.1193933 , -1.03273848, -1.22326654,\n       -1.1971257 , -1.19970863, -1.00710062, -0.99740409, -1.03110024,\n       -1.00461243, -1.01631943, -0.95490129, -1.09147461, -1.07094853,\n       -1.18581614, -1.14168455, -1.02888379, -1.0736869 , -1.01971481,\n       -1.00931338, -0.98894585, -1.09449949, -1.07855154, -1.08266865,\n       -1.15998766, -1.15534092, -1.14718178, -1.1028596 , -1.08710851,\n       -1.1830076 , -1.21421982, -1.22759104, -1.23297564, -1.26515267,\n       -1.24312208, -1.23782698, -1.08567224, -1.08536042, -1.11356737,\n       -1.18041729, -1.17887997, -1.14502285, -1.15360469, -1.12987979,\n       -1.11418738, -1.04058824, -1.01102895, -1.00893461, -1.25300458,\n       -1.17805573, -1.20098309, -1.14221327, -1.1616972 , -1.16541601,\n       -1.12259173, -1.07745497, -1.11208662, -1.08188598, -1.08264019,\n       -1.03715631, -1.09360641, -1.08785652, -1.08171671, -1.02800299,\n       -1.07310546, -1.01739545, -1.12819079, -1.16244594, -1.13897586,\n       -1.13470491, -1.14135084, -1.13005277]), 'split3_test_score': array([-1.56477106, -1.55710626, -1.55582163, -1.92892253, -1.87354459,\n       -1.83109158, -1.93504173, -1.88861431, -1.96293258, -1.86075309,\n       -1.68085286, -1.67366804, -1.58236598, -1.53476815, -1.51643047,\n       -1.5127165 , -1.52494117, -1.56047248, -1.4792681 , -1.41461915,\n       -1.45051315, -1.66564551, -1.66396399, -1.67136575, -1.78020285,\n       -1.7768397 , -1.76795025, -1.43098856, -1.50775507, -1.40356226,\n       -1.58962191, -1.60470202, -1.68612041, -1.55446361, -1.67959719,\n       -1.69472989, -1.51087532, -1.46122406, -1.4844098 , -1.67039307,\n       -1.68479203, -1.77410367, -1.81810625, -1.8086545 , -1.8582195 ,\n       -1.50815373, -1.54349493, -1.52150072, -1.7347514 , -1.6444795 ,\n       -1.68082177, -1.76935516, -1.80880613, -1.8021039 , -1.21961118,\n       -1.2595786 , -1.26863423, -1.53207147, -1.54859687, -1.57866351,\n       -1.74315479, -1.74841558, -1.76709926, -1.7102398 , -1.67682468,\n       -1.66650863, -1.74981422, -1.70216956, -1.68877763, -1.68054336,\n       -1.66366092, -1.70463199, -1.43562635, -1.42783028, -1.44121323,\n       -1.55016817, -1.62441355, -1.60966326, -1.54221455, -1.56551842,\n       -1.52821105, -1.48438861, -1.4639177 , -1.52367768, -1.46624826,\n       -1.55974526, -1.62895106, -1.81655563, -1.72066973, -1.69574647,\n       -1.50992809, -1.55861963, -1.57413508, -1.89731969, -1.93139278,\n       -1.93974872, -1.99538461, -1.96479613, -1.95718593, -1.68477717,\n       -1.7246202 , -1.64376546, -1.70615429, -1.90396197, -1.87976786,\n       -1.8887568 , -1.89125848, -1.81953654]), 'split4_test_score': array([-1.08393207, -1.07294586, -1.07954955, -1.31769632, -1.24555269,\n       -1.25690922, -1.2998506 , -1.30162129, -1.31687005, -1.15071487,\n       -1.22913008, -1.06185974, -1.08905924, -1.18880588, -1.16472316,\n       -1.31430921, -1.31192257, -1.32922657, -1.13746319, -1.13584412,\n       -1.11526346, -1.16964079, -1.11999826, -1.14398429, -1.33014728,\n       -1.32328939, -1.36399285, -1.19083226, -1.05503082, -1.12736041,\n       -1.39200373, -1.33537964, -1.27770964, -1.32368616, -1.37710918,\n       -1.34180002, -1.14668222, -1.14969063, -1.14835055, -1.04304211,\n       -1.09050187, -1.08994417, -1.23220828, -1.26343383, -1.25802368,\n       -1.07758585, -1.21474286, -1.14473994, -1.32471491, -1.40670039,\n       -1.39807121, -1.35498971, -1.37256622, -1.3909216 , -0.88567807,\n       -0.87334202, -0.85726876, -1.08118476, -1.06947335, -1.10545147,\n       -1.35243851, -1.28788458, -1.31966147, -0.9494906 , -0.93299415,\n       -1.03275847, -1.2308793 , -1.26131303, -1.08401839, -1.10660181,\n       -1.13296386, -1.09838308, -0.89922488, -0.86185905, -0.8380268 ,\n       -0.85237046, -0.87518692, -0.87838215, -1.08087767, -1.13135827,\n       -1.12092821, -0.92990848, -0.95061578, -0.94638033, -1.24908038,\n       -1.1059005 , -1.12222557, -1.2463903 , -1.23136823, -1.29841746,\n       -0.99327405, -0.97172062, -0.97673289, -1.11805512, -1.08837445,\n       -1.12261739, -1.19321255, -1.18212398, -1.1868098 , -0.95444887,\n       -0.9778299 , -0.97303816, -1.27864653, -1.34977906, -1.31416976,\n       -1.31702974, -1.40208844, -1.31977692]), 'split5_test_score': array([-1.27991831, -1.31382519, -1.31452496, -1.41161621, -1.48736577,\n       -1.47995775, -1.66641455, -1.70840347, -1.67552154, -1.39321306,\n       -1.30502589, -1.33990413, -1.44337065, -1.38962213, -1.45548946,\n       -1.33780526, -1.37963856, -1.41317282, -1.11823127, -1.18221276,\n       -1.11344934, -1.45663898, -1.49054673, -1.47784164, -1.66928127,\n       -1.67993847, -1.70564031, -1.1128174 , -1.21573704, -1.16781798,\n       -1.41531421, -1.40499808, -1.35023232, -1.47190109, -1.5239078 ,\n       -1.49767118, -1.20670454, -1.20775277, -1.21717951, -1.51681375,\n       -1.49573279, -1.455541  , -1.59077751, -1.59120463, -1.59533393,\n       -1.27034738, -1.31539753, -1.2429244 , -1.41210679, -1.32215834,\n       -1.35115248, -1.43993164, -1.39276368, -1.3588095 , -1.00979307,\n       -0.98046621, -0.96905996, -1.11462977, -1.10797168, -1.06491486,\n       -1.11344633, -1.16622115, -1.12717062, -1.02047795, -1.13683202,\n       -1.08185797, -1.015564  , -0.99984338, -1.03956956, -1.04828486,\n       -1.11388495, -1.10912705, -1.08968764, -1.08879181, -1.08573124,\n       -1.51962134, -1.51373899, -1.49076824, -1.52791544, -1.51107431,\n       -1.4863024 , -1.09176821, -1.15528373, -1.00181977, -1.22033899,\n       -1.33544191, -1.24207702, -1.36892458, -1.47216861, -1.38829022,\n       -1.00707953, -0.96874121, -0.99064849, -1.32454436, -1.29616403,\n       -1.31424255, -1.51617963, -1.52136701, -1.52547899, -1.09276709,\n       -1.13306697, -1.13159905, -1.07319351, -1.07261497, -1.11951552,\n       -1.22230997, -1.18828197, -1.19273733]), 'split6_test_score': array([-0.95690073, -0.95035332, -0.96708536, -1.13955377, -1.12130633,\n       -1.14754606, -1.45414973, -1.45078096, -1.46705564, -1.08676889,\n       -1.08733795, -1.15365696, -1.19090755, -1.12560918, -1.2692045 ,\n       -1.28234906, -1.34775972, -1.20758033, -0.99812861, -0.93824995,\n       -0.95210776, -1.09867097, -1.09179158, -1.09638697, -1.1878427 ,\n       -1.20792358, -1.20696078, -1.08455967, -1.06138715, -1.05304337,\n       -1.08908722, -1.18520299, -1.1999317 , -1.23291686, -1.25085416,\n       -1.34441135, -1.00321839, -0.97266815, -0.98535073, -1.14587635,\n       -1.19767872, -1.188289  , -1.18407673, -1.21176656, -1.18833708,\n       -1.10876997, -1.17135395, -1.12577756, -1.26737974, -1.19938919,\n       -1.19756447, -1.33506929, -1.26996189, -1.34616788, -0.91853687,\n       -0.90436041, -0.87169674, -0.97816944, -0.95624679, -0.93609846,\n       -0.9380489 , -0.95026287, -0.9229332 , -1.07167051, -1.13015098,\n       -1.16557293, -0.95393033, -1.05062012, -1.03325592, -1.04294439,\n       -0.96722964, -0.96943425, -0.90854787, -0.92395759, -0.92229055,\n       -1.21916553, -1.1941857 , -1.23705163, -1.34900808, -1.36046338,\n       -1.35023232, -1.0343186 , -1.06969904, -1.06971482, -1.15258012,\n       -1.19463655, -1.13865791, -1.02207817, -1.16761358, -1.10600103,\n       -1.0207783 , -1.03635211, -1.02032762, -1.18803781, -1.20732499,\n       -1.20168003, -1.2642956 , -1.28093312, -1.29093794, -1.16563251,\n       -1.18082099, -1.15442024, -1.14579179, -1.08807878, -1.17069219,\n       -1.19254287, -1.16960411, -1.21642875]), 'split7_test_score': array([-1.71438343, -1.70842594, -1.70404525, -1.88301478, -1.86570969,\n       -1.86823172, -1.96468923, -1.97480785, -1.97803436, -1.79024938,\n       -1.84150672, -1.76033612, -1.9061014 , -1.81994895, -1.8613844 ,\n       -1.80555828, -1.92006687, -1.86040163, -1.64575455, -1.6946125 ,\n       -1.68525091, -1.54705096, -1.59524074, -1.56023492, -1.79075179,\n       -1.79114955, -1.80675575, -1.55312482, -1.51871587, -1.55203756,\n       -1.583516  , -1.5801469 , -1.65410588, -1.68446226, -1.70181008,\n       -1.72063203, -1.53230819, -1.52558731, -1.48720629, -1.25943876,\n       -1.2474914 , -1.21467182, -1.50863408, -1.52083615, -1.53553812,\n       -1.46124027, -1.54316488, -1.45092175, -1.60078418, -1.54975484,\n       -1.47406258, -1.69769048, -1.69966636, -1.70164   , -1.59667258,\n       -1.58340666, -1.60973155, -1.65991821, -1.65078579, -1.64694423,\n       -1.6487864 , -1.64844951, -1.62798122, -1.53875806, -1.68386714,\n       -1.6796286 , -1.7555326 , -1.78963617, -1.77134301, -1.74780761,\n       -1.82946237, -1.84120398, -1.67250697, -1.62877823, -1.64715913,\n       -1.80406224, -1.8789526 , -1.81802911, -1.95429694, -1.96559768,\n       -1.99452063, -1.72660861, -1.70892779, -1.71795638, -1.70490224,\n       -1.64058151, -1.66955805, -1.5427392 , -1.58759453, -1.60119516,\n       -1.63333949, -1.67068414, -1.69149332, -1.92438653, -1.8773403 ,\n       -1.93615592, -2.02496165, -2.03316918, -2.03333995, -1.6921726 ,\n       -1.60226956, -1.6566096 , -1.7003758 , -1.65222705, -1.82117408,\n       -1.68977352, -1.70895915, -1.64555389]), 'split8_test_score': array([-1.48825023, -1.47720111, -1.46703906, -1.508284  , -1.51837347,\n       -1.52820314, -1.64212132, -1.69591023, -1.69903238, -1.57921055,\n       -1.5224151 , -1.45265628, -1.47565288, -1.40658247, -1.63539106,\n       -1.48228864, -1.4812189 , -1.48858272, -1.32457745, -1.36729054,\n       -1.35184562, -1.43669379, -1.45488188, -1.46316244, -1.3765284 ,\n       -1.37280697, -1.39884953, -1.45427692, -1.42237947, -1.3758315 ,\n       -1.42820046, -1.43932769, -1.37556096, -1.36316292, -1.36428529,\n       -1.36552956, -1.25187759, -1.26135807, -1.29681646, -1.4033637 ,\n       -1.38748969, -1.39168659, -1.55365701, -1.61119651, -1.5643611 ,\n       -1.43734608, -1.364448  , -1.38052615, -1.32858687, -1.37477362,\n       -1.43736699, -1.40164373, -1.3288988 , -1.34708318, -1.2260955 ,\n       -1.23079009, -1.26620841, -1.4439116 , -1.46516722, -1.46673025,\n       -1.54714448, -1.56121648, -1.51996931, -1.38360715, -1.35695213,\n       -1.35754113, -1.44838195, -1.3765997 , -1.33889162, -1.40672655,\n       -1.39176398, -1.4042988 , -1.20100145, -1.20668007, -1.19328109,\n       -1.21677268, -1.21278891, -1.22956709, -1.2657392 , -1.26204463,\n       -1.23301241, -1.41009068, -1.31930992, -1.36584531, -1.35580734,\n       -1.33176607, -1.31052167, -1.48747563, -1.45940367, -1.38545597,\n       -1.30319825, -1.310148  , -1.30272303, -1.1528019 , -1.17944301,\n       -1.1706111 , -1.27705204, -1.24567135, -1.2650613 , -1.36623987,\n       -1.24311646, -1.32611861, -1.23095091, -1.27085205, -1.23731464,\n       -1.3424542 , -1.2193319 , -1.2637188 ]), 'split9_test_score': array([-1.17738509, -1.20657613, -1.21720589, -1.35375   , -1.3565235 ,\n       -1.3566599 , -1.43348477, -1.42358305, -1.45468764, -1.29532402,\n       -1.31530125, -1.23932758, -1.53117161, -1.42440879, -1.35995347,\n       -1.58905393, -1.5062795 , -1.56535696, -1.11958751, -1.12695118,\n       -1.1102583 , -1.38935187, -1.41137318, -1.38149277, -1.36120029,\n       -1.36497713, -1.34253101, -1.10764191, -1.11958342, -1.16323529,\n       -1.31452715, -1.24402251, -1.28463477, -1.31028781, -1.40160914,\n       -1.50245971, -1.23892005, -1.2630905 , -1.23708599, -1.46361451,\n       -1.46291529, -1.5375316 , -1.55975559, -1.55344872, -1.54261405,\n       -1.00726974, -1.00655786, -1.13747084, -1.25385211, -1.33887844,\n       -1.26990912, -1.36276948, -1.3236041 , -1.27049374, -0.99791534,\n       -1.01652474, -0.99695183, -1.09995643, -1.09408062, -1.08771409,\n       -1.16901087, -1.2133526 , -1.16230015, -0.97443992, -1.09060578,\n       -1.05464469, -1.151878  , -1.12430075, -1.17989942, -1.11547348,\n       -1.11552899, -1.13329518, -1.08484987, -1.05620288, -1.06952087,\n       -1.0691181 , -1.09049336, -1.08829932, -1.13502743, -1.09215162,\n       -1.09544073, -0.91704008, -0.92306179, -0.8836003 , -1.06777271,\n       -1.05086502, -1.09172445, -1.10419858, -1.1617986 , -1.13395842,\n       -1.04935625, -1.05395199, -1.06104189, -1.14364121, -1.16819055,\n       -1.15121478, -1.18919567, -1.16290372, -1.16213597, -0.9066685 ,\n       -0.95138983, -1.02190058, -0.93260389, -0.85064934, -0.98890948,\n       -0.89730009, -0.88076546, -0.86826036]), 'mean_test_score': array([-1.31581371, -1.32330818, -1.31904432, -1.43903646, -1.43415454,\n       -1.43557666, -1.59481366, -1.61062456, -1.61354318, -1.38634023,\n       -1.39134958, -1.36303358, -1.4010054 , -1.36636451, -1.41927027,\n       -1.42226458, -1.4368332 , -1.44110425, -1.23938365, -1.24229108,\n       -1.24166469, -1.35514695, -1.37572549, -1.36332245, -1.44328615,\n       -1.4446731 , -1.45231613, -1.22915996, -1.2388149 , -1.24191341,\n       -1.34527417, -1.31969007, -1.32504253, -1.35840372, -1.37969578,\n       -1.3936713 , -1.23941269, -1.24555231, -1.23760109, -1.31603976,\n       -1.32367197, -1.33055787, -1.41244331, -1.42307187, -1.42149273,\n       -1.22616895, -1.27203288, -1.24885753, -1.34697726, -1.32530994,\n       -1.3335179 , -1.39428931, -1.36789421, -1.37879914, -1.11480336,\n       -1.11165042, -1.10878179, -1.21124967, -1.21739545, -1.21706488,\n       -1.32985211, -1.3335909 , -1.32034809, -1.20345834, -1.24321475,\n       -1.2594309 , -1.28718304, -1.27856506, -1.28159558, -1.27385061,\n       -1.28814312, -1.28529507, -1.16995086, -1.16183517, -1.1588211 ,\n       -1.24617891, -1.26466736, -1.25348824, -1.33937753, -1.33958217,\n       -1.33613816, -1.22091705, -1.20292058, -1.20147493, -1.31341541,\n       -1.29408518, -1.28744274, -1.33067971, -1.35143713, -1.34026722,\n       -1.21917409, -1.2199172 , -1.22700329, -1.32974468, -1.32896089,\n       -1.3376564 , -1.38859596, -1.3808833 , -1.3826028 , -1.2333582 ,\n       -1.24740992, -1.25052615, -1.25562087, -1.29451426, -1.3277201 ,\n       -1.31378861, -1.31091565, -1.30156606]), 'std_test_score': array([0.21878698, 0.21628635, 0.21010994, 0.25057451, 0.24303382,\n       0.23120673, 0.22010839, 0.21363904, 0.22049948, 0.26164957,\n       0.21497134, 0.22087213, 0.22810805, 0.19125458, 0.19694371,\n       0.17649808, 0.1917277 , 0.18421842, 0.18719389, 0.20038899,\n       0.20386729, 0.16672481, 0.17641557, 0.17264602, 0.22815345,\n       0.22697125, 0.22849799, 0.18277339, 0.18381346, 0.15898458,\n       0.18320445, 0.2171213 , 0.21918626, 0.21590029, 0.25799325,\n       0.24875309, 0.16089064, 0.15205116, 0.15649906, 0.1830238 ,\n       0.17392092, 0.19925934, 0.23584781, 0.23588205, 0.24558544,\n       0.17787833, 0.17604202, 0.16472459, 0.20401675, 0.19967599,\n       0.17218679, 0.22024957, 0.25441938, 0.24816621, 0.1961072 ,\n       0.20030434, 0.21720301, 0.23339216, 0.23987942, 0.24721099,\n       0.26641468, 0.26041255, 0.26759122, 0.24454129, 0.24467139,\n       0.22764401, 0.27291379, 0.25578647, 0.24671729, 0.24729448,\n       0.25855172, 0.27122766, 0.22089061, 0.21545544, 0.22326385,\n       0.27741574, 0.29479231, 0.28155305, 0.2543051 , 0.25956113,\n       0.26165269, 0.25197228, 0.23988705, 0.26026895, 0.1695587 ,\n       0.17759774, 0.19404518, 0.22891313, 0.19075046, 0.19118812,\n       0.21051342, 0.23206485, 0.23413782, 0.30457475, 0.29847641,\n       0.31486062, 0.3359648 , 0.33512471, 0.33192653, 0.26375407,\n       0.24412243, 0.24201335, 0.24067466, 0.28570177, 0.27880525,\n       0.26807901, 0.27722358, 0.25227497]), 'rank_test_score': array([ 51,  56,  53, 101,  98,  99, 106, 107, 108,  87,  89,  78,  92,\n        80,  94,  96, 100, 102,  22,  26,  24,  76,  82,  79, 103, 104,\n       105,  18,  21,  25,  73,  54,  58,  77,  84,  90,  23,  28,  20,\n        52,  57,  64,  93,  97,  95,  16,  37,  31,  74,  59,  66,  91,\n        81,  83,   3,   2,   1,  10,  12,  11,  63,  67,  55,   9,  27,\n        35,  42,  39,  40,  38,  44,  41,   6,   5,   4,  29,  36,  33,\n        70,  71,  68,  15,   8,   7,  49,  45,  43,  65,  75,  72,  13,\n        14,  17,  62,  61,  69,  88,  85,  86,  19,  30,  32,  34,  46,\n        60,  50,  48,  47]), 'split0_train_score': array([-0.35544536, -0.20361842, -0.13751781, -0.00398882, -0.00336219,\n       -0.00328745, -0.00331313, -0.00326821, -0.00326798, -0.5153087 ,\n       -0.354341  , -0.24587958, -0.00943028, -0.01516578, -0.00450244,\n       -0.00367921, -0.00326909, -0.00733176, -0.26140349, -0.15069729,\n       -0.09994167, -0.00337589, -0.00327238, -0.0032686 , -0.00331313,\n       -0.00326821, -0.00326798, -0.38889169, -0.30773547, -0.22273222,\n       -0.01144251, -0.00501696, -0.00428398, -0.00821219, -0.00762645,\n       -0.00326809, -0.26737145, -0.16088168, -0.1000615 , -0.00350354,\n       -0.00327789, -0.00326864, -0.00331313, -0.00326821, -0.00326798,\n       -0.39716075, -0.29685696, -0.18834452, -0.00746748, -0.00821511,\n       -0.00402755, -0.00438968, -0.00327426, -0.00326925, -0.30319721,\n       -0.1803941 , -0.1136431 , -0.00390374, -0.00337231, -0.00329955,\n       -0.00331313, -0.00326821, -0.00326798, -0.48286647, -0.36895403,\n       -0.29908054, -0.02122453, -0.0124211 , -0.00405333, -0.00367119,\n       -0.00326852, -0.00326798, -0.24390929, -0.15848883, -0.08922705,\n       -0.00372681, -0.00330493, -0.00327372, -0.00331318, -0.00326821,\n       -0.00326798, -0.47026003, -0.29904682, -0.27283792, -0.0122897 ,\n       -0.00534716, -0.00364511, -0.00339505, -0.00327079, -0.003268  ,\n       -0.26396682, -0.16739745, -0.10053444, -0.00337088, -0.00327227,\n       -0.00326848, -0.00331313, -0.00326821, -0.00326798, -0.39368293,\n       -0.31666807, -0.2577671 , -0.01111169, -0.00470638, -0.00396836,\n       -0.00435872, -0.00328621, -0.00326798]), 'split1_train_score': array([-0.359863  , -0.21771298, -0.12670649, -0.00442493, -0.00354602,\n       -0.00329161, -0.00330313, -0.00325757, -0.00325733, -0.47816744,\n       -0.34631953, -0.25519388, -0.01583287, -0.006035  , -0.00380722,\n       -0.00427994, -0.0033208 , -0.00325733, -0.27424032, -0.16317826,\n       -0.10264747, -0.00370973, -0.00328126, -0.0032618 , -0.00330262,\n       -0.00325756, -0.00325733, -0.41443246, -0.30347022, -0.26270209,\n       -0.0069681 , -0.00535746, -0.00345582, -0.00345409, -0.00325842,\n       -0.00325741, -0.253454  , -0.1453051 , -0.09344017, -0.00341535,\n       -0.00329112, -0.00325905, -0.00330262, -0.00325756, -0.00325733,\n       -0.36931571, -0.2937739 , -0.26722179, -0.01749875, -0.00488697,\n       -0.00380291, -0.00332427, -0.00325762, -0.00325735, -0.28583479,\n       -0.16064204, -0.09539825, -0.00389489, -0.00332863, -0.0032721 ,\n       -0.00330262, -0.00325756, -0.00325733, -0.42534508, -0.30188023,\n       -0.2840782 , -0.01510026, -0.00502196, -0.00363435, -0.00379331,\n       -0.00329955, -0.00325755, -0.25202848, -0.14396058, -0.08247429,\n       -0.00338154, -0.00326218, -0.0032576 , -0.00330309, -0.00325756,\n       -0.00325733, -0.35347841, -0.29298506, -0.21649292, -0.00551483,\n       -0.00629749, -0.00350032, -0.00332119, -0.00331165, -0.00652102,\n       -0.24725382, -0.13520667, -0.0830576 , -0.00331683, -0.003258  ,\n       -0.00325743, -0.00330309, -0.00325756, -0.00325733, -0.37068476,\n       -0.30949141, -0.28981148, -0.01062471, -0.00654174, -0.00369386,\n       -0.00331856, -0.00326355, -0.00325742]), 'split2_train_score': array([-0.38291115, -0.21949497, -0.13452375, -0.0038373 , -0.00337782,\n       -0.00328058, -0.00330269, -0.00325756, -0.00325733, -0.4409735 ,\n       -0.35854979, -0.2622655 , -0.00711069, -0.00347672, -0.00390491,\n       -0.00331059, -0.00325771, -0.00325733, -0.25578663, -0.13865806,\n       -0.08866342, -0.00335938, -0.00328853, -0.00326288, -0.00330269,\n       -0.00325756, -0.00325733, -0.36154142, -0.29471472, -0.22781657,\n       -0.00777717, -0.00391676, -0.00334211, -0.00855553, -0.00326158,\n       -0.00325736, -0.21955092, -0.14974144, -0.08000011, -0.00344946,\n       -0.00328846, -0.00326043, -0.00330317, -0.00325757, -0.00325733,\n       -0.38480689, -0.28026093, -0.22869298, -0.00455133, -0.00458271,\n       -0.00370864, -0.00654958, -0.00325815, -0.0032575 , -0.27879273,\n       -0.1674287 , -0.09873713, -0.00358354, -0.003292  , -0.00326392,\n       -0.00330269, -0.00325756, -0.00325733, -0.41661616, -0.40455269,\n       -0.27905718, -0.01043708, -0.00379165, -0.00365542, -0.0036752 ,\n       -0.00326009, -0.00325759, -0.25585172, -0.15132678, -0.08879791,\n       -0.00336426, -0.00325961, -0.00325763, -0.00330269, -0.00325756,\n       -0.00325733, -0.35967797, -0.33847961, -0.25964094, -0.00570403,\n       -0.0050536 , -0.00337599, -0.00330509, -0.0033237 , -0.00325733,\n       -0.25517078, -0.15192864, -0.07987338, -0.00332711, -0.00325923,\n       -0.00325755, -0.00330269, -0.00325756, -0.00325733, -0.38152752,\n       -0.28491437, -0.23842681, -0.00566508, -0.00780125, -0.00386633,\n       -0.00333313, -0.0051627 , -0.00325733]), 'split3_train_score': array([-0.34513754, -0.20314684, -0.11426475, -0.00389094, -0.00328821,\n       -0.00326511, -0.0033026 , -0.00325756, -0.00325733, -0.50531166,\n       -0.35208104, -0.28315173, -0.01309602, -0.00539062, -0.00381395,\n       -0.00338849, -0.00325782, -0.00325743, -0.25431862, -0.14811398,\n       -0.09420741, -0.00331852, -0.00325916, -0.00325736, -0.00330261,\n       -0.00325756, -0.00325733, -0.3686742 , -0.32064937, -0.24210222,\n       -0.00619305, -0.0040478 , -0.00368411, -0.00336363, -0.00325781,\n       -0.00325742, -0.22074155, -0.13086243, -0.0776369 , -0.00331133,\n       -0.00325764, -0.00325736, -0.0033026 , -0.00325756, -0.00325733,\n       -0.42112834, -0.31151739, -0.23283964, -0.00807502, -0.0081585 ,\n       -0.00413872, -0.00333746, -0.00325831, -0.01112314, -0.29340017,\n       -0.16314801, -0.09300413, -0.00347766, -0.00329265, -0.00326265,\n       -0.0033026 , -0.00325756, -0.00325733, -0.38056482, -0.3322892 ,\n       -0.28589046, -0.02998995, -0.02019741, -0.00587759, -0.00331668,\n       -0.00325778, -0.0032575 , -0.25539835, -0.14102858, -0.07642396,\n       -0.00337242, -0.00325823, -0.00325755, -0.00330335, -0.00325757,\n       -0.00325733, -0.35162667, -0.24594925, -0.20978858, -0.00442023,\n       -0.00388757, -0.00330875, -0.00335979, -0.00327487, -0.00351121,\n       -0.23742138, -0.13939501, -0.07717345, -0.00333147, -0.00326116,\n       -0.0032578 , -0.0033029 , -0.00325756, -0.00325733, -0.35426383,\n       -0.28389457, -0.24536495, -0.00768726, -0.00367879, -0.00434877,\n       -0.00337027, -0.00726999, -0.00325833]), 'split4_train_score': array([-0.3287946 , -0.20305416, -0.12480229, -0.00339591, -0.00333539,\n       -0.0032734 , -0.00330286, -0.00325756, -0.00325733, -0.48762442,\n       -0.34755447, -0.25913629, -0.00690853, -0.00412936, -0.0036566 ,\n       -0.00332155, -0.00325783, -0.00325734, -0.27479712, -0.16774813,\n       -0.10238682, -0.00337372, -0.00325903, -0.00325874, -0.00330275,\n       -0.00325756, -0.00325733, -0.45701724, -0.31400379, -0.22437397,\n       -0.00874176, -0.00402233, -0.00400701, -0.00330998, -0.00325772,\n       -0.00325733, -0.24876967, -0.14972438, -0.0903313 , -0.00340165,\n       -0.00326404, -0.00325835, -0.00330275, -0.00325756, -0.00325733,\n       -0.42619117, -0.32034235, -0.22795014, -0.00550276, -0.00389811,\n       -0.00354415, -0.00348239, -0.00325764, -0.00325733, -0.30361948,\n       -0.1788377 , -0.10685817, -0.00379434, -0.00330613, -0.00326811,\n       -0.00330275, -0.00325756, -0.00325733, -0.45903578, -0.3750424 ,\n       -0.25437915, -0.01355239, -0.00614257, -0.00400749, -0.00615246,\n       -0.00777579, -0.00325734, -0.26178728, -0.15693302, -0.09395839,\n       -0.00345003, -0.00327872, -0.0032592 , -0.00330275, -0.00325756,\n       -0.00325733, -0.36420944, -0.2642311 , -0.26306845, -0.00678559,\n       -0.0037269 , -0.0037255 , -0.0033275 , -0.00510864, -0.00325736,\n       -0.26294395, -0.15511965, -0.09324518, -0.00338935, -0.00325846,\n       -0.00325785, -0.00330279, -0.00325756, -0.00325733, -0.40293229,\n       -0.34408361, -0.21920542, -0.02921611, -0.00522169, -0.00362429,\n       -0.00390288, -0.00331139, -0.00325733]), 'split5_train_score': array([-0.3631545 , -0.21291075, -0.13041898, -0.00391133, -0.00328519,\n       -0.00326116, -0.00330361, -0.00325757, -0.00325733, -0.45214449,\n       -0.34777356, -0.30280808, -0.00860077, -0.00769105, -0.00405567,\n       -0.00333139, -0.00325849, -0.00325733, -0.255296  , -0.14245925,\n       -0.09336222, -0.00339065, -0.00327198, -0.0032579 , -0.00330275,\n       -0.00325756, -0.00325733, -0.37710551, -0.28947192, -0.21036924,\n       -0.00475263, -0.00367403, -0.00374163, -0.00331583, -0.00325788,\n       -0.0035631 , -0.22579014, -0.13422339, -0.08141264, -0.00335742,\n       -0.00326128, -0.00325801, -0.00330275, -0.00325756, -0.00325733,\n       -0.3554324 , -0.26351082, -0.27034596, -0.00703652, -0.00397377,\n       -0.00371457, -0.00331844, -0.00451222, -0.00325886, -0.30945782,\n       -0.17446798, -0.10451631, -0.00399797, -0.00333974, -0.00328059,\n       -0.00330275, -0.00325756, -0.00325733, -0.46289315, -0.372458  ,\n       -0.298075  , -0.01791958, -0.00593821, -0.0034805 , -0.00333003,\n       -0.00325767, -0.00325733, -0.26236426, -0.15604739, -0.08880643,\n       -0.00332396, -0.00325799, -0.00325737, -0.00330275, -0.00325756,\n       -0.00325733, -0.40662594, -0.3308141 , -0.27098518, -0.00954257,\n       -0.00455172, -0.0040231 , -0.00721504, -0.0041601 , -0.00796318,\n       -0.25799131, -0.13765767, -0.07567931, -0.0033309 , -0.00325776,\n       -0.0032574 , -0.00330275, -0.00325756, -0.00325733, -0.40624742,\n       -0.31794532, -0.26685694, -0.00669443, -0.0043445 , -0.00464787,\n       -0.00515536, -0.00325794, -0.00325734]), 'split6_train_score': array([-0.34159667, -0.20675504, -0.1250397 , -0.00380185, -0.00343848,\n       -0.00327613, -0.00330305, -0.00325756, -0.00325733, -0.45486433,\n       -0.38130334, -0.26115025, -0.01255988, -0.00528215, -0.00421254,\n       -0.00332867, -0.00326573, -0.0032602 , -0.26023521, -0.15516562,\n       -0.08921924, -0.00347421, -0.00333972, -0.00326968, -0.00330275,\n       -0.00325756, -0.00325733, -0.38097428, -0.33695633, -0.23953073,\n       -0.01056556, -0.00418535, -0.00357653, -0.00333602, -0.00325771,\n       -0.00325733, -0.26091531, -0.14026896, -0.0862046 , -0.00363744,\n       -0.00327666, -0.00325873, -0.00330275, -0.00325756, -0.00325733,\n       -0.37003688, -0.28841447, -0.26002573, -0.00632216, -0.00398985,\n       -0.00423785, -0.00384024, -0.00325892, -0.00325734, -0.30956841,\n       -0.18514487, -0.10376056, -0.00339212, -0.00327782, -0.00326322,\n       -0.00330275, -0.00325756, -0.00325733, -0.51351244, -0.33106764,\n       -0.30933105, -0.011218  , -0.00572237, -0.00398873, -0.00350199,\n       -0.00325766, -0.00935238, -0.26259465, -0.14405437, -0.09054538,\n       -0.00337227, -0.00326349, -0.00325802, -0.00330275, -0.00325756,\n       -0.00325733, -0.39331758, -0.32125182, -0.24252308, -0.00576248,\n       -0.0035633 , -0.00343994, -0.00340252, -0.00325764, -0.00325733,\n       -0.25029228, -0.15464642, -0.09529228, -0.0033422 , -0.00325866,\n       -0.00325772, -0.00330275, -0.00325756, -0.00325733, -0.40111138,\n       -0.32597851, -0.28655657, -0.0103673 , -0.01112679, -0.00343593,\n       -0.011601  , -0.00406092, -0.0032782 ]), 'split7_train_score': array([-0.31204919, -0.17649475, -0.10309688, -0.00392029, -0.00341752,\n       -0.00326603, -0.00330269, -0.00325756, -0.00325733, -0.40543771,\n       -0.34267064, -0.27678278, -0.0071104 , -0.00456764, -0.00357128,\n       -0.00331827, -0.00325763, -0.0032638 , -0.23148869, -0.13621949,\n       -0.08401564, -0.00341216, -0.0032795 , -0.00325754, -0.00330267,\n       -0.00325756, -0.00325733, -0.4004791 , -0.27217074, -0.24299932,\n       -0.01139349, -0.00531105, -0.00352267, -0.00331743, -0.00325808,\n       -0.00325734, -0.24106926, -0.14101006, -0.08273433, -0.00332419,\n       -0.00325809, -0.00325733, -0.00330267, -0.00325756, -0.00325733,\n       -0.35244827, -0.30657801, -0.22560611, -0.009899  , -0.004069  ,\n       -0.00336727, -0.02752909, -0.00373373, -0.00325733, -0.27403117,\n       -0.15658796, -0.09732123, -0.0037337 , -0.00336518, -0.00326935,\n       -0.0033029 , -0.00325756, -0.00325733, -0.45048209, -0.33670085,\n       -0.24619819, -0.00737158, -0.00578719, -0.00439708, -0.00347811,\n       -0.00350869, -0.00360413, -0.24074156, -0.14901196, -0.09559651,\n       -0.00337087, -0.00326193, -0.00325761, -0.00330267, -0.00325756,\n       -0.00325733, -0.32095763, -0.27847737, -0.23177948, -0.00722669,\n       -0.00408797, -0.00358604, -0.0033192 , -0.00325762, -0.00325733,\n       -0.23942981, -0.1448939 , -0.09053089, -0.00333127, -0.00325781,\n       -0.00325737, -0.00330267, -0.00325756, -0.00325733, -0.35822128,\n       -0.29341229, -0.24795665, -0.0076867 , -0.00585062, -0.00425053,\n       -0.00335356, -0.00325878, -0.00325757]), 'split8_train_score': array([-3.85061451e-01, -2.28683256e-01, -1.42142551e-01, -3.67849149e-04,\n       -1.50288010e-04, -2.65010201e-05, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -5.35327108e-01, -4.15267801e-01, -3.09561431e-01,\n       -5.66007683e-03, -1.07238543e-03, -2.22584654e-04, -1.81859399e-04,\n       -5.31897314e-07, -2.22719151e-05, -2.58367660e-01, -1.49169998e-01,\n       -9.54770733e-02, -3.04025499e-04, -4.67512113e-05, -8.58254201e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.87018254e-01,\n       -2.70958281e-01, -2.48601533e-01, -5.56769624e-03, -8.92933412e-04,\n       -1.21407031e-03, -4.91576292e-04, -8.28425253e-04, -2.51211005e-07,\n       -2.48602848e-01, -1.54871568e-01, -8.58627387e-02, -1.25765780e-04,\n       -1.83585537e-06, -2.40575332e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.69651390e-01, -2.72096088e-01, -2.60213257e-01,\n       -4.51192887e-03, -8.27955102e-04, -5.48660454e-04, -5.68495952e-05,\n       -1.12843415e-05, -3.49922283e-08, -2.93459009e-01, -1.67857482e-01,\n       -9.25790251e-02, -5.80337656e-05, -4.95130987e-07, -4.12419023e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -4.14674620e-01,\n       -3.48767675e-01, -2.86705869e-01, -4.14208998e-03, -7.69526860e-04,\n       -2.01381982e-04, -1.15230878e-04, -8.82153084e-07, -5.93447847e-05,\n       -2.72914794e-01, -1.63868383e-01, -9.09785782e-02, -8.59936145e-05,\n       -2.75486297e-06, -6.43148323e-08, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.81220179e-01, -2.52287245e-01, -2.18066320e-01,\n       -1.66607873e-03, -1.54020040e-03, -1.11943356e-04, -5.46610400e-05,\n       -4.83146297e-04, -4.21710738e-04, -2.39129194e-01, -1.28580134e-01,\n       -7.03214732e-02, -8.92585663e-05, -6.41038584e-07, -4.91225036e-08,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.62681283e-01,\n       -3.01475530e-01, -2.55658399e-01, -4.89539526e-03, -1.92152669e-03,\n       -1.07225126e-04, -8.80147749e-03, -6.55058183e-04, -9.26790203e-09]), 'split9_train_score': array([-3.56500567e-01, -2.36311131e-01, -1.52506236e-01, -5.04225694e-04,\n       -5.75595387e-05, -7.38593645e-06, -4.99423115e-05, -2.43474518e-07,\n       -1.29942479e-09, -5.03403265e-01, -3.29599466e-01, -2.72806925e-01,\n       -1.41320355e-02, -6.66665022e-03, -1.98236815e-03, -1.79319412e-03,\n       -4.27563607e-06, -1.51841095e-05, -2.76369186e-01, -1.72257628e-01,\n       -9.19235561e-02, -4.99150322e-04, -1.31190047e-04, -1.29861681e-05,\n       -4.55885806e-05, -2.34953296e-07, -1.21089634e-09, -4.12606245e-01,\n       -3.22240770e-01, -2.25596987e-01, -5.58001595e-03, -9.31276581e-04,\n       -4.13383754e-04, -1.11257424e-03, -8.85046542e-06, -7.95136373e-08,\n       -2.45758395e-01, -1.18147990e-01, -7.34310082e-02, -3.65986170e-04,\n       -3.87936724e-05, -4.60570922e-06, -4.55885806e-05, -2.34953296e-07,\n       -1.21089633e-09, -3.33086915e-01, -2.90387234e-01, -2.25263995e-01,\n       -2.06351299e-03, -1.00976532e-03, -2.43048534e-04, -6.44077147e-05,\n       -1.82989083e-06, -3.55670206e-09, -2.97512721e-01, -1.80875464e-01,\n       -1.13829661e-01, -5.35780488e-04, -7.48761360e-05, -2.24821542e-06,\n       -4.66824472e-05, -2.40351575e-07, -1.24054697e-09, -4.78237552e-01,\n       -3.73703321e-01, -3.03568449e-01, -2.14240270e-02, -2.62006565e-03,\n       -4.61823958e-04, -5.31610380e-03, -2.23916236e-03, -3.58984690e-05,\n       -2.42184457e-01, -1.42875917e-01, -8.88162112e-02, -9.06927119e-05,\n       -1.26801427e-06, -5.27090658e-07, -4.63704352e-05, -2.38982800e-07,\n       -1.23166351e-09, -3.85200429e-01, -3.02492649e-01, -2.61538177e-01,\n       -6.14992637e-02, -1.03146186e-02, -6.99590050e-04, -1.33648613e-04,\n       -4.60829032e-07, -8.07678880e-06, -2.67783941e-01, -1.50233840e-01,\n       -8.84871021e-02, -1.06145445e-04, -3.17616831e-06, -2.28644399e-07,\n       -4.55885806e-05, -2.34953296e-07, -1.21089633e-09, -3.93198944e-01,\n       -3.01233120e-01, -2.42968221e-01, -4.27643522e-03, -7.44482155e-04,\n       -1.21998088e-04, -1.74498838e-04, -1.83194208e-06, -2.37792220e-06]), 'mean_train_score': array([-0.3530514 , -0.21081823, -0.12910194, -0.00320434, -0.00272587,\n       -0.00262354, -0.00265293, -0.00260716, -0.00260693, -0.47785626,\n       -0.35754606, -0.27287365, -0.01004415, -0.00594773, -0.00337296,\n       -0.00299332, -0.00261499, -0.003018  , -0.26023029, -0.15236677,\n       -0.09418445, -0.00282174, -0.00264295, -0.00261084, -0.00265232,\n       -0.00260716, -0.00260693, -0.39487404, -0.30323716, -0.23468249,\n       -0.0078982 , -0.0037356 , -0.00312413, -0.00384689, -0.00312729,\n       -0.00263757, -0.24320235, -0.1425037 , -0.08511153, -0.00278921,\n       -0.00262158, -0.00260849, -0.00265236, -0.00260716, -0.00260693,\n       -0.37792587, -0.29237382, -0.23865041, -0.00729285, -0.00436117,\n       -0.00313334, -0.00558924, -0.0027824 , -0.00339381, -0.29488735,\n       -0.17153843, -0.10196476, -0.00303718, -0.00266498, -0.00261822,\n       -0.00265245, -0.00260716, -0.00260693, -0.44842282, -0.35454161,\n       -0.28463641, -0.01523795, -0.00684121, -0.00337577, -0.00363503,\n       -0.00331258, -0.0032607 , -0.25497748, -0.15075958, -0.08856247,\n       -0.00275389, -0.00261511, -0.00260793, -0.00265252, -0.00260716,\n       -0.00260693, -0.37865743, -0.2926015 , -0.2446721 , -0.01204115,\n       -0.00483705, -0.00294163, -0.00308337, -0.00294486, -0.00347225,\n       -0.25213833, -0.14650594, -0.08541951, -0.00269354, -0.00260872,\n       -0.00260719, -0.0026524 , -0.00260716, -0.00260693, -0.38245516,\n       -0.30790968, -0.25505725, -0.00982251, -0.00519378, -0.00320652,\n       -0.00473695, -0.00335284, -0.00260939]), 'std_train_score': array([0.02132079, 0.01569021, 0.01325484, 0.00140427, 0.00131312,\n       0.00130333, 0.00130259, 0.00130347, 0.00130347, 0.03741932,\n       0.0229369 , 0.01960339, 0.00338508, 0.00352669, 0.00122846,\n       0.00110306, 0.00130642, 0.00192368, 0.01256545, 0.01155365,\n       0.00581417, 0.00121521, 0.00127731, 0.00130197, 0.00130337,\n       0.00130347, 0.00130347, 0.02644632, 0.02051018, 0.01447916,\n       0.00238941, 0.00152046, 0.00119738, 0.00247914, 0.00188075,\n       0.00132177, 0.01562465, 0.0118642 , 0.00748089, 0.00127595,\n       0.00130071, 0.0013025 , 0.00130339, 0.00130347, 0.00130347,\n       0.02825554, 0.01668274, 0.02422857, 0.00397998, 0.00232167,\n       0.00139303, 0.00753462, 0.00143811, 0.00287932, 0.01166296,\n       0.00925033, 0.00744529, 0.00138632, 0.00131409, 0.00130848,\n       0.00130316, 0.00130347, 0.00130347, 0.03731769, 0.02826363,\n       0.01946219, 0.00725249, 0.00529606, 0.00165106, 0.00147706,\n       0.00179143, 0.00240571, 0.00989531, 0.00740986, 0.00522871,\n       0.00133711, 0.00130662, 0.00130382, 0.00130327, 0.00130347,\n       0.00130347, 0.03834116, 0.03054736, 0.02285231, 0.0167066 ,\n       0.00218431, 0.00128887, 0.00188258, 0.00146891, 0.00225827,\n       0.0105807 , 0.01095758, 0.00921883, 0.00129809, 0.00130341,\n       0.00130353, 0.00130341, 0.00130347, 0.00130347, 0.0186745 ,\n       0.01793494, 0.02049251, 0.00685521, 0.00279297, 0.00158343,\n       0.00305335, 0.00194063, 0.00130411])}"}]