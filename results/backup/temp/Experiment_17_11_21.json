[{"dataset_variant": "complete", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "clf": "[FuzzyCMeans(n_centers = 7)]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "np.arange(1, X[:, mask].shape[1])", "scaler": "[MinMaxScaler()]"}], "metrics": "['accuracy', 'neg_mean_absolute_error']", "refit_metric": "neg_mean_absolute_error", "n_split_outer_kcv": 10, "n_split_inner_kcv": 10}, "best_params": "[{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=5), 'reduce_dim__n_components': 5, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=9), 'reduce_dim__n_components': 9, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=18), 'reduce_dim__n_components': 18, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=18), 'reduce_dim__n_components': 18, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=12), 'reduce_dim__n_components': 12, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=7), 'reduce_dim__n_components': 7, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=15), 'reduce_dim__n_components': 15, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=22), 'reduce_dim__n_components': 22, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=22), 'reduce_dim__n_components': 22, 'scaler': MinMaxScaler()}]", "mean_test_score": [0.1349579831932773, -2.1965546218487395], "mean_train_score": [0.14466692214345023, -2.1892944582827703], "cv_results": "{'fit_time': array([17.08300114, 14.10438204, 13.14699841, 19.21399522, 13.19000006,\n       12.90799832, 13.80400085, 13.48699999, 12.27599812, 12.80400157]), 'score_time': array([0.00200081, 0.00200248, 0.00100517, 0.00199938, 0.00099993,\n       0.00100064, 0.00100064, 0.00099969, 0.00099635, 0.00099969]), 'estimator': [GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                                                   n_components=5)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                                                   n_components=9)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                                                   n_components=18)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1)], 'test_accuracy': array([0.11428571, 0.23529412, 0.23529412, 0.05882353, 0.11764706,\n       0.20588235, 0.11764706, 0.08823529, 0.11764706, 0.05882353]), 'train_accuracy': array([0.12745098, 0.17589577, 0.15309446, 0.15960912, 0.10749186,\n       0.12703583, 0.16938111, 0.11074919, 0.20846906, 0.10749186]), 'test_neg_mean_absolute_error': array([-2.17142857, -2.05882353, -1.91176471, -1.91176471, -2.38235294,\n       -2.5       , -2.38235294, -2.02941176, -2.14705882, -2.47058824]), 'train_neg_mean_absolute_error': array([-2.13398693, -1.96742671, -2.13355049, -1.60586319, -2.52442997,\n       -2.56677524, -2.39087948, -2.09120521, -1.98045603, -2.49837134])}"}, {"dataset_variant": "only_binary", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "clf": "[FuzzyCMeans(n_centers = 7)]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "np.arange(1, X[:, mask].shape[1])", "scaler": "[MinMaxScaler()]"}], "metrics": "['accuracy', 'neg_mean_absolute_error']", "refit_metric": "neg_mean_absolute_error", "n_split_outer_kcv": 10, "n_split_inner_kcv": 10}, "best_params": "[{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=4), 'reduce_dim__n_components': 4, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=9), 'reduce_dim__n_components': 9, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=16), 'reduce_dim__n_components': 16, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=19), 'reduce_dim__n_components': 19, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=14), 'reduce_dim__n_components': 14, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=9), 'reduce_dim__n_components': 9, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=14), 'reduce_dim__n_components': 14, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=5), 'reduce_dim__n_components': 5, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'reduce_dim__n_components': 3, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=4), 'reduce_dim__n_components': 4, 'scaler': MinMaxScaler()}]", "mean_test_score": [0.14369747899159663, -2.289495798319327], "mean_train_score": [0.14629878009835856, -2.332741478784782], "cv_results": "{'fit_time': array([11.13400149, 10.75200438, 10.38800025, 16.33899546, 11.52500701,\n       12.41499472, 14.18000054, 11.59625244, 11.45499611, 11.54399967]), 'score_time': array([0.00300002, 0.00299978, 0.00099993, 0.00199914, 0.00399995,\n       0.00099945, 0.00100017, 0.00100279, 0.00100064, 0.00199938]), 'estimator': [GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=13)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=13)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=13)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=19)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=14)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=9)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=14)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=13)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=3)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [Mask...\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                   n_components=4)],\n                          'reduce_dim__n_components': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1)], 'test_accuracy': array([0.14285714, 0.11764706, 0.17647059, 0.20588235, 0.11764706,\n       0.11764706, 0.05882353, 0.20588235, 0.11764706, 0.17647059]), 'train_accuracy': array([0.1372549 , 0.1237785 , 0.15635179, 0.08794788, 0.15309446,\n       0.17263844, 0.16286645, 0.16612378, 0.13680782, 0.16612378]), 'test_neg_mean_absolute_error': array([-2.57142857, -1.70588235, -1.91176471, -1.85294118, -3.05882353,\n       -2.70588235, -2.64705882, -2.05882353, -2.02941176, -2.35294118]), 'train_neg_mean_absolute_error': array([-2.51633987, -2.4723127 , -1.96742671, -2.43973941, -2.64495114,\n       -2.44625407, -2.27361564, -2.09446254, -2.06514658, -2.40716612])}"}, {"dataset_variant": "only_totals", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "clf": "[FuzzyCMeans(n_centers = 7)]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "np.arange(1, X[:, mask].shape[1])", "scaler": "[MinMaxScaler()]"}], "metrics": "['accuracy', 'neg_mean_absolute_error']", "refit_metric": "neg_mean_absolute_error", "n_split_outer_kcv": 10, "n_split_inner_kcv": 10}, "best_params": "[{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=3), 'reduce_dim__n_components': 3, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=3), 'reduce_dim__n_components': 3, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=3), 'reduce_dim__n_components': 3, 'scaler': MinMaxScaler()}]", "mean_test_score": [0.1346218487394958, -2.4138655462184873], "mean_train_score": [0.14434331821762364, -2.3125279427732], "cv_results": "{'fit_time': array([4.10400462, 3.99999595, 3.98599863, 3.11800003, 3.78899908,\n       3.56899786, 5.3479979 , 4.30300856, 3.9309907 , 4.62600255]), 'score_time': array([0.00100017, 0.00300074, 0.00199914, 0.00200081, 0.00300026,\n       0.0010016 , 0.00200009, 0.00199485, 0.00200033, 0.00200081]), 'estimator': [GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=1)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=3)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=3)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=3)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=1)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=1)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]))],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1), GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n             estimator=Pipeline(steps=[('reduce_dim',\n                                        MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                       ('scaler', MinMaxScaler()),\n                                       ('clf', FuzzyCMeans(n_centers=7))]),\n             param_grid=[{'reduce_dim': [MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                                         MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n                                                   n_components=3)],\n                          'reduce_dim__n_components': array([1, 2, 3]),\n                          'scaler': [MinMaxScaler()]}],\n             refit='neg_mean_absolute_error', return_train_score=True,\n             scoring=['accuracy', 'neg_mean_absolute_error'], verbose=1)], 'test_accuracy': array([0.22857143, 0.05882353, 0.05882353, 0.02941176, 0.14705882,\n       0.17647059, 0.32352941, 0.11764706, 0.14705882, 0.05882353]), 'train_accuracy': array([0.13398693, 0.15960912, 0.11074919, 0.14332248, 0.11726384,\n       0.18241042, 0.21172638, 0.14332248, 0.15635179, 0.08469055]), 'test_neg_mean_absolute_error': array([-2.28571429, -2.91176471, -2.67647059, -3.05882353, -2.67647059,\n       -1.64705882, -1.41176471, -2.35294118, -2.41176471, -2.70588235]), 'train_neg_mean_absolute_error': array([-2.46078431, -2.52117264, -2.47882736, -2.31921824, -2.61889251,\n       -1.8762215 , -1.74592834, -2.04560261, -2.30618893, -2.752443  ])}"}]