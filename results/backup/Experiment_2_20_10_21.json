[{"dataset_variant": "complete", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "regressor": "[GradientBoostingRegressor(criterion = 'mse')]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "np.arange(1, X[:, mask].shape[1])", "scaler": "[MinMaxScaler()]", "regressor__learning_rate": "[0.1, 1e-3]", "regressor__n_estimators": "[100, 200, 250]", "regressor__max_depth": "[5, 10, 15]"}], "metrics": "['neg_root_mean_squared_error']", "binarize": "False", "n_split_outer_kcv": 10}, "best_params": "{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}", "mean_test_score": -1.54809520017657, "cv_results": "{'mean_fit_time': array([0.08020027, 0.16810019, 0.19459999, 0.1245003 , 0.27019737,\n       0.30870428, 0.13369765, 0.25739286, 0.31539795, 0.08009961,\n       0.16210063, 0.21769781, 0.12379951, 0.25309999, 0.30050249,\n       0.12869747, 0.26399772, 0.33129995, 0.11599786, 0.18719985,\n       0.23889935, 0.14900033, 0.28290188, 0.34879763, 0.14369988,\n       0.30179951, 0.36369977, 0.09089801, 0.17720034, 0.22609997,\n       0.13509965, 0.2706018 , 0.362902  , 0.17229798, 0.28700852,\n       0.35450013, 0.10129805, 0.21079962, 0.27139952, 0.16009755,\n       0.32420237, 0.39529893, 0.15769749, 0.31039932, 0.39880164,\n       0.10869768, 0.20460079, 0.2480998 , 0.14959748, 0.2976999 ,\n       0.38609982, 0.16469762, 0.32310181, 0.39249978, 0.11489775,\n       0.22820027, 0.31300447, 0.18029704, 0.35610175, 0.44439778,\n       0.17839959, 0.36160197, 0.44179971, 0.11609991, 0.22179785,\n       0.27340002, 0.17580004, 0.36229982, 0.41340239, 0.17439754,\n       0.35080152, 0.42799985, 0.1376982 , 0.2647028 , 0.30741644,\n       0.19179907, 0.38511574, 0.49371443, 0.19429958, 0.37432077,\n       0.46211977, 0.12390046, 0.26980953, 0.31101387, 0.18450224,\n       0.36742017, 0.45110576, 0.21500478, 0.40151966, 0.47342052,\n       0.13740015, 0.30910816, 0.36011553, 0.22780383, 0.41661272,\n       0.54371502, 0.22610042, 0.43321638, 0.50511658, 0.13410008,\n       0.26841552, 0.34492252, 0.20049932, 0.40611603, 0.50791132,\n       0.2525044 , 0.46641343, 0.54871573, 0.18409956, 0.34191518,\n       0.4226038 , 0.27220347, 0.51290612, 0.6487011 , 0.28880284,\n       0.47721004, 0.5594167 , 0.17670143, 0.31620643, 0.36951663,\n       0.23040268, 0.46101213, 0.56020927, 0.24610195, 0.45981622,\n       0.58361239, 0.18939867, 0.33181276, 0.41201093, 0.26630769,\n       0.56860235, 0.67450521, 0.29480639, 0.52940266, 0.59031582,\n       0.1552999 , 0.33301432, 0.41511681, 0.24000332, 0.45931003,\n       0.58141904, 0.24930339, 0.47811759, 0.59612048, 0.19430041,\n       0.3573123 , 0.42121518, 0.26121786, 0.54752314, 0.67460716,\n       0.25901277, 0.50531476, 0.64271507, 0.16610017, 0.32572296,\n       0.40071867, 0.27980995, 0.50571241, 0.61361394, 0.2945097 ,\n       0.51551473, 0.6355222 , 0.18290021, 0.39272065, 0.45701911,\n       0.30350552, 0.57601588, 0.7168313 , 0.28131342, 0.5396033 ,\n       0.69331241, 0.17490008, 0.34512041, 0.43961995, 0.27941489,\n       0.51702211, 0.64631343, 0.29931643, 0.54721458, 0.67951531,\n       0.22290194, 0.40571182, 0.47321784, 0.29342308, 0.61331971,\n       0.75481904, 0.28671262, 0.60021243, 0.7130199 , 0.18479939,\n       0.38501759, 0.45602088, 0.27512054, 0.55341544, 0.70321486,\n       0.29142089, 0.57322264, 0.73100758, 0.20840433, 0.4110167 ,\n       0.52031114, 0.31611996, 0.62851784, 0.8029206 , 0.31150868,\n       0.59731231, 0.76091943, 0.19949875, 0.38321834, 0.48721557,\n       0.3067179 , 0.58391924, 0.7268213 , 0.32921999, 0.61351724,\n       0.77160814, 0.23360219, 0.43601811, 0.53291767, 0.34811764,\n       0.66461811, 0.8585175 , 0.3327229 , 0.62731309, 0.7912148 ,\n       0.22670095, 0.41611841, 0.50781889, 0.32941148, 0.62241583,\n       0.7618154 , 0.35120986, 0.64140778, 0.82998769, 0.24710157,\n       0.44900789, 0.55991788, 0.35792046, 0.69511282, 0.89373598,\n       0.34041882, 0.66362045, 0.84001899, 0.22030218, 0.42681534,\n       0.53631802, 0.32721438, 0.64361804, 0.82371576, 0.3395134 ,\n       0.66761997, 0.84461815, 0.23560052, 0.46941838, 0.60491014,\n       0.36531723, 0.73250997, 0.94192235, 0.35141163, 0.6976146 ,\n       0.85853355, 0.22339988, 0.45701256, 0.55532322, 0.34150519,\n       0.68551652, 0.84071505, 0.36041112, 0.7244169 , 0.87841022,\n       0.26870568, 0.5176131 , 0.61432025, 0.38631408, 0.77791824,\n       0.98611882, 0.37622285, 0.72751226, 0.92242162, 0.24000142,\n       0.48218734, 0.59961531, 0.36071792, 0.71021852, 0.88692009,\n       0.3748105 , 0.75881748, 0.92101915, 0.27971137, 0.52661428,\n       0.64012043, 0.39911687, 0.80771487, 1.02851923, 0.38501799,\n       0.75071297, 0.94871714, 0.24400308, 0.4876101 , 0.62261934,\n       0.36871548, 0.74081793, 0.9194145 , 0.38840995, 0.7808147 ,\n       0.96820583, 0.28772035, 0.53362267, 0.67352045, 0.43072143,\n       0.82711482, 1.06771152, 0.39821775, 0.78941827, 0.97992294,\n       0.27831659, 0.52052114, 0.63562014, 0.38843288, 0.77742081,\n       0.95771356, 0.41281865, 0.79811287, 1.01441743, 0.28081639,\n       0.57351034, 0.70271735, 0.4157182 , 0.88562253, 1.10771847,\n       0.42781589, 0.81471496, 1.02461579, 0.26490443, 0.52951064,\n       0.67411461, 0.39792006, 0.80101681, 1.00381908, 0.42732041,\n       0.83551807, 1.06251724, 0.29002235, 0.57941761, 0.73151703,\n       0.43012285, 0.9099179 , 1.04381957, 0.40430825, 0.85081677,\n       1.07591174, 0.27681556, 0.54331772, 0.69272137, 0.4149231 ,\n       0.83011992, 1.03461685, 0.43221848, 0.87481458, 1.08421204,\n       0.31000712, 0.59142039, 0.74991832, 0.45041201, 0.93041527,\n       1.172716  , 0.46141531, 0.88992083, 1.09972086, 0.28541565,\n       0.56042347, 0.72641532, 0.42730763, 0.86591711, 1.07921743,\n       0.36571307, 0.89201679, 1.12281508, 0.306515  , 0.61581798,\n       0.76691787, 0.46611795, 0.98501842, 1.24451308, 0.46532078,\n       0.81111739, 1.14741762, 0.29311004, 0.60771012, 0.72051504,\n       0.45692024, 0.8899153 , 0.97391706, 0.46690774, 0.93221986,\n       1.0849179 , 0.29300818, 0.65061979, 0.78941302, 0.48952067,\n       1.00131495, 1.27422128, 0.47482333, 0.94682026, 1.17781522,\n       0.30051858, 0.59281824, 0.75871711, 0.45811846, 0.93641429,\n       1.14881084, 0.40941734, 0.96120772, 1.2032192 , 0.07939947,\n       0.15550029, 0.1938998 , 0.12279966, 0.26059849, 0.31520264,\n       0.12639952, 0.24538987, 0.30880017, 0.08039978, 0.15746069,\n       0.23189986, 0.1247982 , 0.24909713, 0.29290221, 0.12679746,\n       0.24689794, 0.31310208, 0.09249794, 0.20729971, 0.23960006,\n       0.14259999, 0.27910182, 0.35109999, 0.14009736, 0.3042028 ,\n       0.36230006, 0.09169779, 0.17749953, 0.22050018, 0.13700006,\n       0.26449993, 0.35450158, 0.14839833, 0.2875037 , 0.34990222,\n       0.10259771, 0.20080111, 0.26149797, 0.18879683, 0.32850258,\n       0.40149717, 0.15739746, 0.30610225, 0.40549955, 0.10359836,\n       0.20909951, 0.24899499, 0.15230017, 0.29629774, 0.38269782,\n       0.16659963, 0.32000167, 0.38809993, 0.11579809, 0.22679918,\n       0.29040451, 0.19059308, 0.36107316, 0.43859956, 0.17449777,\n       0.34590278, 0.44879704, 0.11259916, 0.22410004, 0.28220263,\n       0.17009757, 0.34610026, 0.42800198, 0.17229753, 0.34860156,\n       0.42670026, 0.12939832, 0.27300856, 0.32351742, 0.19380174,\n       0.38551657, 0.49581418, 0.19249942, 0.38290823, 0.46252282,\n       0.12209952, 0.24660623, 0.33091571, 0.19859993, 0.36071169,\n       0.44622304, 0.19449952, 0.38851242, 0.47531834, 0.1374002 ,\n       0.27220428, 0.34020686, 0.29070206, 0.44521432, 0.53742063,\n       0.21400683, 0.43261745, 0.51912279, 0.13320055, 0.26391332,\n       0.34242065, 0.21540222, 0.41421266, 0.49362226, 0.20989993,\n       0.43112042, 0.53491781, 0.14829981, 0.29521732, 0.37531428,\n       0.23940165, 0.47461584, 0.57362013, 0.24880016, 0.46881714,\n       0.55701745, 0.14499984, 0.28322096, 0.37502041, 0.24130282,\n       0.42932189, 0.5376107 , 0.25540686, 0.4723207 , 0.56962264,\n       0.15780046, 0.34771171, 0.40891645, 0.24490879, 0.49471245,\n       0.65512037, 0.24730306, 0.48301685, 0.61451385, 0.17170231,\n       0.30842321, 0.37781541, 0.23429906, 0.48391905, 0.59062281,\n       0.24670103, 0.49291832, 0.63000505, 0.17360053, 0.33531785,\n       0.42391083, 0.28451288, 0.54852028, 0.67250905, 0.29651759,\n       0.52932265, 0.65642169, 0.17700007, 0.33801973, 0.41711717,\n       0.25370681, 0.50111756, 0.63161392, 0.26911879, 0.53142304,\n       0.68640988, 0.17979832, 0.3581208 , 0.44912024, 0.31121666,\n       0.58110757, 0.73151851, 0.31011846, 0.57971516, 0.69941273,\n       0.20420363, 0.36162055, 0.43611777, 0.27111244, 0.54051764,\n       0.67431638, 0.28500993, 0.58321736, 0.71091731, 0.1968991 ,\n       0.38222075, 0.50661781, 0.29811885, 0.6014039 , 0.78261378,\n       0.30361862, 0.59281535, 0.77281466, 0.19139941, 0.37592316,\n       0.47311218, 0.3076133 , 0.56652317, 0.72891428, 0.31731791,\n       0.60150247, 0.75812187, 0.21330249, 0.40422277, 0.50271792,\n       0.33882015, 0.64711573, 0.81182022, 0.33591361, 0.62781801,\n       0.78721886, 0.21240001, 0.38941565, 0.48132117, 0.32701445,\n       0.61141996, 0.75021932, 0.3426198 , 0.6405122 , 0.79411209,\n       0.21789904, 0.44052074, 0.53081825, 0.33780749, 0.69471772,\n       0.85532289, 0.35621059, 0.67192156, 0.83972158, 0.22390554,\n       0.42371881, 0.5214102 , 0.34811494, 0.64771643, 0.81961281,\n       0.34561639, 0.67301791, 0.84821665, 0.22620053, 0.44872105,\n       0.56302249, 0.35321898, 0.7020154 , 0.90921593, 0.351823  ,\n       0.6921216 , 0.86961613, 0.21679871, 0.43781505, 0.56021039,\n       0.33502076, 0.66811483, 0.8461148 , 0.36161237, 0.70611587,\n       0.87961364, 0.24590542, 0.47391725, 0.59331799, 0.35732102,\n       0.75791783, 0.93562024, 0.38572185, 0.73542147, 0.92492023,\n       0.25890684, 0.4476155 , 0.5598202 , 0.37261505, 0.70591497,\n       0.88252072, 0.38002048, 0.73651495, 0.92971082, 0.1971992 ,\n       0.59602633, 0.62692006, 0.37492349, 0.78331754, 0.98211591,\n       0.40391026, 0.77311983, 0.95741475, 0.24810398, 0.47101297,\n       0.58531551, 0.39451652, 0.73111563, 0.78832276, 0.37591019,\n       0.77361977, 0.97871041, 0.25790782, 0.51441798, 0.65881245,\n       0.3917151 , 0.81051593, 0.90971096, 0.4116087 , 0.79231462,\n       0.98561747, 0.26120865, 0.49240789, 0.61401565, 0.39941401,\n       0.77391632, 0.95951669, 0.40651293, 0.81992285, 1.00090973,\n       0.26751602, 0.56792114, 0.67062235, 0.40561275, 0.85810566,\n       1.07461221, 0.4214129 , 0.824106  , 1.02451181, 0.25851181,\n       0.54180586, 0.6447098 , 0.40341406, 0.79841437, 0.96300304,\n       0.38270895, 0.83570957, 0.96610332, 0.29210243, 0.56080518,\n       0.70981243, 0.42221384, 0.87270112, 1.09891603, 0.45310628,\n       0.85800722, 1.07420154, 0.26950805, 0.52931659, 0.68000846,\n       0.41540713, 0.82591193, 1.03020868, 0.44291058, 0.89521036,\n       1.09750726, 0.29100976, 0.57611356, 0.73481243, 0.44830523,\n       0.89980836, 1.03780956, 0.45691016, 0.89600041, 1.11020975,\n       0.27990937, 0.55220935, 0.7052074 , 0.42731845, 0.86641135,\n       1.0741112 , 0.47211015, 0.91011231, 0.99440377, 0.29841623,\n       0.59371188, 0.76449842, 0.45250823, 0.91919892, 1.16971385,\n       0.49360733, 0.85360575, 1.12190809, 0.28980978, 0.58980784,\n       0.72029903, 0.4435046 , 0.89299843, 1.1196101 , 0.4634192 ,\n       0.83490806, 1.14891839, 0.31020973, 0.62620344, 0.76520898,\n       0.47870965, 0.83610394, 1.222206  , 0.48180804, 0.80370147,\n       1.18500879, 0.31570301, 0.58670938, 0.72700806, 0.46601479,\n       0.90860324, 1.0545032 , 0.47311232, 0.9597055 , 1.20271192,\n       0.32550583, 0.62431035, 0.80079746, 0.4849052 , 0.99380131,\n       1.1554064 , 0.47681506, 0.96340952, 1.21770444, 0.30591419,\n       0.60820768, 0.74808605, 0.47040968, 0.95250428, 1.17690949,\n       0.49171846, 0.85290251, 1.22261248]), 'std_fit_time': array([0.01340799, 0.0141171 , 0.00454327, 0.00977014, 0.03354777,\n       0.01013663, 0.01052621, 0.01328905, 0.00684002, 0.00238431,\n       0.00759579, 0.02424993, 0.00756027, 0.02085389, 0.00934365,\n       0.00374355, 0.01379255, 0.01329092, 0.023028  , 0.02691687,\n       0.02580636, 0.01204213, 0.01160884, 0.004513  , 0.00678244,\n       0.01863099, 0.03110572, 0.00216915, 0.00160052, 0.00832588,\n       0.00448253, 0.01099733, 0.03175747, 0.04244784, 0.01407061,\n       0.0064745 , 0.0022819 , 0.015199  , 0.03353357, 0.01128428,\n       0.02428477, 0.00672465, 0.00651118, 0.01046856, 0.01200301,\n       0.01620612, 0.00727153, 0.00164626, 0.00422373, 0.00858119,\n       0.02999603, 0.02310987, 0.02414636, 0.01150213, 0.00793328,\n       0.01551784, 0.03734747, 0.01684126, 0.03713407, 0.01236959,\n       0.01724769, 0.02664191, 0.02923069, 0.00690119, 0.00451072,\n       0.00297716, 0.01430228, 0.03414462, 0.00927629, 0.00608434,\n       0.01249204, 0.01286081, 0.01555705, 0.02190443, 0.00408017,\n       0.01268618, 0.01082095, 0.02133341, 0.01206591, 0.0086378 ,\n       0.00951544, 0.00504939, 0.03233745, 0.01695743, 0.00960005,\n       0.01462349, 0.00549034, 0.03190959, 0.02626337, 0.0125225 ,\n       0.00600388, 0.02876266, 0.02303349, 0.03234849, 0.01130722,\n       0.03524838, 0.02571618, 0.03515829, 0.0174424 , 0.00472314,\n       0.00984007, 0.02691922, 0.00938224, 0.02169139, 0.02629922,\n       0.03306482, 0.03070268, 0.0347043 , 0.03223461, 0.0299987 ,\n       0.02112185, 0.01326821, 0.02306846, 0.03901151, 0.03110559,\n       0.02698249, 0.02910922, 0.02814019, 0.03072919, 0.01534021,\n       0.01561405, 0.02631907, 0.02014785, 0.02907031, 0.02140776,\n       0.02381411, 0.02655858, 0.01711385, 0.01625398, 0.02948509,\n       0.04844462, 0.05583935, 0.01996893, 0.02513677, 0.01913268,\n       0.00558657, 0.07461136, 0.02817834, 0.01951405, 0.00978715,\n       0.01884864, 0.02798668, 0.01858923, 0.01994501, 0.02808902,\n       0.0286528 , 0.01079897, 0.01113926, 0.03277921, 0.03277177,\n       0.00962564, 0.01913933, 0.03513897, 0.00703469, 0.01144597,\n       0.00447095, 0.0332838 , 0.03137858, 0.01296208, 0.0318843 ,\n       0.0168657 , 0.01451395, 0.00623566, 0.03764215, 0.0268897 ,\n       0.0247988 , 0.03243442, 0.03321065, 0.02186021, 0.01401663,\n       0.02994386, 0.00696445, 0.01333758, 0.01967767, 0.02611628,\n       0.00942237, 0.00577642, 0.02340081, 0.01559482, 0.01321414,\n       0.029562  , 0.01967189, 0.00522516, 0.01426405, 0.04564024,\n       0.02312261, 0.00515419, 0.0387323 , 0.02130484, 0.00652296,\n       0.02498902, 0.01007011, 0.00398348, 0.01253997, 0.02813651,\n       0.00588646, 0.00799832, 0.0298397 , 0.01105054, 0.01633835,\n       0.03131138, 0.0199891 , 0.02091194, 0.03667033, 0.02223968,\n       0.01400127, 0.03194654, 0.01121841, 0.00699299, 0.01171052,\n       0.01979341, 0.01354855, 0.0157084 , 0.03275944, 0.02369509,\n       0.04224854, 0.03611919, 0.01778516, 0.0107292 , 0.02681981,\n       0.02234977, 0.0266032 , 0.02368179, 0.01024135, 0.02519043,\n       0.03002136, 0.01759477, 0.00798883, 0.03286254, 0.0249401 ,\n       0.01103576, 0.02814189, 0.01571183, 0.06450261, 0.03862522,\n       0.0132666 , 0.00946095, 0.03283396, 0.02062679, 0.02253406,\n       0.02466304, 0.01824307, 0.02348226, 0.01355644, 0.00911272,\n       0.01145356, 0.00785208, 0.02030389, 0.02580702, 0.01030195,\n       0.01457015, 0.01574963, 0.00469402, 0.00619357, 0.02983594,\n       0.01935575, 0.01520332, 0.05533402, 0.01211722, 0.0154818 ,\n       0.01290597, 0.00307207, 0.02612435, 0.01286104, 0.00723536,\n       0.02354994, 0.02349997, 0.01535475, 0.01496632, 0.01815898,\n       0.03458603, 0.02834933, 0.00567163, 0.02562477, 0.02393171,\n       0.04393374, 0.01353277, 0.01279457, 0.03811268, 0.00570826,\n       0.03739998, 0.0358874 , 0.01156198, 0.01452871, 0.01747561,\n       0.01375397, 0.0345613 , 0.01900096, 0.02625887, 0.02887811,\n       0.00561554, 0.02364373, 0.03737648, 0.05766574, 0.01287661,\n       0.01204382, 0.02021484, 0.00697696, 0.01318398, 0.02947026,\n       0.01012307, 0.03786736, 0.01718159, 0.01111651, 0.03171502,\n       0.03457281, 0.02719425, 0.0059192 , 0.02732399, 0.03783171,\n       0.02622939, 0.03066215, 0.01091333, 0.01376359, 0.0184361 ,\n       0.02131969, 0.03270012, 0.01947533, 0.01707635, 0.02561343,\n       0.0344122 , 0.02606618, 0.02095878, 0.04586006, 0.00855768,\n       0.02288647, 0.01435504, 0.00748183, 0.0430195 , 0.04867959,\n       0.02619768, 0.01514999, 0.02282957, 0.00615693, 0.01168372,\n       0.03179677, 0.00629658, 0.01327013, 0.03153089, 0.01684283,\n       0.03153404, 0.05527898, 0.0061328 , 0.00849117, 0.01952308,\n       0.0091814 , 0.03375009, 0.138842  , 0.06723729, 0.01897668,\n       0.0339493 , 0.00975692, 0.00970721, 0.03352273, 0.00874565,\n       0.02807782, 0.02465108, 0.01287893, 0.02956965, 0.03842497,\n       0.02133229, 0.00398031, 0.01615906, 0.01474188, 0.03437167,\n       0.04701072, 0.0206664 , 0.02861964, 0.02256318, 0.00593759,\n       0.00949954, 0.03422237, 0.00757659, 0.03008978, 0.04377115,\n       0.04678093, 0.01945787, 0.03683182, 0.0041286 , 0.01309316,\n       0.00727417, 0.00794353, 0.02710083, 0.02238241, 0.01537706,\n       0.11551831, 0.03295416, 0.00495728, 0.03471264, 0.0071665 ,\n       0.02688843, 0.03648949, 0.15348406, 0.01013233, 0.03894564,\n       0.11576279, 0.03618134, 0.03126684, 0.00937577, 0.02747339,\n       0.02671854, 0.04125652, 0.01399844, 0.0243204 , 0.02577875,\n       0.00549717, 0.00741069, 0.03001071, 0.00868738, 0.02734184,\n       0.02790459, 0.05797485, 0.02562018, 0.03840782, 0.00237406,\n       0.0030088 , 0.00613857, 0.00263827, 0.02335513, 0.028565  ,\n       0.00369211, 0.0050783 , 0.00659127, 0.00387824, 0.00393163,\n       0.03246655, 0.0146412 , 0.02520641, 0.00634861, 0.00470206,\n       0.00304703, 0.00593758, 0.00555541, 0.03833538, 0.02543078,\n       0.00753788, 0.00416292, 0.00976496, 0.00094554, 0.03405228,\n       0.02093993, 0.00645131, 0.00427059, 0.00254047, 0.00859049,\n       0.00307866, 0.02903695, 0.01345647, 0.01223273, 0.00382756,\n       0.00142475, 0.00172165, 0.01943265, 0.03295643, 0.02142489,\n       0.01230116, 0.00392766, 0.00486605, 0.02044679, 0.00424908,\n       0.01646533, 0.00614359, 0.00651225, 0.00568162, 0.02350501,\n       0.00995064, 0.01591338, 0.00564691, 0.01042009, 0.00783257,\n       0.01962441, 0.03453675, 0.016733  , 0.00671382, 0.00590401,\n       0.03114131, 0.03349372, 0.00233284, 0.00570061, 0.01869042,\n       0.00760762, 0.03007104, 0.02770951, 0.00579674, 0.01595552,\n       0.00982864, 0.00936693, 0.03529286, 0.01592246, 0.0163471 ,\n       0.01555251, 0.0286805 , 0.01067196, 0.02862044, 0.01324579,\n       0.00347535, 0.01452078, 0.03699655, 0.02226524, 0.00735623,\n       0.00661486, 0.01060414, 0.02113222, 0.02236698, 0.00579995,\n       0.00708272, 0.00980635, 0.03225477, 0.01964876, 0.01345543,\n       0.01217511, 0.03812928, 0.02221057, 0.00260083, 0.00666869,\n       0.02695071, 0.01846605, 0.02637565, 0.006151  , 0.00691988,\n       0.02768599, 0.02285102, 0.00424458, 0.00740286, 0.02702427,\n       0.03397034, 0.04230137, 0.00795357, 0.03471492, 0.03540757,\n       0.02240085, 0.0045389 , 0.00979688, 0.0319742 , 0.03274702,\n       0.00876266, 0.01090339, 0.02677947, 0.03583114, 0.02046078,\n       0.0024824 , 0.0329671 , 0.0225031 , 0.00733443, 0.00997089,\n       0.03799398, 0.01096922, 0.01471467, 0.02943976, 0.03694448,\n       0.01840758, 0.00666984, 0.0079373 , 0.03591449, 0.03656263,\n       0.00883322, 0.01872411, 0.03083661, 0.00810161, 0.00416916,\n       0.0069249 , 0.02264483, 0.0253296 , 0.01087105, 0.03706697,\n       0.01970735, 0.02091598, 0.01786105, 0.01843324, 0.01895977,\n       0.00716506, 0.00897529, 0.01584654, 0.00759478, 0.01677044,\n       0.0284215 , 0.00087118, 0.00516721, 0.01202917, 0.04539443,\n       0.02933035, 0.0318124 , 0.04683043, 0.04883765, 0.01746212,\n       0.04429059, 0.029858  , 0.01171123, 0.00618099, 0.01076566,\n       0.02721082, 0.00719349, 0.02524385, 0.02759952, 0.00724506,\n       0.00549165, 0.04008324, 0.00375248, 0.00972071, 0.03117466,\n       0.01094876, 0.0164632 , 0.04907657, 0.00860435, 0.01474647,\n       0.0208892 , 0.03180782, 0.01063271, 0.0305603 , 0.01696951,\n       0.01592353, 0.02053042, 0.02115088, 0.00597943, 0.00485868,\n       0.02711102, 0.02711669, 0.0309892 , 0.03199536, 0.02203945,\n       0.02318791, 0.02365641, 0.01061656, 0.00659955, 0.0233628 ,\n       0.02989632, 0.01126534, 0.02925642, 0.02638953, 0.02498369,\n       0.01213476, 0.02819409, 0.00620591, 0.01751369, 0.04053826,\n       0.01253825, 0.031602  , 0.03599031, 0.03422029, 0.02569587,\n       0.02567768, 0.01283604, 0.03554689, 0.03347629, 0.04497221,\n       0.01244376, 0.02807863, 0.03462789, 0.00541858, 0.00715756,\n       0.01495316, 0.0200014 , 0.01131229, 0.03255797, 0.01439247,\n       0.02975139, 0.0421513 , 0.00252148, 0.02122857, 0.0372286 ,\n       0.01075262, 0.01705503, 0.04030419, 0.02275831, 0.02653347,\n       0.0400759 , 0.01821195, 0.01171487, 0.02538961, 0.00824761,\n       0.03138185, 0.02672203, 0.03092557, 0.02900467, 0.04364947,\n       0.03217172, 0.00596703, 0.00701097, 0.03183885, 0.01903607,\n       0.03495767, 0.02239828, 0.02652462, 0.04380334, 0.01543302,\n       0.31426058, 0.01863456, 0.00868829, 0.03450618, 0.03013609,\n       0.03897428, 0.02123678, 0.04120645, 0.0162396 , 0.008739  ,\n       0.00866928, 0.03348982, 0.0266444 , 0.11554483, 0.0316792 ,\n       0.02092011, 0.06197056, 0.00329917, 0.00599991, 0.03206199,\n       0.01129947, 0.03478643, 0.15246956, 0.02946106, 0.0359927 ,\n       0.04846765, 0.02172638, 0.00608449, 0.00903851, 0.0298104 ,\n       0.03433044, 0.01750552, 0.01917333, 0.0420152 , 0.04725156,\n       0.00322852, 0.03636729, 0.00921138, 0.0095451 , 0.03669477,\n       0.03561909, 0.03284083, 0.04126611, 0.05160814, 0.0041815 ,\n       0.03911382, 0.01890077, 0.01753199, 0.01554578, 0.08545491,\n       0.04050202, 0.04278789, 0.11615729, 0.01698696, 0.01281474,\n       0.02002111, 0.01226855, 0.03171304, 0.05159633, 0.02784736,\n       0.04236143, 0.04398853, 0.00620044, 0.00645426, 0.02751685,\n       0.01284202, 0.02445906, 0.0329093 , 0.02518819, 0.05586207,\n       0.05288441, 0.0059613 , 0.0038302 , 0.01745875, 0.01996553,\n       0.03702754, 0.14212831, 0.02808836, 0.04905002, 0.05891312,\n       0.00679704, 0.00691757, 0.03360619, 0.01296954, 0.0317027 ,\n       0.05040433, 0.03614705, 0.03791866, 0.1601586 , 0.00718631,\n       0.00673613, 0.03647019, 0.01057199, 0.0350638 , 0.05983967,\n       0.03914838, 0.12920995, 0.11066335, 0.01090427, 0.03309525,\n       0.02446282, 0.0126783 , 0.0405218 , 0.05407209, 0.01580895,\n       0.13566025, 0.06382514, 0.00772762, 0.02964291, 0.01078758,\n       0.01402674, 0.13686576, 0.03332489, 0.03200224, 0.134541  ,\n       0.05662799, 0.02950882, 0.01367763, 0.01112765, 0.02093411,\n       0.02926928, 0.12704673, 0.02270265, 0.04797251, 0.05258158,\n       0.02171424, 0.00614627, 0.03042513, 0.02170294, 0.04046133,\n       0.14801244, 0.05943344, 0.04267581, 0.06153148, 0.0081397 ,\n       0.01750284, 0.01597265, 0.02235728, 0.04297566, 0.03853738,\n       0.02305712, 0.13778447, 0.05014651]), 'mean_score_time': array([0.00120101, 0.00160167, 0.00140038, 0.00140042, 0.00180078,\n       0.00199828, 0.00160177, 0.00180259, 0.0020004 , 0.00100052,\n       0.00129998, 0.0011009 , 0.00150056, 0.00140023, 0.00190053,\n       0.00130031, 0.0020031 , 0.00230119, 0.00120065, 0.00130067,\n       0.00139999, 0.00160127, 0.00200152, 0.00209999, 0.00130067,\n       0.00200353, 0.00220137, 0.00100005, 0.00110004, 0.00100064,\n       0.00130064, 0.00159969, 0.00200078, 0.00140073, 0.00180061,\n       0.00200119, 0.00099998, 0.0014004 , 0.00150249, 0.00129995,\n       0.00200002, 0.00220113, 0.00130103, 0.00180237, 0.0020005 ,\n       0.00100007, 0.00109997, 0.00100043, 0.00130031, 0.00160072,\n       0.00200107, 0.00140016, 0.0018007 , 0.00210254, 0.00100024,\n       0.00149798, 0.0015975 , 0.00130107, 0.00200028, 0.00259979,\n       0.00120082, 0.00200169, 0.00220253, 0.00120018, 0.00130002,\n       0.00120039, 0.00130055, 0.00180111, 0.00199845, 0.00130103,\n       0.00190084, 0.00200143, 0.00130112, 0.00120227, 0.00140071,\n       0.00110087, 0.00210259, 0.0022047 , 0.00150054, 0.00170236,\n       0.00200117, 0.00109963, 0.0013978 , 0.00140035, 0.0013006 ,\n       0.0014992 , 0.00199869, 0.0015013 , 0.00190029, 0.00220044,\n       0.00099998, 0.00109947, 0.00149798, 0.00160048, 0.00200174,\n       0.0020009 , 0.00120091, 0.00190156, 0.00200353, 0.00110028,\n       0.00150013, 0.00130141, 0.00130017, 0.00209901, 0.00200193,\n       0.00120182, 0.00200086, 0.00240166, 0.00120034, 0.00150003,\n       0.00150027, 0.0014034 , 0.00210068, 0.00239997, 0.00140128,\n       0.00190108, 0.00209801, 0.00109837, 0.00130122, 0.00139771,\n       0.00150003, 0.0020025 , 0.00230482, 0.00170035, 0.0017987 ,\n       0.00199995, 0.00120044, 0.00119927, 0.00140109, 0.00160081,\n       0.00219877, 0.00230455, 0.00149834, 0.00210068, 0.0020009 ,\n       0.00110071, 0.00130167, 0.00150113, 0.00110099, 0.00180135,\n       0.00210004, 0.00150108, 0.00180109, 0.00210102, 0.00110085,\n       0.00140088, 0.00150068, 0.00140104, 0.00200124, 0.00220175,\n       0.00140102, 0.00190103, 0.00200102, 0.00090094, 0.0010982 ,\n       0.00109749, 0.00150132, 0.0018012 , 0.00200105, 0.00149856,\n       0.00200047, 0.00210032, 0.00099976, 0.0016005 , 0.00110116,\n       0.00159931, 0.00209866, 0.00220082, 0.00120058, 0.00200436,\n       0.00210123, 0.00110085, 0.00140002, 0.00150006, 0.0014014 ,\n       0.00180011, 0.00220141, 0.00150154, 0.00190153, 0.00240161,\n       0.00110006, 0.00150218, 0.00160115, 0.00170078, 0.00210118,\n       0.00220056, 0.00130117, 0.00170207, 0.00210054, 0.0011004 ,\n       0.00130053, 0.00129817, 0.00130062, 0.00170102, 0.00200095,\n       0.00109999, 0.00170016, 0.0027014 , 0.00110033, 0.00140312,\n       0.0015012 , 0.00149839, 0.00190103, 0.00229924, 0.00140121,\n       0.00170143, 0.00220146, 0.00100036, 0.00110283, 0.00150058,\n       0.00110092, 0.00180116, 0.00210018, 0.00140088, 0.00200024,\n       0.00230124, 0.00110266, 0.00100021, 0.00120099, 0.00140164,\n       0.002301  , 0.00210061, 0.00129998, 0.00170186, 0.00220096,\n       0.00120041, 0.00120153, 0.00150187, 0.00149963, 0.00190055,\n       0.00200076, 0.00139992, 0.002002  , 0.00230379, 0.00110085,\n       0.00130196, 0.00160048, 0.00120049, 0.00200155, 0.00230157,\n       0.00159917, 0.00180082, 0.00200069, 0.00099986, 0.00110056,\n       0.00130119, 0.00139866, 0.00200078, 0.0021009 , 0.00150061,\n       0.00190265, 0.00209944, 0.00119977, 0.00159836, 0.00160165,\n       0.00160077, 0.00200114, 0.00240045, 0.0015017 , 0.0020005 ,\n       0.00200388, 0.00100014, 0.00120118, 0.00140007, 0.00110247,\n       0.00190148, 0.00210049, 0.00140181, 0.00200202, 0.00200245,\n       0.00100026, 0.00140085, 0.00130088, 0.00130107, 0.00210302,\n       0.00230222, 0.00139959, 0.00190125, 0.0020014 , 0.00100107,\n       0.00110118, 0.00100093, 0.00130076, 0.00200098, 0.0021009 ,\n       0.0012012 , 0.00180085, 0.00220087, 0.00109887, 0.00130026,\n       0.00140016, 0.00120029, 0.00190094, 0.00240054, 0.0013006 ,\n       0.00190394, 0.00220094, 0.00100224, 0.00140014, 0.00129995,\n       0.0017014 , 0.00170047, 0.00210142, 0.00140262, 0.00190156,\n       0.00220287, 0.00110025, 0.00140076, 0.00120051, 0.0015002 ,\n       0.00210118, 0.00240102, 0.00140164, 0.00200093, 0.00200057,\n       0.00110278, 0.00120029, 0.00120049, 0.00130086, 0.00180104,\n       0.00210121, 0.00160043, 0.0020014 , 0.00210156, 0.00110085,\n       0.00130286, 0.00170128, 0.001601  , 0.00220027, 0.00220029,\n       0.00150099, 0.0018013 , 0.00210068, 0.00100219, 0.00110078,\n       0.00110109, 0.00119867, 0.00180101, 0.0021003 , 0.00130048,\n       0.00180869, 0.00200105, 0.00100021, 0.00110068, 0.00130095,\n       0.00130002, 0.0021008 , 0.00220001, 0.00100112, 0.00190182,\n       0.0022012 , 0.00120089, 0.00130076, 0.00130069, 0.00119977,\n       0.00190074, 0.00200028, 0.00140095, 0.00190103, 0.00200186,\n       0.00110216, 0.00140052, 0.00170062, 0.00130198, 0.00200276,\n       0.00250082, 0.00170209, 0.00190043, 0.00240026, 0.00110345,\n       0.001401  , 0.00160081, 0.00140209, 0.00190084, 0.00210061,\n       0.00140011, 0.00190113, 0.0019978 , 0.00120196, 0.0012007 ,\n       0.00180137, 0.00150111, 0.00210302, 0.00240126, 0.00140054,\n       0.00180056, 0.00210066, 0.00100157, 0.00140183, 0.00099919,\n       0.0011008 , 0.00170095, 0.00179996, 0.00160265, 0.00190067,\n       0.00210149, 0.00090199, 0.00120053, 0.001402  , 0.0015008 ,\n       0.00200093, 0.00220113, 0.0012001 , 0.00180132, 0.00210171,\n       0.00100174, 0.00130079, 0.001402  , 0.00130072, 0.00160115,\n       0.00200117, 0.00120175, 0.00190306, 0.00210087, 0.00099986,\n       0.00110133, 0.0012002 , 0.00120046, 0.00190282, 0.00200412,\n       0.00150015, 0.0016006 , 0.00180039, 0.00100033, 0.00140042,\n       0.00120068, 0.00120044, 0.00180056, 0.00190039, 0.00130107,\n       0.00180044, 0.00220149, 0.00090022, 0.00130019, 0.00140014,\n       0.00120049, 0.00180051, 0.00200021, 0.001301  , 0.00170138,\n       0.00189934, 0.00089996, 0.00110066, 0.00109987, 0.00130022,\n       0.0016012 , 0.0020004 , 0.00109994, 0.00170026, 0.00220037,\n       0.00120018, 0.0009995 , 0.0016001 , 0.00160084, 0.00200088,\n       0.00210116, 0.00140071, 0.00200062, 0.00200045, 0.00100038,\n       0.00100079, 0.00110013, 0.00120063, 0.00160017, 0.00200257,\n       0.00130057, 0.0019017 , 0.00220006, 0.00110018, 0.00120032,\n       0.00130029, 0.00119989, 0.00200024, 0.00230072, 0.00120034,\n       0.00180125, 0.00190294, 0.00100012, 0.00100043, 0.0011003 ,\n       0.00119996, 0.00170014, 0.00200303, 0.00120034, 0.00170114,\n       0.00220041, 0.00109928, 0.00129993, 0.00120101, 0.00120046,\n       0.00200043, 0.00200059, 0.00140152, 0.00180087, 0.00210056,\n       0.00100024, 0.00140011, 0.00140011, 0.00130012, 0.00180037,\n       0.00190039, 0.00120029, 0.00179837, 0.00200047, 0.00110028,\n       0.00110075, 0.00130076, 0.00149968, 0.00219803, 0.00220068,\n       0.0011018 , 0.0017024 , 0.00200088, 0.0009001 , 0.00110018,\n       0.00120072, 0.0012001 , 0.00150077, 0.0017005 , 0.00129986,\n       0.00179818, 0.00200055, 0.00130041, 0.00120065, 0.00160112,\n       0.00140035, 0.00189953, 0.00230062, 0.00130215, 0.00170088,\n       0.00190182, 0.00100043, 0.00119972, 0.00140002, 0.00130122,\n       0.00189846, 0.00200148, 0.00130095, 0.00190015, 0.00200067,\n       0.00110099, 0.00120015, 0.0015027 , 0.00140057, 0.00200138,\n       0.0023006 , 0.00150025, 0.00160077, 0.00210044, 0.00100031,\n       0.00100026, 0.00130076, 0.00140219, 0.00150008, 0.00190048,\n       0.00110164, 0.00200067, 0.00200164, 0.0011004 , 0.00140054,\n       0.0014008 , 0.00140328, 0.0020009 , 0.00240161, 0.00150025,\n       0.00190034, 0.00220032, 0.00099983, 0.00130007, 0.00100005,\n       0.00139997, 0.00180085, 0.00200241, 0.00130153, 0.00190046,\n       0.00220087, 0.00100317, 0.00130138, 0.00130022, 0.00119848,\n       0.0020016 , 0.00220034, 0.00130005, 0.00200126, 0.00230095,\n       0.00100009, 0.00140047, 0.00140042, 0.0013016 , 0.00190089,\n       0.00200107, 0.00120254, 0.00170248, 0.00200117, 0.00100071,\n       0.00140052, 0.00170176, 0.00130107, 0.00200255, 0.00250099,\n       0.00150125, 0.00190139, 0.00190105, 0.0010011 , 0.00109971,\n       0.00130098, 0.0011009 , 0.00180123, 0.00200346, 0.00139992,\n       0.00180237, 0.00210071, 0.00119965, 0.0015012 , 0.00130074,\n       0.00120032, 0.00190048, 0.00240107, 0.00110102, 0.00190067,\n       0.00199976, 0.00100024, 0.00130053, 0.00120018, 0.00140045,\n       0.00200043, 0.00210054, 0.00139995, 0.00190177, 0.00210078,\n       0.00100019, 0.00130076, 0.00110037, 0.00190377, 0.00230203,\n       0.00240035, 0.00150058, 0.00200248, 0.00200062, 0.00089922,\n       0.00109725, 0.00100276, 0.0010005 , 0.0018013 , 0.00210149,\n       0.00140078, 0.00200112, 0.00220153, 0.00120008, 0.00130029,\n       0.00160017, 0.00170107, 0.00200136, 0.00220037, 0.00130033,\n       0.00170052, 0.00200093, 0.00090148, 0.00100169, 0.00150197,\n       0.00130067, 0.00170131, 0.00209959, 0.00130136, 0.00190074,\n       0.00200219, 0.00110049, 0.00109985, 0.00130141, 0.00150025,\n       0.00210187, 0.00260029, 0.00129812, 0.00200131, 0.00210078,\n       0.00090232, 0.00100157, 0.00120018, 0.00100021, 0.0012989 ,\n       0.00189831, 0.00160146, 0.00190148, 0.00200129, 0.00090106,\n       0.00169902, 0.00160058, 0.00120001, 0.00200095, 0.00240011,\n       0.00110197, 0.00170212, 0.00220292, 0.00110011, 0.00120132,\n       0.00140247, 0.00160446, 0.00170095, 0.00190034, 0.00140059,\n       0.00200069, 0.00200231, 0.00100098, 0.00159857, 0.0014044 ,\n       0.00140133, 0.002001  , 0.00220294, 0.00150125, 0.00190248,\n       0.00200107, 0.00100019, 0.00120184, 0.00100081, 0.00140018,\n       0.00170085, 0.00200181, 0.00140142, 0.0018014 , 0.00220184,\n       0.00110066, 0.00130129, 0.00170207, 0.00150361, 0.00200193,\n       0.00220129, 0.0011014 , 0.00160389, 0.00210137, 0.00100038,\n       0.00120277, 0.00130165, 0.00120091, 0.0018002 , 0.00200245,\n       0.00120132, 0.00190141, 0.00180244, 0.00110433, 0.00150218,\n       0.00130286, 0.00130122, 0.00210114, 0.00230045, 0.00140309,\n       0.00200031, 0.00200231, 0.00110331, 0.00130303, 0.00130208,\n       0.00140221, 0.00170057, 0.00200152, 0.00110128, 0.00180192,\n       0.00220177, 0.00110097, 0.001301  , 0.00130131, 0.00140269,\n       0.00210159, 0.00210083, 0.00130265, 0.00190337, 0.00200171,\n       0.00100105, 0.00110185, 0.00130184, 0.0014008 , 0.00200131,\n       0.00180116, 0.00120108, 0.00190091, 0.00190167, 0.00100036,\n       0.00160215, 0.00150332, 0.00150087, 0.00230303, 0.00229859,\n       0.00140183, 0.00150113, 0.00210226, 0.00100145, 0.0012018 ,\n       0.00100319, 0.00120213, 0.00200338, 0.00200143, 0.00170152,\n       0.00170207, 0.00220008, 0.00100143, 0.00140235, 0.00180156,\n       0.00160165, 0.0018013 , 0.00230186, 0.00140212, 0.0018033 ,\n       0.00200143, 0.00120239, 0.00130115, 0.00160139, 0.0013    ,\n       0.00180271, 0.00170197, 0.00120177, 0.00180233, 0.00210223,\n       0.00100119, 0.00120118, 0.00160289, 0.00160329, 0.00210233,\n       0.00230122, 0.00120175, 0.00190234, 0.00210538, 0.00120182,\n       0.00130165, 0.00129881, 0.00140159, 0.00180221, 0.00210176,\n       0.0012002 , 0.00180359, 0.00200064]), 'std_score_time': array([4.01992534e-04, 6.65487581e-04, 4.89862627e-04, 4.90018357e-04,\n       4.00186973e-04, 5.94633335e-06, 4.90920564e-04, 3.95813592e-04,\n       6.22176569e-07, 2.16488796e-06, 4.58125692e-04, 2.99653292e-04,\n       4.99964236e-04, 4.89833834e-04, 3.00204916e-04, 4.58532032e-04,\n       6.07588594e-06, 4.58273845e-04, 4.00138384e-04, 4.58043383e-04,\n       4.89833266e-04, 6.64291528e-04, 2.61826590e-06, 3.00010218e-04,\n       4.58245771e-04, 6.73100873e-06, 3.99514902e-04, 5.02944544e-07,\n       3.00177389e-04, 1.17770090e-06, 4.58417330e-04, 4.89903181e-04,\n       8.59395635e-06, 4.90301979e-04, 4.00162173e-04, 2.78694900e-06,\n       6.46813391e-07, 4.89503258e-04, 5.02219673e-04, 4.58453525e-04,\n       4.77432833e-07, 3.99693396e-04, 4.58220443e-04, 3.99939972e-04,\n       6.66293555e-07, 4.47128200e-04, 2.99168051e-04, 2.70791452e-07,\n       4.57492334e-04, 4.89815678e-04, 2.65588024e-06, 4.90086588e-04,\n       3.99256112e-04, 2.99253120e-04, 5.74682750e-07, 4.97762382e-04,\n       4.92018966e-04, 6.40912108e-04, 1.04904175e-06, 4.87630894e-04,\n       4.00063167e-04, 2.84318529e-06, 3.99296450e-04, 4.00019093e-04,\n       4.58406492e-04, 3.99732661e-04, 4.58586723e-04, 3.99638374e-04,\n       6.60075088e-06, 4.58272294e-04, 2.99589999e-04, 1.91982480e-06,\n       4.58314696e-04, 4.04004754e-04, 4.90418000e-04, 3.00297380e-04,\n       2.99128722e-04, 3.97678499e-04, 5.00704708e-04, 4.59465311e-04,\n       1.37478859e-06, 2.99279841e-04, 4.87283585e-04, 4.89736024e-04,\n       4.58293554e-04, 4.99088172e-04, 4.47385275e-04, 4.99894407e-04,\n       3.00075829e-04, 3.99614049e-04, 5.51978917e-07, 3.00803779e-04,\n       4.98225832e-04, 4.88987653e-04, 1.11037550e-06, 9.54865665e-07,\n       3.99533728e-04, 2.99999116e-04, 6.71832928e-06, 2.99065245e-04,\n       4.99725524e-04, 4.59796028e-04, 4.57741767e-04, 2.92796138e-04,\n       2.75174705e-06, 3.99621741e-04, 3.59023866e-06, 4.89532137e-04,\n       4.00054997e-04, 5.00011626e-04, 5.00587469e-04, 4.88067046e-04,\n       3.00582870e-04, 4.91177396e-04, 4.89904005e-04, 3.00527088e-04,\n       2.96442840e-04, 3.00628290e-04, 4.61916318e-04, 4.87015108e-04,\n       4.99822840e-04, 6.93093102e-06, 4.54803353e-04, 4.58124520e-04,\n       4.04182686e-04, 7.45087623e-06, 4.00307606e-04, 3.97799359e-04,\n       4.88803026e-04, 4.90720809e-04, 6.00073638e-04, 4.55560561e-04,\n       6.69257822e-04, 2.99941440e-04, 1.41934167e-06, 3.01226360e-04,\n       6.39640659e-04, 5.00353728e-04, 2.99864260e-04, 4.00175627e-04,\n       2.99882275e-04, 4.99726411e-04, 4.00818422e-04, 2.99749032e-04,\n       3.00228354e-04, 4.89066132e-04, 4.99893708e-04, 4.91658967e-04,\n       2.61783166e-06, 3.99854056e-04, 4.89144290e-04, 3.00290093e-04,\n       8.91025447e-06, 3.00328036e-04, 3.01156525e-04, 3.00933094e-04,\n       4.99918360e-04, 3.99628654e-04, 1.37375453e-06, 4.97279607e-04,\n       9.68883355e-06, 3.00137292e-04, 1.45435333e-06, 4.90470920e-04,\n       2.99589091e-04, 4.88025221e-04, 2.93385453e-04, 3.99663582e-04,\n       3.99461406e-04, 6.05925703e-06, 3.00475934e-04, 2.99123299e-04,\n       4.89814042e-04, 5.00417119e-04, 4.91072217e-04, 4.00030765e-04,\n       3.99483761e-04, 5.01283354e-04, 3.00379464e-04, 4.90544954e-04,\n       3.00407807e-04, 5.00884050e-04, 4.90559863e-04, 4.58719121e-04,\n       3.02553214e-04, 3.99673500e-04, 4.59168054e-04, 4.58420193e-04,\n       3.00940749e-04, 2.99900801e-04, 4.58237170e-04, 4.55537744e-04,\n       4.58745732e-04, 4.58455534e-04, 1.00135803e-06, 3.00113577e-04,\n       4.58464359e-04, 4.58699381e-04, 3.00242353e-04, 4.89900596e-04,\n       5.00275452e-04, 4.98229427e-04, 2.99895286e-04, 4.59357025e-04,\n       4.90789107e-04, 4.59292970e-04, 3.99704907e-04, 1.40969710e-06,\n       2.98737646e-04, 4.99370050e-04, 3.00759386e-04, 4.00557847e-04,\n       2.99947057e-04, 4.91211676e-04, 6.73185318e-06, 4.63353875e-04,\n       2.99120741e-04, 2.08067171e-06, 4.01640437e-04, 4.91559900e-04,\n       4.58240775e-04, 3.00360218e-04, 4.58282029e-04, 4.58481698e-04,\n       3.99652357e-04, 3.99308009e-04, 3.99542196e-04, 4.98347052e-04,\n       5.02299858e-04, 2.99735192e-04, 1.42573513e-06, 4.91476582e-04,\n       1.57067004e-06, 4.56562812e-04, 2.99675577e-04, 4.57820688e-04,\n       4.89085395e-04, 4.00042886e-04, 1.25005023e-06, 4.57455030e-04,\n       4.88801398e-04, 4.00329598e-04, 9.84469548e-07, 9.77516174e-07,\n       2.99687800e-04, 4.59781464e-04, 4.88043032e-04, 1.79828310e-06,\n       2.99552575e-04, 5.01348944e-04, 3.00288499e-04, 3.00475693e-04,\n       4.00281829e-04, 4.92449705e-04, 4.90331986e-04, 4.90001184e-04,\n       1.56777212e-06, 4.90232498e-04, 5.00928036e-04, 8.95771949e-06,\n       6.29844851e-06, 3.44677741e-07, 4.00653955e-04, 4.89872767e-04,\n       3.00484232e-04, 2.99888613e-04, 2.99608277e-04, 4.91960238e-04,\n       2.63654731e-06, 2.66229335e-06, 9.60800251e-07, 4.89573092e-04,\n       4.59617238e-04, 4.57930031e-04, 3.00801243e-04, 4.61519707e-04,\n       4.90067717e-04, 3.00048152e-04, 2.94183795e-06, 1.56268784e-06,\n       2.99481297e-04, 1.99133043e-06, 4.57768860e-04, 1.39856428e-06,\n       2.99948383e-04, 4.02516344e-04, 3.99924963e-04, 3.99460087e-04,\n       3.00439765e-04, 4.57263515e-04, 4.88676472e-04, 3.99959460e-04,\n       2.99385703e-04, 4.90252562e-04, 4.57826991e-04, 3.00469280e-04,\n       3.99842020e-04, 7.16450805e-06, 4.91264490e-04, 4.58297656e-04,\n       4.58341953e-04, 4.58355797e-04, 2.99935064e-04, 4.90375228e-04,\n       3.00387788e-04, 3.98524486e-04, 2.99946716e-04, 4.90382134e-04,\n       4.00807402e-04, 5.00178598e-04, 3.00890236e-04, 4.89328205e-04,\n       4.90736127e-04, 1.13468209e-06, 6.21719590e-07, 2.99179755e-04,\n       3.99840130e-04, 4.00342931e-04, 4.58590967e-04, 4.00263903e-04,\n       2.99687952e-04, 4.90311353e-04, 1.69008337e-06, 3.00214952e-04,\n       3.01183558e-04, 4.59261819e-04, 4.59200596e-04, 4.90195283e-04,\n       3.99935781e-04, 3.99983561e-04, 4.99920159e-04, 4.00747559e-04,\n       2.99861644e-04, 1.64922939e-06, 2.99696801e-04, 3.00782893e-04,\n       4.00808837e-04, 4.00127468e-04, 2.99828840e-04, 4.58112266e-04,\n       5.90169552e-04, 1.15331522e-06, 5.62182718e-07, 2.99807343e-04,\n       4.58217116e-04, 4.58406541e-04, 2.99742322e-04, 4.00904669e-04,\n       2.56784668e-06, 3.00564116e-04, 4.00545359e-04, 4.00438117e-04,\n       4.58445746e-04, 4.57710984e-04, 4.00102305e-04, 3.00274245e-04,\n       6.97552626e-07, 4.90466771e-04, 2.99734377e-04, 1.07790514e-06,\n       3.00507279e-04, 4.89649516e-04, 4.58970459e-04, 4.58378087e-04,\n       6.00682350e-06, 5.00251267e-04, 4.58641433e-04, 3.00249558e-04,\n       4.89561121e-04, 2.99176347e-04, 4.89363131e-04, 4.89650273e-04,\n       4.89826637e-04, 3.00306823e-04, 3.00123826e-04, 4.90769217e-04,\n       3.00481073e-04, 1.58020266e-05, 3.98948882e-04, 3.99342088e-04,\n       4.00611359e-04, 5.00465966e-04, 2.98990227e-04, 4.88987383e-04,\n       4.89825537e-04, 4.00198783e-04, 3.00126129e-04, 2.12834491e-06,\n       4.89748742e-04, 7.02623234e-06, 2.99928515e-04, 4.58410770e-04,\n       4.01212712e-04, 4.90961597e-04, 2.99933055e-04, 2.99908323e-04,\n       3.00675129e-04, 3.99722797e-04, 4.90393556e-04, 5.00491707e-04,\n       1.24000584e-06, 4.00046608e-04, 4.00233876e-04, 3.99635243e-04,\n       2.99601169e-04, 4.79239136e-06, 4.58428841e-04, 4.92262479e-04,\n       4.57956182e-04, 4.91041653e-04, 1.53867748e-06, 4.05465129e-04,\n       3.00267581e-04, 2.99717646e-04, 6.74770913e-07, 3.01105771e-04,\n       4.00006895e-04, 4.00233581e-04, 3.00701675e-04, 1.23639977e-05,\n       4.99988118e-04, 4.90057407e-04, 3.99697142e-04, 5.22892766e-07,\n       6.63140599e-04, 3.99947874e-04, 3.99947547e-04, 4.00019207e-04,\n       2.99994810e-04, 4.59597714e-04, 3.99721105e-04, 3.98982220e-04,\n       3.00074306e-04, 4.58662028e-04, 4.90106226e-04, 3.99984879e-04,\n       3.99757029e-04, 1.21218908e-06, 4.58755893e-04, 4.58902275e-04,\n       2.99640012e-04, 2.99986648e-04, 3.00050350e-04, 3.00074476e-04,\n       4.57969997e-04, 4.90501927e-04, 4.77432833e-07, 3.00051979e-04,\n       4.58474244e-04, 3.99829109e-04, 3.99601736e-04, 1.44159474e-06,\n       4.89940655e-04, 6.62773883e-04, 2.80291436e-06, 2.99790018e-04,\n       4.90710638e-04, 9.15974269e-07, 4.47502619e-04, 7.57330903e-07,\n       1.63868335e-06, 3.00066089e-04, 4.00150791e-04, 4.89853436e-04,\n       7.00496345e-06, 4.58153010e-04, 3.00124941e-04, 3.99745178e-04,\n       3.00288465e-04, 4.00066493e-04, 4.58443043e-04, 4.00102450e-04,\n       7.77697870e-07, 4.58688577e-04, 3.99819629e-04, 4.00374638e-04,\n       3.00979812e-04, 4.47394847e-04, 3.76218172e-07, 3.00011014e-04,\n       3.99828369e-04, 4.58761056e-04, 3.53157395e-06, 3.99698550e-04,\n       4.58220505e-04, 3.99510577e-04, 2.99716622e-04, 4.58417330e-04,\n       4.01871644e-04, 4.00174153e-04, 1.01824553e-06, 1.04714352e-06,\n       4.89124756e-04, 3.99876664e-04, 2.99661657e-04, 5.74682750e-07,\n       4.89687400e-04, 4.90077207e-04, 4.59021421e-04, 4.00104397e-04,\n       2.99915369e-04, 4.00138764e-04, 3.98507857e-04, 6.14361702e-07,\n       3.00177919e-04, 3.00018544e-04, 4.57715499e-04, 4.99483025e-04,\n       3.94881945e-04, 3.99972959e-04, 2.99592351e-04, 4.59863511e-04,\n       1.22987942e-06, 3.00035399e-04, 2.99891742e-04, 4.02194333e-04,\n       3.99935667e-04, 4.99418034e-04, 4.58214374e-04, 4.57996059e-04,\n       3.99051247e-04, 1.06863665e-06, 4.58730445e-04, 3.99900336e-04,\n       4.90346099e-04, 4.90417713e-04, 2.99799770e-04, 4.58646587e-04,\n       4.58632395e-04, 4.58724682e-04, 3.00802901e-04, 4.47928812e-04,\n       3.93608192e-04, 4.90106032e-04, 4.58825106e-04, 2.99545995e-04,\n       7.59953377e-07, 4.58891656e-04, 2.99836513e-04, 9.12243198e-07,\n       2.99860924e-04, 3.99316513e-04, 5.02789158e-04, 4.90291936e-04,\n       1.58579723e-06, 4.58037389e-04, 4.99893438e-04, 4.90341071e-04,\n       2.99785107e-04, 8.34124359e-07, 3.05324756e-07, 4.57767569e-04,\n       4.91311958e-04, 5.00442185e-04, 3.00106583e-04, 3.00601378e-04,\n       1.05660056e-06, 1.13468209e-06, 3.01886659e-04, 4.89289844e-04,\n       4.89270409e-04, 4.92550994e-04, 9.54865665e-07, 4.90593771e-04,\n       4.99797115e-04, 3.00137861e-04, 4.00030893e-04, 1.52364209e-06,\n       4.57804629e-04, 6.24001137e-07, 4.89561473e-04, 3.99688337e-04,\n       3.28299873e-06, 4.60135220e-04, 3.00495582e-04, 4.00055001e-04,\n       7.62939453e-07, 4.59344677e-04, 4.58230216e-04, 4.01006425e-04,\n       1.51559973e-06, 3.99722047e-04, 4.58443006e-04, 1.42832430e-06,\n       4.57543534e-04, 3.85177002e-07, 4.89882606e-04, 4.89775991e-04,\n       4.58367107e-04, 2.99844791e-04, 9.68167329e-07, 4.01405018e-04,\n       4.59546626e-04, 1.34553443e-06, 1.00617160e-06, 4.89519083e-04,\n       4.59047173e-04, 4.59645662e-04, 1.24366773e-06, 4.99369754e-04,\n       5.00900629e-04, 3.00568866e-04, 3.00377534e-04, 1.23172678e-06,\n       3.00051032e-04, 4.58199659e-04, 3.00926265e-04, 4.00539416e-04,\n       6.72446067e-06, 4.89940400e-04, 4.00151973e-04, 2.99694278e-04,\n       4.00162698e-04, 5.01142109e-04, 4.57732255e-04, 4.00007140e-04,\n       2.99868721e-04, 4.90116080e-04, 3.00965434e-04, 3.00729065e-04,\n       5.07579660e-06, 6.31246676e-07, 4.58343839e-04, 4.00317126e-04,\n       4.90291962e-04, 7.08869398e-07, 2.99908759e-04, 4.89823585e-04,\n       2.99981288e-04, 3.00717592e-04, 2.91026965e-07, 4.57663498e-04,\n       3.00305327e-04, 3.00178327e-04, 4.60449923e-04, 4.89920998e-04,\n       5.00657472e-04, 5.84295793e-06, 4.89403136e-06, 2.99741355e-04,\n       3.01038174e-04, 6.06956764e-06, 1.82884301e-06, 4.00092203e-04,\n       2.99672523e-04, 4.89922045e-04, 1.21593475e-06, 4.00140117e-04,\n       4.00006827e-04, 4.57820563e-04, 4.89853169e-04, 4.58644424e-04,\n       1.25277564e-06, 4.00484981e-04, 4.58777058e-04, 4.57761601e-04,\n       1.29823240e-06, 3.00497909e-04, 2.88909806e-06, 4.99512882e-04,\n       4.58508611e-04, 4.59006614e-04, 2.96332447e-04, 4.58159462e-04,\n       3.00595362e-04, 3.11188766e-06, 2.99789835e-04, 3.00002780e-04,\n       4.59640961e-04, 5.00751493e-04, 3.07069125e-04, 4.90154843e-04,\n       4.59488276e-04, 2.29539027e-06, 5.38526839e-04, 3.00835958e-04,\n       2.77314733e-06, 3.99782438e-04, 6.46813391e-07, 4.54604641e-04,\n       2.99291040e-04, 4.90871709e-04, 3.00362167e-04, 1.02270177e-06,\n       3.00355257e-04, 9.00179976e-04, 4.85830237e-04, 4.00281915e-04,\n       1.29801346e-06, 4.90555248e-04, 3.00888819e-04, 4.59336739e-04,\n       3.99758900e-04, 2.99914800e-04, 3.99270719e-04, 4.87833686e-04,\n       4.88846517e-04, 4.58095699e-04, 3.01095560e-04, 4.89353320e-04,\n       1.17890695e-06, 2.61185350e-06, 2.20379257e-06, 4.92142005e-04,\n       4.86246193e-04, 4.89426298e-04, 1.62334867e-06, 4.04175369e-04,\n       4.98797675e-04, 3.00786997e-04, 1.00277619e-06, 2.70791452e-07,\n       3.99962917e-04, 1.84077054e-06, 4.90505975e-04, 6.41806461e-04,\n       3.04914899e-06, 4.90275702e-04, 4.00444984e-04, 3.98910989e-04,\n       2.99973577e-04, 4.56982955e-04, 4.59977301e-04, 5.02479463e-04,\n       1.97772487e-06, 3.99544718e-04, 3.00920729e-04, 4.91896992e-04,\n       3.00824311e-04, 1.46758207e-06, 4.00577013e-04, 4.58544724e-04,\n       4.00664873e-04, 6.00902850e-04, 4.47237572e-04, 3.99592740e-04,\n       3.00021670e-04, 4.00907048e-04, 2.98687071e-04, 5.00585561e-04,\n       4.59118334e-04, 4.58409294e-04, 3.00957120e-04, 4.58132077e-04,\n       4.92666816e-04, 6.58868352e-06, 1.51559973e-06, 3.05925844e-04,\n       4.59055655e-04, 4.58316495e-04, 4.90119527e-04, 6.41413299e-04,\n       1.50033309e-06, 2.99687534e-04, 4.00165067e-04, 4.00024422e-04,\n       2.99871129e-04, 4.57925157e-04, 4.59075249e-04, 4.91090895e-04,\n       3.00753183e-04, 7.00493361e-04, 4.57759364e-04, 3.00917156e-04,\n       1.72849359e-06, 1.36149326e-06, 2.99419019e-04, 4.57588675e-04,\n       4.91027427e-04, 1.68401846e-06, 4.01333900e-04, 4.01535169e-04,\n       3.00095051e-04, 3.00111451e-04, 1.27414601e-06, 4.90502077e-04,\n       4.99775641e-04, 4.98189863e-04, 4.58579543e-04, 4.59856660e-04,\n       4.90138594e-04, 5.02635921e-04, 2.99582128e-04, 2.09808350e-06,\n       3.99928886e-04, 1.16337518e-06, 4.00061153e-04, 1.22408844e-06,\n       1.98389474e-06, 4.59205511e-04, 4.59248437e-04, 4.00329030e-04,\n       2.56352641e-06, 4.89272004e-04, 3.98793287e-04, 4.89459672e-04,\n       4.00809469e-04, 4.57941235e-04, 4.90147575e-04, 3.99960682e-04,\n       1.39102479e-06, 3.99748857e-04, 4.57936024e-04, 4.90316211e-04,\n       4.58110057e-04, 4.00557723e-04, 4.59601421e-04, 4.01792185e-04,\n       4.00248107e-04, 2.99521385e-04, 1.85920636e-06, 4.00416965e-04,\n       4.90127471e-04, 4.90218540e-04, 2.98677600e-04, 4.57217268e-04,\n       4.02404630e-04, 3.00815339e-04, 2.99542563e-04, 3.99982221e-04,\n       4.58804951e-04, 4.55695976e-04, 4.89601687e-04, 4.00545923e-04,\n       2.99584556e-04, 3.99948456e-04, 4.00411349e-04, 1.34890987e-06]), 'param_reduce_dim': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_reduce_dim__n_components': masked_array(data=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n                   5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n                   6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n                   7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n                   8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n                   9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\n                   10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n                   10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n                   11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,\n                   12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13,\n                   13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n                   13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n                   14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15,\n                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16,\n                   16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n                   17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n                   17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n                   18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19,\n                   19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20,\n                   20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n                   20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n                   21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22,\n                   22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23,\n                   23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n                   5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n                   6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n                   7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n                   8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n                   9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\n                   10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n                   10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n                   11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,\n                   12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13,\n                   13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n                   13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n                   14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15,\n                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16,\n                   16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n                   17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n                   17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n                   18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19,\n                   19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20,\n                   20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n                   20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n                   21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22,\n                   22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23,\n                   23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__learning_rate': masked_array(data=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__max_depth': masked_array(data=[5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10,\n                   15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5,\n                   10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__n_estimators': masked_array(data=[100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_scaler': masked_array(data=[MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler()],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 20, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 21, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 22, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'reduce_dim__n_components': 23, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}], 'split0_test_score': array([-1.81904069, -1.86684739, -1.82802805, -1.91554664, -1.92163614,\n       -1.94556357, -2.21316642, -2.24426832, -2.1993866 , -1.95916996,\n       -1.90646618, -1.88279873, -2.00104947, -1.98700149, -1.98187422,\n       -1.99370713, -1.96873684, -1.96256697, -1.75217035, -1.76825997,\n       -1.80673467, -2.04601737, -2.05015036, -2.03366424, -2.15366971,\n       -2.17530641, -2.1641087 , -1.95163594, -1.88650355, -1.86090675,\n       -1.95670481, -1.90070766, -1.87708932, -1.9586484 , -1.90993657,\n       -1.89165222, -1.62538255, -1.75649219, -1.83766152, -1.93124619,\n       -1.93763804, -1.93233969, -2.15594154, -2.14215355, -2.15976291,\n       -1.94921521, -1.88234783, -1.85708369, -1.95045879, -1.8939124 ,\n       -1.8714843 , -1.95470544, -1.90017589, -1.88133991, -1.58127944,\n       -1.69032111, -1.72409139, -1.8434742 , -1.83055331, -1.9519348 ,\n       -1.99880975, -1.96913987, -1.96210198, -1.94983181, -1.88008347,\n       -1.85394164, -1.95910912, -1.90538754, -1.88670818, -1.9558214 ,\n       -1.89863561, -1.87799856, -1.580962  , -1.6526468 , -1.65232807,\n       -2.0138332 , -1.9069732 , -1.85594942, -1.96360439, -2.02353048,\n       -1.96457536, -1.95146026, -1.87523946, -1.84901662, -1.95649696,\n       -1.90533671, -1.89002595, -1.95377044, -1.90056774, -1.87744624,\n       -1.5864637 , -1.65629244, -1.65727476, -1.67910269, -1.68260975,\n       -1.72831691, -1.98373631, -1.92354807, -1.94811281, -1.95099826,\n       -1.87780756, -1.8535089 , -1.96447862, -1.92455526, -1.91124459,\n       -1.95953912, -1.90740063, -1.88571019, -1.67948089, -1.74944923,\n       -1.75008212, -1.73886361, -1.80774377, -1.74563064, -1.83500137,\n       -1.86896318, -1.86579429, -1.94667233, -1.87312921, -1.84807572,\n       -1.96178174, -1.91045285, -1.89419515, -1.95476044, -1.89654319,\n       -1.8768308 , -1.62138844, -1.69650346, -1.76669081, -1.53685301,\n       -1.51079353, -1.52515806, -1.83674787, -1.83992433, -1.83961625,\n       -1.94308092, -1.86316177, -1.8364875 , -1.95559022, -1.89636528,\n       -1.87282278, -1.94756113, -1.88479797, -1.86056288, -1.61915424,\n       -1.64542075, -1.68508105, -1.66434129, -1.63966066, -1.65917684,\n       -1.76948977, -1.79012812, -1.79880982, -1.93381414, -1.85364372,\n       -1.82746004, -1.93870745, -1.86473615, -1.83796149, -1.92918588,\n       -1.85619996, -1.82389004, -1.71795289, -1.74805764, -1.77207507,\n       -1.62903108, -1.62745672, -1.63942677, -1.65289849, -1.71519781,\n       -1.69507044, -1.93623789, -1.86129556, -1.83666551, -1.92544132,\n       -1.84065919, -1.80787775, -1.9266261 , -1.84692306, -1.80959333,\n       -1.73058067, -1.78825632, -1.81234607, -1.52646822, -1.4718298 ,\n       -1.55697919, -1.53444853, -1.55540881, -1.53595172, -1.93426309,\n       -1.86334132, -1.83892827, -1.90845701, -1.80593148, -1.76505929,\n       -1.91243423, -1.80969967, -1.76935684, -1.74937625, -1.77820505,\n       -1.81909162, -1.53644764, -1.55570495, -1.54461718, -1.49854761,\n       -1.54438819, -1.54687038, -1.93219677, -1.86012157, -1.83611251,\n       -1.90707698, -1.80254961, -1.75752074, -1.91061261, -1.80910311,\n       -1.76833206, -1.67138343, -1.73312042, -1.72943267, -1.35805243,\n       -1.32492076, -1.37873097, -1.33949582, -1.34359742, -1.39105503,\n       -1.93159586, -1.85705322, -1.82254895, -1.90089247, -1.79766298,\n       -1.74785302, -1.90528913, -1.79730023, -1.74654146, -1.67777638,\n       -1.69018408, -1.69565926, -1.50630893, -1.51322797, -1.48858559,\n       -1.59391705, -1.57231655, -1.51860194, -1.93750341, -1.86698219,\n       -1.83574322, -1.91209582, -1.81788308, -1.77554166, -1.91347887,\n       -1.81947878, -1.77663443, -1.67714895, -1.69901625, -1.66364601,\n       -1.35845816, -1.38736968, -1.43935615, -1.41565766, -1.41788346,\n       -1.40713938, -1.93835032, -1.86796066, -1.83627992, -1.90231578,\n       -1.79878306, -1.74816885, -1.90252361, -1.79786069, -1.74819936,\n       -1.51098274, -1.57504582, -1.60920179, -1.54842193, -1.57128403,\n       -1.64008429, -1.53222718, -1.54909573, -1.48757524, -1.92428013,\n       -1.83163463, -1.7910304 , -1.91049836, -1.80928493, -1.76695433,\n       -1.91095232, -1.81123954, -1.76519094, -1.5873551 , -1.65023507,\n       -1.67496836, -1.58338199, -1.56548052, -1.59469407, -1.43310608,\n       -1.48222305, -1.43274233, -1.92400327, -1.8313205 , -1.7904166 ,\n       -1.91292483, -1.81658304, -1.77436331, -1.91404887, -1.81575575,\n       -1.77125523, -1.51841226, -1.5880991 , -1.60795757, -1.57209079,\n       -1.4947182 , -1.57492188, -1.48081165, -1.48873012, -1.50975219,\n       -1.92396927, -1.83107576, -1.79001047, -1.91380905, -1.81532494,\n       -1.77549547, -1.91342825, -1.8166432 , -1.77208329, -1.53042374,\n       -1.62117329, -1.61770145, -1.52194082, -1.5551874 , -1.57154473,\n       -1.48900213, -1.43559397, -1.46380058, -1.92171607, -1.82769321,\n       -1.78848384, -1.91499692, -1.81851655, -1.77379282, -1.91526242,\n       -1.81906332, -1.77415848, -1.58694858, -1.66628931, -1.6687703 ,\n       -1.69927143, -1.62852997, -1.6817622 , -1.55319629, -1.49334696,\n       -1.57426724, -1.9270488 , -1.84015799, -1.80537048, -1.92763186,\n       -1.84288662, -1.80670662, -1.92678062, -1.83661256, -1.80287302,\n       -1.64948053, -1.7147278 , -1.72955883, -1.67337627, -1.61043654,\n       -1.71431999, -1.62857346, -1.67307451, -1.58563256, -1.9270341 ,\n       -1.84035478, -1.80547829, -1.92780998, -1.84500067, -1.8090124 ,\n       -1.92564418, -1.84244418, -1.80511797, -1.64656785, -1.720407  ,\n       -1.70656421, -1.74336971, -1.65054997, -1.6765674 , -1.74349226,\n       -1.56839775, -1.70907691, -1.9270987 , -1.84031372, -1.80458651,\n       -1.92655124, -1.84416603, -1.80766765, -1.92645529, -1.84260958,\n       -1.80521444, -1.65322239, -1.68200147, -1.6718504 , -1.69498625,\n       -1.78116697, -1.67375543, -1.57354921, -1.68523527, -1.63410123,\n       -1.92705061, -1.83823624, -1.80011204, -1.92577375, -1.84568239,\n       -1.80844104, -1.92643436, -1.84184866, -1.80625416, -1.64438926,\n       -1.69698789, -1.72418815, -1.87884546, -1.90834771, -1.90023443,\n       -2.10758752, -2.08343771, -2.07704479, -1.92531075, -1.83056831,\n       -1.78918378, -1.95653735, -1.90276972, -1.88622293, -1.95434434,\n       -1.89870134, -1.88077436, -1.43576108, -1.51554552, -1.55412914,\n       -1.96571282, -1.93230494, -1.95143463, -2.11362234, -2.12665406,\n       -2.09645961, -1.9299842 , -1.85199737, -1.82340091, -1.95326486,\n       -1.89829175, -1.87831406, -1.95143114, -1.89841107, -1.87711625,\n       -1.60086096, -1.67855393, -1.7068719 , -1.83323111, -1.85560789,\n       -1.87421414, -1.91029194, -1.93484867, -1.8907036 , -1.9431739 ,\n       -1.87371834, -1.84798828, -1.9478354 , -1.88687016, -1.86157429,\n       -1.94681672, -1.88408087, -1.85889248, -1.60953402, -1.66526622,\n       -1.64838773, -1.97152775, -1.98499002, -1.92119196, -2.09730209,\n       -2.11565951, -2.10461938, -1.93157388, -1.85639599, -1.82457179,\n       -1.9633093 , -1.91502381, -1.89785871, -1.96215641, -1.91682645,\n       -1.8952789 , -1.57220197, -1.57782176, -1.60965453, -1.91843646,\n       -1.95091028, -1.92709996, -2.07121626, -2.07773777, -2.10786923,\n       -1.94356426, -1.87635528, -1.84888561, -1.96697421, -1.92326821,\n       -1.89909364, -1.96407293, -1.92269869, -1.90604896, -1.55050951,\n       -1.5731161 , -1.61730595, -1.79055843, -1.76028579, -1.80377994,\n       -2.01116911, -2.02741878, -2.0507509 , -1.92634309, -1.84466737,\n       -1.81201807, -1.96481941, -1.91754586, -1.8973763 , -1.96635285,\n       -1.92399443, -1.90757352, -1.4514942 , -1.48021342, -1.5073497 ,\n       -1.6967209 , -1.71855749, -1.72398586, -2.01144473, -2.04002637,\n       -2.05875454, -1.92634309, -1.84150626, -1.80664965, -1.96999344,\n       -1.92170099, -1.90008639, -1.97016728, -1.93011162, -1.91362446,\n       -1.5505909 , -1.57520621, -1.56944558, -1.78619528, -1.81664   ,\n       -1.79517687, -2.04610808, -2.08520674, -2.09666471, -1.9286719 ,\n       -1.8447822 , -1.80902953, -1.97198132, -1.92795691, -1.91002354,\n       -1.97343241, -1.93732454, -1.92126168, -1.65640455, -1.6959527 ,\n       -1.71997514, -1.74176401, -1.88395334, -1.84104474, -2.08932733,\n       -2.04466783, -2.06923711, -1.92602358, -1.83398994, -1.79617023,\n       -1.97052984, -1.92848198, -1.909738  , -1.96970121, -1.92765122,\n       -1.91048866, -1.61319331, -1.68694941, -1.69600249, -1.89277587,\n       -1.89667113, -1.8266879 , -2.02218484, -2.02207899, -2.02035934,\n       -1.92471471, -1.83594954, -1.7982613 , -1.96518318, -1.91583814,\n       -1.89616404, -1.96354981, -1.91742634, -1.89582189, -1.47986888,\n       -1.55432882, -1.55807994, -1.92961233, -1.8825816 , -1.82375547,\n       -2.01226593, -2.02789266, -2.03007843, -1.92504886, -1.83544387,\n       -1.79825298, -1.96233573, -1.91296015, -1.89231015, -1.96420789,\n       -1.91606547, -1.89814826, -1.49823845, -1.5210216 , -1.53350368,\n       -1.85190275, -1.85983632, -1.89374886, -1.99562393, -1.98142289,\n       -1.96533624, -1.92512617, -1.83601877, -1.79932104, -1.95885505,\n       -1.90758244, -1.88434226, -1.96048055, -1.90975784, -1.88889287,\n       -1.4668165 , -1.49771353, -1.49946858, -1.91149908, -1.8341733 ,\n       -1.87383276, -2.00147796, -2.04708096, -2.04974322, -1.92607907,\n       -1.83770563, -1.80181533, -1.95583775, -1.90219258, -1.87665737,\n       -1.9571344 , -1.90611497, -1.88249907, -1.45194705, -1.44746774,\n       -1.44344072, -1.89035876, -1.8805586 , -1.88305261, -1.90188198,\n       -1.96484254, -1.97787454, -1.93579314, -1.84610504, -1.81042755,\n       -1.95347854, -1.89617728, -1.87509181, -1.9558622 , -1.90119443,\n       -1.87613684, -1.48040898, -1.55338151, -1.53421009, -1.88040644,\n       -1.85375075, -1.83154011, -1.95881398, -1.9486574 , -1.92522287,\n       -1.93602643, -1.84603553, -1.81030501, -1.95258464, -1.89425236,\n       -1.8717588 , -1.95623139, -1.90012724, -1.87594219, -1.53414448,\n       -1.57745068, -1.5334502 , -1.87976068, -1.91692184, -1.92999106,\n       -1.93158426, -2.02062884, -1.94716643, -1.9361896 , -1.85074544,\n       -1.81759478, -1.95994499, -1.90669923, -1.88565916, -1.96302099,\n       -1.91050882, -1.89230543, -1.56936338, -1.5893659 , -1.61711448,\n       -1.81751536, -1.78134319, -1.84073588, -1.78326597, -1.83865438,\n       -1.83370547, -1.91497581, -1.82677326, -1.7904896 , -1.92582015,\n       -1.84320922, -1.8096134 , -1.9278667 , -1.84962461, -1.81935426,\n       -1.54824442, -1.54177115, -1.5580843 , -1.83686777, -1.92675574,\n       -1.8951184 , -1.81148612, -1.87002016, -1.7888312 , -1.91502781,\n       -1.82652623, -1.78999278, -1.92665802, -1.84906734, -1.82015803,\n       -1.92915145, -1.85065068, -1.82147382, -1.49163033, -1.49921592,\n       -1.51239303, -1.87132395, -1.93079212, -1.95882631, -1.82192902,\n       -1.84517899, -1.83632922, -1.91670569, -1.82975735, -1.79590461,\n       -1.93326964, -1.86090619, -1.82768204, -1.93551257, -1.86186806,\n       -1.82820036, -1.67289745, -1.69851863, -1.7189099 , -1.86797801,\n       -1.89079871, -1.9074038 , -1.8556979 , -1.88998517, -1.89053304,\n       -1.91677518, -1.83001102, -1.79635117, -1.93622283, -1.86818788,\n       -1.8400694 , -1.93642448, -1.86954632, -1.83728008, -1.61929509,\n       -1.59349313, -1.55825449, -1.74853637, -1.86042838, -1.93661692,\n       -1.92052128, -1.92362573, -1.89830786, -1.91571507, -1.88296756,\n       -1.79764104, -1.93655586, -1.87266746, -1.81017061, -1.93235506,\n       -1.86859176, -1.83812294, -1.53540298, -1.69493578, -1.71317284,\n       -1.85875567, -1.84628314, -1.8158527 , -1.95143866, -1.874543  ,\n       -1.94669291, -1.93349408, -1.83618481, -1.79587911, -1.90720612,\n       -1.85995193, -1.85788034, -1.92446167, -1.86910993, -1.83483598,\n       -1.61171783, -1.60242766, -1.51939205, -1.86055527, -1.94806685,\n       -1.89350646, -1.80674838, -1.8371006 , -1.81009478, -1.93034759,\n       -1.83144311, -1.822073  , -1.94098932, -1.86483032, -1.79682831,\n       -1.9406465 , -1.86784723, -1.86883091]), 'split1_test_score': array([-1.71851122, -1.78527745, -1.80807783, -1.82081962, -1.79395518,\n       -1.83432498, -1.80772198, -1.79638748, -1.80136194, -1.95028489,\n       -1.91108009, -1.88888343, -1.91021211, -1.84912843, -1.82611945,\n       -1.90885653, -1.84115065, -1.81533072, -1.40895155, -1.4322473 ,\n       -1.42030215, -1.43970185, -1.54755173, -1.4671878 , -1.48639559,\n       -1.50935498, -1.50741411, -1.90761898, -1.83206497, -1.79663939,\n       -1.88587277, -1.7995098 , -1.75558154, -1.88155291, -1.79045076,\n       -1.7479114 , -1.42243267, -1.34742326, -1.56270429, -1.15604706,\n       -1.24334443, -1.14891796, -1.52174176, -1.50043815, -1.52551906,\n       -1.90409397, -1.82733717, -1.7921244 , -1.86237559, -1.74159318,\n       -1.69119929, -1.87102601, -1.76359742, -1.71876371, -1.46508561,\n       -1.45943293, -1.41860279, -1.06839523, -1.04618472, -0.98544882,\n       -0.98193853, -0.87658071, -0.9077534 , -1.89902417, -1.81840841,\n       -1.78186814, -1.83106604, -1.68896482, -1.62436188, -1.83888477,\n       -1.69683436, -1.6356365 , -1.31591979, -1.35589428, -1.37463619,\n       -1.16367097, -1.1384909 , -1.14935476, -1.08442433, -1.12362655,\n       -1.06194891, -1.89765441, -1.81556901, -1.77816121, -1.84386749,\n       -1.70795216, -1.64728119, -1.84425499, -1.71672536, -1.65416036,\n       -1.35398018, -1.35335981, -1.35165949, -1.33680161, -1.37832842,\n       -1.32064677, -1.37110356, -1.28734303, -1.34268099, -1.89519126,\n       -1.81138645, -1.77360862, -1.86601257, -1.75543808, -1.70303584,\n       -1.86629281, -1.75660398, -1.70879861, -1.29888163, -1.29763929,\n       -1.3296081 , -1.42489181, -1.4091683 , -1.42108412, -1.44629642,\n       -1.37727352, -1.38634963, -1.89570577, -1.81380622, -1.77891667,\n       -1.88231258, -1.78274343, -1.74033052, -1.88236093, -1.78651343,\n       -1.74474947, -1.34405383, -1.40798318, -1.3950053 , -1.27378114,\n       -1.26805358, -1.26759676, -1.22552119, -1.27679375, -1.2634417 ,\n       -1.89659711, -1.81402757, -1.77619793, -1.85712481, -1.74348776,\n       -1.69415551, -1.8644027 , -1.75051422, -1.70162965, -1.3203091 ,\n       -1.34146822, -1.36423922, -1.4159317 , -1.34090194, -1.33381112,\n       -1.3725835 , -1.35897472, -1.36454078, -1.89820988, -1.8155213 ,\n       -1.77671324, -1.86900192, -1.76206406, -1.71625671, -1.87144038,\n       -1.76592862, -1.71993517, -1.40079727, -1.45327373, -1.46619351,\n       -1.55112715, -1.69233922, -1.5664796 , -1.54686211, -1.56292456,\n       -1.56376729, -1.8939093 , -1.80575417, -1.76410004, -1.89145899,\n       -1.80551524, -1.77055186, -1.89151905, -1.80753979, -1.76749433,\n       -1.35771562, -1.37977672, -1.392567  , -1.5902175 , -1.6069202 ,\n       -1.58186045, -1.44425105, -1.39056941, -1.51959085, -1.9013211 ,\n       -1.81986236, -1.78084325, -1.88558518, -1.79795571, -1.76057881,\n       -1.88333834, -1.78965838, -1.75310262, -1.32078461, -1.35328274,\n       -1.34457777, -1.6421042 , -1.65120292, -1.58812962, -1.49630714,\n       -1.49415831, -1.41678112, -1.89291776, -1.80350225, -1.76191648,\n       -1.88355428, -1.7912564 , -1.75025751, -1.87899559, -1.78199499,\n       -1.74428449, -1.35100678, -1.37607228, -1.35281808, -1.56055285,\n       -1.51044524, -1.5566719 , -1.83856582, -1.8899255 , -1.90731454,\n       -1.90706771, -1.82918855, -1.7925741 , -1.92800041, -1.87101816,\n       -1.84571939, -1.93066124, -1.88110334, -1.86335587, -1.37192191,\n       -1.394233  , -1.37688578, -1.60154218, -1.62120275, -1.64815567,\n       -1.98558969, -2.013594  , -1.89893236, -1.90860539, -1.83223884,\n       -1.79381845, -1.94166175, -1.90110565, -1.8819528 , -1.94142716,\n       -1.90418472, -1.88822903, -1.33904887, -1.38098955, -1.35459914,\n       -1.73022886, -1.69852496, -1.73496424, -1.94398089, -1.96170683,\n       -1.93229309, -1.9084623 , -1.83196956, -1.79481306, -1.94262229,\n       -1.89884262, -1.88466258, -1.94711664, -1.913324  , -1.89589125,\n       -1.31718064, -1.28832513, -1.37610753, -1.70483984, -1.74676289,\n       -1.71857121, -2.01288101, -2.0155691 , -2.03674543, -1.91093507,\n       -1.82943128, -1.7908271 , -1.94464263, -1.90602617, -1.88787049,\n       -1.95161752, -1.91915348, -1.91135427, -1.33438735, -1.37690285,\n       -1.36020379, -1.6573445 , -1.72999548, -1.66859676, -1.79854154,\n       -1.75233235, -1.76752441, -1.91270408, -1.83238122, -1.79457646,\n       -1.89899332, -1.82495979, -1.79543893, -1.90467766, -1.8349976 ,\n       -1.80591657, -1.34085613, -1.36937201, -1.35203909, -1.6245394 ,\n       -1.62701006, -1.59871842, -1.84241463, -1.83946762, -1.78607467,\n       -1.91043315, -1.83192918, -1.79431228, -1.90015537, -1.82677884,\n       -1.7942681 , -1.90718426, -1.83698433, -1.80874723, -1.37757763,\n       -1.32308033, -1.33697936, -1.63651462, -1.61465764, -1.59988141,\n       -1.82513656, -1.84730572, -1.76253403, -1.91406459, -1.84244963,\n       -1.8093908 , -1.90456945, -1.83676118, -1.80888995, -1.90763112,\n       -1.84265035, -1.81662825, -1.42955215, -1.47055102, -1.45459369,\n       -1.62694095, -1.65157105, -1.68864739, -1.82642098, -1.91369268,\n       -1.77712491, -1.91409841, -1.84186006, -1.80865288, -1.90879444,\n       -1.84240622, -1.81230037, -1.91165148, -1.84906664, -1.82152343,\n       -1.34868129, -1.37985865, -1.37259895, -1.73663218, -1.70503995,\n       -1.71189174, -1.8060953 , -1.84084798, -1.82165484, -1.91379776,\n       -1.84133379, -1.80838077, -1.90790191, -1.84215899, -1.81442135,\n       -1.91297911, -1.85081581, -1.82473219, -1.46151821, -1.48120928,\n       -1.43404283, -1.74065824, -1.72210288, -1.7473099 , -1.86552292,\n       -1.80511186, -1.80722026, -1.91396254, -1.84165825, -1.81472363,\n       -1.90790509, -1.84018358, -1.81581645, -1.91119574, -1.84917307,\n       -1.82292928, -1.35535733, -1.44415247, -1.47248835, -1.63656743,\n       -1.5394215 , -1.63707353, -1.82773953, -1.80582949, -1.7769517 ,\n       -1.9125842 , -1.8428523 , -1.80822785, -1.90236202, -1.82899422,\n       -1.80054238, -1.90099393, -1.82911152, -1.80111139, -1.44402077,\n       -1.45490715, -1.49763772, -1.61619805, -1.62231734, -1.65249553,\n       -1.61347579, -1.55888702, -1.61789651, -1.88610175, -1.79210127,\n       -1.74896594, -1.87975128, -1.78795892, -1.7486545 , -1.88963772,\n       -1.80199349, -1.7623047 , -1.42400206, -1.4637757 , -1.45220096,\n       -1.55789343, -1.5322067 , -1.5524617 , -1.37089957, -1.44161568,\n       -1.35607116, -1.8790124 , -1.78286677, -1.73964372, -1.87051887,\n       -1.77152555, -1.7297156 , -1.87042049, -1.76355521, -1.71934399,\n       -1.52912313, -1.50519303, -1.49959455, -1.72730189, -1.74750347,\n       -1.75194269, -1.76189786, -1.78200415, -1.77521539, -1.90021742,\n       -1.81530797, -1.77832271, -1.90173218, -1.82264069, -1.79192178,\n       -1.89703035, -1.81714355, -1.78486313, -1.50316255, -1.46886453,\n       -1.55970421, -1.81803663, -1.72830075, -1.85844543, -1.86701548,\n       -1.80471017, -1.78934416, -1.91658493, -1.84086448, -1.80206871,\n       -1.90375054, -1.83929675, -1.80852326, -1.90417088, -1.83306458,\n       -1.80987873, -1.45248426, -1.42654119, -1.51062927, -1.84480313,\n       -1.960858  , -1.97971032, -1.92145881, -1.9559085 , -1.89442354,\n       -1.91827381, -1.84052053, -1.80081444, -1.91196201, -1.84565481,\n       -1.83999489, -1.91535546, -1.85660762, -1.83461388, -1.53434035,\n       -1.58527413, -1.58052623, -1.59215495, -1.58247232, -1.6093782 ,\n       -1.74425873, -1.71597495, -1.72011702, -1.89346416, -1.80021766,\n       -1.75776579, -1.8824437 , -1.78904183, -1.74949652, -1.88210832,\n       -1.7943053 , -1.75992342, -1.44600566, -1.551849  , -1.46938883,\n       -1.64709616, -1.72366495, -1.66966083, -1.84812788, -1.89477117,\n       -1.83332019, -1.8909781 , -1.79963283, -1.75830718, -1.90413948,\n       -1.8475731 , -1.82071878, -1.90811086, -1.84179984, -1.81617284,\n       -1.49010708, -1.50582175, -1.48474735, -1.54552501, -1.57012168,\n       -1.56270604, -1.87564466, -1.84679182, -1.87345012, -1.89473393,\n       -1.80549787, -1.76360119, -1.91267773, -1.8487616 , -1.81920855,\n       -1.915956  , -1.85155745, -1.83265911, -1.31617623, -1.38080836,\n       -1.38764081, -1.54400637, -1.50073868, -1.54976148, -1.85644086,\n       -1.92420261, -1.83391888, -1.89473393, -1.8038358 , -1.7596639 ,\n       -1.90922273, -1.82340582, -1.78707192, -1.91884255, -1.85619573,\n       -1.83622857, -1.43469666, -1.44997119, -1.45605343, -1.58143187,\n       -1.56022939, -1.54082316, -1.79495014, -1.79990881, -1.76304708,\n       -1.89507086, -1.80457887, -1.76156141, -1.90741538, -1.81396782,\n       -1.76779295, -1.90221517, -1.83062359, -1.80044279, -1.39870395,\n       -1.39544094, -1.39526853, -1.62106874, -1.58380812, -1.53844163,\n       -1.8139796 , -1.81015558, -1.81227873, -1.89350574, -1.80157526,\n       -1.75854853, -1.90758763, -1.83127372, -1.78119755, -1.90271768,\n       -1.83047395, -1.79995053, -1.45234381, -1.46690249, -1.46772238,\n       -1.56689032, -1.57889586, -1.58601999, -1.86822636, -1.88240309,\n       -1.81267059, -1.89362869, -1.80425046, -1.76309231, -1.910279  ,\n       -1.83720058, -1.78729546, -1.9058382 , -1.8314966 , -1.79992048,\n       -1.39051039, -1.3908596 , -1.36256064, -1.24677768, -1.28481255,\n       -1.29239367, -1.24381517, -1.15603984, -1.13003792, -1.88717725,\n       -1.7913262 , -1.74963245, -1.8646117 , -1.74313239, -1.70925088,\n       -1.86195315, -1.74407804, -1.69459508, -1.28053343, -1.30855782,\n       -1.37307474, -1.20738042, -1.23005189, -1.23111449, -1.17773904,\n       -1.1759862 , -1.20905319, -1.88640544, -1.79207879, -1.74979554,\n       -1.86424165, -1.75391838, -1.70398603, -1.86201348, -1.74387987,\n       -1.69463319, -1.3261371 , -1.37332427, -1.31622255, -1.21929659,\n       -1.23036795, -1.23874922, -1.11861721, -1.19838883, -1.18112708,\n       -1.88640544, -1.79207879, -1.74979554, -1.86969162, -1.75364008,\n       -1.72026656, -1.86671962, -1.74986052, -1.70232772, -1.40851424,\n       -1.41913067, -1.35657756, -1.25674916, -1.18910371, -1.24279601,\n       -1.2534133 , -1.25056054, -1.26885446, -1.88640544, -1.79237195,\n       -1.75011084, -1.87662667, -1.77102979, -1.73372285, -1.87214449,\n       -1.76480383, -1.71883388, -1.3397532 , -1.36918828, -1.3650883 ,\n       -1.48463273, -1.50676644, -1.52669882, -1.66718987, -1.67280477,\n       -1.67260156, -1.88978479, -1.79462643, -1.75233378, -1.89053217,\n       -1.8014504 , -1.76908724, -1.89052681, -1.80578302, -1.77193526,\n       -1.30521035, -1.32003024, -1.32489332, -1.46974598, -1.53828949,\n       -1.55614359, -1.6997714 , -1.64253051, -1.63808397, -1.88978385,\n       -1.7950018 , -1.75311758, -1.88871438, -1.80099379, -1.7693763 ,\n       -1.89001479, -1.80720681, -1.77228649, -1.37325999, -1.44425212,\n       -1.40902512, -1.63969075, -1.69007998, -1.63554455, -1.83018762,\n       -1.77243935, -1.76557041, -1.89020346, -1.7968571 , -1.75546705,\n       -1.89971827, -1.82099849, -1.79559626, -1.89664938, -1.82034324,\n       -1.79212898, -1.37988338, -1.42096651, -1.45675815, -1.660415  ,\n       -1.6797209 , -1.65671497, -1.83664707, -1.78704198, -1.82404591,\n       -1.89023018, -1.79683961, -1.7555089 , -1.9023308 , -1.82626827,\n       -1.79088091, -1.8981768 , -1.82028679, -1.7917287 , -1.33769376,\n       -1.39560965, -1.43308071, -1.54022715, -1.63847374, -1.63379825,\n       -1.80261363, -1.74459198, -1.62908554, -1.89020599, -1.78539444,\n       -1.75547123, -1.90349407, -1.80051322, -1.78975921, -1.89155333,\n       -1.81895287, -1.7353364 , -1.36043426, -1.40678376, -1.44037963,\n       -1.68636718, -1.66981548, -1.63201703, -1.70316678, -1.70704341,\n       -1.73331103, -1.8842008 , -1.79685733, -1.74709181, -1.90973528,\n       -1.80869   , -1.78955669, -1.89289982, -1.81012951, -1.77194085,\n       -1.41529166, -1.43918261, -1.3850301 , -1.89924814, -1.60028007,\n       -1.61872687, -1.65364334, -1.6337983 , -1.77258331, -1.89051951,\n       -1.79973352, -1.76487505, -1.9033046 , -1.82636323, -1.83355361,\n       -1.89666896, -1.80542522, -1.756553  ]), 'split2_test_score': array([-1.53075532, -1.54705799, -1.55448921, -2.06147683, -1.98363933,\n       -2.06183308, -2.12820953, -2.04195228, -2.06007909, -1.90752593,\n       -1.84796668, -1.82183189, -1.90364418, -1.85524197, -1.8403471 ,\n       -1.89676623, -1.84465434, -1.82704397, -1.45354724, -1.47005573,\n       -1.47829448, -1.67480953, -1.65728456, -1.70435036, -2.06707462,\n       -2.03014866, -2.15527587, -1.90117956, -1.82913722, -1.79538584,\n       -1.89466215, -1.8420685 , -1.81157666, -1.89289171, -1.83991338,\n       -1.80845018, -1.57695395, -1.55699637, -1.59497783, -1.84660753,\n       -1.8638896 , -1.80899569, -2.3964214 , -2.34102314, -2.38032154,\n       -1.89599582, -1.82953672, -1.79696499, -1.9055099 , -1.85920711,\n       -1.83885544, -1.90740034, -1.87118479, -1.85364941, -1.56005861,\n       -1.6802629 , -1.60665883, -1.88285797, -1.87991397, -1.82461826,\n       -2.37635834, -2.37846359, -2.29766105, -1.8988022 , -1.84134414,\n       -1.8110006 , -1.91263793, -1.87206798, -1.84955965, -1.91635304,\n       -1.88085907, -1.87431765, -1.65248228, -1.66347608, -1.69204187,\n       -1.79160821, -1.80841102, -1.83443427, -2.24326663, -2.28502459,\n       -2.21716481, -1.89646155, -1.83374746, -1.80246347, -1.90190109,\n       -1.85510201, -1.83434924, -1.90415245, -1.85071073, -1.83577456,\n       -1.54436036, -1.54286803, -1.51621166, -1.71967805, -1.73973701,\n       -1.76755986, -2.19415191, -2.10694376, -2.20346787, -1.89853814,\n       -1.83184085, -1.80270561, -1.90409988, -1.86104168, -1.84548806,\n       -1.90867138, -1.86374242, -1.8455519 , -1.54258039, -1.56050244,\n       -1.5430499 , -1.74868089, -1.72239698, -1.75099422, -2.14487013,\n       -2.14142698, -2.15056977, -1.89749725, -1.83124495, -1.80228561,\n       -1.8951283 , -1.84169066, -1.8230848 , -1.89943649, -1.84632626,\n       -1.82481   , -1.59557923, -1.58766264, -1.5627908 , -2.02976339,\n       -2.04086413, -2.06370301, -2.20629639, -2.23563976, -2.19325709,\n       -1.89370475, -1.82154536, -1.79301263, -1.89538384, -1.84267082,\n       -1.82428906, -1.89883732, -1.84870335, -1.82702723, -1.37388216,\n       -1.4188852 , -1.40195065, -1.87955738, -1.81965329, -1.90648499,\n       -2.22732219, -2.25447724, -2.29725125, -1.88675003, -1.79461674,\n       -1.75646203, -1.88999323, -1.83790397, -1.81560812, -1.89667733,\n       -1.83964817, -1.8245544 , -1.30987578, -1.37531993, -1.36333505,\n       -1.95665469, -1.90880563, -1.93175078, -2.26724295, -2.22365091,\n       -2.17535931, -1.89153322, -1.80610104, -1.77246562, -1.90099025,\n       -1.85367308, -1.83812964, -1.90733288, -1.86286742, -1.84875164,\n       -1.38769475, -1.38091221, -1.39518892, -1.60682643, -1.75155205,\n       -1.72358668, -2.14276089, -2.12518545, -2.12650708, -1.8852608 ,\n       -1.79925776, -1.76559386, -1.89020059, -1.83083016, -1.81027543,\n       -1.89177743, -1.82410826, -1.80164955, -1.37302094, -1.40505014,\n       -1.37291221, -1.57829967, -1.62727953, -1.7344714 , -2.23447911,\n       -2.26812044, -2.29760616, -1.8813023 , -1.79380359, -1.75718924,\n       -1.89116767, -1.83525915, -1.8109361 , -1.89800997, -1.85311075,\n       -1.83550491, -1.39039585, -1.4362213 , -1.39997836, -1.67968795,\n       -1.73965989, -1.71717675, -2.32807564, -2.29700302, -2.21945422,\n       -1.88132804, -1.7936431 , -1.7569562 , -1.89145198, -1.83345024,\n       -1.80875705, -1.89901342, -1.84796406, -1.83072825, -1.42028283,\n       -1.44851959, -1.43425607, -1.53246496, -1.59890008, -1.49402271,\n       -2.22969856, -2.20886621, -2.14912323, -1.87422483, -1.78968928,\n       -1.75654045, -1.88898214, -1.83046424, -1.80374032, -1.89751738,\n       -1.84917468, -1.82960653, -1.41811789, -1.38955379, -1.45526462,\n       -1.43655905, -1.43508794, -1.39083212, -2.14648347, -2.13428688,\n       -2.09941096, -1.87024992, -1.7842755 , -1.74934357, -1.88684147,\n       -1.82134881, -1.79267157, -1.89438004, -1.84363838, -1.81936923,\n       -1.40012482, -1.44111146, -1.42857376, -1.57241647, -1.54464838,\n       -1.55609934, -2.13464773, -2.08679533, -2.07673087, -1.86796398,\n       -1.78226749, -1.74728879, -1.86769355, -1.78833533, -1.75324206,\n       -1.87914839, -1.81197564, -1.78875589, -1.41158595, -1.31536186,\n       -1.32216573, -1.62874916, -1.77998251, -1.72454107, -2.08152278,\n       -2.0310287 , -2.10603402, -1.86778727, -1.77843949, -1.74526219,\n       -1.87116745, -1.79499883, -1.76635212, -1.87687844, -1.80470318,\n       -1.77540004, -1.42409803, -1.45704022, -1.44888143, -1.68182733,\n       -1.72714478, -1.72369144, -1.96052316, -2.02380078, -2.01834358,\n       -1.86939937, -1.78321243, -1.75172832, -1.87172982, -1.7961446 ,\n       -1.76638463, -1.87603401, -1.8036534 , -1.77786603, -1.39510756,\n       -1.47284725, -1.44213313, -1.82741716, -1.64692281, -1.79315924,\n       -2.00739889, -2.00751178, -2.00191956, -1.86940221, -1.78301178,\n       -1.75017957, -1.87121847, -1.79562471, -1.76821671, -1.87690969,\n       -1.80495545, -1.78129888, -1.37038215, -1.38163828, -1.42055537,\n       -1.622673  , -1.62469676, -1.63572261, -1.9782666 , -2.03647686,\n       -1.99193757, -1.87057215, -1.78225282, -1.74555929, -1.87238151,\n       -1.79497387, -1.76795249, -1.87673545, -1.80576149, -1.77885712,\n       -1.33345769, -1.35180388, -1.37876361, -1.70488676, -1.82587642,\n       -1.66332768, -2.03175407, -1.98838718, -2.02617397, -1.87037053,\n       -1.78250799, -1.74557939, -1.86775188, -1.78395198, -1.7393333 ,\n       -1.87044909, -1.79552604, -1.76531517, -1.33966618, -1.38654349,\n       -1.35620507, -1.77594678, -1.69689695, -1.7742486 , -2.0271448 ,\n       -1.92302177, -1.9913755 , -1.87062224, -1.78292554, -1.74597352,\n       -1.87176913, -1.79546436, -1.76276167, -1.87460636, -1.80281367,\n       -1.77446593, -1.33771131, -1.39220083, -1.41200917, -1.80213572,\n       -1.84786714, -1.60373114, -1.951091  , -1.91920187, -1.91628347,\n       -1.87119509, -1.78259996, -1.74612833, -1.86855325, -1.79113275,\n       -1.75986073, -1.87451065, -1.80007975, -1.77345762, -1.47890061,\n       -1.52456292, -1.52198953, -1.79074112, -1.7921333 , -1.76753033,\n       -1.98304132, -1.97449942, -1.96874745, -1.86654509, -1.78598588,\n       -1.75284274, -1.87519044, -1.79769614, -1.76287497, -1.87567799,\n       -1.80185886, -1.7723063 , -1.52743638, -1.55676401, -1.58282633,\n       -1.74874936, -1.67504586, -1.71932879, -1.77014454, -1.78486949,\n       -1.78419343, -1.86897679, -1.79542681, -1.76157157, -1.87470628,\n       -1.79775153, -1.76803417, -1.86348212, -1.7789771 , -1.74379122,\n       -1.54551812, -1.59551997, -1.60066628, -1.76456574, -1.77951841,\n       -1.74162785, -1.98562097, -1.96020301, -1.93945219, -1.87615142,\n       -1.80134396, -1.76687267, -1.89326917, -1.83324509, -1.81069798,\n       -1.88904861, -1.82539148, -1.79882649, -1.6034966 , -1.63302566,\n       -1.64594995, -1.74301289, -1.67919789, -1.76557987, -1.85362098,\n       -1.87984209, -1.89899475, -1.88445105, -1.8128071 , -1.78243743,\n       -1.88829976, -1.82567327, -1.80041726, -1.88369037, -1.81725779,\n       -1.79043949, -1.55317833, -1.57389645, -1.59533656, -1.70273439,\n       -1.85423961, -1.73657037, -1.89257269, -1.90849152, -1.88912138,\n       -1.88329159, -1.81331652, -1.7847275 , -1.89083883, -1.83091194,\n       -1.80626517, -1.88576462, -1.81956761, -1.79231442, -1.36569404,\n       -1.41418392, -1.38159595, -1.68303549, -1.67161465, -1.69739707,\n       -1.79516562, -1.81142036, -1.78102616, -1.87644705, -1.79883079,\n       -1.76569533, -1.88764222, -1.82437199, -1.7997048 , -1.88079536,\n       -1.8075606 , -1.77911748, -1.40453747, -1.45154801, -1.44854016,\n       -1.73574081, -1.73759273, -1.74794235, -1.84503343, -1.83528884,\n       -1.8154125 , -1.87604684, -1.79800936, -1.76253756, -1.89055816,\n       -1.83012984, -1.80466091, -1.88339709, -1.8138206 , -1.7860081 ,\n       -1.45107512, -1.46246936, -1.44735199, -1.54293384, -1.6216769 ,\n       -1.63448433, -1.98153771, -2.0113524 , -1.99517562, -1.87503817,\n       -1.79601868, -1.76132395, -1.90172202, -1.85260417, -1.83380333,\n       -1.89453852, -1.83760578, -1.81574218, -1.36369183, -1.3756576 ,\n       -1.38482043, -1.56458056, -1.51566229, -1.54335925, -1.87418834,\n       -1.87146805, -1.87465587, -1.87927212, -1.79868829, -1.76680478,\n       -1.86358394, -1.79684535, -1.76956986, -1.87340681, -1.79639092,\n       -1.76563706, -1.39035242, -1.35112685, -1.37108116, -1.5205895 ,\n       -1.5237999 , -1.53399737, -1.74504422, -1.7030084 , -1.71886135,\n       -1.87665162, -1.80204576, -1.76736551, -1.87327102, -1.79372143,\n       -1.76231972, -1.87123404, -1.79072899, -1.76037125, -1.4346535 ,\n       -1.42759966, -1.4375601 , -1.45410428, -1.42980851, -1.52706912,\n       -1.58737861, -1.62603964, -1.57413408, -1.87651826, -1.80288905,\n       -1.76810767, -1.86387427, -1.77503654, -1.74230452, -1.86117664,\n       -1.77143564, -1.73450072, -1.40797775, -1.38403412, -1.38683152,\n       -1.55954574, -1.49914691, -1.51870903, -1.6327129 , -1.63054667,\n       -1.65060685, -1.87822575, -1.80463137, -1.76928337, -1.86391791,\n       -1.77880837, -1.74746437, -1.86282521, -1.77489488, -1.73461527,\n       -1.50089546, -1.49909909, -1.50097622, -1.53583784, -1.50740933,\n       -1.51669389, -1.8399601 , -1.80631442, -1.79709093, -1.88641948,\n       -1.81576889, -1.78724816, -1.87143816, -1.79637099, -1.76646356,\n       -1.8679989 , -1.78685707, -1.75496897, -1.45102916, -1.47212331,\n       -1.43902903, -1.51551645, -1.53776391, -1.55496726, -1.92411343,\n       -1.94832259, -1.94044094, -1.88467273, -1.81199788, -1.77857903,\n       -1.88623883, -1.82012576, -1.79223381, -1.88098353, -1.81580917,\n       -1.78779601, -1.41014642, -1.41931279, -1.40837807, -1.51097549,\n       -1.52398648, -1.51156247, -1.92978947, -1.99237628, -1.97642079,\n       -1.88526323, -1.81251831, -1.77854369, -1.88522903, -1.81716058,\n       -1.78985161, -1.88467694, -1.8189519 , -1.79535308, -1.37075217,\n       -1.37140818, -1.37197996, -1.83709096, -1.77658648, -1.72784198,\n       -2.30250026, -2.29772973, -2.31829408, -1.8955184 , -1.82882386,\n       -1.79521462, -1.93704306, -1.92232692, -1.91518135, -1.94201587,\n       -1.92991572, -1.9244992 , -1.42286188, -1.45326379, -1.40265897,\n       -1.5308021 , -1.58152468, -1.63044199, -2.18790971, -2.12727749,\n       -2.18783298, -1.89041875, -1.81869878, -1.78802168, -1.92257244,\n       -1.88831813, -1.86186244, -1.92135834, -1.8867803 , -1.8741051 ,\n       -1.42776478, -1.55168172, -1.44712498, -1.59010252, -1.57821405,\n       -1.5228085 , -2.14253471, -2.13668048, -2.15361791, -1.89110332,\n       -1.81807506, -1.78812598, -1.9245209 , -1.8899095 , -1.85750352,\n       -1.920129  , -1.8859311 , -1.87464546, -1.49079897, -1.52866154,\n       -1.43686585, -1.61151483, -1.60984281, -1.56340743, -2.16222067,\n       -2.13647187, -2.16865474, -1.89052601, -1.81808427, -1.78756721,\n       -1.92111966, -1.88486103, -1.85791142, -1.91735477, -1.88125438,\n       -1.87098656, -1.47508215, -1.55827649, -1.50282938, -1.67577888,\n       -1.6601531 , -1.66372118, -2.09229461, -2.13102825, -2.14215266,\n       -1.89041067, -1.81791332, -1.78735451, -1.92088874, -1.88231132,\n       -1.85477101, -1.91941919, -1.88262048, -1.86979753, -1.49068275,\n       -1.50750869, -1.44695317, -1.66228085, -1.81991471, -1.67816649,\n       -2.14592041, -2.14191386, -2.15094897, -1.89122054, -1.81863362,\n       -1.7831855 , -1.91888572, -1.88096139, -1.8539651 , -1.9187304 ,\n       -1.87926369, -1.86024166, -1.44804573, -1.50932049, -1.46867761,\n       -1.54820431, -1.65938522, -1.68815324, -2.12998592, -2.23420957,\n       -2.11062539, -1.89087071, -1.81799562, -1.89473808, -1.9263712 ,\n       -1.88528167, -1.85260523, -1.9182875 , -1.88116243, -1.85693214,\n       -1.50021796, -1.44493767, -1.52686899, -1.665681  , -1.65700831,\n       -1.75861625, -1.76777334, -1.91155378, -2.1106063 , -1.88777281,\n       -1.81854112, -1.79153006, -1.91739808, -1.84077756, -1.82826993,\n       -1.90494941, -1.886909  , -1.8042132 ]), 'split3_test_score': array([-1.84885777, -1.84109593, -1.75309729, -2.219173  , -2.33697533,\n       -2.20393642, -2.44966928, -2.48790796, -2.47477409, -1.95970936,\n       -1.91613445, -1.89898241, -1.97052048, -1.94164279, -1.93391867,\n       -1.96195887, -1.94056293, -1.93701657, -1.7916604 , -1.85707229,\n       -1.79489352, -1.95082301, -1.96026601, -1.9852019 , -2.08995206,\n       -2.08300657, -2.04890429, -1.9545622 , -1.91223929, -1.89622988,\n       -1.91256573, -1.83767797, -1.81757166, -1.91641552, -1.84701683,\n       -1.82136274, -1.93961201, -1.97211623, -1.98763969, -2.19916556,\n       -2.23943337, -2.24731706, -2.43343349, -2.42442461, -2.40724773,\n       -1.97307018, -1.94449514, -1.93033156, -1.97407253, -1.95627009,\n       -1.95075775, -1.97192384, -1.95328192, -1.9475244 , -2.09202843,\n       -2.12206169, -2.11668091, -2.36237742, -2.386205  , -2.37886087,\n       -2.36319013, -2.37806983, -2.36487636, -1.96333808, -1.93070678,\n       -1.91774446, -1.96226391, -1.93345675, -1.92668055, -1.95905603,\n       -1.92833828, -1.9198424 , -2.07707515, -2.06566604, -2.05553494,\n       -2.4159868 , -2.39532933, -2.39052615, -2.42319182, -2.44338401,\n       -2.42896649, -1.96258755, -1.92953341, -1.91520576, -1.96382012,\n       -1.93970757, -1.93401644, -1.96277988, -1.93663916, -1.93108093,\n       -2.13088601, -2.19250132, -2.15040327, -2.41924723, -2.3923975 ,\n       -2.41471117, -2.46203977, -2.41994161, -2.43582892, -1.97377735,\n       -1.94978907, -1.93775784, -1.96286735, -1.9415765 , -1.93649893,\n       -1.9621273 , -1.9378022 , -1.93295737, -2.13582737, -2.15132288,\n       -2.16937163, -2.36393849, -2.38387052, -2.37882367, -2.36321041,\n       -2.3761297 , -2.38099713, -1.95903253, -1.91983579, -1.90962874,\n       -1.95515952, -1.92623808, -1.9168931 , -1.9504002 , -1.91660305,\n       -1.90656355, -2.11056588, -2.17990202, -2.22768682, -2.39710884,\n       -2.42340155, -2.38182049, -2.35577757, -2.38213956, -2.34385494,\n       -1.95976771, -1.92228902, -1.91025291, -1.95568051, -1.92734375,\n       -1.91643592, -1.9516183 , -1.91789411, -1.90956668, -2.16643384,\n       -2.19583831, -2.18856854, -2.29578321, -2.28766578, -2.32777503,\n       -2.27763593, -2.31645445, -2.2857803 , -1.96452015, -1.93413448,\n       -1.92539188, -1.95350241, -1.91888443, -1.91380882, -1.95166924,\n       -1.91520344, -1.90284677, -2.16634878, -2.20056396, -2.20603858,\n       -2.38989465, -2.33284579, -2.36090548, -2.41898538, -2.43371793,\n       -2.41286034, -1.96624036, -1.93773144, -1.92874942, -1.96362425,\n       -1.94387741, -1.93596564, -1.96451485, -1.93872207, -1.93330771,\n       -2.21982678, -2.22957856, -2.18685246, -2.36214749, -2.39725935,\n       -2.34977171, -2.41404954, -2.44366994, -2.43250431, -1.96584548,\n       -1.93460033, -1.92511411, -1.96474013, -1.9444254 , -1.93758209,\n       -1.96445001, -1.93932733, -1.93866481, -2.13656264, -2.17828941,\n       -2.15390375, -2.44451127, -2.43641271, -2.38480567, -2.48002085,\n       -2.48900082, -2.48197852, -1.96959601, -1.94416818, -1.93636226,\n       -1.96862291, -1.94988901, -1.94551949, -1.97421081, -1.96201407,\n       -1.96024884, -2.08036618, -2.1170213 , -2.11445278, -2.3794915 ,\n       -2.36374135, -2.37925127, -2.49846689, -2.42927591, -2.41089   ,\n       -1.96980187, -1.9402193 , -1.93320544, -1.96078154, -1.93406275,\n       -1.92360053, -1.96659498, -1.94465248, -1.94247616, -2.08192772,\n       -2.09307309, -2.1138797 , -2.29287186, -2.33717036, -2.32174893,\n       -2.36881698, -2.39225559, -2.41981615, -1.96964007, -1.93957719,\n       -1.93253767, -1.95838145, -1.93429565, -1.92307499, -1.96257191,\n       -1.93959479, -1.93503323, -2.10890777, -2.1327858 , -2.12918759,\n       -2.29535616, -2.31336628, -2.3173295 , -2.42662399, -2.38166279,\n       -2.42318746, -1.96970098, -1.94052925, -1.93358638, -1.9611292 ,\n       -1.93432383, -1.92386505, -1.96464754, -1.94017722, -1.93296888,\n       -2.03995791, -2.12156168, -2.04793053, -2.2587116 , -2.28311899,\n       -2.26777307, -2.37781538, -2.36065855, -2.40251718, -1.96966081,\n       -1.94138595, -1.93159493, -1.95777633, -1.93134252, -1.9172678 ,\n       -1.96172333, -1.93855149, -1.93260017, -2.06008954, -2.06393862,\n       -2.06009622, -2.30390944, -2.33392604, -2.24901171, -2.37918617,\n       -2.34243582, -2.42124601, -1.96845713, -1.93872453, -1.92741317,\n       -1.95167078, -1.91964427, -1.9028322 , -1.95589823, -1.92675959,\n       -1.91988366, -2.08560073, -2.1053199 , -2.09301798, -2.34857215,\n       -2.3875815 , -2.30956868, -2.51341535, -2.49983852, -2.43545124,\n       -1.97404964, -1.947468  , -1.93513982, -1.96411426, -1.94341454,\n       -1.93365261, -1.9697958 , -1.95165594, -1.94806907, -2.0436386 ,\n       -2.09090445, -2.07991264, -2.30107598, -2.27758568, -2.28564309,\n       -2.34878499, -2.35429985, -2.31316298, -1.97672053, -1.95050418,\n       -1.94148668, -1.96060379, -1.92995965, -1.914575  , -1.96073356,\n       -1.93540054, -1.9231764 , -2.1032421 , -2.1168612 , -2.1055367 ,\n       -2.373767  , -2.2768734 , -2.35604845, -2.4159382 , -2.33977077,\n       -2.35003102, -1.97551651, -1.95120927, -1.94038314, -1.96117395,\n       -1.93414804, -1.92023753, -1.96446993, -1.93502094, -1.92772641,\n       -2.07717505, -2.09828092, -2.06479155, -2.29226755, -2.33421132,\n       -2.28533719, -2.31065092, -2.31440715, -2.31694818, -1.97526375,\n       -1.95132807, -1.93998541, -1.95693106, -1.92533932, -1.91462443,\n       -1.95824986, -1.93119639, -1.92227504, -2.01445503, -2.06252165,\n       -2.02408651, -2.54113238, -2.5423549 , -2.53087242, -2.6531952 ,\n       -2.6242455 , -2.60507188, -1.98138593, -1.96483474, -1.95589584,\n       -1.99709193, -1.99805705, -2.00042707, -1.99848001, -2.00082574,\n       -2.00930741, -2.09500767, -2.06146732, -2.03588435, -2.6172845 ,\n       -2.63503514, -2.63815789, -2.6837538 , -2.69638253, -2.68534708,\n       -1.98709532, -1.97296542, -1.96688199, -2.00071488, -2.00672719,\n       -2.01104776, -2.00059253, -2.01240219, -2.0216142 , -1.72274749,\n       -1.6879491 , -1.69822791, -2.28362348, -2.28303501, -2.26709952,\n       -2.30032891, -2.31506877, -2.21403507, -1.9356669 , -1.88441276,\n       -1.86455247, -1.94709976, -1.90650218, -1.89333987, -1.94772238,\n       -1.90817593, -1.89466929, -1.79830638, -1.78195017, -1.74226043,\n       -2.08218417, -2.05375298, -2.05517573, -2.13686569, -2.30336112,\n       -2.12081564, -1.93033775, -1.87777775, -1.85563702, -1.923572  ,\n       -1.8667339 , -1.84320993, -1.91703637, -1.85487634, -1.82868986,\n       -1.93171579, -1.92184409, -1.9473395 , -2.4045225 , -2.49880707,\n       -2.45500692, -2.58066747, -2.58942733, -2.58121047, -1.94010438,\n       -1.89226507, -1.87195392, -1.9650756 , -1.93970846, -1.93550977,\n       -1.96713806, -1.948836  , -1.94926722, -1.93774843, -1.98602354,\n       -1.95291473, -2.34213418, -2.36791808, -2.33133683, -2.56621109,\n       -2.57152647, -2.55945184, -1.93563417, -1.88482086, -1.86346219,\n       -1.96620037, -1.94281359, -1.93847126, -1.97131947, -1.95606038,\n       -1.95571464, -1.92427205, -1.94291785, -1.97036512, -2.39083249,\n       -2.37861888, -2.35852446, -2.50273764, -2.50255858, -2.52422813,\n       -1.94048813, -1.88823876, -1.86802766, -1.96581555, -1.9440315 ,\n       -1.93974695, -1.96657551, -1.94789827, -1.94395667, -1.99983329,\n       -2.02745661, -2.02439521, -2.29124138, -2.31602757, -2.31622522,\n       -2.39346891, -2.38255002, -2.36980755, -1.94004483, -1.89231505,\n       -1.87622651, -1.94907584, -1.91330269, -1.90339388, -1.94823366,\n       -1.91134257, -1.89995934, -2.12439167, -2.09108261, -2.02636419,\n       -2.39666086, -2.26034755, -2.3755472 , -2.50588032, -2.47241167,\n       -2.48544041, -1.95470673, -1.91290322, -1.89332121, -1.96718379,\n       -1.94732695, -1.94734012, -1.96893246, -1.94915734, -1.94491942,\n       -1.99905154, -1.99626653, -1.99913769, -2.2448489 , -2.24711646,\n       -2.24404117, -2.65713281, -2.5907831 , -2.57434566, -1.953636  ,\n       -1.91260145, -1.89300375, -1.98913017, -1.98647712, -1.99024919,\n       -1.99205367, -1.98929767, -1.99152799, -2.11306863, -2.13766927,\n       -2.10999349, -2.11162334, -2.08416216, -2.06594619, -2.398795  ,\n       -2.28546827, -2.41545129, -1.95768736, -1.92666611, -1.90859286,\n       -1.97517835, -1.95753766, -1.94983477, -1.97284197, -1.95952194,\n       -1.95106341, -2.03292998, -2.10444014, -2.07943069, -2.10239345,\n       -2.17955723, -2.15954247, -2.3264065 , -2.35198867, -2.33856365,\n       -1.95527782, -1.91682518, -1.900217  , -1.96139095, -1.93603736,\n       -1.92288475, -1.96500352, -1.94139329, -1.9319707 , -2.02588527,\n       -2.02670163, -2.03948375, -2.26720456, -2.18872603, -2.11228007,\n       -2.3340125 , -2.33872227, -2.32294391, -1.95987142, -1.92678954,\n       -1.91114054, -1.97453143, -1.95921526, -1.95192974, -1.96133376,\n       -1.93445634, -1.92593017, -2.04189642, -2.06163072, -2.06201928,\n       -2.19035878, -2.18237193, -2.23815244, -2.26486635, -2.32731689,\n       -2.3600374 , -1.96062268, -1.92431616, -1.90986399, -1.97386903,\n       -1.95276811, -1.95469117, -1.96491977, -1.93275773, -1.92431569,\n       -2.03977637, -2.03328881, -2.02823485, -2.14912741, -2.16056323,\n       -2.14183689, -2.28023766, -2.21645123, -2.22816159, -1.95625342,\n       -1.9189911 , -1.89921966, -1.96741991, -1.94128548, -1.93210087,\n       -1.95443737, -1.91612076, -1.90495811, -2.01675127, -2.05249127,\n       -2.05126568, -2.01224093, -2.01086911, -2.08596148, -2.09089009,\n       -2.10804975, -2.13664201, -1.94921985, -1.9059785 , -1.89024747,\n       -1.94618216, -1.90448708, -1.88351127, -1.94410188, -1.90004213,\n       -1.88654798, -1.97444638, -2.00458401, -2.01692202, -1.94788304,\n       -1.95702397, -1.9705838 , -2.0392722 , -2.07742574, -1.98433326,\n       -1.94346251, -1.90073505, -1.88613344, -1.93425376, -1.87846884,\n       -1.85670521, -1.92866877, -1.87216917, -1.84760085, -2.00412133,\n       -2.05913058, -2.03984795, -1.91760263, -1.86870546, -1.91848505,\n       -2.01208449, -1.96973388, -2.02092486, -1.94154408, -1.8991415 ,\n       -1.88196196, -1.93268527, -1.87960876, -1.85529378, -1.92851185,\n       -1.87045195, -1.84792536, -1.89627513, -1.88853714, -1.93750584,\n       -2.04785805, -2.08364807, -2.11803063, -2.23984901, -2.20238233,\n       -2.21961792, -1.93734137, -1.88058266, -1.85584111, -1.94368622,\n       -1.89292268, -1.87184236, -1.94065334, -1.89304029, -1.87750582,\n       -1.96727306, -1.99564486, -1.98149901, -2.00802621, -2.10113482,\n       -2.10464395, -2.27533324, -2.2341352 , -2.22723612, -1.93945126,\n       -1.88187111, -1.8568177 , -1.94171969, -1.89188406, -1.87523685,\n       -1.94414735, -1.90074011, -1.88416394, -1.95769542, -1.91459302,\n       -1.93811803, -2.0615618 , -2.11802209, -2.07603443, -2.29678366,\n       -2.26148043, -2.33336829, -1.93486677, -1.8775956 , -1.85383683,\n       -1.94989485, -1.90677576, -1.88939133, -1.94908077, -1.91295075,\n       -1.89939424, -1.96178775, -1.99140131, -2.05810473, -2.18058384,\n       -2.1625321 , -2.07360286, -2.30614642, -2.32387921, -2.30448996,\n       -1.92999797, -1.87490492, -1.85237947, -1.94640687, -1.90646498,\n       -1.88649384, -1.95004624, -1.91214554, -1.90505126, -1.90088368,\n       -1.95076818, -1.95799384, -2.202394  , -2.1345459 , -2.13420573,\n       -2.30442344, -2.29123676, -2.31645145, -1.93185125, -1.87691045,\n       -1.85574829, -1.94608694, -1.90356877, -1.87683088, -1.94963184,\n       -1.9182906 , -1.90010464, -1.94550474, -2.02513757, -2.04544715,\n       -2.16226796, -2.13388419, -2.07808376, -2.23857026, -2.31758352,\n       -2.3470873 , -1.929637  , -1.87746247, -1.85184812, -1.96386947,\n       -1.90793879, -1.88647966, -1.95217678, -1.9139535 , -1.88256235,\n       -1.9801282 , -1.9901719 , -1.91384384, -2.23638928, -2.15777945,\n       -2.08671837, -2.25441791, -2.24091882, -2.42382139, -1.93144551,\n       -1.87609013, -1.85113067, -1.94327041, -1.89758927, -1.87204296,\n       -1.93082238, -1.8969578 , -1.90854795]), 'split4_test_score': array([-1.55504808, -1.58339693, -1.59203291, -1.87737067, -1.84869792,\n       -1.971361  , -1.9156659 , -1.89969545, -1.92056867, -1.89698704,\n       -1.841391  , -1.81544058, -1.89608386, -1.85263416, -1.83712937,\n       -1.89623434, -1.85009519, -1.83364689, -1.53355189, -1.51323854,\n       -1.48995252, -1.69920878, -1.72655409, -1.69857905, -1.79762819,\n       -1.78224983, -1.78905024, -1.88299721, -1.81296396, -1.78174901,\n       -1.8817931 , -1.82135456, -1.79611674, -1.87332649, -1.80644651,\n       -1.77726852, -1.48549092, -1.46471007, -1.46496737, -1.78279224,\n       -1.80092932, -1.80498982, -1.79416243, -1.79165869, -1.79462485,\n       -1.89005329, -1.82989644, -1.80316773, -1.88811278, -1.82887739,\n       -1.80892695, -1.87419098, -1.80851086, -1.78128397, -1.53605037,\n       -1.50867489, -1.47626718, -1.91275162, -1.77633394, -1.81309037,\n       -1.59922719, -1.64282053, -1.67944713, -1.89664894, -1.84059987,\n       -1.81467247, -1.87500918, -1.78856286, -1.76443571, -1.86819368,\n       -1.78743612, -1.75626151, -1.57284345, -1.54682198, -1.57674675,\n       -1.91405082, -1.89013009, -1.84564638, -1.9737957 , -1.93465677,\n       -1.97253117, -1.89675245, -1.84163026, -1.81853018, -1.91411886,\n       -1.88190252, -1.87545675, -1.90929742, -1.8731819 , -1.85730512,\n       -1.62150771, -1.59607533, -1.5961876 , -1.96629651, -1.92446543,\n       -1.90006889, -2.01315909, -1.97621414, -1.94770032, -1.89889879,\n       -1.84436111, -1.82200613, -1.91292097, -1.8800206 , -1.87493607,\n       -1.91011976, -1.87278397, -1.85777189, -1.65288919, -1.62622229,\n       -1.61187551, -1.91997347, -1.7967469 , -1.85841154, -1.83866472,\n       -1.85212986, -1.82644398, -1.89748869, -1.84356552, -1.82105756,\n       -1.89515147, -1.84386024, -1.82363012, -1.89471379, -1.84598773,\n       -1.8248597 , -1.6938697 , -1.66729937, -1.66057934, -1.97595978,\n       -1.978228  , -1.93201197, -2.02809163, -2.0011864 , -2.05610264,\n       -1.896307  , -1.84352689, -1.81951074, -1.91151745, -1.87311163,\n       -1.86094854, -1.91157279, -1.87778531, -1.86946494, -1.59956522,\n       -1.59189037, -1.63142996, -2.06549597, -2.02926296, -1.99510853,\n       -2.1488021 , -2.13664781, -2.08319583, -1.90594299, -1.85564505,\n       -1.83348853, -1.90031621, -1.86242932, -1.84684419, -1.90490594,\n       -1.86579601, -1.84940978, -1.57110181, -1.55363535, -1.57674587,\n       -2.10412078, -2.11280673, -2.06339864, -2.19394858, -2.25754823,\n       -2.18756038, -1.90606225, -1.85483215, -1.83334505, -1.91335996,\n       -1.8840047 , -1.87219348, -1.91359737, -1.88637522, -1.87358859,\n       -1.60611882, -1.64087802, -1.60359669, -2.16746892, -2.18900044,\n       -2.13841097, -2.24203978, -2.26662189, -2.23597821, -1.90591555,\n       -1.85530605, -1.83300162, -1.92141878, -1.90183548, -1.89705857,\n       -1.92391918, -1.89853848, -1.89244654, -1.48947441, -1.48944498,\n       -1.48527684, -2.10182049, -2.06407555, -2.07075701, -2.29640207,\n       -2.27624645, -2.28258322, -1.90104539, -1.84266149, -1.81604667,\n       -1.92341205, -1.89454176, -1.88682545, -1.92323891, -1.90311709,\n       -1.89535347, -1.57613291, -1.55393632, -1.57261682, -2.08763457,\n       -2.11442361, -2.02877772, -2.22083697, -2.2328585 , -2.21904983,\n       -1.90197023, -1.84470649, -1.81810238, -1.91880643, -1.89798942,\n       -1.88933909, -1.92046137, -1.88911964, -1.88411844, -1.56456171,\n       -1.5710351 , -1.5782295 , -2.07433431, -2.09117399, -2.09972173,\n       -2.20386524, -2.20909016, -2.24772418, -1.90155732, -1.84518919,\n       -1.81787254, -1.91950773, -1.89373457, -1.88478303, -1.91699267,\n       -1.89247643, -1.87990505, -1.68277863, -1.65851923, -1.6405053 ,\n       -2.23225518, -2.303889  , -2.2435968 , -2.33140804, -2.33402016,\n       -2.33884283, -1.90218416, -1.84754556, -1.8223205 , -1.94072084,\n       -1.93426897, -1.93717092, -1.93938563, -1.93231598, -1.9330464 ,\n       -1.63330568, -1.68325561, -1.67307765, -2.0287574 , -2.14470907,\n       -2.18473567, -2.32443758, -2.30975599, -2.32677478, -1.90283892,\n       -1.84671983, -1.82016872, -1.93657654, -1.92414935, -1.92468317,\n       -1.93507124, -1.92375733, -1.91918903, -1.59450281, -1.59684644,\n       -1.58067431, -1.86379046, -1.83603349, -2.07017276, -2.30316274,\n       -2.30324503, -2.28785485, -1.90859598, -1.85311677, -1.83010593,\n       -1.92596209, -1.90726258, -1.90536561, -1.92955274, -1.91390396,\n       -1.90914385, -1.66422889, -1.68445318, -1.65761078, -1.86745118,\n       -1.9019385 , -1.97670849, -2.28849187, -2.30183216, -2.29472403,\n       -1.90851141, -1.85301048, -1.82930157, -1.92660956, -1.909087  ,\n       -1.90325977, -1.92815032, -1.9132144 , -1.91005118, -1.71245999,\n       -1.69434924, -1.71629471, -1.98831886, -1.84750101, -1.8886075 ,\n       -2.20907397, -2.19484354, -2.18027438, -1.90887205, -1.85438697,\n       -1.83292292, -1.92086025, -1.898312  , -1.8879108 , -1.9253833 ,\n       -1.90258555, -1.89787707, -1.6995516 , -1.71723961, -1.71395311,\n       -2.0492257 , -1.89125785, -1.97183744, -2.17174563, -2.18776526,\n       -2.1664574 , -1.90916168, -1.85391296, -1.83385384, -1.9233595 ,\n       -1.90001707, -1.8944387 , -1.92606668, -1.90378089, -1.89498358,\n       -1.68182252, -1.67804986, -1.69821669, -1.97786378, -1.98056077,\n       -1.95333697, -2.17139077, -2.20118962, -2.21309074, -1.90922377,\n       -1.85491806, -1.8319802 , -1.92362627, -1.90060698, -1.8907358 ,\n       -1.92546762, -1.90233636, -1.89387679, -1.71559743, -1.72173702,\n       -1.71222274, -1.91621082, -1.91203363, -2.05928835, -2.21853867,\n       -2.2191125 , -2.26260263, -1.91143399, -1.86140767, -1.83841886,\n       -1.92587561, -1.90125372, -1.89293795, -1.92392502, -1.9061986 ,\n       -1.89733459, -1.64906519, -1.64860631, -1.61934216, -2.08985172,\n       -2.07938545, -2.04530608, -2.23183495, -2.24359704, -2.21915571,\n       -1.91007587, -1.86436648, -1.84441669, -1.92599634, -1.90615092,\n       -1.89547086, -1.92498584, -1.90566773, -1.90103977, -1.28429742,\n       -1.30104627, -1.32645809, -1.73389245, -1.72230735, -1.67356982,\n       -1.81113617, -1.8064397 , -1.80405756, -1.87704092, -1.80138729,\n       -1.76824539, -1.87840034, -1.81236561, -1.78426707, -1.87805798,\n       -1.81053745, -1.78330785, -1.31498098, -1.36227114, -1.34929204,\n       -1.68077248, -1.66492537, -1.66043893, -1.78691569, -1.79205085,\n       -1.81994555, -1.87579611, -1.80412637, -1.77385696, -1.86132578,\n       -1.77799883, -1.74418524, -1.86836978, -1.79660244, -1.76396188,\n       -1.37129583, -1.38150586, -1.4058268 , -1.69509648, -1.7303703 ,\n       -1.73746067, -1.92605786, -1.86011182, -1.90639932, -1.87815835,\n       -1.80604339, -1.77609334, -1.8700736 , -1.80045862, -1.7731614 ,\n       -1.87309904, -1.80605586, -1.7796246 , -1.3639306 , -1.39895029,\n       -1.34444682, -1.80083784, -1.78098183, -1.87368811, -1.89145094,\n       -1.88144483, -1.92846645, -1.87938072, -1.79979132, -1.76717713,\n       -1.88852124, -1.82840838, -1.81061995, -1.88943452, -1.83403206,\n       -1.81156155, -1.47255156, -1.48556706, -1.45626409, -1.88496728,\n       -1.93105598, -1.90708617, -1.95199598, -1.96006414, -1.95809802,\n       -1.88378369, -1.80630753, -1.77371091, -1.88759522, -1.83457691,\n       -1.81135766, -1.89059463, -1.83471952, -1.81513976, -1.50009014,\n       -1.53230656, -1.52727488, -1.79586788, -1.7310247 , -1.73437376,\n       -2.08137458, -2.10325792, -2.07620408, -1.88513656, -1.81103357,\n       -1.77898187, -1.90457534, -1.86296634, -1.84664103, -1.90338493,\n       -1.86154813, -1.84789249, -1.43371217, -1.43661879, -1.44587742,\n       -1.72278749, -1.70250667, -1.70848999, -1.90886169, -1.8774102 ,\n       -1.92622748, -1.89112446, -1.81746492, -1.78614539, -1.8970735 ,\n       -1.84692673, -1.82574108, -1.89595442, -1.84444528, -1.82302166,\n       -1.57816786, -1.56753738, -1.55783129, -1.80486153, -1.803498  ,\n       -1.8482395 , -1.92083921, -1.959589  , -1.91557585, -1.89271746,\n       -1.82505305, -1.79720381, -1.90150697, -1.85619874, -1.83651428,\n       -1.89964651, -1.847706  , -1.83075054, -1.54359404, -1.55958687,\n       -1.59915361, -1.77765009, -1.75099089, -1.78110895, -1.97344614,\n       -1.97960671, -1.99961377, -1.89302984, -1.83491442, -1.80613032,\n       -1.90377358, -1.85877119, -1.84331923, -1.90360015, -1.86154976,\n       -1.84234933, -1.55646002, -1.59661785, -1.61331553, -1.68770829,\n       -1.67125824, -1.65907048, -1.92096535, -1.91853564, -1.90109234,\n       -1.88878733, -1.82568922, -1.79850603, -1.89662286, -1.84229877,\n       -1.82183466, -1.89554041, -1.84443786, -1.82233466, -1.50307176,\n       -1.49392177, -1.48907575, -1.6635088 , -1.6644777 , -1.68866946,\n       -2.02695247, -2.06110547, -2.04964001, -1.88491244, -1.81628762,\n       -1.78568489, -1.90625988, -1.8646275 , -1.83926528, -1.90878046,\n       -1.87270364, -1.85735045, -1.49064549, -1.51660373, -1.44854405,\n       -1.84052711, -1.81518033, -1.81818339, -2.01281814, -1.9329272 ,\n       -1.96232191, -1.88327132, -1.80864495, -1.77827748, -1.90447611,\n       -1.85908658, -1.84145118, -1.90276534, -1.8609921 , -1.84313334,\n       -1.45972452, -1.58838251, -1.46354798, -1.93400475, -1.95705986,\n       -1.92188716, -2.10135877, -2.09988   , -2.12505391, -1.88698766,\n       -1.81216148, -1.78428434, -1.91417277, -1.88355049, -1.87102074,\n       -1.91487734, -1.8846792 , -1.8711214 , -1.45556923, -1.4534548 ,\n       -1.47382191, -1.8450401 , -1.80996673, -1.85784878, -2.01576031,\n       -2.01894393, -2.0361046 , -1.87718787, -1.80773674, -1.77919283,\n       -1.91156891, -1.8765305 , -1.86276   , -1.91386163, -1.8796764 ,\n       -1.86657048, -1.41346624, -1.40147811, -1.41166746, -1.77661476,\n       -1.75836378, -1.75204852, -1.8027801 , -1.78821889, -1.80477437,\n       -1.89553689, -1.82470198, -1.79654277, -1.89314205, -1.83977775,\n       -1.81736296, -1.89544324, -1.84225545, -1.82037146, -1.45989574,\n       -1.45306648, -1.48500698, -1.79612142, -1.80044403, -1.80920899,\n       -1.81752331, -1.79552996, -1.79219088, -1.89605239, -1.82584778,\n       -1.7975149 , -1.89018596, -1.83486945, -1.81200378, -1.89157873,\n       -1.84082746, -1.81489704, -1.52029006, -1.57675889, -1.54866743,\n       -1.8663731 , -1.87562435, -1.87626003, -1.84894189, -1.89748034,\n       -1.93309499, -1.88431908, -1.8191518 , -1.79204386, -1.88768753,\n       -1.83488575, -1.81005602, -1.88979304, -1.8355662 , -1.81272264,\n       -1.50701134, -1.54933454, -1.54067427, -1.80708887, -1.82781999,\n       -1.81661273, -1.8724758 , -1.85085986, -1.88412794, -1.8837405 ,\n       -1.81773814, -1.79266822, -1.88934553, -1.8338582 , -1.81313981,\n       -1.8921737 , -1.83735076, -1.8124471 , -1.52569269, -1.56622064,\n       -1.56839853, -1.80494523, -1.75526507, -1.7864489 , -1.85772381,\n       -1.8087787 , -1.85051953, -1.88436073, -1.81744106, -1.79079827,\n       -1.89128208, -1.8376932 , -1.81852222, -1.89087633, -1.83503886,\n       -1.8109551 , -1.46712991, -1.52282096, -1.51727262, -1.79589257,\n       -1.81504797, -1.81188338, -1.82750523, -1.85873865, -1.80285973,\n       -1.8839961 , -1.81128679, -1.77974948, -1.89210165, -1.83984496,\n       -1.81905863, -1.89067211, -1.83750886, -1.81377002, -1.41762636,\n       -1.49506828, -1.54198997, -1.81113219, -1.79957662, -1.79370051,\n       -1.83299755, -2.22711696, -1.83431307, -1.88432082, -1.81281002,\n       -1.77920154, -1.89292679, -1.85202143, -1.81906838, -1.88659144,\n       -1.83705785, -1.81348567, -1.56150048, -1.52261378, -1.5299726 ,\n       -1.81011316, -1.53179975, -1.85835326, -1.7873074 , -1.85032358,\n       -1.7750204 , -1.88454401, -1.8103385 , -1.78112581, -1.88210806,\n       -1.86978818, -1.91101382, -1.89695501, -1.85817155, -1.80357739,\n       -1.48454411, -1.54033999, -1.50408563, -1.6933927 , -1.67498627,\n       -2.06738003, -1.83067922, -2.14348238, -1.76810107, -1.88360626,\n       -1.82184979, -1.77257784, -1.87772399, -1.91088774, -1.82107405,\n       -1.89775643, -1.83357531, -1.81128774]), 'split5_test_score': array([-1.57421491, -1.57361903, -1.59816698, -2.03807558, -2.03849327,\n       -2.00579893, -2.22784948, -2.2567348 , -2.28412054, -1.89865565,\n       -1.84408092, -1.82127324, -1.91988676, -1.89622268, -1.88899863,\n       -1.91871373, -1.89431917, -1.88747612, -1.6587658 , -1.71126398,\n       -1.7059482 , -2.11204859, -2.11187524, -2.13285121, -2.27040108,\n       -2.26900051, -2.27118847, -1.89001236, -1.84013156, -1.81695759,\n       -1.90189133, -1.86288506, -1.84951255, -1.90127542, -1.86035238,\n       -1.84792387, -1.69299   , -1.71363347, -1.71965874, -1.94077185,\n       -2.02976793, -2.01162434, -2.05651363, -2.01190336, -2.05814916,\n       -1.87631127, -1.8243275 , -1.80640426, -1.88521866, -1.83281987,\n       -1.81216626, -1.8839836 , -1.82627443, -1.80714222, -1.72247933,\n       -1.76163947, -1.77665862, -2.11547661, -2.13132695, -2.09249722,\n       -2.06470696, -2.09349698, -2.06145299, -1.87599153, -1.82922337,\n       -1.8118101 , -1.89090816, -1.84301597, -1.82296758, -1.89114144,\n       -1.84083126, -1.82264745, -1.72188015, -1.75612332, -1.75660225,\n       -2.01772383, -2.06811236, -2.02721186, -2.00058373, -2.02315912,\n       -2.01866884, -1.87216516, -1.82510088, -1.80729937, -1.87432212,\n       -1.81309255, -1.78545239, -1.87124671, -1.80323237, -1.77963432,\n       -1.68134739, -1.67982123, -1.70293092, -1.79948469, -1.80869197,\n       -1.86600887, -1.96484459, -1.9706408 , -1.92391487, -1.87268274,\n       -1.82652561, -1.80921148, -1.87235261, -1.80862546, -1.78008122,\n       -1.86677659, -1.79745948, -1.76723371, -1.71759608, -1.74890299,\n       -1.73895286, -2.16806778, -2.16695113, -2.14640542, -2.21492609,\n       -2.20928022, -2.19069445, -1.88293584, -1.83649574, -1.81870053,\n       -1.90226094, -1.86260419, -1.85548898, -1.90059814, -1.85953299,\n       -1.84749448, -1.69313118, -1.7153608 , -1.76188876, -2.14885079,\n       -2.18975338, -2.15566643, -2.20021698, -2.21524229, -2.21232998,\n       -1.88287245, -1.83604398, -1.81774624, -1.89716281, -1.85629126,\n       -1.83867379, -1.89627155, -1.85016906, -1.83579996, -1.81106791,\n       -1.83428301, -1.83223937, -2.21526093, -2.24398312, -2.25227305,\n       -2.46413436, -2.45765528, -2.46857189, -1.90336491, -1.85806024,\n       -1.83610398, -1.93423564, -1.91510901, -1.91160173, -1.93779109,\n       -1.9324227 , -1.93420589, -1.80241435, -1.82843883, -1.84973001,\n       -2.21434713, -2.20110998, -2.20384711, -2.48798022, -2.399843  ,\n       -2.42788414, -1.90737941, -1.86281603, -1.84115081, -1.93575546,\n       -1.92244999, -1.92074721, -1.94267423, -1.93996002, -1.94470604,\n       -1.76105561, -1.79698189, -1.82257073, -2.12976195, -2.15065011,\n       -2.21026896, -2.34913109, -2.31826312, -2.35594063, -1.90783189,\n       -1.86506955, -1.84493168, -1.93226795, -1.91029184, -1.90808767,\n       -1.93595853, -1.93104694, -1.93170121, -1.68228618, -1.70727009,\n       -1.71364169, -2.06617829, -2.04242884, -2.06668311, -2.3065787 ,\n       -2.31936048, -2.36358154, -1.91345729, -1.86861636, -1.8486561 ,\n       -1.92349681, -1.90185187, -1.89334371, -1.91941362, -1.89770136,\n       -1.89245265, -1.72239269, -1.72707175, -1.73396831, -2.07333691,\n       -2.08447681, -2.05557862, -2.28033894, -2.25932677, -2.31654066,\n       -1.91370091, -1.87073489, -1.85168608, -1.92090481, -1.89326637,\n       -1.88655932, -1.91583276, -1.89289489, -1.88421736, -1.6848666 ,\n       -1.71359784, -1.75135984, -2.12231332, -2.15777597, -2.13245205,\n       -2.38668798, -2.346333  , -2.33038783, -1.91369116, -1.87151685,\n       -1.85272706, -1.92444583, -1.90248671, -1.89767317, -1.92116365,\n       -1.90011055, -1.89649512, -1.69860395, -1.76224693, -1.72507325,\n       -2.12081877, -2.11382421, -2.11199803, -2.35588946, -2.360235  ,\n       -2.34927115, -1.91416124, -1.87339598, -1.85429351, -1.92447349,\n       -1.90415441, -1.8989924 , -1.92325591, -1.90342892, -1.89998322,\n       -1.74686228, -1.79234548, -1.78186876, -2.14420686, -2.15242134,\n       -2.12073857, -2.32431615, -2.3354858 , -2.32547717, -1.91178615,\n       -1.86743935, -1.84597429, -1.93062034, -1.91241866, -1.90589018,\n       -1.92722736, -1.90942432, -1.90893605, -1.72987708, -1.7834259 ,\n       -1.7882432 , -2.10737656, -2.09670598, -2.10520052, -2.34578698,\n       -2.36752928, -2.37795761, -1.91186077, -1.86870864, -1.84941213,\n       -1.92855589, -1.91463652, -1.90849149, -1.92516541, -1.91271067,\n       -1.90674264, -1.78702939, -1.77194882, -1.76284144, -2.05216111,\n       -2.0974433 , -2.0690561 , -2.34701879, -2.36140165, -2.35438508,\n       -1.91516067, -1.87374398, -1.85285132, -1.93240682, -1.91667035,\n       -1.91609798, -1.92860017, -1.91817815, -1.91544878, -1.79026599,\n       -1.81245113, -1.78380511, -2.12420353, -2.08750149, -2.15007174,\n       -2.36467535, -2.33926375, -2.34785595, -1.91460327, -1.87445732,\n       -1.85415315, -1.93224199, -1.91673079, -1.91723875, -1.92948526,\n       -1.91232378, -1.91177484, -1.69826666, -1.74332789, -1.74413109,\n       -2.16239213, -2.19060429, -2.13272208, -2.35528745, -2.33837778,\n       -2.35581478, -1.91424231, -1.87504474, -1.85500562, -1.93098339,\n       -1.91561309, -1.91255057, -1.92639664, -1.90869374, -1.90721567,\n       -1.76849788, -1.78220763, -1.79578713, -2.13788848, -2.20036426,\n       -2.14871893, -2.35025802, -2.33462698, -2.39450365, -1.91496086,\n       -1.87500505, -1.85604554, -1.92987458, -1.91793385, -1.91490708,\n       -1.9257409 , -1.91016935, -1.90818118, -1.70990711, -1.72670624,\n       -1.72514622, -2.18595949, -2.16733739, -2.17938275, -2.36878744,\n       -2.37491381, -2.36582039, -1.9153667 , -1.87567348, -1.85704461,\n       -1.93124924, -1.91433707, -1.91254463, -1.92500741, -1.9089519 ,\n       -1.90643741, -1.66366613, -1.70100977, -1.71084269, -2.09544128,\n       -2.14433076, -2.15103172, -2.31081667, -2.3690651 , -2.32071729,\n       -1.90860407, -1.86182569, -1.841585  , -1.92792626, -1.90846283,\n       -1.9026253 , -1.92218733, -1.90221611, -1.89797813, -1.38829378,\n       -1.3725765 , -1.38194198, -1.5797441 , -1.71589658, -1.70693945,\n       -2.02590412, -2.0379514 , -2.05593449, -1.87261884, -1.79757335,\n       -1.76456342, -1.85928156, -1.77658058, -1.74034969, -1.85674691,\n       -1.77974685, -1.75185745, -1.62100289, -1.62516926, -1.64504788,\n       -1.83662628, -1.84357814, -1.83815968, -1.93941834, -1.9750168 ,\n       -1.96902069, -1.88928365, -1.83082283, -1.80160514, -1.87541784,\n       -1.81329182, -1.78949657, -1.88073129, -1.81186013, -1.78576825,\n       -1.64533994, -1.58785813, -1.62797427, -1.75189781, -1.71738692,\n       -1.74773518, -2.10546202, -2.10264242, -2.10304422, -1.88937269,\n       -1.8288272 , -1.80184537, -1.89637418, -1.84756033, -1.82708152,\n       -1.9049805 , -1.86513607, -1.84995055, -1.65718784, -1.59993685,\n       -1.65374212, -1.77373207, -1.77195483, -1.74381055, -2.12323997,\n       -2.10288083, -2.09030706, -1.88995971, -1.83009878, -1.79942744,\n       -1.88568817, -1.82979363, -1.80683135, -1.8964034 , -1.85092479,\n       -1.83245486, -1.74114504, -1.76789929, -1.81951812, -1.93736662,\n       -1.9436004 , -1.9654707 , -2.05040351, -2.06206683, -2.11874641,\n       -1.88733746, -1.82502502, -1.79714967, -1.8941266 , -1.84466341,\n       -1.82471469, -1.88981372, -1.84067193, -1.82305566, -1.83676279,\n       -1.80767376, -1.82007936, -1.85350729, -1.82702394, -1.91748117,\n       -1.96671241, -1.94450212, -1.96573309, -1.86195875, -1.7867234 ,\n       -1.75445065, -1.87154768, -1.80655529, -1.78365446, -1.87446561,\n       -1.81058292, -1.7833372 , -1.68154566, -1.72008665, -1.72971704,\n       -1.82107169, -1.83137016, -1.8372088 , -2.01880063, -2.03249058,\n       -1.99649936, -1.86097668, -1.78499417, -1.75123112, -1.87350205,\n       -1.80524534, -1.78290129, -1.8744858 , -1.80819381, -1.78535624,\n       -1.60823345, -1.68661461, -1.65938711, -1.7601979 , -1.76882563,\n       -1.73647147, -1.7679234 , -1.80444269, -1.79907156, -1.86137518,\n       -1.78533809, -1.75388016, -1.85721136, -1.77355831, -1.74031532,\n       -1.85915499, -1.78641249, -1.75464086, -1.56441873, -1.68885321,\n       -1.69540236, -1.76810885, -1.79818154, -1.75405484, -1.92235118,\n       -1.90421122, -1.90616869, -1.86667332, -1.79297394, -1.76251897,\n       -1.85958769, -1.77829975, -1.74829765, -1.86307164, -1.78953518,\n       -1.7607632 , -1.65424247, -1.73526903, -1.69618379, -1.77744216,\n       -1.78740272, -1.79660666, -1.90015892, -1.91578428, -1.94989813,\n       -1.86432344, -1.78900084, -1.75784879, -1.86072191, -1.78181833,\n       -1.75061929, -1.8671169 , -1.79497613, -1.7662181 , -1.59162737,\n       -1.68570379, -1.62132266, -1.82411512, -1.82003708, -1.88415918,\n       -2.24311324, -2.24526926, -2.20477376, -1.86431425, -1.78927208,\n       -1.75666641, -1.8897562 , -1.83474712, -1.81451749, -1.9040684 ,\n       -1.86746768, -1.85596451, -1.54124621, -1.59487767, -1.62554118,\n       -1.75622137, -1.78031372, -1.7386561 , -2.18807715, -2.2373247 ,\n       -2.27089703, -1.86774665, -1.79664155, -1.76674462, -1.89660644,\n       -1.84166564, -1.82255257, -1.90841838, -1.87872388, -1.87050192,\n       -1.53782874, -1.56672608, -1.56621345, -1.83624768, -1.83620314,\n       -1.78014076, -2.29629453, -2.26194495, -2.26756989, -1.86980836,\n       -1.79968523, -1.7702167 , -1.90086046, -1.85110132, -1.83133338,\n       -1.90210605, -1.86601948, -1.85582291, -1.58468598, -1.61122357,\n       -1.6081643 , -1.84858615, -1.89628342, -1.86241357, -2.12728263,\n       -2.11321463, -2.09647105, -1.87234757, -1.7957091 , -1.76070352,\n       -1.89081332, -1.84107084, -1.82057804, -1.89388387, -1.84500619,\n       -1.82876044, -1.54425671, -1.52376295, -1.55604863, -1.69171248,\n       -1.70952966, -1.69326362, -2.08586418, -2.11095208, -2.10868398,\n       -1.87041355, -1.79123472, -1.75668471, -1.88252743, -1.82516934,\n       -1.79540253, -1.88751815, -1.83588173, -1.81709841, -1.44133829,\n       -1.44538152, -1.45304256, -1.7063716 , -1.73727375, -1.77348043,\n       -2.12607089, -2.11273555, -2.11110441, -1.87041355, -1.79099739,\n       -1.75589033, -1.88146583, -1.82350057, -1.79705774, -1.88806801,\n       -1.83738714, -1.81899423, -1.5477447 , -1.53640628, -1.54474331,\n       -1.7342386 , -1.67492415, -1.76059561, -1.91217169, -1.95652545,\n       -1.92506002, -1.86945234, -1.79137924, -1.75740212, -1.87854893,\n       -1.81716954, -1.79648995, -1.87362458, -1.80804613, -1.78067205,\n       -1.5950959 , -1.62808742, -1.61602001, -1.77750516, -1.69904446,\n       -1.78070903, -1.92840665, -1.93720694, -1.90610488, -1.86923539,\n       -1.79197758, -1.75805591, -1.87810849, -1.82164886, -1.80244298,\n       -1.87732624, -1.81262069, -1.78923983, -1.60325077, -1.60083411,\n       -1.58337312, -1.6763212 , -1.69877244, -1.69034244, -1.90740535,\n       -1.90294409, -1.89639955, -1.86749439, -1.78482926, -1.7481149 ,\n       -1.87750395, -1.81964156, -1.79992194, -1.87614397, -1.80814395,\n       -1.78181256, -1.5620685 , -1.6389402 , -1.60277452, -1.7147333 ,\n       -1.70577951, -1.76383129, -1.83816922, -1.82095262, -1.82797469,\n       -1.86737935, -1.78493972, -1.7478388 , -1.86746013, -1.79928194,\n       -1.77645953, -1.86570294, -1.79236158, -1.76265158, -1.51587902,\n       -1.58933265, -1.55933393, -1.75443843, -1.67336029, -1.70285784,\n       -1.85043492, -1.82604143, -1.83890083, -1.86849408, -1.77962439,\n       -1.74794433, -1.88893862, -1.78614439, -1.76697201, -1.8587958 ,\n       -1.79377629, -1.76143084, -1.63642238, -1.5769961 , -1.54859607,\n       -1.74423927, -1.72419578, -1.78078849, -1.80901594, -1.85334666,\n       -1.87228132, -1.86173282, -1.78577174, -1.74414426, -1.88403654,\n       -1.79388586, -1.74603379, -1.86554016, -1.834746  , -1.79083967,\n       -1.51241854, -1.62352974, -1.59608642, -1.65845938, -1.82973657,\n       -1.60557713, -1.77105048, -1.8421728 , -1.91119734, -1.86714876,\n       -1.79890625, -1.74020055, -1.89894363, -1.78220348, -1.77497171,\n       -1.85255448, -1.81712437, -1.77775222]), 'split6_test_score': array([-1.22483225, -1.22228315, -1.20125038, -1.67324068, -1.70716081,\n       -1.71045357, -1.84228591, -1.87240547, -1.86867324, -1.8677994 ,\n       -1.7942167 , -1.76158641, -1.87254635, -1.80613848, -1.7776985 ,\n       -1.88872932, -1.83059737, -1.80938229, -1.25765016, -1.23050717,\n       -1.16211993, -1.77659443, -1.81895492, -1.80121978, -2.15298587,\n       -2.13825477, -2.12299841, -1.88080537, -1.81561223, -1.78089285,\n       -1.87723323, -1.81398027, -1.78762785, -1.88167755, -1.82772478,\n       -1.81189766, -1.34759105, -1.29980665, -1.30009234, -1.83768425,\n       -1.85827494, -1.84878757, -2.19545355, -2.1661216 , -2.22473364,\n       -1.8793597 , -1.81774484, -1.79456141, -1.8910198 , -1.83965766,\n       -1.8200204 , -1.89816168, -1.85717495, -1.84150646, -1.38431367,\n       -1.37888981, -1.35548637, -1.86216483, -1.88564402, -1.86706706,\n       -2.16621923, -2.15537683, -2.14330238, -1.88010462, -1.81305975,\n       -1.78130777, -1.88328792, -1.82093945, -1.79506842, -1.89413035,\n       -1.8442356 , -1.82863971, -1.48679686, -1.45042681, -1.47858256,\n       -1.81714893, -1.84087742, -1.8121751 , -2.09836629, -2.19756937,\n       -2.1438656 , -1.88596617, -1.82532357, -1.79860544, -1.89301127,\n       -1.84145081, -1.81879969, -1.89381704, -1.85241195, -1.8350875 ,\n       -1.39115864, -1.39687035, -1.38837626, -1.86120545, -1.87761598,\n       -1.83450582, -2.08203444, -2.14117897, -2.12614399, -1.87567473,\n       -1.80679616, -1.77858682, -1.89287638, -1.84213278, -1.82199249,\n       -1.89680065, -1.85115326, -1.83556443, -1.30378171, -1.29014133,\n       -1.29377717, -1.80905139, -1.75946271, -1.77540373, -2.08825412,\n       -2.07984554, -2.11536389, -1.86968997, -1.79995635, -1.77037263,\n       -1.8896069 , -1.83883108, -1.81223144, -1.89251158, -1.84493804,\n       -1.82429579, -1.28009174, -1.27809969, -1.29017523, -1.93842248,\n       -1.94171098, -1.96280018, -2.14003766, -2.18007325, -2.18671538,\n       -1.88650748, -1.8196627 , -1.78986501, -1.90310026, -1.86162027,\n       -1.84505163, -1.90689107, -1.86801892, -1.85245542, -1.37729527,\n       -1.36020023, -1.36744103, -1.92094928, -1.95674602, -2.00193179,\n       -2.15804527, -2.14878204, -2.12505279, -1.88724065, -1.82611596,\n       -1.80169384, -1.89739909, -1.85434301, -1.83448528, -1.89948392,\n       -1.86210049, -1.84016911, -1.4135405 , -1.38281532, -1.38437722,\n       -1.91882361, -1.87294747, -1.91744724, -1.86814737, -1.86848564,\n       -1.96844023, -1.88327077, -1.82432661, -1.79647332, -1.88017896,\n       -1.81682034, -1.79195548, -1.87528501, -1.8063936 , -1.77521107,\n       -1.4127991 , -1.36221454, -1.35888618, -1.97775277, -1.93910936,\n       -1.95947181, -1.96387322, -1.89881498, -1.95236783, -1.88349377,\n       -1.82578585, -1.79883474, -1.88048028, -1.81117869, -1.7893112 ,\n       -1.87247927, -1.80565219, -1.77711025, -1.36923391, -1.38819648,\n       -1.38096444, -1.91474355, -2.00867201, -1.96405377, -1.98233587,\n       -1.99238653, -1.98797968, -1.88863073, -1.83634338, -1.80944682,\n       -1.88327116, -1.82218324, -1.80363196, -1.87728995, -1.81108703,\n       -1.79160938, -1.43126576, -1.42954931, -1.40463573, -2.16769196,\n       -2.16238881, -2.14370584, -2.23105454, -2.16456681, -2.19444865,\n       -1.89571465, -1.8508871 , -1.8265718 , -1.89669273, -1.8520083 ,\n       -1.83532534, -1.89247047, -1.84418946, -1.82241569, -1.51073552,\n       -1.52812206, -1.51387104, -2.12689041, -2.06457761, -2.12804776,\n       -2.14654661, -2.08232697, -2.14521119, -1.89660062, -1.8549382 ,\n       -1.83957373, -1.89927268, -1.86192384, -1.84433521, -1.89721477,\n       -1.85197102, -1.83737024, -1.47114409, -1.47076986, -1.4308509 ,\n       -1.989785  , -2.07048293, -2.06557321, -2.0712578 , -2.0904012 ,\n       -2.04774282, -1.88793709, -1.83657329, -1.81367389, -1.89179414,\n       -1.841641  , -1.82177606, -1.88718409, -1.82863788, -1.81205225,\n       -1.46618227, -1.45824822, -1.46360204, -1.70606266, -1.73905306,\n       -1.85152697, -1.96492729, -1.96449595, -1.99943488, -1.89930059,\n       -1.84467288, -1.82306509, -1.89439845, -1.84854664, -1.83090685,\n       -1.89058034, -1.8392689 , -1.81964257, -1.41353658, -1.38431541,\n       -1.35891878, -1.8217899 , -1.81910449, -1.87510925, -1.86220239,\n       -1.82131728, -1.83693231, -1.88929517, -1.83712749, -1.81622308,\n       -1.88957761, -1.83870096, -1.81878496, -1.87774785, -1.80966694,\n       -1.78665272, -1.5096063 , -1.50688517, -1.40223927, -1.87218188,\n       -1.8639008 , -1.87993598, -1.9264322 , -1.88848389, -1.92658802,\n       -1.8934454 , -1.84390767, -1.821625  , -1.89650643, -1.8424872 ,\n       -1.82681231, -1.88420281, -1.82664237, -1.80249407, -1.47749325,\n       -1.4194166 , -1.42377763, -1.83187885, -1.83560277, -1.80911579,\n       -1.81559476, -1.87562377, -1.82724744, -1.89383331, -1.83748021,\n       -1.81438183, -1.89040731, -1.83765677, -1.81835248, -1.88146194,\n       -1.81847313, -1.79778362, -1.52265039, -1.52019636, -1.49983809,\n       -1.87541208, -1.95752761, -1.94662097, -2.05641485, -1.96339295,\n       -1.99677545, -1.89459215, -1.84182582, -1.81733563, -1.89282637,\n       -1.84448552, -1.82484159, -1.89431003, -1.84541265, -1.82170953,\n       -1.55511555, -1.55529539, -1.58139716, -1.83602379, -1.8077507 ,\n       -1.86412223, -2.01523447, -2.04057077, -1.99189832, -1.8924001 ,\n       -1.84190138, -1.8174672 , -1.87937416, -1.81668074, -1.79465827,\n       -1.89281464, -1.84023569, -1.81974493, -1.47344684, -1.49644574,\n       -1.42617142, -1.83535957, -1.85804515, -1.83772927, -2.03823785,\n       -1.94078357, -1.99626655, -1.89442811, -1.84087786, -1.81555473,\n       -1.89061681, -1.83280377, -1.81041764, -1.9010538 , -1.8557571 ,\n       -1.84035062, -1.46685969, -1.43858217, -1.48479011, -1.79042378,\n       -1.82927509, -1.78461108, -1.95563446, -1.92414745, -1.98323469,\n       -1.89237012, -1.83605004, -1.81172513, -1.88901116, -1.83356087,\n       -1.81033727, -1.90116427, -1.85151486, -1.83508203, -1.23385924,\n       -1.15725924, -1.16335486, -1.53233967, -1.43784436, -1.4020442 ,\n       -1.52167459, -1.52164414, -1.53015441, -1.85324309, -1.77302225,\n       -1.73923661, -1.84425475, -1.75895973, -1.72271592, -1.83026319,\n       -1.73334479, -1.69148549, -1.33421519, -1.32065173, -1.32168313,\n       -1.71547279, -1.72262433, -1.72350641, -1.80484617, -1.78355547,\n       -1.77432072, -1.85864802, -1.77139032, -1.7349194 , -1.86537005,\n       -1.79061001, -1.75990845, -1.86624329, -1.79089378, -1.76017544,\n       -1.39578351, -1.41673917, -1.39668875, -1.83284908, -1.78084878,\n       -1.83574731, -1.84609203, -1.85987498, -1.85829443, -1.86186462,\n       -1.7812561 , -1.75217221, -1.86078577, -1.78339447, -1.75411259,\n       -1.86224095, -1.78731751, -1.75952072, -1.30616698, -1.33147642,\n       -1.30346109, -1.62863179, -1.61741984, -1.60450585, -1.59801022,\n       -1.57608256, -1.61705796, -1.8607589 , -1.77790485, -1.74599945,\n       -1.83754857, -1.73979423, -1.69964606, -1.8402572 , -1.74081799,\n       -1.69859402, -1.35846796, -1.31747039, -1.34539899, -1.65585749,\n       -1.64969485, -1.64730373, -1.59931586, -1.62271413, -1.64358287,\n       -1.85941456, -1.77681486, -1.74318835, -1.85271631, -1.76660968,\n       -1.73081194, -1.85175398, -1.76495357, -1.72762657, -1.25540903,\n       -1.25219935, -1.25811615, -1.51190476, -1.50260425, -1.51254902,\n       -1.60326894, -1.5958942 , -1.5744613 , -1.85231474, -1.75862586,\n       -1.71958847, -1.84372486, -1.74685009, -1.70467374, -1.84284834,\n       -1.74603626, -1.70389138, -1.28780651, -1.28310529, -1.27517355,\n       -1.43308351, -1.44516029, -1.44902062, -1.57368728, -1.50393054,\n       -1.60412469, -1.85457651, -1.76345209, -1.7242968 , -1.83983081,\n       -1.73911669, -1.69124928, -1.83629898, -1.7367299 , -1.69286074,\n       -1.29884049, -1.27539312, -1.27760041, -1.4782229 , -1.44301066,\n       -1.50764097, -1.53009392, -1.59261515, -1.52149171, -1.85425291,\n       -1.76076812, -1.71794198, -1.84261205, -1.74505312, -1.69859962,\n       -1.83858359, -1.73904551, -1.69658539, -1.26039186, -1.26309761,\n       -1.23919492, -1.49347173, -1.46496292, -1.50922866, -1.58068292,\n       -1.57011025, -1.55542606, -1.85432934, -1.76469118, -1.72396305,\n       -1.83428996, -1.72682596, -1.68276101, -1.836152  , -1.72921688,\n       -1.68352348, -1.34646394, -1.35801632, -1.3346446 , -1.52163936,\n       -1.52366722, -1.53911822, -1.54107477, -1.54733402, -1.57076895,\n       -1.85930364, -1.76918463, -1.72785395, -1.83309461, -1.73113492,\n       -1.68912092, -1.83649669, -1.7315295 , -1.68883913, -1.31211985,\n       -1.31442072, -1.28493866, -1.51301363, -1.53065513, -1.4993103 ,\n       -1.53811242, -1.53471905, -1.55107976, -1.85728161, -1.76757762,\n       -1.72733865, -1.82784976, -1.71503507, -1.66859467, -1.8271767 ,\n       -1.71568861, -1.66834732, -1.40794422, -1.35919557, -1.34925352,\n       -1.51949535, -1.50980637, -1.45836327, -1.57648858, -1.56056958,\n       -1.51125791, -1.85964407, -1.7738157 , -1.73524249, -1.82750636,\n       -1.7153152 , -1.66907568, -1.8265773 , -1.71727688, -1.66688202,\n       -1.42553437, -1.40691387, -1.45349476, -1.57662846, -1.58152668,\n       -1.54960863, -1.65247986, -1.59697643, -1.6965571 , -1.87000829,\n       -1.79498731, -1.76201231, -1.83598326, -1.73405019, -1.68779684,\n       -1.83439504, -1.73434034, -1.68932365, -1.43629755, -1.38295909,\n       -1.34735017, -1.563457  , -1.56700416, -1.52270759, -1.52774222,\n       -1.61917108, -1.61917191, -1.86940687, -1.79318507, -1.76275708,\n       -1.83656452, -1.73219976, -1.6902061 , -1.83531746, -1.73438567,\n       -1.69051271, -1.37989395, -1.37406976, -1.39871549, -1.60283347,\n       -1.63313194, -1.64179202, -1.71794625, -1.72295864, -1.72300307,\n       -1.87360865, -1.79978577, -1.76993364, -1.84255664, -1.75208748,\n       -1.71177469, -1.84277398, -1.75106558, -1.71346484, -1.42715037,\n       -1.40802922, -1.38113532, -1.79563354, -1.83643307, -1.80834862,\n       -1.91547589, -1.85852899, -1.87666423, -1.89066157, -1.82980711,\n       -1.80458589, -1.86337584, -1.7864862 , -1.75051812, -1.8695264 ,\n       -1.79226026, -1.76570414, -1.4566618 , -1.38254051, -1.39982979,\n       -1.66935143, -1.65718942, -1.66681431, -1.73967913, -1.71495255,\n       -1.73114104, -1.8822561 , -1.81166937, -1.78367271, -1.84951399,\n       -1.7572986 , -1.71969607, -1.85603045, -1.76862708, -1.73053487,\n       -1.42283034, -1.41234132, -1.4262137 , -1.60600411, -1.5970616 ,\n       -1.60648637, -1.7242023 , -1.75105701, -1.7738926 , -1.88144194,\n       -1.81145952, -1.78170524, -1.85062301, -1.75612409, -1.71996151,\n       -1.85333054, -1.76727638, -1.73177196, -1.47600083, -1.44359569,\n       -1.44147144, -1.54063903, -1.55964406, -1.53349026, -1.75573302,\n       -1.76548143, -1.74468488, -1.88172416, -1.81211642, -1.78155454,\n       -1.848874  , -1.75981886, -1.71974551, -1.85222553, -1.76498432,\n       -1.73105144, -1.47460725, -1.50319014, -1.48228878, -1.48053108,\n       -1.49005408, -1.57057302, -1.74019404, -1.74079174, -1.71178797,\n       -1.8839869 , -1.8112643 , -1.78146298, -1.85064122, -1.7606291 ,\n       -1.72170886, -1.85313653, -1.76801692, -1.73297299, -1.39370394,\n       -1.45696436, -1.42223025, -1.52123778, -1.58487961, -1.54442351,\n       -1.69447756, -1.70110596, -1.65380646, -1.88174723, -1.81083516,\n       -1.78096316, -1.85652794, -1.76053946, -1.74040696, -1.85666766,\n       -1.74067073, -1.73477153, -1.45991939, -1.46466703, -1.46006532,\n       -1.54485171, -1.66706053, -1.70148012, -1.76993761, -1.71394388,\n       -1.76416905, -1.88574359, -1.80855591, -1.78310401, -1.8490687 ,\n       -1.76533501, -1.72594103, -1.85638573, -1.75880264, -1.75988954,\n       -1.48739472, -1.46580593, -1.32847276, -1.67118122, -1.52929056,\n       -1.80158432, -1.66832044, -1.7506826 , -1.71104764, -1.87828979,\n       -1.81079476, -1.78077596, -1.8530235 , -1.75517031, -1.72364679,\n       -1.84662018, -1.7603633 , -1.71166924]), 'split7_test_score': array([-2.07221636, -2.06254466, -2.04725009, -2.31300408, -2.29898168,\n       -2.31463531, -2.46576178, -2.46770947, -2.45125595, -1.93460573,\n       -1.91204477, -1.90481858, -1.94871903, -1.94680998, -1.94981151,\n       -1.93738017, -1.92745479, -1.92692018, -1.82070483, -1.84194605,\n       -1.81395016, -2.20284658, -2.17954377, -2.15880971, -2.29856163,\n       -2.29690162, -2.32636335, -1.93275573, -1.9014765 , -1.88556012,\n       -1.93082378, -1.90674711, -1.90217598, -1.93033806, -1.91001416,\n       -1.90245227, -1.82087634, -1.80937575, -1.81356452, -2.03059955,\n       -2.05986551, -2.0525478 , -2.13282409, -2.10463843, -2.07809677,\n       -1.93009525, -1.89552311, -1.87956268, -1.91859219, -1.88954662,\n       -1.87815619, -1.92017935, -1.88717476, -1.87774008, -1.70415504,\n       -1.69358738, -1.7243354 , -1.81787925, -1.81406771, -1.83382419,\n       -1.91754001, -1.87540967, -1.90916959, -1.91781027, -1.86751577,\n       -1.84813959, -1.89306915, -1.83729396, -1.81469133, -1.89611993,\n       -1.84096964, -1.81411527, -1.71744026, -1.69963438, -1.75441957,\n       -2.16520641, -2.14676741, -2.12525339, -2.26807522, -2.27176042,\n       -2.22356622, -1.92530283, -1.88907505, -1.87561877, -1.9155109 ,\n       -1.88923642, -1.87798321, -1.91564619, -1.8799484 , -1.86367989,\n       -1.69626886, -1.68361978, -1.68459358, -2.1327643 , -2.09272439,\n       -2.10721513, -2.12125325, -2.05716798, -2.12760991, -1.91835826,\n       -1.87794542, -1.85622121, -1.90387419, -1.86086348, -1.84019163,\n       -1.89971831, -1.84571947, -1.82541934, -1.69574324, -1.73314486,\n       -1.74905242, -2.11072073, -2.13931019, -2.15297625, -2.15055199,\n       -2.16509564, -2.21068082, -1.913733  , -1.87124231, -1.85234939,\n       -1.90476312, -1.85995875, -1.84524925, -1.90390667, -1.85837819,\n       -1.84158605, -1.66364182, -1.6649137 , -1.64564192, -1.95610763,\n       -1.92388531, -1.94525361, -1.92997537, -1.99535498, -1.98070689,\n       -1.90847297, -1.86379343, -1.84117877, -1.89281574, -1.83471101,\n       -1.81320306, -1.89327951, -1.83758994, -1.81483991, -1.74410755,\n       -1.7466989 , -1.76649132, -1.96934396, -2.00470947, -2.00528309,\n       -1.98209516, -1.98884033, -1.93253804, -1.90747307, -1.85831201,\n       -1.83667758, -1.89238956, -1.83297633, -1.81254262, -1.89300364,\n       -1.83671328, -1.81496558, -1.67378414, -1.6850936 , -1.70012349,\n       -1.9544571 , -1.99272428, -1.97119824, -1.96595755, -1.95474542,\n       -1.93922496, -1.90709745, -1.85683412, -1.83485128, -1.8909787 ,\n       -1.83176124, -1.80832899, -1.89122141, -1.83333539, -1.80851376,\n       -1.65086728, -1.69125435, -1.65734881, -1.91054724, -1.83279023,\n       -1.87127417, -1.93044926, -1.95019774, -1.89721906, -1.89515279,\n       -1.83269376, -1.80645822, -1.89254903, -1.83416256, -1.8110246 ,\n       -1.89601675, -1.83977882, -1.81862552, -1.62658639, -1.64261342,\n       -1.63888107, -1.85623761, -1.87587355, -1.91441738, -1.88079158,\n       -1.91863975, -1.90734709, -1.89312074, -1.82951178, -1.80431479,\n       -1.88885583, -1.82728215, -1.80416781, -1.89022883, -1.82840556,\n       -1.80386225, -1.69149394, -1.69418002, -1.7166664 , -1.63361814,\n       -1.73011091, -1.73245515, -1.90448063, -1.96041898, -1.87933995,\n       -1.90505483, -1.85455521, -1.82839393, -1.89303036, -1.82675223,\n       -1.78444653, -1.89204907, -1.83128844, -1.80716495, -1.71615726,\n       -1.70891142, -1.74051595, -1.50617252, -1.60710994, -1.70289816,\n       -1.86955498, -1.87222725, -1.94612941, -1.90520403, -1.85532682,\n       -1.8303222 , -1.89000658, -1.82245811, -1.78180271, -1.88856144,\n       -1.82635713, -1.79968349, -1.63297174, -1.6809414 , -1.66804028,\n       -1.7508951 , -1.68868084, -1.73410517, -1.90570094, -1.87599105,\n       -1.88995843, -1.90281479, -1.83966642, -1.81329081, -1.88952765,\n       -1.8215765 , -1.78111923, -1.88828333, -1.8251253 , -1.79937634,\n       -1.66964635, -1.70587902, -1.72240839, -1.95577134, -2.03379959,\n       -1.98685222, -1.98370111, -1.96036273, -1.98651912, -1.9274509 ,\n       -1.88662748, -1.85437156, -1.9073678 , -1.86388322, -1.84782885,\n       -1.90623828, -1.85834586, -1.8379296 , -1.67432972, -1.71411628,\n       -1.67045246, -2.10047917, -2.10323816, -2.14529781, -2.24180851,\n       -2.25873822, -2.36219909, -1.92470519, -1.88405309, -1.85814987,\n       -1.91932396, -1.88098867, -1.86533031, -1.92389375, -1.90007495,\n       -1.88844695, -1.70061682, -1.60924192, -1.71288574, -2.1496778 ,\n       -2.13940947, -2.12932949, -2.23298619, -2.17800991, -2.1880795 ,\n       -1.92453307, -1.88443563, -1.85754973, -1.91679583, -1.87691913,\n       -1.86691656, -1.92226554, -1.88910812, -1.87518917, -1.619509  ,\n       -1.62565079, -1.72083823, -2.17165815, -2.06906866, -2.13495735,\n       -2.26461008, -2.17675529, -2.22585898, -1.92460834, -1.88457565,\n       -1.85762565, -1.91806893, -1.87785619, -1.86600705, -1.92071696,\n       -1.88701628, -1.87921636, -1.65877201, -1.70507704, -1.69652026,\n       -2.08430718, -2.12989515, -2.10782592, -2.22928683, -2.2289669 ,\n       -2.27623631, -1.9174564 , -1.87133156, -1.8417779 , -1.91091539,\n       -1.86630292, -1.84655286, -1.91551704, -1.87487106, -1.86433767,\n       -1.69075107, -1.76622905, -1.79078121, -2.09298545, -2.09121317,\n       -2.15087299, -2.2768856 , -2.20429398, -2.21516067, -1.9058894 ,\n       -1.84391535, -1.81371366, -1.91035522, -1.86696463, -1.85097379,\n       -1.91365067, -1.87698067, -1.86688473, -1.67286626, -1.69501511,\n       -1.69128984, -1.98798661, -1.99647312, -1.99865203, -1.92829526,\n       -1.93986849, -1.92026944, -1.90901628, -1.84420899, -1.81719317,\n       -1.90273133, -1.84720414, -1.82514011, -1.89419534, -1.83426428,\n       -1.81378329, -1.68628231, -1.65474449, -1.76133955, -2.00315569,\n       -2.04240664, -1.99231518, -1.97131937, -1.93759473, -1.87687003,\n       -1.90905783, -1.84432969, -1.81768967, -1.90163765, -1.8471777 ,\n       -1.82569468, -1.89422386, -1.83748473, -1.81517138, -2.14806965,\n       -2.15982685, -2.15182734, -2.66701589, -2.62451349, -2.63747455,\n       -2.77596328, -2.81981218, -2.81266121, -1.95058907, -1.93564251,\n       -1.93123863, -1.98217449, -2.01148225, -2.02765325, -1.98497707,\n       -2.01071729, -2.02958027, -2.08459599, -2.12074568, -2.14686415,\n       -2.59597951, -2.60914892, -2.57296842, -2.78531977, -2.79717215,\n       -2.77914116, -1.95017771, -1.9307609 , -1.92359946, -1.98833582,\n       -2.01846975, -2.0350498 , -1.98930937, -2.01973951, -2.03906155,\n       -2.05358271, -2.07510662, -2.10764364, -2.5485459 , -2.54944642,\n       -2.55573206, -2.58159556, -2.60500048, -2.59080227, -1.9372187 ,\n       -1.9105645 , -1.90341716, -1.96009652, -1.96844256, -1.97728018,\n       -1.95739281, -1.96441703, -1.97086348, -2.06030528, -2.09109748,\n       -2.0944506 , -2.56105166, -2.54570913, -2.565614  , -2.69060181,\n       -2.66109063, -2.66238786, -1.93606628, -1.90693812, -1.90383924,\n       -1.96613854, -1.97941771, -1.9900027 , -1.96654383, -1.9818586 ,\n       -1.99428234, -2.00346308, -2.03158323, -2.00233354, -2.49044884,\n       -2.4724139 , -2.47917764, -2.63400115, -2.62841121, -2.64757624,\n       -1.92832341, -1.89082074, -1.88259057, -1.95366589, -1.95729758,\n       -1.96417468, -1.95525554, -1.95965742, -1.96719986, -1.97069491,\n       -1.9410703 , -2.03379832, -2.51153638, -2.46007724, -2.46885957,\n       -2.55500773, -2.57428435, -2.56025041, -1.93180868, -1.89766995,\n       -1.88707721, -1.95260525, -1.9539523 , -1.95823181, -1.95633414,\n       -1.96053383, -1.96753791, -1.90847053, -1.95931672, -1.92898944,\n       -2.49336114, -2.58532476, -2.52675658, -2.58404841, -2.59346777,\n       -2.58806754, -1.93188646, -1.89669811, -1.88600132, -1.95677021,\n       -1.95945311, -1.96639268, -1.95931728, -1.96555404, -1.97379372,\n       -1.93401725, -1.95467922, -1.96044068, -2.55024568, -2.59580005,\n       -2.5719133 , -2.56168326, -2.5652729 , -2.59017833, -1.93016739,\n       -1.89855085, -1.88552324, -1.95653771, -1.96194232, -1.98283014,\n       -1.96123948, -1.9679081 , -1.97479938, -2.01514522, -2.00529635,\n       -2.01089206, -2.50540201, -2.53902803, -2.540326  , -2.54825528,\n       -2.56661235, -2.58142664, -1.92667868, -1.88778971, -1.87322721,\n       -1.95472833, -1.9586612 , -1.96402929, -1.95864317, -1.96356275,\n       -1.96999059, -1.91742663, -1.925438  , -1.92982167, -2.49400638,\n       -2.4558581 , -2.48401518, -2.49943252, -2.49933238, -2.51849736,\n       -1.92548463, -1.88570449, -1.86975397, -1.9545796 , -1.95451421,\n       -1.95818966, -1.95515007, -1.95688283, -1.95989785, -1.88430201,\n       -1.9300752 , -1.86826756, -2.45593932, -2.44841652, -2.45506082,\n       -2.45988317, -2.44680942, -2.47106626, -1.92452209, -1.88519137,\n       -1.86785723, -1.95600481, -1.95650353, -1.95745809, -1.95318482,\n       -1.95367559, -1.95696853, -1.87061344, -1.92247887, -1.86333852,\n       -2.33417636, -2.34239758, -2.31888704, -2.37970628, -2.36442454,\n       -2.38123588, -1.92065902, -1.87920441, -1.86297425, -1.9463585 ,\n       -1.93603269, -1.93326706, -1.94419475, -1.93420571, -1.93423619,\n       -1.85728263, -1.84738964, -1.88878897, -2.3771226 , -2.39972892,\n       -2.39356564, -2.43546644, -2.42392132, -2.4167762 , -1.92188655,\n       -1.88201398, -1.86549602, -1.94674266, -1.93497172, -1.93580394,\n       -1.94332928, -1.93549301, -1.93469428, -1.85359026, -1.810881  ,\n       -1.88161653, -2.34799977, -2.34779088, -2.26124989, -2.39467824,\n       -2.40043525, -2.41217085, -1.92173447, -1.88104092, -1.86445447,\n       -1.94875657, -1.93921922, -1.94098021, -1.94612468, -1.93745521,\n       -1.93711178, -1.87281418, -1.87329892, -1.86981188, -2.19441195,\n       -2.21100661, -2.2704846 , -2.3647576 , -2.36630052, -2.35130566,\n       -1.92444641, -1.88528396, -1.86927402, -1.94358791, -1.93075272,\n       -1.92872691, -1.9419443 , -1.93080333, -1.92813175, -1.83114058,\n       -1.87956729, -1.82505009, -2.26056025, -2.19467757, -2.24274335,\n       -2.36178167, -2.36036795, -2.35413929, -1.92398289, -1.88568669,\n       -1.86808533, -1.94518212, -1.93033986, -1.93012758, -1.94131364,\n       -1.93061628, -1.92755824, -1.79473771, -1.77975241, -1.78394926,\n       -1.88631799, -1.99199316, -2.03953407, -2.27328675, -2.3003681 ,\n       -2.31902512, -1.91115872, -1.8612104 , -1.84167865, -1.93212638,\n       -1.90590114, -1.89860359, -1.92060464, -1.89288147, -1.88326283,\n       -1.79604084, -1.8078763 , -1.80641138, -1.88382026, -2.08552769,\n       -2.08923441, -2.28238353, -2.2862996 , -2.27877165, -1.91106508,\n       -1.86148353, -1.84152076, -1.93025379, -1.90463972, -1.89865325,\n       -1.92179617, -1.89283655, -1.88485745, -1.86235128, -1.83121941,\n       -1.8399493 , -2.09618876, -1.91368176, -1.88361804, -2.28754003,\n       -2.2947371 , -2.26204906, -1.91125817, -1.86079281, -1.84135263,\n       -1.9302767 , -1.90411627, -1.89858472, -1.92247323, -1.89154844,\n       -1.88157998, -1.75091423, -1.81254229, -1.82521772, -2.0163889 ,\n       -2.1624308 , -2.10618381, -2.30058202, -2.29140178, -2.27326267,\n       -1.91151196, -1.86377879, -1.84538024, -1.9307511 , -1.90798383,\n       -1.90545799, -1.92746057, -1.90447904, -1.8974749 , -1.77507915,\n       -1.81743566, -1.81621581, -1.9669509 , -2.00480517, -2.1500315 ,\n       -2.1955878 , -2.26582748, -2.24811458, -1.91174062, -1.86067791,\n       -1.84630856, -1.88905134, -1.90144209, -1.90520414, -1.92662935,\n       -1.89401022, -1.89644621, -1.7552644 , -1.86954718, -1.87758635,\n       -2.17886807, -2.13417573, -2.1421346 , -2.33292176, -2.27627571,\n       -2.31497461, -1.90688995, -1.86346683, -1.84473657, -1.92842541,\n       -1.83445915, -1.90426611, -1.91729187, -1.87882731, -1.89459867,\n       -1.77733051, -1.84382984, -1.80556328, -2.00644019, -1.93465121,\n       -2.11345872, -2.30753624, -2.40767521, -2.28718475, -1.91051409,\n       -1.87043805, -1.85017755, -1.92795541, -1.91296977, -1.9044176 ,\n       -1.92670335, -1.88982585, -1.87360527]), 'split8_test_score': array([-1.87106378, -1.8475388 , -1.82119406, -1.69058935, -1.70234692,\n       -1.8574896 , -1.91934429, -1.96969399, -1.94232962, -1.92791146,\n       -1.90315147, -1.89999134, -1.91647492, -1.87751071, -1.86266908,\n       -1.91511542, -1.87006675, -1.85493004, -1.67855547, -1.71256898,\n       -1.69336144, -1.90760333, -1.92139079, -1.93177822, -2.18259645,\n       -2.16720527, -2.14182978, -1.89371149, -1.83882902, -1.815353  ,\n       -1.90232528, -1.8630884 , -1.8495501 , -1.90101089, -1.8553104 ,\n       -1.83839579, -1.72947287, -1.78201501, -1.81174961, -1.9299323 ,\n       -1.9473829 , -1.94134828, -1.98618127, -1.98884239, -1.99512244,\n       -1.89187667, -1.83861003, -1.81744195, -1.88586435, -1.83588908,\n       -1.81499216, -1.88488539, -1.82576749, -1.80080432, -1.75534964,\n       -1.7233959 , -1.73070218, -1.85338463, -1.87257457, -1.8984559 ,\n       -1.99067958, -2.00018925, -2.00396612, -1.882885  , -1.81887412,\n       -1.79308653, -1.89364142, -1.83722654, -1.8136037 , -1.89214375,\n       -1.83596366, -1.81631369, -1.74226753, -1.7141584 , -1.72565701,\n       -1.95023545, -1.90136151, -1.91550043, -2.01219668, -2.02054883,\n       -2.01704973, -1.88406384, -1.82235545, -1.79589655, -1.88646747,\n       -1.82566426, -1.80115526, -1.88523311, -1.82539404, -1.80201768,\n       -1.63774654, -1.66685632, -1.68391484, -2.03591499, -2.02504371,\n       -2.01627983, -2.12554192, -2.11283047, -2.12208984, -1.88455048,\n       -1.82261415, -1.79782206, -1.89402169, -1.84124806, -1.81922794,\n       -1.89390519, -1.84089519, -1.82158167, -1.68039901, -1.72247385,\n       -1.70465816, -2.06179132, -2.0467701 , -2.03830189, -2.10531061,\n       -2.13972195, -2.13636409, -1.88418312, -1.82077662, -1.79900659,\n       -1.89566633, -1.84162373, -1.82254815, -1.89498928, -1.840829  ,\n       -1.82375937, -1.74486267, -1.73225104, -1.78838876, -2.1749324 ,\n       -2.16754396, -2.15508882, -2.27135987, -2.29325083, -2.25536931,\n       -1.89127497, -1.83711765, -1.81965753, -1.91238246, -1.87832573,\n       -1.86521706, -1.91434393, -1.87938227, -1.86956487, -1.75166035,\n       -1.78833281, -1.75055079, -2.20677376, -2.21638764, -2.22766864,\n       -2.31214451, -2.32227726, -2.31856885, -1.91314411, -1.8672534 ,\n       -1.85533551, -1.90659987, -1.86787363, -1.84726791, -1.90975741,\n       -1.87173625, -1.86017073, -1.74372243, -1.70841905, -1.71848221,\n       -2.02607203, -2.04170067, -2.05324749, -2.26845276, -2.23828841,\n       -2.26291243, -1.91488821, -1.87113637, -1.8587003 , -1.91150459,\n       -1.87318875, -1.85168574, -1.90917342, -1.87550086, -1.86172196,\n       -1.76251266, -1.75350302, -1.75297084, -2.0227761 , -1.96539303,\n       -2.04039635, -2.24344611, -2.24651238, -2.25326616, -1.91664099,\n       -1.87509507, -1.86403778, -1.90805887, -1.86559029, -1.85498361,\n       -1.91290597, -1.87653642, -1.86584348, -1.7700677 , -1.75309549,\n       -1.77822203, -2.00841218, -2.06269131, -2.01664711, -2.33859696,\n       -2.34693949, -2.32405153, -1.91879089, -1.87578592, -1.86341614,\n       -1.91215503, -1.87644709, -1.86523654, -1.91834768, -1.89145456,\n       -1.88554077, -1.82703011, -1.80477789, -1.85280494, -2.17912965,\n       -2.16602427, -2.15219897, -2.34268723, -2.38833679, -2.40882089,\n       -1.919781  , -1.88906774, -1.88013939, -1.92276411, -1.89569112,\n       -1.8870828 , -1.92850447, -1.91336068, -1.9043901 , -1.81256188,\n       -1.87502084, -1.73382373, -2.25781834, -2.25326845, -2.25943538,\n       -2.45527871, -2.47489213, -2.41929416, -1.92642421, -1.90567768,\n       -1.89865174, -1.93426644, -1.92368556, -1.92403594, -1.93992446,\n       -1.93349072, -1.93273169, -1.79854539, -1.79621031, -1.80110827,\n       -2.37898998, -2.34912031, -2.36846721, -2.53277487, -2.54877755,\n       -2.45546673, -1.92693317, -1.90086698, -1.89591232, -1.93168081,\n       -1.91745673, -1.92153651, -1.93926551, -1.93049613, -1.9315586 ,\n       -1.83570055, -1.87712873, -1.81123957, -2.29815167, -2.30581348,\n       -2.32983637, -2.48500008, -2.53175115, -2.45610686, -1.92689691,\n       -1.90413169, -1.8977701 , -1.93778218, -1.92708493, -1.92690419,\n       -1.93686197, -1.93210823, -1.93985436, -1.73835738, -1.72457895,\n       -1.66089616, -2.34093392, -2.27169658, -2.31982044, -2.57884685,\n       -2.5320148 , -2.55603393, -1.93051025, -1.91133774, -1.90664989,\n       -1.94195972, -1.93109627, -1.93154471, -1.94217345, -1.93359074,\n       -1.93648721, -1.71771406, -1.71325711, -1.73618922, -2.30175741,\n       -2.32195764, -2.27979091, -2.5096332 , -2.49238834, -2.54517406,\n       -1.93339412, -1.91534135, -1.9125583 , -1.94129361, -1.93135971,\n       -1.92965525, -1.94295771, -1.93791233, -1.93827131, -1.8604885 ,\n       -1.85253826, -1.88098847, -2.26967659, -2.26676593, -2.28009823,\n       -2.53946089, -2.50267323, -2.5410137 , -1.92974631, -1.91119336,\n       -1.90754203, -1.93823046, -1.92696972, -1.92984926, -1.94263651,\n       -1.93728042, -1.94105542, -1.79208762, -1.82881165, -1.83941932,\n       -2.30678912, -2.25225507, -2.2676808 , -2.48751836, -2.45961466,\n       -2.48772961, -1.93027955, -1.91328617, -1.90767237, -1.9396286 ,\n       -1.92886649, -1.92737883, -1.9454952 , -1.93492211, -1.94285761,\n       -1.70657683, -1.7650423 , -1.70122453, -2.32933415, -2.25808825,\n       -2.35117768, -2.54680474, -2.50018223, -2.5193494 , -1.93196551,\n       -1.90923991, -1.90468505, -1.94280372, -1.92962123, -1.9332489 ,\n       -1.94499037, -1.93873937, -1.94035729, -1.82905833, -1.87156339,\n       -1.87562464, -2.25045499, -2.20533896, -2.20191153, -2.33658594,\n       -2.33500358, -2.3558666 , -1.94672966, -1.93104189, -1.92413113,\n       -1.91936556, -1.89064186, -1.88109096, -1.9222595 , -1.89318273,\n       -1.88706067, -1.87557477, -1.88078489, -1.88527742, -2.21307833,\n       -2.23792859, -2.19934868, -2.33565315, -2.34068199, -2.30872361,\n       -1.94585651, -1.9332159 , -1.92966313, -1.91911479, -1.88868797,\n       -1.88066115, -1.92338447, -1.89392741, -1.88746   , -1.70569641,\n       -1.74047791, -1.71825343, -2.09718581, -2.10555642, -2.10952805,\n       -2.14342641, -2.13699021, -2.10875213, -1.91034107, -1.86301513,\n       -1.84205877, -1.9129532 , -1.87859256, -1.86430789, -1.91195241,\n       -1.87296953, -1.85954003, -1.55299232, -1.54288763, -1.54049416,\n       -1.77915545, -1.80293523, -1.84451001, -1.776117  , -1.78224627,\n       -1.77170442, -1.89246686, -1.82446725, -1.79353294, -1.89899846,\n       -1.84529947, -1.82660861, -1.89745009, -1.83670583, -1.81223067,\n       -1.65848036, -1.66139796, -1.64923506, -1.59159332, -1.61522724,\n       -1.59622367, -1.61872181, -1.60527669, -1.59556019, -1.88613997,\n       -1.81151922, -1.78063338, -1.86400339, -1.7789104 , -1.7429356 ,\n       -1.85884209, -1.76947493, -1.73164012, -1.5447444 , -1.56030925,\n       -1.56114998, -1.62542189, -1.60044521, -1.69262878, -1.78825248,\n       -1.75143518, -1.73632911, -1.89107684, -1.82320208, -1.79238122,\n       -1.87513889, -1.79131381, -1.75919452, -1.88023569, -1.80977384,\n       -1.78332479, -1.63909598, -1.63423621, -1.6331342 , -1.98550349,\n       -1.97611946, -2.09956695, -2.01368702, -2.0890798 , -2.04766899,\n       -1.90661756, -1.85314587, -1.82743093, -1.91390357, -1.87201945,\n       -1.86040893, -1.9102526 , -1.8696562 , -1.85342188, -1.56737474,\n       -1.60597984, -1.69708459, -1.83533213, -1.78703671, -1.83210177,\n       -1.78802874, -1.79942065, -1.80597826, -1.89922714, -1.84334324,\n       -1.81932204, -1.88061889, -1.81054474, -1.78570256, -1.87812478,\n       -1.80516846, -1.77705494, -1.56508761, -1.60227332, -1.62142837,\n       -1.78079323, -1.72962852, -1.79011713, -1.78044627, -1.76544147,\n       -1.8006387 , -1.8898216 , -1.8283671 , -1.80522956, -1.86682759,\n       -1.78628806, -1.75598232, -1.8656113 , -1.78614534, -1.75371017,\n       -1.68623646, -1.69243356, -1.66690063, -1.98294733, -1.81971775,\n       -1.95486156, -2.21510829, -2.19926163, -2.20856992, -1.89983059,\n       -1.84426438, -1.82145152, -1.91779765, -1.88053136, -1.86360448,\n       -1.91133764, -1.87564429, -1.86052457, -1.58071066, -1.66583218,\n       -1.62567614, -1.88664723, -1.89722556, -1.89524171, -2.19477774,\n       -2.21891568, -2.21472989, -1.90230707, -1.84744629, -1.82292436,\n       -1.91540436, -1.88058042, -1.86542673, -1.9108705 , -1.87567947,\n       -1.86455022, -1.72439548, -1.72358382, -1.77618638, -1.84523596,\n       -1.86075226, -1.95000827, -2.04086602, -2.058134  , -2.03348883,\n       -1.89748845, -1.84026413, -1.8179756 , -1.89683668, -1.84285021,\n       -1.82098638, -1.89092724, -1.83247765, -1.8125722 , -1.65466088,\n       -1.75150272, -1.67543702, -1.91747361, -1.89152329, -1.941759  ,\n       -2.08159407, -1.98931573, -2.04640475, -1.89676876, -1.83648531,\n       -1.81417259, -1.89301949, -1.83908499, -1.82111772, -1.88505375,\n       -1.82486875, -1.80528615, -1.71540732, -1.72550883, -1.75477115,\n       -1.89924276, -1.97407897, -1.94812529, -2.06349874, -2.05628783,\n       -2.11037355, -1.89561347, -1.83398163, -1.804709  , -1.89054731,\n       -1.83907635, -1.80491487, -1.89018538, -1.83443876, -1.81301166,\n       -1.64738751, -1.62532929, -1.62955805, -1.9305008 , -1.79719242,\n       -1.93327285, -2.055008  , -2.11353963, -2.09841043, -1.89367714,\n       -1.83083185, -1.80209784, -1.88965195, -1.83364159, -1.81266306,\n       -1.88828616, -1.83196339, -1.80918617, -1.64689779, -1.64363059,\n       -1.69567715, -1.85484829, -1.94411592, -1.91379714, -2.02680295,\n       -1.97006801, -2.05125839, -1.8940815 , -1.83210802, -1.80608162,\n       -1.88278412, -1.81811181, -1.79216736, -1.88266113, -1.8185631 ,\n       -1.79596218, -1.66244099, -1.63714565, -1.67632999, -1.978327  ,\n       -2.03178967, -1.8094846 , -2.07314505, -2.02568016, -2.03403367,\n       -1.89300388, -1.83208419, -1.80506506, -1.88051676, -1.81604976,\n       -1.79459271, -1.88098736, -1.82292361, -1.7972828 , -1.68103322,\n       -1.70522962, -1.68081805, -1.90472562, -1.81748472, -1.90829564,\n       -2.06936116, -2.05688501, -2.0382372 , -1.89026969, -1.82057521,\n       -1.79347356, -1.88013562, -1.80835602, -1.78270794, -1.8843781 ,\n       -1.82136771, -1.7991048 , -1.65603257, -1.6460196 , -1.69676736,\n       -1.82014857, -1.85141097, -1.85947483, -1.9792862 , -2.0083661 ,\n       -2.01514233, -1.88537134, -1.81662939, -1.78860364, -1.88021529,\n       -1.82097862, -1.79667993, -1.88421242, -1.82457174, -1.79969996,\n       -1.59141617, -1.6257085 , -1.66775791, -1.89711852, -1.88962148,\n       -1.84327845, -2.05496553, -2.08578732, -2.08076385, -1.88558312,\n       -1.81731278, -1.78631099, -1.88504382, -1.82309905, -1.80296009,\n       -1.88494832, -1.82378681, -1.79984242, -1.57999699, -1.5625005 ,\n       -1.67908498, -1.90290082, -1.87887784, -1.83932493, -2.04498779,\n       -2.06152273, -2.08628489, -1.88837709, -1.82274773, -1.7943813 ,\n       -1.88309894, -1.82163098, -1.79848305, -1.88481097, -1.82509734,\n       -1.79968033, -1.75188345, -1.73555843, -1.71937262, -1.89470185,\n       -1.89230528, -1.93479906, -2.06555679, -2.06520942, -2.01633653,\n       -1.88759858, -1.82312938, -1.79451652, -1.88456338, -1.82259973,\n       -1.80018873, -1.8835747 , -1.82446991, -1.8015643 , -1.66563675,\n       -1.67269645, -1.75226027, -1.75518172, -1.90751716, -1.9025252 ,\n       -2.06021484, -2.08322   , -2.09083275, -1.88617349, -1.82423268,\n       -1.79460352, -1.88490959, -1.90327441, -1.80373625, -1.86911405,\n       -1.84146392, -1.78957155, -1.61243996, -1.67264835, -1.68102982,\n       -1.73081498, -1.85123031, -1.82004914, -2.08584872, -2.02449551,\n       -2.2979693 , -1.87731744, -1.82444686, -1.81624177, -1.88022748,\n       -1.81815749, -1.79042986, -1.88519277, -1.82557287, -1.79353692,\n       -1.6225234 , -1.60361953, -1.72344951, -1.70504124, -1.85237594,\n       -1.65589494, -2.08221358, -1.9088328 , -2.02421975, -1.88758994,\n       -1.82209237, -1.79899744, -1.89030364, -1.82846671, -1.78421957,\n       -1.88702004, -1.8006245 , -1.84510245]), 'split9_test_score': array([-1.59367781, -1.53923296, -1.50017876, -1.66275438, -1.62489543,\n       -1.68812801, -1.78782681, -1.77946431, -1.78614107, -1.90046505,\n       -1.85099796, -1.82780294, -1.88790674, -1.81913226, -1.79398736,\n       -1.87612584, -1.81229029, -1.78417681, -1.46515587, -1.48755832,\n       -1.53742343, -1.9011442 , -1.93273371, -1.88921279, -1.94936951,\n       -1.95485502, -1.92844058, -1.90607444, -1.85192701, -1.82259207,\n       -1.90748536, -1.86446767, -1.84729343, -1.90372138, -1.85440451,\n       -1.83447096, -1.46618143, -1.46557894, -1.42667369, -2.05586014,\n       -2.05125556, -2.09038226, -1.83871917, -1.87245825, -1.85147756,\n       -1.91130465, -1.86261396, -1.83636648, -1.90681678, -1.87752053,\n       -1.86972537, -1.88388968, -1.81429521, -1.78504866, -1.45432728,\n       -1.44902879, -1.42792543, -1.94171802, -1.93104284, -2.01770887,\n       -1.91506876, -1.96596209, -1.9545945 , -1.91416341, -1.86570084,\n       -1.8436102 , -1.89336442, -1.83864054, -1.82498962, -1.89139329,\n       -1.83222941, -1.81533133, -1.6047925 , -1.5945055 , -1.60048698,\n       -2.12066742, -2.12661779, -2.12786157, -2.28212297, -2.28447482,\n       -2.24289253, -1.92437107, -1.89606097, -1.87388689, -1.92922007,\n       -1.89262589, -1.88304919, -1.92892438, -1.90873823, -1.90444081,\n       -1.59382105, -1.62792415, -1.60716204, -2.06503854, -2.08522995,\n       -2.08830349, -2.15936573, -2.17615022, -2.15326708, -1.92234695,\n       -1.87928492, -1.85496658, -1.90989496, -1.87340444, -1.86133   ,\n       -1.90539105, -1.86386041, -1.85068927, -1.62011408, -1.61143299,\n       -1.60372169, -2.05108676, -2.05667173, -2.06723746, -2.06102725,\n       -2.0480291 , -2.07238066, -1.92194896, -1.87851089, -1.85949111,\n       -1.90867633, -1.86779051, -1.85319052, -1.89592718, -1.84481479,\n       -1.82611643, -1.65031968, -1.65910307, -1.65508917, -2.12816457,\n       -2.13943737, -2.12317626, -2.10240177, -2.11254535, -2.0994519 ,\n       -1.91499242, -1.86557552, -1.84378295, -1.91653074, -1.88533937,\n       -1.87545818, -1.90766269, -1.86600927, -1.84971622, -1.72094559,\n       -1.75493022, -1.74971128, -2.00807945, -1.96920986, -1.97866613,\n       -2.14681634, -2.14407167, -2.14096798, -1.91495546, -1.86740084,\n       -1.84952356, -1.8983139 , -1.84763175, -1.82844866, -1.90749315,\n       -1.86739531, -1.85254188, -1.64868128, -1.64320569, -1.6259096 ,\n       -1.96451564, -1.9629976 , -1.98121947, -2.10526503, -2.09725904,\n       -2.11662388, -1.91602033, -1.86911785, -1.85178681, -1.90018187,\n       -1.85720409, -1.83913004, -1.91137661, -1.87504996, -1.86205529,\n       -1.73713353, -1.67130411, -1.68485271, -2.08130619, -2.05299799,\n       -2.03396511, -2.23439782, -2.18661043, -2.21255918, -1.91421932,\n       -1.86738581, -1.84903252, -1.90982097, -1.86540669, -1.85249944,\n       -1.90784981, -1.87302706, -1.86018612, -1.51014755, -1.64415724,\n       -1.64909631, -1.9583074 , -1.92854512, -1.92225531, -1.93080638,\n       -2.00156231, -1.96600801, -1.91056563, -1.86199663, -1.8426404 ,\n       -1.90271681, -1.85739794, -1.83753772, -1.91469806, -1.87653678,\n       -1.86663224, -1.56121876, -1.63056853, -1.60291212, -1.91164738,\n       -1.94533226, -1.91340792, -1.93681377, -1.93707043, -1.97384902,\n       -1.91054761, -1.86202574, -1.84366821, -1.90281263, -1.85178558,\n       -1.83660837, -1.91249617, -1.87469507, -1.85989322, -1.45944661,\n       -1.51862541, -1.53512122, -1.90992565, -1.84841293, -1.89374075,\n       -1.90825143, -1.9138472 , -1.8999104 , -1.90907798, -1.86150841,\n       -1.8450859 , -1.89335714, -1.84167211, -1.82123478, -1.89106556,\n       -1.83478168, -1.81195115, -1.66874328, -1.56717174, -1.72775485,\n       -1.84749351, -1.90886899, -1.88444688, -1.90486685, -1.93185922,\n       -1.86183118, -1.90937856, -1.86258952, -1.84657113, -1.89391656,\n       -1.84224749, -1.82117451, -1.88911805, -1.83349325, -1.80911471,\n       -1.53534469, -1.54397651, -1.54271622, -1.98736919, -1.98032011,\n       -1.95775991, -2.02398663, -2.02023631, -2.0258837 , -1.90679095,\n       -1.85892882, -1.8426319 , -1.89531564, -1.84563971, -1.82889635,\n       -1.891712  , -1.83808165, -1.81529215, -1.50011899, -1.54421578,\n       -1.53629489, -1.94616333, -2.00664513, -2.00413046, -1.99877135,\n       -1.97327027, -1.98108069, -1.9097983 , -1.87184138, -1.85249812,\n       -1.89413256, -1.84260979, -1.82139384, -1.88752537, -1.82772612,\n       -1.80633049, -1.49933924, -1.54593186, -1.51419107, -2.0039054 ,\n       -1.94615258, -2.00259879, -2.00890188, -1.98770472, -2.03007462,\n       -1.90977938, -1.87195963, -1.85230191, -1.89531957, -1.84330478,\n       -1.82292344, -1.89179002, -1.83412856, -1.81501088, -1.51866769,\n       -1.52988091, -1.52660141, -1.94961985, -1.92503168, -1.89898336,\n       -1.97736285, -1.96359198, -1.94915041, -1.90713833, -1.86890494,\n       -1.84817507, -1.88646716, -1.82611362, -1.8040865 , -1.88448455,\n       -1.82273608, -1.79469684, -1.54431106, -1.56035949, -1.57862911,\n       -1.82946191, -1.79506482, -1.86450729, -1.87121599, -1.89190833,\n       -1.83738656, -1.90383683, -1.86333778, -1.84055525, -1.87820311,\n       -1.81486367, -1.7886652 , -1.87728913, -1.80791082, -1.77700122,\n       -1.5346492 , -1.60207459, -1.61267824, -1.8637696 , -1.80730627,\n       -1.84009538, -1.85833733, -1.86082027, -1.89149805, -1.91885149,\n       -1.88072546, -1.86199826, -1.88707364, -1.82536341, -1.80441842,\n       -1.88557731, -1.82460729, -1.80136182, -1.51937888, -1.56417707,\n       -1.59112611, -1.91872811, -1.86498839, -1.87130255, -1.94607214,\n       -1.98356283, -1.95048036, -1.91656613, -1.88160118, -1.86770063,\n       -1.88841589, -1.83006868, -1.80888179, -1.88632026, -1.82625735,\n       -1.80432459, -1.57669055, -1.57707414, -1.58998918, -1.87208952,\n       -1.85968458, -1.88179865, -1.89568892, -1.86515335, -1.88941511,\n       -1.91661383, -1.88103421, -1.86811805, -1.88681819, -1.82655748,\n       -1.80129261, -1.88565387, -1.82570378, -1.80198467, -1.48349076,\n       -1.43902867, -1.4065895 , -1.7422319 , -1.75181837, -1.73840428,\n       -2.17516873, -2.12191419, -2.15490565, -1.8975273 , -1.84465585,\n       -1.82343727, -1.90894473, -1.86646432, -1.85568657, -1.90479714,\n       -1.86210599, -1.84757845, -1.38765874, -1.418728  , -1.41341416,\n       -1.38358095, -1.38986747, -1.37070885, -1.8234869 , -1.78762183,\n       -1.76940707, -1.88931436, -1.82481623, -1.79697166, -1.8601182 ,\n       -1.76354217, -1.72026173, -1.86269451, -1.76964229, -1.7322562 ,\n       -1.30701312, -1.38087778, -1.35008515, -1.48296349, -1.51322053,\n       -1.44479752, -1.58728606, -1.58511931, -1.56058399, -1.89445078,\n       -1.83112731, -1.8025682 , -1.86023212, -1.77072729, -1.73339165,\n       -1.85629704, -1.76460768, -1.72514419, -1.32907128, -1.35218934,\n       -1.36375491, -1.62349114, -1.66351619, -1.66270154, -1.87053715,\n       -1.84449942, -1.84689651, -1.89207138, -1.82455282, -1.79534495,\n       -1.88573716, -1.81836682, -1.790102  , -1.88552516, -1.8179852 ,\n       -1.79063424, -1.44537099, -1.44120976, -1.44269035, -1.80035738,\n       -1.70430705, -1.757795  , -1.81101704, -1.84614955, -1.84598682,\n       -1.89202101, -1.83168218, -1.80309282, -1.88416688, -1.82703343,\n       -1.80446215, -1.88312376, -1.81859831, -1.79257953, -1.45557601,\n       -1.47616898, -1.48368859, -1.82772385, -1.8516906 , -1.80396775,\n       -1.94467936, -1.97971758, -1.96223235, -1.89469354, -1.84129207,\n       -1.81910278, -1.88705675, -1.82619493, -1.80024274, -1.88263478,\n       -1.81705912, -1.79026971, -1.4608415 , -1.52543592, -1.51387138,\n       -1.90510416, -1.92414398, -1.97034862, -2.10473562, -2.15197624,\n       -2.12487476, -1.90770383, -1.8663234 , -1.84967387, -1.91120809,\n       -1.87193541, -1.8562877 , -1.90897289, -1.86586108, -1.85075259,\n       -1.50104994, -1.56925223, -1.54700669, -1.76121862, -1.73947877,\n       -1.77447988, -2.11813219, -2.0613663 , -2.14033444, -1.90350338,\n       -1.85790498, -1.83919318, -1.90824815, -1.86203928, -1.84421879,\n       -1.90311209, -1.85895078, -1.84016878, -1.496329  , -1.53545482,\n       -1.53087894, -1.84680207, -1.86488821, -1.90237378, -1.95939677,\n       -1.97111846, -1.99559414, -1.89557285, -1.84797451, -1.8284235 ,\n       -1.88785206, -1.82921858, -1.80751695, -1.88650684, -1.82590895,\n       -1.80228835, -1.53882474, -1.59637091, -1.59706696, -1.86226158,\n       -1.82931175, -1.80978488, -1.99695354, -1.96708044, -1.98241952,\n       -1.89533911, -1.84959283, -1.83063959, -1.88581353, -1.82860004,\n       -1.80383061, -1.88595819, -1.8186157 , -1.7957228 , -1.56617775,\n       -1.60859727, -1.57159251, -1.67656788, -1.60249868, -1.67366413,\n       -1.76662842, -1.75109735, -1.76509316, -1.89613325, -1.84809761,\n       -1.82897206, -1.86231897, -1.788025  , -1.75509138, -1.8577149 ,\n       -1.77041693, -1.73599433, -1.53024682, -1.57010663, -1.57616809,\n       -1.79562671, -1.74899576, -1.8104549 , -1.81259777, -1.84689587,\n       -1.82668246, -1.90096529, -1.85335728, -1.83440618, -1.86889813,\n       -1.80859561, -1.78014561, -1.87077134, -1.79501524, -1.76143045,\n       -1.49477043, -1.51873181, -1.52560356, -1.8021502 , -1.82884713,\n       -1.77386581, -1.8362653 , -1.86721855, -1.82935809, -1.90105584,\n       -1.84971248, -1.82898923, -1.8703967 , -1.79477371, -1.76541898,\n       -1.86849934, -1.78947185, -1.757354  , -1.46731933, -1.497297  ,\n       -1.53423084, -1.72281397, -1.72640326, -1.7523    , -1.81264084,\n       -1.78499728, -1.75967705, -1.90081659, -1.85037426, -1.82934541,\n       -1.86661649, -1.78802183, -1.75288797, -1.86300372, -1.78101268,\n       -1.74545288, -1.42401605, -1.45093371, -1.44464637, -1.76891307,\n       -1.75653488, -1.78511161, -1.72193247, -1.75922436, -1.73379293,\n       -1.9008183 , -1.85027831, -1.82930254, -1.86791386, -1.789649  ,\n       -1.75587726, -1.86199121, -1.77862473, -1.74343114, -1.54197247,\n       -1.56539883, -1.56976431, -1.68089129, -1.67940999, -1.71747394,\n       -1.72823286, -1.7760184 , -1.76418432, -1.90004365, -1.8500102 ,\n       -1.82993295, -1.86360009, -1.78778318, -1.75388756, -1.85596393,\n       -1.76526204, -1.73220119, -1.45344184, -1.49393777, -1.52073257,\n       -1.64169773, -1.62270556, -1.63610284, -1.73686861, -1.7606333 ,\n       -1.78661431, -1.89786661, -1.84008717, -1.8137861 , -1.84747109,\n       -1.75175328, -1.7190091 , -1.84928871, -1.75337324, -1.71447609,\n       -1.44410738, -1.4840623 , -1.49136221, -1.63148286, -1.58735641,\n       -1.70243355, -1.78792966, -1.76469757, -1.79946234, -1.89562701,\n       -1.83696137, -1.8107752 , -1.84916717, -1.76023071, -1.72464038,\n       -1.85105979, -1.76033531, -1.72160256, -1.40968685, -1.45150978,\n       -1.42501362, -1.59664005, -1.57291898, -1.57499323, -1.80750702,\n       -1.80518741, -1.79928073, -1.89405085, -1.83562924, -1.80933725,\n       -1.85562107, -1.76259137, -1.72887076, -1.85253923, -1.76142625,\n       -1.72339078, -1.38112124, -1.41380211, -1.38731406, -1.63152792,\n       -1.63193947, -1.68334065, -1.79825565, -1.81382967, -1.80335433,\n       -1.89529768, -1.83891122, -1.81026154, -1.85304438, -1.76206421,\n       -1.72390717, -1.85356152, -1.76205209, -1.72566388, -1.44345567,\n       -1.43154846, -1.4770291 , -1.5930582 , -1.63894865, -1.5634699 ,\n       -1.82385019, -1.92486001, -1.81531466, -1.89366346, -1.83994227,\n       -1.81270855, -1.85273998, -1.78762894, -1.72941322, -1.85427744,\n       -1.76802877, -1.7188608 , -1.44537631, -1.43880704, -1.47460839,\n       -1.69381751, -1.61914188, -1.63054298, -1.76376071, -1.81686148,\n       -1.69480796, -1.89463616, -1.83954718, -1.81046041, -1.85759256,\n       -1.78324721, -1.73224616, -1.85913862, -1.78037848, -1.77213444,\n       -1.4670352 , -1.52609401, -1.51753951, -1.6378199 , -1.57931764,\n       -1.66369544, -1.6511126 , -1.84330314, -1.75629335, -1.91664521,\n       -1.84146885, -1.82161304, -1.84891885, -1.7755791 , -1.72984501,\n       -1.86348488, -1.81879712, -1.72529275]), 'mean_test_score': array([-1.68082182, -1.68688943, -1.67037656, -1.92720508, -1.9256782 ,\n       -1.95935245, -2.07575014, -2.08162195, -2.07886908, -1.92031145,\n       -1.87275302, -1.85234095, -1.92270439, -1.88314629, -1.86925539,\n       -1.91935876, -1.87799283, -1.86384906, -1.58207136, -1.60247183,\n       -1.59029805, -1.87107977, -1.89063052, -1.88028551, -2.04486347,\n       -2.04062836, -2.04555738, -1.91013533, -1.85208853, -1.82522665,\n       -1.90513575, -1.8512487 , -1.82940958, -1.90408583, -1.85015703,\n       -1.82817856, -1.61069838, -1.61681479, -1.65196896, -1.87107067,\n       -1.90317816, -1.88872505, -2.05113923, -2.03436622, -2.04750557,\n       -1.9101376 , -1.85524327, -1.83140092, -1.90680414, -1.85552939,\n       -1.83562841, -1.90503463, -1.85074377, -1.82948031, -1.62551274,\n       -1.64672949, -1.63574091, -1.86604798, -1.8553847 , -1.86635064,\n       -1.93737385, -1.93355093, -1.92843255, -1.90786   , -1.85055165,\n       -1.82571815, -1.89943572, -1.83655564, -1.81230666, -1.90032377,\n       -1.8386333 , -1.81611041, -1.647246  , -1.64993536, -1.66670362,\n       -1.9370132 , -1.9223071 , -1.90839133, -2.03496278, -2.0607735 ,\n       -2.02912297, -1.90967853, -1.85536355, -1.83146843, -1.90787363,\n       -1.85520709, -1.83475693, -1.90691226, -1.85475499, -1.83406274,\n       -1.62375405, -1.63961887, -1.63387144, -1.90155341, -1.90068441,\n       -1.90436167, -2.04772306, -2.01719591, -2.03308166, -1.9091017 ,\n       -1.85283513, -1.82863953, -1.90833992, -1.85889063, -1.83940268,\n       -1.90693422, -1.8537421 , -1.83312784, -1.63272936, -1.64912321,\n       -1.64941496, -1.93970662, -1.92890923, -1.93352689, -2.02481131,\n       -2.02578957, -2.03356387, -1.90688875, -1.84885636, -1.82598846,\n       -1.90905072, -1.85757935, -1.8386842 , -1.90696047, -1.85404667,\n       -1.83410656, -1.63975042, -1.6589079 , -1.67539369, -1.9559944 ,\n       -1.95836718, -1.95122756, -2.02964263, -2.05321505, -2.04308461,\n       -1.90735778, -1.84867439, -1.82476922, -1.90972888, -1.85992669,\n       -1.84062555, -1.9092441 , -1.85808644, -1.83906278, -1.64844212,\n       -1.6677948 , -1.67377032, -1.96415169, -1.95081807, -1.96881792,\n       -2.08590691, -2.09183089, -2.08152775, -1.91154154, -1.85307037,\n       -1.82988502, -1.90804593, -1.85639517, -1.83648255, -1.9101408 ,\n       -1.86131442, -1.84226893, -1.64482192, -1.65788231, -1.66630106,\n       -1.97090439, -1.97457341, -1.96889208, -2.07757404, -2.0751661 ,\n       -2.07497034, -1.91226392, -1.85499453, -1.83182882, -1.91134743,\n       -1.8629154 , -1.84365658, -1.91333209, -1.86726674, -1.84849437,\n       -1.66263048, -1.66946597, -1.66671804, -1.93752728, -1.93575026,\n       -1.94659854, -2.04988473, -2.03818542, -2.0521885 , -1.91099448,\n       -1.85383979, -1.8306776 , -1.90935788, -1.85676083, -1.83864607,\n       -1.91011295, -1.85873736, -1.84086869, -1.60275406, -1.6339605 ,\n       -1.63365677, -1.91070623, -1.92528865, -1.92068376, -2.04448663,\n       -2.06508028, -2.05747873, -1.91016235, -1.85165112, -1.82761014,\n       -1.90843295, -1.85586582, -1.8354977 , -1.9105046 , -1.86145253,\n       -1.84438211, -1.63026864, -1.65025191, -1.64802862, -1.90308433,\n       -1.91415239, -1.90579551, -2.09208163, -2.09023801, -2.09207628,\n       -1.91365627, -1.85920813, -1.83538465, -1.91361375, -1.86536872,\n       -1.84452914, -1.91633731, -1.87165683, -1.85453015, -1.63002384,\n       -1.65413224, -1.64736021, -1.89306425, -1.909282  , -1.91688087,\n       -2.11482072, -2.10857491, -2.09751308, -1.9142529 , -1.86226446,\n       -1.8402873 , -1.91619776, -1.87297095, -1.85381746, -1.91699179,\n       -1.87516205, -1.858764  , -1.64960106, -1.65382049, -1.65960302,\n       -1.91408398, -1.92692151, -1.92906693, -2.1034644 , -2.10368241,\n       -2.0805144 , -1.91301725, -1.85853727, -1.83600851, -1.91650222,\n       -1.87146434, -1.85311377, -1.91751604, -1.87484978, -1.85815602,\n       -1.61552879, -1.64868777, -1.64567262, -1.9204709 , -1.95019309,\n       -1.96139776, -2.11639401, -2.11342067, -2.11237652, -1.91479044,\n       -1.85932394, -1.83447229, -1.91826718, -1.87567115, -1.85904443,\n       -1.91911327, -1.87819064, -1.8638745 , -1.60441405, -1.61539372,\n       -1.60129139, -1.93539184, -1.95428084, -1.97565748, -2.10229354,\n       -2.08641348, -2.11296052, -1.91477174, -1.86070508, -1.83707074,\n       -1.91342682, -1.86714807, -1.84898975, -1.91375618, -1.86798895,\n       -1.85062593, -1.62475018, -1.63515493, -1.62878536, -1.94741645,\n       -1.95072568, -1.95443202, -2.11106289, -2.10616577, -2.1088647 ,\n       -1.91626755, -1.86360841, -1.83973787, -1.91587403, -1.87014911,\n       -1.85354661, -1.91644089, -1.87281208, -1.8563231 , -1.6325632 ,\n       -1.64422922, -1.65290321, -1.96223044, -1.91258251, -1.94120624,\n       -2.08411005, -2.06974629, -2.0612818 , -1.9160705 , -1.86346573,\n       -1.84043415, -1.91376647, -1.86645012, -1.84889193, -1.91447053,\n       -1.86824849, -1.85176662, -1.64057643, -1.67103519, -1.6721947 ,\n       -1.96302405, -1.9398276 , -1.96533751, -2.09452912, -2.08533132,\n       -2.08137608, -1.91568048, -1.86342192, -1.83961664, -1.91458981,\n       -1.86845635, -1.85016248, -1.91647122, -1.87020529, -1.85390852,\n       -1.63462076, -1.66935701, -1.67257979, -1.9645028 , -1.96208477,\n       -1.96832008, -2.09959847, -2.09584007, -2.09759104, -1.91597573,\n       -1.86212298, -1.83853138, -1.91335024, -1.86536218, -1.84663337,\n       -1.91555638, -1.87130511, -1.85478471, -1.63824621, -1.6726326 ,\n       -1.65424796, -1.98958067, -1.96161213, -1.98772648, -2.11258725,\n       -2.07140217, -2.09640505, -1.91866103, -1.86645433, -1.84412226,\n       -1.91615718, -1.86941803, -1.85176859, -1.91634987, -1.8720034 ,\n       -1.85612082, -1.63594373, -1.64806238, -1.66438134, -1.98150142,\n       -1.99965019, -1.96071294, -2.07370811, -2.07868888, -2.06107999,\n       -1.91805034, -1.86574759, -1.84345479, -1.91479083, -1.86831343,\n       -1.84959738, -1.91541311, -1.86999568, -1.85411533, -1.55337654,\n       -1.55346225, -1.55904685, -1.89218179, -1.89637699, -1.88553202,\n       -2.04577068, -2.03766447, -2.03441893, -1.89749848, -1.83083646,\n       -1.8024325 , -1.90445879, -1.8499372 , -1.82860727, -1.90341771,\n       -1.84801515, -1.82734042, -1.5480952 , -1.57084888, -1.57482124,\n       -1.83461272, -1.82263899, -1.82886931, -1.9307636 , -1.95741637,\n       -1.92410794, -1.89639978, -1.82944526, -1.80047388, -1.89716282,\n       -1.83435148, -1.80947841, -1.89671685, -1.83212637, -1.80623953,\n       -1.60387135, -1.62045966, -1.62919259, -1.86325673, -1.8787937 ,\n       -1.8740488 , -1.99036936, -1.98845089, -1.98012661, -1.90068522,\n       -1.83519731, -1.80818672, -1.90194779, -1.84319581, -1.82076668,\n       -1.90128862, -1.8432461 , -1.8208593 , -1.5915348 , -1.60871396,\n       -1.61279621, -1.88878778, -1.87404338, -1.90195029, -2.03462422,\n       -2.01891717, -2.02338551, -1.90175579, -1.83573764, -1.80767096,\n       -1.90603325, -1.8509902 , -1.83016671, -1.90797369, -1.85586017,\n       -1.83621636, -1.61622312, -1.61991432, -1.63853248, -1.96113076,\n       -1.98218184, -1.98583053, -2.0448406 , -2.0653182 , -2.06773016,\n       -1.90431155, -1.84022273, -1.81296185, -1.91217651, -1.86460669,\n       -1.84810307, -1.91125628, -1.86350292, -1.84559572, -1.60362848,\n       -1.62154296, -1.64238652, -1.86928625, -1.84898578, -1.86961135,\n       -1.98831341, -1.99344409, -1.98665611, -1.89614385, -1.82747189,\n       -1.79902287, -1.90241099, -1.84513261, -1.82291178, -1.90152828,\n       -1.84381316, -1.82165574, -1.5763893 , -1.61015297, -1.59667001,\n       -1.863242  , -1.86582971, -1.8799078 , -2.01810663, -2.01672148,\n       -2.02333602, -1.89841643, -1.83093515, -1.80233937, -1.90770871,\n       -1.85556962, -1.83513606, -1.90712484, -1.85418188, -1.83402199,\n       -1.60973701, -1.6285674 , -1.61698494, -1.8457197 , -1.84258859,\n       -1.86300151, -2.06742035, -2.07166817, -2.07148579, -1.89939269,\n       -1.83307797, -1.80421523, -1.91594251, -1.86951229, -1.85193673,\n       -1.91490549, -1.86914526, -1.85186605, -1.59099307, -1.6308209 ,\n       -1.63036279, -1.82400563, -1.82997936, -1.83824456, -2.03976616,\n       -2.03363814, -2.04462223, -1.89963081, -1.83389702, -1.80484192,\n       -1.90741508, -1.85386279, -1.83275654, -1.90936368, -1.85852128,\n       -1.83868829, -1.62089857, -1.65277835, -1.65497867, -1.82854844,\n       -1.82885079, -1.82996546, -1.97880368, -1.97831856, -1.97969966,\n       -1.89824416, -1.83188355, -1.80299831, -1.90349297, -1.84407812,\n       -1.8193743 , -1.9033192 , -1.84590919, -1.82341914, -1.58510712,\n       -1.61882925, -1.59410265, -1.83226083, -1.80425327, -1.81441692,\n       -1.98639204, -1.98311264, -1.98274929, -1.89788767, -1.83096093,\n       -1.80167415, -1.90435382, -1.84765089, -1.82237866, -1.9025415 ,\n       -1.84572526, -1.8238441 , -1.59565599, -1.61223602, -1.60676934,\n       -1.83139873, -1.82910238, -1.83293003, -1.97946162, -1.98201193,\n       -1.98514198, -1.89855031, -1.83148623, -1.80239147, -1.90413138,\n       -1.84761316, -1.82252002, -1.90369762, -1.84695596, -1.82369399,\n       -1.58205269, -1.59744342, -1.59184471, -1.82998965, -1.81875166,\n       -1.8177098 , -1.97423638, -1.95893673, -1.96387593, -1.89993531,\n       -1.83331842, -1.8051012 , -1.90171153, -1.84150705, -1.81885096,\n       -1.8993017 , -1.83951381, -1.81545236, -1.56446211, -1.56800862,\n       -1.58476711, -1.78082418, -1.79508079, -1.79254128, -1.89995317,\n       -1.91040313, -1.92388645, -1.8991666 , -1.83163143, -1.80315845,\n       -1.89872451, -1.83698625, -1.81144026, -1.89778136, -1.83570249,\n       -1.81094845, -1.5488027 , -1.56112917, -1.56329525, -1.75713743,\n       -1.76654857, -1.75046206, -1.88129185, -1.89901829, -1.88226977,\n       -1.90089853, -1.83347366, -1.80515804, -1.89520037, -1.82970079,\n       -1.80423193, -1.8946955 , -1.83026632, -1.80410042, -1.57000629,\n       -1.58837931, -1.5696673 , -1.80355072, -1.78170406, -1.80786651,\n       -1.95180281, -1.94987188, -1.94917601, -1.90310813, -1.83740071,\n       -1.80943652, -1.90302454, -1.8451    , -1.82161599, -1.9036522 ,\n       -1.84634012, -1.82420235, -1.56571623, -1.57157706, -1.58170573,\n       -1.74989357, -1.762713  , -1.7954689 , -1.93684488, -1.94794448,\n       -1.96238357, -1.89629449, -1.82608085, -1.79638733, -1.89581742,\n       -1.83138874, -1.80529401, -1.8953959 , -1.83182941, -1.80642689,\n       -1.56049946, -1.59165384, -1.58600411, -1.75077622, -1.78308257,\n       -1.7917469 , -1.95794889, -1.95592747, -1.95308925, -1.89620593,\n       -1.82584071, -1.79590904, -1.89641548, -1.83314553, -1.80840727,\n       -1.89640773, -1.83387352, -1.8092331 , -1.57703641, -1.58426027,\n       -1.5833693 , -1.78017264, -1.77278972, -1.75420305, -1.9772018 ,\n       -1.96542221, -1.97431413, -1.89595673, -1.82558508, -1.79583146,\n       -1.89906592, -1.83790337, -1.81347093, -1.89776668, -1.83626556,\n       -1.81191803, -1.58773753, -1.62960171, -1.62708425, -1.79185313,\n       -1.80907619, -1.8172054 , -1.9661049 , -1.97228585, -1.95967975,\n       -1.89571846, -1.82529791, -1.79508036, -1.89844111, -1.83756362,\n       -1.81189961, -1.89781751, -1.83734875, -1.81379552, -1.55599362,\n       -1.59104255, -1.59653416, -1.75554376, -1.80624502, -1.80397958,\n       -1.96310416, -2.01295402, -1.94760762, -1.89551325, -1.82920285,\n       -1.79537757, -1.89701168, -1.84487616, -1.80955268, -1.89443464,\n       -1.83601067, -1.80483722, -1.57603106, -1.61814571, -1.62395358,\n       -1.79582998, -1.7836972 , -1.81474553, -1.95719538, -1.96686263,\n       -1.98569393, -1.89490666, -1.82606273, -1.806937  , -1.89886408,\n       -1.83267353, -1.81964527, -1.89683299, -1.84108542, -1.81608479,\n       -1.58586021, -1.60799389, -1.58203321, -1.80342083, -1.77634929,\n       -1.82651585, -1.87934955, -1.95195204, -1.95751497, -1.89838795,\n       -1.82913579, -1.79939511, -1.90018314, -1.83948375, -1.80688695,\n       -1.89472266, -1.83774497, -1.80828547]), 'std_test_score': array([0.22435849, 0.22661088, 0.22119367, 0.2165095 , 0.23151626,\n       0.1898848 , 0.2441369 , 0.25196796, 0.24556113, 0.0292413 ,\n       0.04002082, 0.04643174, 0.03755335, 0.05599858, 0.06446955,\n       0.03412968, 0.04973488, 0.05800825, 0.17685016, 0.19484556,\n       0.20009154, 0.21688965, 0.19226193, 0.20481708, 0.23289196,\n       0.22798998, 0.23243086, 0.02565572, 0.03368894, 0.03961182,\n       0.02280917, 0.03347318, 0.04178608, 0.02432503, 0.03660391,\n       0.04451374, 0.17771439, 0.21027266, 0.20594716, 0.26456603,\n       0.25062067, 0.27895256, 0.26448454, 0.2555146 , 0.25745505,\n       0.02992005, 0.0388561 , 0.04300409, 0.03169892, 0.05302963,\n       0.06349387, 0.03260018, 0.05164609, 0.06128469, 0.19430499,\n       0.20376601, 0.21702304, 0.30919289, 0.32075358, 0.33566329,\n       0.38435887, 0.41014414, 0.38760166, 0.02770145, 0.03448951,\n       0.0394718 , 0.03660342, 0.06306035, 0.07628805, 0.03446811,\n       0.06020646, 0.0737127 , 0.18749925, 0.18189608, 0.17448772,\n       0.31014555, 0.31189977, 0.30649143, 0.35037392, 0.34763774,\n       0.35141938, 0.02849045, 0.03719703, 0.04224723, 0.03461866,\n       0.06119133, 0.07597776, 0.03424972, 0.05939945, 0.07350055,\n       0.20035657, 0.21506181, 0.20810764, 0.27999839, 0.26154543,\n       0.27290386, 0.26233096, 0.27693733, 0.27097604, 0.03107255,\n       0.04160463, 0.04642905, 0.03117201, 0.05063156, 0.062606  ,\n       0.03068871, 0.04832181, 0.05813725, 0.22295562, 0.23385324,\n       0.23346318, 0.25455859, 0.26679107, 0.26124449, 0.24455204,\n       0.26094209, 0.26441598, 0.02711092, 0.03450639, 0.03997126,\n       0.02574949, 0.03780472, 0.04564818, 0.02346741, 0.03285773,\n       0.03966653, 0.2140691 , 0.22239042, 0.23975391, 0.3092888 ,\n       0.32122571, 0.30990437, 0.3059951 , 0.29988847, 0.29391041,\n       0.0240826 , 0.03039881, 0.03572763, 0.02780681, 0.04640981,\n       0.05613439, 0.02417735, 0.04175651, 0.05216387, 0.24075859,\n       0.24580839, 0.23996725, 0.25368921, 0.27665708, 0.27971624,\n       0.29725316, 0.30175047, 0.30263434, 0.02194234, 0.03548315,\n       0.04389938, 0.02461236, 0.0417848 , 0.05232568, 0.02229947,\n       0.04280883, 0.05382016, 0.23312475, 0.23312438, 0.23685055,\n       0.23493071, 0.20458623, 0.2235156 , 0.29833471, 0.27668917,\n       0.2709165 , 0.02281551, 0.03628419, 0.04471791, 0.02354821,\n       0.04201548, 0.05093059, 0.02475241, 0.04443095, 0.05699283,\n       0.23971024, 0.24779866, 0.23906593, 0.26445644, 0.26567394,\n       0.25014087, 0.31517526, 0.32368028, 0.30438442, 0.02321893,\n       0.03569863, 0.04354838, 0.02406001, 0.04694418, 0.05830318,\n       0.0254902 , 0.05038034, 0.06355051, 0.23442714, 0.23437393,\n       0.23875297, 0.26137141, 0.24960783, 0.23602372, 0.3296322 ,\n       0.32209688, 0.34062356, 0.02463893, 0.04009792, 0.0491236 ,\n       0.02460876, 0.04719112, 0.05909366, 0.02653748, 0.05200243,\n       0.06389979, 0.20929776, 0.20876001, 0.22222713, 0.31196244,\n       0.31173297, 0.29058598, 0.32325461, 0.30641937, 0.29664512,\n       0.02267666, 0.03619529, 0.04525481, 0.02018728, 0.03869072,\n       0.05120768, 0.0211962 , 0.04049242, 0.05252319, 0.20210486,\n       0.20006686, 0.20017714, 0.30782243, 0.29181573, 0.29774789,\n       0.25832874, 0.26123094, 0.26938658, 0.02443842, 0.03812147,\n       0.04678684, 0.02254992, 0.04113545, 0.0532668 , 0.0234118 ,\n       0.04200551, 0.05268971, 0.20492071, 0.21202084, 0.20905161,\n       0.33359056, 0.34168762, 0.3319695 , 0.31374651, 0.3110007 ,\n       0.30950708, 0.02600628, 0.0400256 , 0.04895514, 0.0254628 ,\n       0.04884182, 0.06457962, 0.02724502, 0.0511698 , 0.064302  ,\n       0.20595707, 0.22945638, 0.19475362, 0.26011243, 0.26794374,\n       0.25378905, 0.26308041, 0.26589896, 0.26965809, 0.02463948,\n       0.04186274, 0.05075634, 0.02637923, 0.04916897, 0.0606877 ,\n       0.02627198, 0.04864636, 0.06181571, 0.20099954, 0.21401245,\n       0.21416012, 0.25894041, 0.23541518, 0.23686759, 0.32120767,\n       0.313472  , 0.33614581, 0.02499187, 0.04293101, 0.05170297,\n       0.02373397, 0.04674897, 0.05799972, 0.02548155, 0.0507343 ,\n       0.06339155, 0.20391794, 0.1944127 , 0.20658292, 0.2587019 ,\n       0.27539908, 0.24655132, 0.30973269, 0.30549885, 0.30147628,\n       0.0257191 , 0.04397826, 0.05269763, 0.02521974, 0.04968895,\n       0.06134163, 0.02691321, 0.05221105, 0.06480039, 0.2052343 ,\n       0.21696161, 0.21772704, 0.24806979, 0.24721242, 0.24732899,\n       0.30247497, 0.29539647, 0.30562393, 0.02603924, 0.04404714,\n       0.0527279 , 0.02527792, 0.04692643, 0.05834703, 0.02600786,\n       0.04937421, 0.06160118, 0.19691069, 0.19777326, 0.19297806,\n       0.25935362, 0.24762057, 0.23844595, 0.27921728, 0.27102718,\n       0.27968557, 0.02567624, 0.04306052, 0.05151295, 0.02634206,\n       0.04622567, 0.0558946 , 0.02659429, 0.04609054, 0.05851174,\n       0.2033053 , 0.20483437, 0.19388785, 0.22759937, 0.23578496,\n       0.2374372 , 0.26867963, 0.24591277, 0.27171778, 0.02586511,\n       0.04327411, 0.05222149, 0.02705038, 0.04825496, 0.06099178,\n       0.02540411, 0.04558635, 0.0564446 , 0.18761656, 0.18999994,\n       0.19789089, 0.24763702, 0.26209195, 0.24881759, 0.26288544,\n       0.29615501, 0.27079441, 0.02805527, 0.04859464, 0.05766456,\n       0.03260601, 0.05511223, 0.06615567, 0.03226515, 0.05434297,\n       0.06613503, 0.21718831, 0.19622164, 0.18405306, 0.2765435 ,\n       0.28649789, 0.3019962 , 0.3006336 , 0.30096196, 0.29948356,\n       0.02956673, 0.05082703, 0.06127106, 0.03425321, 0.05833539,\n       0.0696753 , 0.03316115, 0.05820247, 0.0703533 , 0.25258021,\n       0.26802851, 0.26340119, 0.34013238, 0.33220246, 0.34086103,\n       0.3389722 , 0.35506712, 0.3384373 , 0.03049252, 0.04889724,\n       0.05878031, 0.04298149, 0.07404195, 0.08989917, 0.04518334,\n       0.07546158, 0.09115219, 0.22584283, 0.22240691, 0.22757453,\n       0.31408195, 0.31830287, 0.30952104, 0.34892321, 0.35591145,\n       0.34988356, 0.02862188, 0.04527231, 0.05386075, 0.04185115,\n       0.07415486, 0.08956063, 0.04113605, 0.07411801, 0.09001225,\n       0.22559749, 0.21761411, 0.23152339, 0.32430577, 0.3350534 ,\n       0.33647757, 0.33097292, 0.33810334, 0.33840226, 0.02772884,\n       0.04042258, 0.04724039, 0.03933033, 0.06498957, 0.07791155,\n       0.03985416, 0.06716823, 0.08102346, 0.23590498, 0.2423819 ,\n       0.24226459, 0.30314381, 0.31155702, 0.29343103, 0.32928427,\n       0.33412102, 0.3262941 , 0.02502358, 0.0366174 , 0.04383097,\n       0.04196439, 0.06910317, 0.08235143, 0.04161669, 0.06995452,\n       0.08365371, 0.20247721, 0.21877995, 0.21255852, 0.2594117 ,\n       0.24641282, 0.25180573, 0.29303097, 0.28294153, 0.29193401,\n       0.02635242, 0.03540764, 0.04132966, 0.03648249, 0.05674964,\n       0.06633086, 0.03697571, 0.05913227, 0.07021456, 0.23780533,\n       0.2266981 , 0.24336544, 0.29059622, 0.28985181, 0.28531833,\n       0.27965848, 0.28467327, 0.28369923, 0.02780072, 0.04254941,\n       0.05119485, 0.03784261, 0.06191155, 0.07365125, 0.03908727,\n       0.06447212, 0.07708096, 0.24513057, 0.23559427, 0.22191504,\n       0.31422652, 0.30958651, 0.31354665, 0.29841838, 0.30865336,\n       0.29306099, 0.03026787, 0.04617806, 0.05480188, 0.04207696,\n       0.06747738, 0.080874  , 0.04360704, 0.07052788, 0.08363051,\n       0.20372217, 0.2065133 , 0.20985523, 0.31796374, 0.32132073,\n       0.30879249, 0.3257226 , 0.29956064, 0.31498071, 0.02984312,\n       0.04603851, 0.05436279, 0.04410824, 0.07169944, 0.08800149,\n       0.04610618, 0.07383742, 0.08679294, 0.26556615, 0.26133633,\n       0.25888588, 0.28608726, 0.30392346, 0.28998606, 0.26652828,\n       0.25664025, 0.28132044, 0.02905651, 0.04527782, 0.05312366,\n       0.04564302, 0.07393999, 0.08625169, 0.04420651, 0.07261214,\n       0.0851598 , 0.21061981, 0.22730426, 0.22397385, 0.2821191 ,\n       0.28401665, 0.2893684 , 0.26220749, 0.2683942 , 0.26700313,\n       0.02817322, 0.04237505, 0.05060696, 0.04229162, 0.06791263,\n       0.07983739, 0.04176258, 0.06813954, 0.07900927, 0.20946381,\n       0.22007065, 0.21291897, 0.30613667, 0.3001115 , 0.28530008,\n       0.29334384, 0.28820631, 0.29051446, 0.02951893, 0.04482254,\n       0.05298097, 0.04535269, 0.07468075, 0.08749499, 0.04423964,\n       0.07378496, 0.08752917, 0.20194699, 0.21628827, 0.21463872,\n       0.25195792, 0.2631823 , 0.2696179 , 0.2482835 , 0.25843874,\n       0.28053958, 0.02862835, 0.04233707, 0.05026141, 0.04318578,\n       0.06824912, 0.08151032, 0.0418629 , 0.06725156, 0.08139111,\n       0.19877665, 0.18948064, 0.19749475, 0.30338694, 0.30214379,\n       0.30096601, 0.33281019, 0.35117507, 0.35089943, 0.02587248,\n       0.03889046, 0.04471992, 0.04143692, 0.07052765, 0.0821874 ,\n       0.04028801, 0.0691102 , 0.08309143, 0.20957765, 0.21087947,\n       0.2181387 , 0.29176604, 0.28883208, 0.27998155, 0.32105074,\n       0.31304659, 0.31245473, 0.02616411, 0.03717414, 0.04421497,\n       0.03804583, 0.06403941, 0.0769132 , 0.03877005, 0.06571121,\n       0.07897935, 0.20856447, 0.20720574, 0.21508238, 0.25888021,\n       0.2606387 , 0.2577094 , 0.31394745, 0.29597606, 0.29333165,\n       0.02412432, 0.03577588, 0.04326119, 0.03435981, 0.05534944,\n       0.06426439, 0.03472999, 0.05701403, 0.06726607, 0.1964473 ,\n       0.21626474, 0.20994212, 0.23719902, 0.23762711, 0.23694274,\n       0.29939697, 0.29737449, 0.29436536, 0.0218904 , 0.03348013,\n       0.04024394, 0.03468556, 0.05687149, 0.06733614, 0.03496343,\n       0.05972183, 0.07048055, 0.16378093, 0.15736727, 0.17326982,\n       0.16348494, 0.17700682, 0.1785844 , 0.21291789, 0.20109433,\n       0.20835645, 0.01874689, 0.02644674, 0.03113714, 0.03216021,\n       0.05076362, 0.05710641, 0.02956652, 0.04719216, 0.05644099,\n       0.18476995, 0.18325755, 0.18367658, 0.16017976, 0.20211233,\n       0.19251489, 0.20719657, 0.20775194, 0.20654854, 0.01930401,\n       0.02652773, 0.03110501, 0.03131315, 0.0495515 , 0.05622246,\n       0.03004129, 0.04696692, 0.0559508 , 0.18002999, 0.15444009,\n       0.17411889, 0.18789806, 0.17315111, 0.17489173, 0.19493163,\n       0.19503464, 0.20721797, 0.01857272, 0.02619417, 0.03134475,\n       0.03225138, 0.04951252, 0.05646242, 0.03139368, 0.04844462,\n       0.05664291, 0.18092118, 0.17406815, 0.19430386, 0.1942265 ,\n       0.2112263 , 0.17382497, 0.19926195, 0.20368311, 0.20118131,\n       0.01752272, 0.02653359, 0.03213019, 0.0329081 , 0.0510763 ,\n       0.05891705, 0.03286952, 0.05113178, 0.06047257, 0.1716549 ,\n       0.16885822, 0.17399506, 0.19592568, 0.16835293, 0.20891177,\n       0.19030089, 0.20706612, 0.22816036, 0.01781558, 0.0337526 ,\n       0.03317407, 0.0289538 , 0.05290355, 0.05401957, 0.0333639 ,\n       0.05374298, 0.06400714, 0.16397704, 0.18993863, 0.19356878,\n       0.20946226, 0.19749473, 0.16606915, 0.21321716, 0.21965927,\n       0.24663872, 0.02137988, 0.02724525, 0.04487173, 0.03327889,\n       0.04452541, 0.06791216, 0.02981981, 0.04594841, 0.04576483,\n       0.16432365, 0.16986958, 0.17336823, 0.18649599, 0.19079891,\n       0.1911515 , 0.23335816, 0.2258625 , 0.23435059, 0.0211757 ,\n       0.02529361, 0.03476612, 0.03170909, 0.05411674, 0.05442895,\n       0.03111216, 0.04330573, 0.06260758]), 'rank_test_score': array([137, 138, 130, 655, 653, 694, 794, 801, 797, 645, 468, 382, 649,\n       484, 454, 644, 476, 436,  24,  45,  33, 463, 488, 481, 770, 765,\n       771, 591, 381, 234, 563, 375, 255, 556, 369, 246,  55,  61, 112,\n       462, 550, 486, 776, 758, 773, 592, 400, 271, 566, 403, 301, 562,\n       373, 257,  72, 100,  89, 443, 402, 444, 666, 661, 656, 575, 371,\n       237, 529, 309, 205, 534, 319, 213, 101, 110, 125, 665, 648, 580,\n       761, 780, 753, 588, 401, 272, 576, 399, 296, 568, 396, 291,  69,\n        93,  85, 540, 535, 560, 774, 746, 755, 583, 383, 249, 579, 418,\n       324, 569, 387, 284,  83, 107, 108, 668, 657, 660, 751, 752, 756,\n       567, 363, 239, 582, 411, 321, 570, 392, 292,  94, 120, 136, 687,\n       692, 680, 754, 778, 766, 572, 362, 233, 589, 422, 332, 584, 412,\n       323, 105, 127, 135, 706, 679, 713, 804, 807, 800, 601, 384, 259,\n       578, 409, 308, 593, 424, 336,  98, 119, 124, 715, 719, 714, 795,\n       793, 792, 603, 398, 275, 600, 428, 341, 606, 448, 361, 122, 129,\n       126, 667, 663, 671, 775, 763, 777, 598, 389, 265, 586, 410, 320,\n       590, 416, 333,  46,  86,  84, 597, 652, 647, 767, 783, 779, 594,\n       376, 245, 581, 406, 300, 596, 425, 345,  79, 111, 103, 548, 614,\n       564, 809, 806, 808, 610, 420, 299, 609, 440, 346, 632, 466, 395,\n        78, 116, 102, 490, 585, 637, 827, 820, 813, 615, 427, 330, 630,\n       470, 388, 638, 474, 417, 109, 115, 121, 613, 654, 658, 817, 818,\n       798, 605, 415, 304, 636, 465, 385, 639, 473, 413,  59, 106,  99,\n       646, 677, 698, 828, 826, 823, 619, 421, 294, 641, 475, 419, 643,\n       477, 437,  49,  58,  44, 662, 684, 720, 816, 805, 825, 618, 423,\n       311, 608, 447, 366, 611, 449, 372,  71,  88,  75, 672, 678, 685,\n       822, 819, 821, 631, 435, 328, 625, 460, 386, 634, 469, 408,  82,\n        97, 114, 701, 604, 670, 802, 787, 782, 628, 433, 331, 612, 445,\n       364, 616, 450, 377,  95, 131, 132, 703, 669, 708, 810, 803, 799,\n       624, 432, 327, 617, 452, 370, 635, 461, 391,  87, 128, 133, 707,\n       700, 712, 815, 811, 814, 627, 426, 318, 607, 439, 355, 623, 464,\n       397,  91, 134, 117, 740, 699, 737, 824, 788, 812, 642, 446, 344,\n       629, 456, 378, 633, 467, 407,  90, 104, 123, 727, 743, 696, 791,\n       796, 781, 640, 441, 340, 620, 451, 367, 622, 459, 393,   3,   4,\n         6, 489, 504, 485, 772, 762, 759, 512, 266, 171, 561, 368, 248,\n       552, 359, 243,   1,  15,  17, 295, 226, 251, 659, 689, 651, 505,\n       256, 167, 511, 293, 199, 508, 278, 186,  48,  66,  76, 431, 478,\n       472, 741, 739, 726, 536, 298, 193, 543, 338, 220, 538, 339, 221,\n        36,  52,  57, 487, 471, 544, 760, 748, 750, 542, 303, 191, 565,\n       374, 263, 577, 405, 306,  60,  65,  92, 697, 729, 734, 769, 784,\n       786, 558, 329, 206, 602, 438, 360, 599, 434, 350,  47,  68,  96,\n       455, 365, 458, 738, 742, 736, 501, 244, 165, 545, 349, 227, 539,\n       342, 223,  19,  54,  42, 430, 442, 480, 747, 745, 749, 519, 267,\n       169, 574, 404, 297, 571, 394, 290,  53,  74,  62, 351, 337, 429,\n       785, 790, 789, 528, 283, 178, 626, 457, 380, 621, 453, 379,  34,\n        81,  80, 231, 261, 317, 764, 757, 768, 530, 289, 182, 573, 390,\n       281, 587, 414, 322,  67, 113, 118, 247, 250, 260, 723, 722, 725,\n       517, 277, 172, 553, 343, 218, 551, 353, 228,  28,  64,  39, 279,\n       180, 209, 735, 731, 730, 516, 268, 168, 559, 358, 224, 546, 352,\n       230,  40,  56,  50, 270, 252, 282, 724, 728, 732, 521, 273, 170,\n       557, 357, 225, 555, 356, 229,  23,  43,  38, 262, 216, 215, 717,\n       693, 705, 531, 286, 183, 541, 335, 217, 527, 326, 211,  10,  12,\n        27, 150, 158, 156, 532, 595, 650, 526, 274, 173, 522, 310, 202,\n       514, 302, 201,   2,   8,   9, 144, 146, 140, 482, 524, 483, 537,\n       287, 184, 495, 258, 179, 492, 264, 177,  14,  32,  13, 175, 151,\n       192, 681, 676, 675, 549, 313, 198, 547, 348, 222, 554, 354, 232,\n        11,  16,  21, 139, 145, 160, 664, 674, 702, 503, 241, 164, 499,\n       269, 185, 496, 276, 188,   7,  37,  30, 141, 152, 154, 691, 686,\n       683, 502, 238, 163, 507, 285, 195, 506, 288, 197,  20,  26,  25,\n       149, 147, 142, 721, 709, 718, 500, 236, 162, 525, 316, 207, 513,\n       307, 204,  31,  77,  73, 155, 196, 214, 710, 716, 695, 498, 235,\n       157, 520, 314, 203, 515, 312, 208,   5,  35,  41, 143, 187, 176,\n       704, 744, 673, 497, 254, 159, 510, 347, 200, 491, 305, 181,  18,\n        63,  70, 161, 153, 210, 688, 711, 733, 494, 240, 190, 523, 280,\n       219, 509, 334, 212,  29,  51,  22, 174, 148, 242, 479, 682, 690,\n       518, 253, 166, 533, 325, 189, 493, 315, 194]), 'split0_train_score': array([-4.72955963e-01, -1.68474346e-01, -9.80671025e-02, -2.17774936e-03,\n       -5.98328375e-05, -9.97208958e-06, -5.25035784e-05, -1.39421727e-09,\n       -7.18470641e-12, -1.88377117e+00, -1.80553286e+00, -1.76932079e+00,\n       -1.79843994e+00, -1.63989749e+00, -1.56564412e+00, -1.78553219e+00,\n       -1.61562848e+00, -1.53684478e+00, -3.15396605e-01, -1.07712648e-01,\n       -6.59242022e-02, -2.66600867e-04, -8.75024101e-06, -1.72479878e-06,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.86171256e+00,\n       -1.76119589e+00, -1.71522586e+00, -1.79264859e+00, -1.63092186e+00,\n       -1.55579874e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.27926515e-01, -1.03918276e-01, -6.43861982e-02, -1.89696613e-04,\n       -3.60703674e-06, -1.07254685e-06, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.86189793e+00, -1.75997093e+00, -1.71376300e+00,\n       -1.79286418e+00, -1.62855147e+00, -1.55224968e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.85849640e-01, -7.69276732e-02,\n       -4.90972115e-02, -2.92694572e-04, -3.45221996e-07, -2.00142856e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85754508e+00,\n       -1.75254344e+00, -1.70614691e+00, -1.79170341e+00, -1.62729121e+00,\n       -1.55107948e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.63583898e-01, -8.01569693e-02, -4.94675860e-02, -1.31741095e-04,\n       -5.42744966e-07, -3.89998083e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85869193e+00, -1.75588269e+00, -1.71038323e+00,\n       -1.79102110e+00, -1.62605479e+00, -1.54962600e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.67890589e-01, -8.45634503e-02,\n       -4.75151806e-02, -2.47912406e-04, -4.82687634e-07, -7.24297215e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85722834e+00,\n       -1.75421773e+00, -1.70901555e+00, -1.79198626e+00, -1.62878715e+00,\n       -1.55364384e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.50489376e-01, -7.37361778e-02, -4.44419999e-02, -1.27420956e-04,\n       -8.12012458e-07, -7.69880698e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85595837e+00, -1.75237621e+00, -1.70718613e+00,\n       -1.79132295e+00, -1.62753118e+00, -1.55208326e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.67145422e-01, -8.09460397e-02,\n       -4.31475635e-02, -1.65422977e-04, -7.68071623e-07, -5.56000253e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85278124e+00,\n       -1.74643651e+00, -1.70064962e+00, -1.79159701e+00, -1.62817041e+00,\n       -1.55260814e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.76940397e-01, -7.80677298e-02, -4.42896768e-02, -1.95451036e-04,\n       -1.30601265e-07, -1.81453400e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85267697e+00, -1.74570626e+00, -1.70048862e+00,\n       -1.79084448e+00, -1.62519657e+00, -1.54828908e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.55182291e-01, -6.81454109e-02,\n       -4.27158673e-02, -1.37462142e-04, -9.30178129e-07, -6.20507838e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85267792e+00,\n       -1.74598503e+00, -1.70054917e+00, -1.79094243e+00, -1.62759570e+00,\n       -1.55201110e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.73612226e-01, -8.01923896e-02, -4.52746821e-02, -5.36364530e-04,\n       -2.94015720e-07, -9.48821172e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85259619e+00, -1.74586970e+00, -1.70032249e+00,\n       -1.79094169e+00, -1.62759502e+00, -1.55201110e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.64228351e-01, -8.59762881e-02,\n       -5.54432683e-02, -1.20815510e-04, -9.27882829e-07, -4.00021648e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85123545e+00,\n       -1.74455111e+00, -1.69901312e+00, -1.79039269e+00, -1.62650866e+00,\n       -1.55066971e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.56816478e-01, -7.48130408e-02, -4.31746286e-02, -1.01397586e-04,\n       -9.00508790e-08, -1.54041124e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.84961644e+00, -1.74091501e+00, -1.69177490e+00,\n       -1.79072007e+00, -1.62591878e+00, -1.54964220e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.19244874e-01, -6.77755980e-02,\n       -4.33634606e-02, -9.54473305e-05, -2.52114579e-08, -9.81704724e-09,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.84893255e+00,\n       -1.73929158e+00, -1.68923864e+00, -1.79072007e+00, -1.62591878e+00,\n       -1.54964284e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.87354756e-01, -8.18048712e-02, -4.68673574e-02, -1.88160704e-04,\n       -2.56461810e-07, -8.81525683e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.84816631e+00, -1.73852194e+00, -1.68846355e+00,\n       -1.79072007e+00, -1.62591878e+00, -1.54964220e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.40921140e-01, -7.15223941e-02,\n       -4.32602490e-02, -1.17920463e-04, -2.08374668e-07, -5.38574706e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.84945526e+00,\n       -1.74194548e+00, -1.69287762e+00, -1.79072082e+00, -1.62591945e+00,\n       -1.54964284e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.50187596e-01, -7.89877311e-02, -4.79314065e-02, -9.54840462e-05,\n       -6.34846689e-09, -1.50992529e-09, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.84945526e+00, -1.74194548e+00, -1.69287762e+00,\n       -1.79072007e+00, -1.62591878e+00, -1.54964284e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.62424363e-01, -7.04627323e-02,\n       -3.79337144e-02, -1.03726980e-04, -6.94697691e-08, -4.38226337e-10,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.84945526e+00,\n       -1.74191150e+00, -1.69284522e+00, -1.79072082e+00, -1.62591945e+00,\n       -1.54964220e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.89932189e-01, -6.86877034e-02, -3.96486942e-02, -1.05984831e-04,\n       -9.56397111e-08, -3.10980756e-09, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.84933245e+00, -1.74169972e+00, -1.69262947e+00,\n       -1.79072007e+00, -1.62591945e+00, -1.54964284e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.91109239e-01, -8.07934818e-02,\n       -4.90185785e-02, -8.30619890e-05, -9.78320695e-09, -6.92128357e-11,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.84915557e+00,\n       -1.74138107e+00, -1.69240230e+00, -1.79166113e+00, -1.62793974e+00,\n       -1.55221336e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.74776371e-01, -5.67223094e-02, -3.03533651e-02, -9.38384236e-05,\n       -1.08007767e-08, -3.14114327e-09, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.84915557e+00, -1.74139983e+00, -1.69240230e+00,\n       -1.79166113e+00, -1.62793974e+00, -1.55221336e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.31472181e-01, -7.26527639e-02,\n       -3.74959495e-02, -8.46915285e-05, -3.60502225e-08, -4.67162366e-09,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.84915557e+00,\n       -1.74136958e+00, -1.69230142e+00, -1.79166113e+00, -1.62793906e+00,\n       -1.55221336e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.78765831e-01, -7.44418106e-02, -2.97980631e-02, -1.02157319e-04,\n       -4.24986902e-08, -3.20904871e-11, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.84915557e+00, -1.73955666e+00, -1.68933952e+00,\n       -1.79166188e+00, -1.62793974e+00, -1.55221336e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.95433291e-01, -1.51118221e-01,\n       -9.15240293e-02, -9.11319480e-04, -1.91548565e-05, -1.45748567e-06,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.86549883e+00,\n       -1.76987148e+00, -1.72547698e+00, -1.79147611e+00, -1.62691738e+00,\n       -1.55117954e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.90960310e-01, -1.39761928e-01, -7.89658487e-02, -1.92564347e-04,\n       -1.27276800e-06, -6.90980989e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.86028055e+00, -1.76136458e+00, -1.71585617e+00,\n       -1.78935810e+00, -1.62320688e+00, -1.54614173e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.52004123e-01, -1.19330910e-01,\n       -7.07345038e-02, -1.46235723e-04, -2.60318448e-07, -9.09133921e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85711941e+00,\n       -1.75513534e+00, -1.70789927e+00, -1.78886290e+00, -1.62152113e+00,\n       -1.54493331e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.32691916e-01, -1.30773623e-01, -7.88846645e-02, -1.56911938e-04,\n       -5.83890589e-07, -1.14734256e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85793218e+00, -1.75732459e+00, -1.71138727e+00,\n       -1.78884031e+00, -1.62115032e+00, -1.54350572e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.78410481e-01, -9.42487493e-02,\n       -5.89541588e-02, -1.76106335e-04, -1.95471253e-07, -1.84375737e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85753860e+00,\n       -1.75627764e+00, -1.71066842e+00, -1.79107202e+00, -1.62551086e+00,\n       -1.54868993e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.10295644e-01, -1.06184614e-01, -5.84891509e-02, -3.33449339e-04,\n       -3.39385943e-07, -2.51046469e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85619617e+00, -1.75385437e+00, -1.70781117e+00,\n       -1.79101468e+00, -1.62564418e+00, -1.54902198e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.00559845e-01, -1.06469843e-01,\n       -6.27482747e-02, -2.16837431e-04, -3.20104675e-07, -2.36062562e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85619617e+00,\n       -1.75422382e+00, -1.70957168e+00, -1.79164663e+00, -1.62775685e+00,\n       -1.55187688e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.15054392e-01, -1.17579285e-01, -6.78620684e-02, -1.19997161e-04,\n       -2.96778783e-07, -7.25708498e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85555062e+00, -1.75371555e+00, -1.70903521e+00,\n       -1.79255235e+00, -1.62899812e+00, -1.55311118e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.12131503e-01, -1.15067787e-01,\n       -6.92865826e-02, -1.72130934e-04, -2.50925438e-07, -1.48379961e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85866796e+00,\n       -1.75693770e+00, -1.71129751e+00, -1.79450562e+00, -1.63273652e+00,\n       -1.55763893e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.24943898e-01, -1.11770124e-01, -6.23592245e-02, -9.76919024e-05,\n       -1.19782787e-07, -3.73975209e-09, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85714728e+00, -1.75467943e+00, -1.70867310e+00,\n       -1.79330915e+00, -1.63081420e+00, -1.55548177e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.14438633e-01, -1.06579625e-01,\n       -6.08892752e-02, -1.43575187e-04, -2.97387714e-07, -8.76540982e-08,\n       -5.25669770e-05, -1.39553005e-09, -7.19296430e-12, -1.85714728e+00,\n       -1.75467943e+00, -1.70867310e+00, -1.79315440e+00, -1.63051635e+00,\n       -1.55509999e+00, -1.78545147e+00, -1.61546247e+00, -1.53663699e+00,\n       -2.80840074e-01, -9.61608291e-02, -5.55127155e-02, -3.02972110e-04,\n       -2.81751812e-07, -5.07020835e-08, -5.25304869e-05, -1.39986952e-09,\n       -7.19014660e-12, -1.85714728e+00, -1.75467943e+00, -1.70867310e+00,\n       -1.79239059e+00, -1.62902389e+00, -1.55331193e+00, -1.78545147e+00,\n       -1.61546247e+00, -1.53663699e+00, -2.58356166e-01, -8.02914522e-02,\n       -5.17861699e-02, -1.85631653e-04, -4.88005803e-08, -8.45086918e-08,\n       -5.25262442e-05, -1.39749553e-09, -7.20457032e-12, -1.85627961e+00,\n       -1.75343651e+00, -1.70644890e+00, -1.79273562e+00, -1.62964266e+00,\n       -1.55399677e+00, -1.78548863e+00, -1.61551798e+00, -1.53668982e+00,\n       -2.76588327e-01, -8.91172333e-02, -4.78421692e-02, -1.03683494e-04,\n       -2.21127711e-07, -8.36117142e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85809252e+00, -1.75137335e+00, -1.70299779e+00,\n       -1.78961494e+00, -1.62387965e+00, -1.54669469e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.84620414e-01, -8.34273164e-02,\n       -4.80419355e-02, -1.90784581e-04, -5.12537681e-08, -2.20487059e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85809252e+00,\n       -1.75141802e+00, -1.70303885e+00, -1.78943327e+00, -1.62374626e+00,\n       -1.54659251e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.61978264e-01, -7.82128200e-02, -4.19568079e-02, -1.63916106e-04,\n       -6.74668570e-08, -5.28694494e-09, -5.24166603e-05, -1.39225969e-09,\n       -7.17581801e-12, -1.85806168e+00, -1.75242189e+00, -1.70453653e+00,\n       -1.78972568e+00, -1.62368819e+00, -1.54673906e+00, -1.78544319e+00,\n       -1.61545497e+00, -1.53662986e+00, -2.52021390e-01, -7.17000573e-02,\n       -3.75227538e-02, -1.05719208e-04, -2.44709288e-07, -9.52685122e-08,\n       -5.24614882e-05, -1.39247080e-09, -7.17655051e-12, -1.85558846e+00,\n       -1.75195132e+00, -1.70407817e+00, -1.79020890e+00, -1.62478080e+00,\n       -1.54800995e+00, -1.78544439e+00, -1.61545647e+00, -1.53663297e+00,\n       -2.49803712e-01, -7.09568655e-02, -3.76705481e-02, -1.27086882e-04,\n       -1.60136999e-07, -1.13175351e-08, -5.24614882e-05, -1.39247080e-09,\n       -7.18075338e-12, -1.85558846e+00, -1.75195132e+00, -1.70407817e+00,\n       -1.79018717e+00, -1.62476250e+00, -1.54799763e+00, -1.78544922e+00,\n       -1.61545606e+00, -1.53663232e+00, -2.76717517e-01, -8.45907970e-02,\n       -4.19225190e-02, -9.20842695e-05, -2.76830433e-08, -1.11686410e-07,\n       -5.24583363e-05, -1.39745081e-09, -7.18784220e-12, -1.85535425e+00,\n       -1.75132260e+00, -1.70295600e+00, -1.79029425e+00, -1.62496036e+00,\n       -1.54829621e+00, -1.78544559e+00, -1.61545647e+00, -1.53663297e+00,\n       -2.61445936e-01, -8.30628366e-02, -4.59092276e-02, -9.79347581e-05,\n       -1.51368114e-07, -1.09916353e-08, -5.24246079e-05, -1.39504948e-09,\n       -7.19677018e-12, -1.85493051e+00, -1.75032955e+00, -1.70147312e+00,\n       -1.79052335e+00, -1.62719427e+00, -1.55153811e+00, -1.78544364e+00,\n       -1.61545497e+00, -1.53663025e+00, -2.82390219e-01, -8.25340537e-02,\n       -4.30401374e-02, -1.01802127e-04, -1.94177872e-08, -9.24311388e-09,\n       -5.25721188e-05, -1.39563446e-09, -7.18983239e-12, -1.85493051e+00,\n       -1.73977568e+00, -1.69947773e+00, -1.79052433e+00, -1.62567048e+00,\n       -1.54785086e+00, -1.78544679e+00, -1.61545647e+00, -1.53663025e+00,\n       -2.61844525e-01, -8.41183633e-02, -3.90892057e-02, -1.14150326e-04,\n       -2.51277656e-08, -4.66841489e-09, -5.26670215e-05, -1.39364988e-09,\n       -7.19283927e-12, -1.85467132e+00, -1.74963190e+00, -1.70121507e+00,\n       -1.79197470e+00, -1.62705079e+00, -1.55019606e+00, -1.78549796e+00,\n       -1.61545497e+00, -1.53663232e+00, -2.61167283e-01, -1.05314573e-01,\n       -5.28448098e-02, -1.09218656e-04, -1.50245777e-07, -1.59985196e-09,\n       -5.25282674e-05, -1.39563446e-09, -7.19283927e-12, -1.85345018e+00,\n       -1.75056247e+00, -1.69832453e+00, -1.78899376e+00, -1.62696758e+00,\n       -1.54950794e+00, -1.78553441e+00, -1.61545430e+00, -1.53663025e+00]), 'split1_train_score': array([-4.55825601e-01, -1.72709065e-01, -1.04366516e-01, -5.22588750e-03,\n       -3.97163223e-04, -1.18940531e-05, -5.41091080e-05, -1.43721365e-09,\n       -7.40687931e-12, -1.88877613e+00, -1.81164159e+00, -1.77592461e+00,\n       -1.81027252e+00, -1.66024676e+00, -1.58976580e+00, -1.79005880e+00,\n       -1.62071504e+00, -1.54221034e+00, -3.87041259e-01, -1.20975817e-01,\n       -7.23962312e-02, -2.12182994e-04, -4.23793190e-06, -3.46471302e-07,\n       -5.26212177e-05, -1.39770473e-09, -7.20322919e-12, -1.86892934e+00,\n       -1.77425205e+00, -1.73131555e+00, -1.79508096e+00, -1.63055195e+00,\n       -1.55400838e+00, -1.78913352e+00, -1.61902201e+00, -1.54014871e+00,\n       -2.86729846e-01, -9.35030762e-02, -6.02992150e-02, -3.19327068e-04,\n       -2.13533934e-06, -2.66449120e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86606558e+00, -1.76852134e+00, -1.72381876e+00,\n       -1.79282808e+00, -1.62554242e+00, -1.54794138e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -3.07296541e-01, -9.47521691e-02,\n       -3.91195531e-02, -1.10427798e-04, -1.08278266e-06, -2.13435037e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86359223e+00,\n       -1.76443732e+00, -1.71849271e+00, -1.79185168e+00, -1.62487248e+00,\n       -1.54690049e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.70926112e-01, -9.15566812e-02, -4.30556519e-02, -1.65013279e-04,\n       -5.83160077e-07, -8.79857282e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86430830e+00, -1.76584708e+00, -1.72045352e+00,\n       -1.79224936e+00, -1.62530593e+00, -1.54798813e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.65078052e-01, -6.95509113e-02,\n       -3.69515768e-02, -1.32898489e-04, -1.65135576e-07, -2.73534318e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86017298e+00,\n       -1.75878026e+00, -1.71216801e+00, -1.79307515e+00, -1.62708264e+00,\n       -1.55008324e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.75611154e-01, -8.78460453e-02, -5.13102724e-02, -1.43746606e-04,\n       -2.07243395e-07, -4.95690751e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85911781e+00, -1.75604040e+00, -1.70847934e+00,\n       -1.79320852e+00, -1.62732916e+00, -1.55037957e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.61425915e-01, -8.07525073e-02,\n       -4.71284580e-02, -2.06951016e-04, -7.36539825e-07, -2.85777704e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85861248e+00,\n       -1.75469601e+00, -1.70673359e+00, -1.79205299e+00, -1.62479383e+00,\n       -1.54725618e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.23286790e-01, -5.14009968e-02, -2.64972889e-02, -1.75774801e-04,\n       -7.08236032e-07, -2.80826123e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85895770e+00, -1.75532160e+00, -1.70780752e+00,\n       -1.79275223e+00, -1.62616570e+00, -1.54895964e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.46482909e-01, -8.17552816e-02,\n       -4.77432617e-02, -3.59544290e-04, -1.55962306e-06, -2.28447287e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85742801e+00,\n       -1.75236346e+00, -1.70403000e+00, -1.79400773e+00, -1.62867113e+00,\n       -1.55210633e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.36908165e-01, -6.96640611e-02, -4.39539969e-02, -2.68599405e-04,\n       -6.44675912e-07, -1.12567876e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85825929e+00, -1.75363645e+00, -1.70561422e+00,\n       -1.79388604e+00, -1.62846825e+00, -1.55185404e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.18307467e-01, -6.57617597e-02,\n       -3.92923213e-02, -4.35697011e-04, -1.48886661e-06, -2.25608244e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85625981e+00,\n       -1.75036446e+00, -1.70185375e+00, -1.79388604e+00, -1.62846825e+00,\n       -1.55185404e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.32868937e-01, -6.54644209e-02, -3.94491754e-02, -2.32523612e-04,\n       -6.01499746e-07, -7.81771471e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85623462e+00, -1.75031548e+00, -1.70173529e+00,\n       -1.79244514e+00, -1.62545981e+00, -1.54806150e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.26979866e-01, -6.17922212e-02,\n       -3.30782981e-02, -2.59852200e-04, -1.19353623e-06, -8.93362347e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85756703e+00,\n       -1.75241028e+00, -1.70349743e+00, -1.79244514e+00, -1.62545981e+00,\n       -1.54805904e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.36374081e-01, -6.19103437e-02, -3.53025385e-02, -2.66829035e-04,\n       -4.12439539e-07, -6.44673045e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85756564e+00, -1.75239708e+00, -1.70349819e+00,\n       -1.79165909e+00, -1.62400013e+00, -1.54630880e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.36489059e-01, -6.46412236e-02,\n       -3.94446501e-02, -2.07865771e-04, -6.42061785e-07, -1.10154988e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85846103e+00,\n       -1.75324957e+00, -1.70478942e+00, -1.79242944e+00, -1.62564984e+00,\n       -1.54857359e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.23018517e-01, -6.01110860e-02, -3.12992167e-02, -1.84007601e-04,\n       -2.04070677e-07, -6.84399582e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85754353e+00, -1.75148976e+00, -1.70156780e+00,\n       -1.79538353e+00, -1.63104478e+00, -1.55481008e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.27953814e-01, -5.59243865e-02,\n       -2.66301828e-02, -1.05009312e-04, -1.42994971e-07, -3.55663670e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85740639e+00,\n       -1.75119693e+00, -1.70153276e+00, -1.79696539e+00, -1.63416002e+00,\n       -1.55874373e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.40327706e-01, -5.97830031e-02, -3.11985027e-02, -1.29341595e-04,\n       -2.07978095e-07, -7.83535012e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85585810e+00, -1.74901596e+00, -1.69909503e+00,\n       -1.79771033e+00, -1.63477510e+00, -1.55927850e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.21060294e-01, -5.12430588e-02,\n       -2.53468653e-02, -2.01304184e-04, -1.23931108e-07, -4.43898401e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85575071e+00,\n       -1.74868803e+00, -1.69986379e+00, -1.79529568e+00, -1.63074372e+00,\n       -1.55437476e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.16798401e-01, -5.72134539e-02, -3.07711288e-02, -2.40205944e-04,\n       -5.02042394e-07, -8.39638645e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85575071e+00, -1.74868803e+00, -1.69986379e+00,\n       -1.79498191e+00, -1.63017941e+00, -1.55372445e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.11298376e-01, -5.55377353e-02,\n       -2.99617826e-02, -1.79097263e-04, -3.39079258e-07, -9.05641306e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85575071e+00,\n       -1.74868803e+00, -1.70033661e+00, -1.79529568e+00, -1.63074372e+00,\n       -1.55437385e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.13908187e-01, -5.65063346e-02, -3.22855345e-02, -3.29521023e-04,\n       -6.08527949e-07, -1.16749248e-07, -5.25198007e-05, -1.39499942e-09,\n       -7.18931481e-12, -1.85891264e+00, -1.75342464e+00, -1.70361025e+00,\n       -1.80014784e+00, -1.63960653e+00, -1.56520347e+00, -1.78903351e+00,\n       -1.61880874e+00, -1.53981999e+00, -4.06175193e-01, -1.31213811e-01,\n       -8.84986130e-02, -7.24960463e-04, -1.04767711e-05, -5.11248498e-06,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86624869e+00,\n       -1.76672498e+00, -1.72138967e+00, -1.79855404e+00, -1.63520566e+00,\n       -1.55872686e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.33998996e-01, -1.15413002e-01, -7.07866693e-02, -9.93081709e-05,\n       -7.43364927e-08, -4.16816581e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85729563e+00, -1.75072901e+00, -1.70286744e+00,\n       -1.79410501e+00, -1.62861707e+00, -1.55195181e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -3.15098890e-01, -1.28539330e-01,\n       -8.59803286e-02, -8.75435002e-05, -5.33766043e-08, -4.34260516e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85571016e+00,\n       -1.74773464e+00, -1.69735787e+00, -1.79334097e+00, -1.62681693e+00,\n       -1.54897592e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.95477688e-01, -1.00495506e-01, -5.82331945e-02, -1.02822381e-04,\n       -1.14917438e-08, -4.07717317e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85641339e+00, -1.74700632e+00, -1.69695835e+00,\n       -1.79181240e+00, -1.62433159e+00, -1.54675407e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.57343180e-01, -8.20048200e-02,\n       -4.47869076e-02, -9.94659450e-05, -3.54174353e-08, -3.41180963e-09,\n       -5.25202284e-05, -1.39501078e-09, -7.18937209e-12, -1.85533413e+00,\n       -1.74643874e+00, -1.69741549e+00, -1.80009567e+00, -1.63227027e+00,\n       -1.55347760e+00, -1.78892827e+00, -1.61860825e+00, -1.53962928e+00,\n       -3.02335662e-01, -9.81317741e-02, -6.57320814e-02, -9.47686317e-05,\n       -1.16758357e-07, -2.49054985e-09, -5.25705590e-05, -1.40514854e-09,\n       -7.24754903e-12, -1.86340267e+00, -1.75657347e+00, -1.70798558e+00,\n       -1.80164252e+00, -1.63518406e+00, -1.55722224e+00, -1.78950701e+00,\n       -1.61960130e+00, -1.54063839e+00, -3.26440748e-01, -1.04125334e-01,\n       -5.43375189e-02, -9.26172103e-05, -3.72211232e-08, -9.19671131e-09,\n       -5.25705101e-05, -1.39634634e-09, -7.24152885e-12, -1.86387313e+00,\n       -1.75890062e+00, -1.71137753e+00, -1.80225237e+00, -1.63707939e+00,\n       -1.55938642e+00, -1.78950701e+00, -1.61960130e+00, -1.54063839e+00,\n       -3.09213489e-01, -1.11952638e-01, -6.25033340e-02, -8.43912318e-05,\n       -4.27286394e-08, -4.21596002e-09, -5.33270386e-05, -1.41644081e-09,\n       -7.29981959e-12, -1.86328483e+00, -1.75909125e+00, -1.71255961e+00,\n       -1.80244536e+00, -1.63838314e+00, -1.56042329e+00, -1.78996257e+00,\n       -1.61997075e+00, -1.54098956e+00, -3.01970643e-01, -9.32927419e-02,\n       -5.16204260e-02, -7.76545661e-05, -1.41933446e-08, -3.45050823e-09,\n       -5.30623313e-05, -1.40940979e-09, -7.26359806e-12, -1.86328457e+00,\n       -1.75511991e+00, -1.70600348e+00, -1.80432110e+00, -1.63854495e+00,\n       -1.56125796e+00, -1.78976210e+00, -1.62027516e+00, -1.54164188e+00,\n       -2.64445435e-01, -7.59745425e-02, -4.43978158e-02, -1.00396443e-04,\n       -3.96780406e-07, -2.62362588e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86318425e+00, -1.75491480e+00, -1.70590763e+00,\n       -1.79633971e+00, -1.63078334e+00, -1.55311465e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.69513357e-01, -8.43060225e-02,\n       -4.77449635e-02, -9.71043728e-05, -1.08395850e-07, -1.02096180e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86330490e+00,\n       -1.75457802e+00, -1.70557361e+00, -1.79621336e+00, -1.63105994e+00,\n       -1.55357235e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.20693552e-01, -7.06721847e-02, -4.13394888e-02, -1.58451428e-04,\n       -3.33579769e-07, -5.57781885e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86331596e+00, -1.75463527e+00, -1.70553525e+00,\n       -1.79651583e+00, -1.63139225e+00, -1.55392941e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.31940350e-01, -6.81664808e-02,\n       -4.15495986e-02, -1.07611885e-04, -3.21655711e-08, -5.08230252e-09,\n       -5.29717352e-05, -1.40648333e-09, -7.24909721e-12, -1.86257864e+00,\n       -1.75279407e+00, -1.70353999e+00, -1.79757445e+00, -1.63459575e+00,\n       -1.55868963e+00, -1.78905088e+00, -1.61884938e+00, -1.53992658e+00,\n       -2.48032226e-01, -7.72305762e-02, -3.44273237e-02, -6.90644171e-05,\n       -4.69367599e-09, -8.27539869e-09, -5.27551678e-05, -1.40963557e-09,\n       -7.27680823e-12, -1.85892339e+00, -1.74968937e+00, -1.69999625e+00,\n       -1.79497273e+00, -1.63027628e+00, -1.55348216e+00, -1.78905088e+00,\n       -1.61884938e+00, -1.53992658e+00, -2.03360818e-01, -7.94917962e-02,\n       -3.12406328e-02, -7.92772673e-05, -1.12710010e-08, -2.30580627e-09,\n       -5.28313578e-05, -1.40616755e-09, -7.25335190e-12, -1.85892339e+00,\n       -1.74968937e+00, -1.69999625e+00, -1.79497921e+00, -1.63036388e+00,\n       -1.55372332e+00, -1.78905088e+00, -1.61884938e+00, -1.53992658e+00,\n       -2.54267002e-01, -5.45109395e-02, -3.76314160e-02, -6.87936676e-05,\n       -2.25623793e-08, -6.11378872e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85892339e+00, -1.74986101e+00, -1.70024576e+00,\n       -1.79464991e+00, -1.62976972e+00, -1.55347461e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.47536375e-01, -6.18810210e-02,\n       -4.60711954e-02, -8.55253098e-05, -1.21561480e-08, -1.74704947e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85973825e+00,\n       -1.75079296e+00, -1.70087697e+00, -1.79669680e+00, -1.63334634e+00,\n       -1.55782813e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.21039145e-01, -8.32044233e-02, -4.25984543e-02, -9.43529329e-05,\n       -1.00494871e-08, -6.95177136e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85973825e+00, -1.75097528e+00, -1.70112996e+00,\n       -1.79666583e+00, -1.63345865e+00, -1.55763915e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.42951365e-01, -5.65745135e-02,\n       -3.77942805e-02, -9.96522383e-05, -8.33018204e-08, -9.01837098e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85972364e+00,\n       -1.75129581e+00, -1.70173139e+00, -1.79649500e+00, -1.63312076e+00,\n       -1.55744780e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.40573171e-01, -5.09146886e-02, -2.32680568e-02, -1.20607748e-04,\n       -4.07293079e-08, -1.44525488e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85972364e+00, -1.75129581e+00, -1.70173139e+00,\n       -1.79649262e+00, -1.63303809e+00, -1.55728008e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.22226917e-01, -6.15593946e-02,\n       -3.59804625e-02, -7.13078591e-05, -4.92170773e-08, -9.90848967e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85972364e+00,\n       -1.74984947e+00, -1.70173139e+00, -1.79651809e+00, -1.63582755e+00,\n       -1.55747832e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.36635609e-01, -6.20848961e-02, -3.34259067e-02, -7.53035567e-05,\n       -1.12117232e-07, -1.87415055e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85949776e+00, -1.75129581e+00, -1.68972987e+00,\n       -1.79721393e+00, -1.63306657e+00, -1.55775324e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.30025844e-01, -8.70996509e-02,\n       -3.45220794e-02, -1.61321070e-04, -1.45225316e-08, -3.79521232e-10,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85938879e+00,\n       -1.75151317e+00, -1.70047850e+00, -1.79635772e+00, -1.63521375e+00,\n       -1.55517217e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00]), 'split2_train_score': array([-4.49575145e-01, -1.64636129e-01, -9.91277629e-02, -1.21199191e-03,\n       -1.41001781e-05, -4.47919660e-06, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.88094302e+00, -1.79213540e+00, -1.75166157e+00,\n       -1.79641946e+00, -1.63078749e+00, -1.55397341e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.26493086e-01, -1.13390797e-01,\n       -6.31030297e-02, -9.10881372e-05, -6.27487762e-07, -3.80393620e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86854718e+00,\n       -1.76507464e+00, -1.71855890e+00, -1.80268890e+00, -1.64077156e+00,\n       -1.56437306e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.04875193e-01, -9.16899155e-02, -5.22258231e-02, -1.01054669e-04,\n       -9.12718835e-08, -1.23132250e-07, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86408181e+00, -1.76047431e+00, -1.71313412e+00,\n       -1.79987147e+00, -1.63640340e+00, -1.55819251e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.75396779e-01, -8.07544242e-02,\n       -4.08081214e-02, -1.70881513e-04, -6.91681114e-07, -5.26442950e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86310901e+00,\n       -1.75780591e+00, -1.70866735e+00, -1.79914563e+00, -1.63465440e+00,\n       -1.55653644e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.61957343e-01, -7.62001687e-02, -4.23039612e-02, -1.20773753e-04,\n       -3.12996044e-09, -9.19241304e-10, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86359744e+00, -1.75654625e+00, -1.70800304e+00,\n       -1.79934889e+00, -1.63646592e+00, -1.56083332e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.80814480e-01, -9.02003821e-02,\n       -4.24101296e-02, -1.35906274e-04, -5.82103548e-08, -5.76494947e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86120340e+00,\n       -1.75282411e+00, -1.70367245e+00, -1.79919164e+00, -1.63534957e+00,\n       -1.55929408e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.84226655e-01, -8.24631260e-02, -4.17176793e-02, -8.81287682e-05,\n       -4.73605146e-09, -1.40594060e-11, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86003196e+00, -1.75065537e+00, -1.69957560e+00,\n       -1.79925228e+00, -1.63579741e+00, -1.55919339e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.47228013e-01, -8.01228886e-02,\n       -4.24180492e-02, -5.04136985e-04, -1.65866531e-06, -3.28813125e-07,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85865713e+00,\n       -1.75005573e+00, -1.69852587e+00, -1.79893525e+00, -1.63476736e+00,\n       -1.55824262e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.62194553e-01, -7.31643097e-02, -4.20704624e-02, -1.16685416e-04,\n       -2.83294165e-07, -4.68697989e-09, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85728737e+00, -1.74655138e+00, -1.69658762e+00,\n       -1.80077607e+00, -1.63848089e+00, -1.56316290e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.53766455e-01, -6.59510479e-02,\n       -3.51922934e-02, -9.73202933e-05, -2.60464226e-08, -4.64083089e-09,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85706446e+00,\n       -1.74579992e+00, -1.69496921e+00, -1.80076468e+00, -1.63848108e+00,\n       -1.56328442e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.52807985e-01, -7.64854887e-02, -4.29581785e-02, -8.11865316e-05,\n       -4.05141094e-09, -3.14844679e-11, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85719409e+00, -1.74602023e+00, -1.69514336e+00,\n       -1.80111984e+00, -1.63966227e+00, -1.56523678e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.75441772e-01, -7.23246189e-02,\n       -3.88927620e-02, -8.35024059e-05, -2.07026371e-08, -5.32557120e-09,\n       -5.26108457e-05, -1.39741728e-09, -7.20188822e-12, -1.85701345e+00,\n       -1.74619478e+00, -1.69624585e+00, -1.80068267e+00, -1.63942003e+00,\n       -1.56440137e+00, -1.79129084e+00, -1.62082352e+00, -1.54166663e+00,\n       -2.89409973e-01, -7.87622955e-02, -5.10193574e-02, -8.11541157e-05,\n       -2.26833037e-08, -4.74751403e-10, -5.26108457e-05, -1.39741728e-09,\n       -7.20188822e-12, -1.85701279e+00, -1.74597778e+00, -1.69504797e+00,\n       -1.80079858e+00, -1.63953024e+00, -1.56450545e+00, -1.79128621e+00,\n       -1.62075082e+00, -1.54166596e+00, -2.03138301e-01, -7.47714849e-02,\n       -2.94398502e-02, -8.77531697e-05, -4.72567193e-08, -9.68527420e-09,\n       -5.26108457e-05, -1.39741728e-09, -7.20188822e-12, -1.85657044e+00,\n       -1.74458218e+00, -1.69335535e+00, -1.80056362e+00, -1.63876333e+00,\n       -1.56346442e+00, -1.79128164e+00, -1.62082956e+00, -1.54170891e+00,\n       -2.49373516e-01, -6.97844145e-02, -3.17373168e-02, -1.00429692e-04,\n       -3.57428371e-08, -1.24024543e-09, -5.26108457e-05, -1.39741728e-09,\n       -7.20188822e-12, -1.85648145e+00, -1.74431340e+00, -1.69362232e+00,\n       -1.80056362e+00, -1.63876333e+00, -1.56346442e+00, -1.79128545e+00,\n       -1.62076534e+00, -1.54169475e+00, -2.48708840e-01, -6.78105630e-02,\n       -3.49877093e-02, -1.37860984e-04, -1.42928738e-08, -2.57876754e-09,\n       -5.26769659e-05, -1.39917658e-09, -7.21095505e-12, -1.85512888e+00,\n       -1.74274928e+00, -1.69195588e+00, -1.80307047e+00, -1.64344474e+00,\n       -1.56728770e+00, -1.79174963e+00, -1.62168471e+00, -1.54284460e+00,\n       -2.25916474e-01, -5.84917846e-02, -3.19329641e-02, -1.35761740e-04,\n       -3.61132294e-08, -1.07983884e-09, -5.27008121e-05, -1.40021141e-09,\n       -7.21397937e-12, -1.85513559e+00, -1.74336349e+00, -1.69214211e+00,\n       -1.80249821e+00, -1.64220241e+00, -1.56782604e+00, -1.79161218e+00,\n       -1.62140978e+00, -1.54245316e+00, -2.37033695e-01, -6.48457741e-02,\n       -3.56642253e-02, -1.36467397e-04, -1.95783394e-08, -1.29956281e-08,\n       -5.26683730e-05, -1.39894528e-09, -7.20976340e-12, -1.85499703e+00,\n       -1.74293291e+00, -1.69157300e+00, -1.80249821e+00, -1.64220129e+00,\n       -1.56782498e+00, -1.79163708e+00, -1.62141502e+00, -1.54254465e+00,\n       -2.61316790e-01, -7.03647188e-02, -3.97683037e-02, -4.34465290e-04,\n       -9.58888081e-09, -3.70936144e-08, -5.26683730e-05, -1.39894528e-09,\n       -7.20976340e-12, -1.85499363e+00, -1.74290537e+00, -1.69147600e+00,\n       -1.80249821e+00, -1.64220129e+00, -1.56782604e+00, -1.79164209e+00,\n       -1.62138986e+00, -1.54249583e+00, -2.48999230e-01, -5.78947039e-02,\n       -2.76810268e-02, -1.34810959e-04, -1.37028915e-08, -4.76579474e-10,\n       -5.26683730e-05, -1.39894528e-09, -7.20976340e-12, -1.85751098e+00,\n       -1.75067532e+00, -1.70141647e+00, -1.80249697e+00, -1.64220129e+00,\n       -1.56782498e+00, -1.79162211e+00, -1.62142552e+00, -1.54247441e+00,\n       -2.29957356e-01, -6.59508721e-02, -3.52990478e-02, -9.17599377e-05,\n       -1.87284633e-07, -2.26747130e-09, -5.26683730e-05, -1.40251030e-09,\n       -7.21710960e-12, -1.85764656e+00, -1.75079032e+00, -1.70156324e+00,\n       -1.80003705e+00, -1.63566216e+00, -1.56079982e+00, -1.79155528e+00,\n       -1.62132031e+00, -1.54235156e+00, -2.16247514e-01, -5.58623959e-02,\n       -3.00414733e-02, -1.12238521e-04, -1.65439103e-08, -2.12666642e-09,\n       -5.26683730e-05, -1.40102007e-09, -7.20976340e-12, -1.85698397e+00,\n       -1.75007298e+00, -1.70082041e+00, -1.80150195e+00, -1.64072181e+00,\n       -1.56410405e+00, -1.79160105e+00, -1.62140292e+00, -1.54245705e+00,\n       -2.53820518e-01, -5.95847513e-02, -3.29728829e-02, -9.31898629e-05,\n       -2.78548251e-07, -3.34496592e-10, -5.27347309e-05, -1.40345370e-09,\n       -7.21057830e-12, -1.85673801e+00, -1.75002192e+00, -1.70074415e+00,\n       -1.80109906e+00, -1.63967264e+00, -1.56512026e+00, -1.79161441e+00,\n       -1.62139806e+00, -1.54250096e+00, -3.71808863e-01, -1.25312164e-01,\n       -7.30424041e-02, -1.91062115e-04, -2.92976187e-06, -7.58394899e-07,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86081965e+00,\n       -1.75759199e+00, -1.71045424e+00, -1.79898044e+00, -1.63453595e+00,\n       -1.55869988e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.08441022e-01, -1.07425020e-01, -6.67333449e-02, -1.74023505e-04,\n       -2.22199355e-06, -6.92348315e-07, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85762688e+00, -1.74902640e+00, -1.69961987e+00,\n       -1.80080769e+00, -1.63894474e+00, -1.56405077e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.80268961e-01, -1.07647336e-01,\n       -6.11643270e-02, -1.44103644e-04, -1.25606145e-07, -2.50426970e-07,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85678933e+00,\n       -1.74604380e+00, -1.69590739e+00, -1.80239576e+00, -1.64068702e+00,\n       -1.56531622e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.79439445e-01, -8.03667412e-02, -4.53175875e-02, -1.05154207e-04,\n       -1.89587236e-07, -2.39003693e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85688215e+00, -1.74585665e+00, -1.69485011e+00,\n       -1.80305923e+00, -1.64184265e+00, -1.56653345e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.37109424e-01, -7.02189994e-02,\n       -3.81346032e-02, -7.27615695e-05, -5.59093723e-08, -3.47975611e-09,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85590650e+00,\n       -1.74448762e+00, -1.69304747e+00, -1.80306042e+00, -1.64184265e+00,\n       -1.56653346e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.65591534e-01, -9.29328486e-02, -5.15988266e-02, -7.79538482e-05,\n       -4.40692682e-08, -2.50670453e-09, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85880240e+00, -1.74894986e+00, -1.69845130e+00,\n       -1.80150831e+00, -1.63858987e+00, -1.56312182e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.70495964e-01, -8.31911949e-02,\n       -4.62103695e-02, -8.09767627e-05, -3.15790500e-08, -1.06044916e-09,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85880240e+00,\n       -1.74915023e+00, -1.69924714e+00, -1.80150831e+00, -1.63839150e+00,\n       -1.56281378e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.63061057e-01, -9.17270647e-02, -4.71394117e-02, -1.14245381e-04,\n       -9.26278391e-07, -7.55524465e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85844872e+00, -1.74648829e+00, -1.69573600e+00,\n       -1.80228722e+00, -1.64058343e+00, -1.56591168e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.86891194e-01, -8.65211622e-02,\n       -5.64249751e-02, -1.08042779e-04, -1.06636458e-06, -5.79830068e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86201822e+00,\n       -1.75435260e+00, -1.70441070e+00, -1.79697972e+00, -1.63386186e+00,\n       -1.55975808e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.75292134e-01, -7.65993719e-02, -4.12467950e-02, -9.47667541e-05,\n       -7.00106308e-08, -1.02347801e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86024660e+00, -1.75150801e+00, -1.69979919e+00,\n       -1.79750394e+00, -1.63298347e+00, -1.55654664e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.70578383e-01, -8.58326386e-02,\n       -4.82794409e-02, -1.03924074e-04, -2.02541768e-07, -5.39218475e-09,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86020709e+00,\n       -1.75149573e+00, -1.69938093e+00, -1.79816611e+00, -1.63373387e+00,\n       -1.55688009e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.81374654e-01, -7.71641149e-02, -4.30559908e-02, -8.68190752e-05,\n       -2.83207545e-08, -1.81142799e-09, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86020709e+00, -1.75149405e+00, -1.69828200e+00,\n       -1.79803835e+00, -1.63324302e+00, -1.55643670e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.58989156e-01, -8.10977007e-02,\n       -4.57707767e-02, -1.02671504e-04, -1.68618161e-07, -1.26028170e-09,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86127626e+00,\n       -1.74910507e+00, -1.69626891e+00, -1.79907458e+00, -1.63524991e+00,\n       -1.55857055e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.79262511e-01, -7.58154533e-02, -4.63092450e-02, -6.51409011e-05,\n       -2.02504446e-08, -5.97026582e-10, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85952749e+00, -1.74727003e+00, -1.69546887e+00,\n       -1.79701889e+00, -1.63154267e+00, -1.55444854e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.41626506e-01, -7.28737130e-02,\n       -3.92692462e-02, -6.49616965e-05, -8.38336068e-09, -2.01605068e-10,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85952749e+00,\n       -1.74727003e+00, -1.69548592e+00, -1.79729509e+00, -1.63200198e+00,\n       -1.55499995e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.45062959e-01, -6.52477404e-02, -3.27593304e-02, -1.13375422e-04,\n       -5.29684990e-09, -8.93143905e-09, -5.26226213e-05, -1.39819944e-09,\n       -7.20312646e-12, -1.85918798e+00, -1.74679507e+00, -1.69499119e+00,\n       -1.79748623e+00, -1.63279382e+00, -1.55617955e+00, -1.79127738e+00,\n       -1.62073371e+00, -1.54165167e+00, -2.59857631e-01, -8.89515209e-02,\n       -3.99398805e-02, -8.31856407e-05, -8.67363503e-08, -1.74149857e-09,\n       -5.26382299e-05, -1.39814467e-09, -7.20565657e-12, -1.85672453e+00,\n       -1.74549994e+00, -1.69350433e+00, -1.79851655e+00, -1.63461538e+00,\n       -1.55686513e+00, -1.79150009e+00, -1.62110643e+00, -1.54216370e+00,\n       -2.85783888e-01, -7.81475567e-02, -4.57559162e-02, -7.75781177e-05,\n       -4.85310526e-09, -3.08909877e-09, -5.26382299e-05, -1.39814467e-09,\n       -7.20565657e-12, -1.85672453e+00, -1.74549994e+00, -1.69350540e+00,\n       -1.79848518e+00, -1.63472014e+00, -1.55766156e+00, -1.79151376e+00,\n       -1.62112432e+00, -1.54216370e+00, -2.75789386e-01, -7.13373193e-02,\n       -3.83226265e-02, -7.67188958e-05, -1.00023454e-07, -1.17056608e-09,\n       -5.26388756e-05, -1.39816182e-09, -7.20574561e-12, -1.85672453e+00,\n       -1.74549994e+00, -1.69350540e+00, -1.79830059e+00, -1.63466830e+00,\n       -1.55693956e+00, -1.79151834e+00, -1.62124887e+00, -1.54218658e+00,\n       -2.58505209e-01, -7.78710758e-02, -3.39570828e-02, -8.91031914e-05,\n       -2.30469018e-08, -1.46802189e-09, -5.26388756e-05, -1.39816182e-09,\n       -7.20574561e-12, -1.85672453e+00, -1.74549994e+00, -1.69350540e+00,\n       -1.79833456e+00, -1.63382420e+00, -1.55723183e+00, -1.79151376e+00,\n       -1.62111984e+00, -1.54219118e+00, -2.20927656e-01, -7.43787649e-02,\n       -3.58573344e-02, -7.36500059e-05, -2.43384439e-08, -3.04207063e-10,\n       -5.26388756e-05, -1.39816182e-09, -7.20918526e-12, -1.85584711e+00,\n       -1.74549994e+00, -1.69169247e+00, -1.79836886e+00, -1.63430988e+00,\n       -1.55760092e+00, -1.79152752e+00, -1.62114688e+00, -1.54164953e+00,\n       -2.56489246e-01, -8.27929546e-02, -3.57200777e-02, -7.97479731e-05,\n       -1.37464676e-08, -6.71732569e-11, -5.26388756e-05, -1.39673935e-09,\n       -7.20574561e-12, -1.85672453e+00, -1.74534851e+00, -1.68882705e+00,\n       -1.79480646e+00, -1.63255293e+00, -1.55151641e+00, -1.79127564e+00,\n       -1.62114688e+00, -1.54178048e+00, -2.59649759e-01, -7.85124106e-02,\n       -3.26868435e-02, -8.21457311e-05, -3.17591216e-08, -9.93103258e-09,\n       -5.25853224e-05, -1.39924553e-09, -7.19839899e-12, -1.85668311e+00,\n       -1.74552147e+00, -1.69263910e+00, -1.79802135e+00, -1.63250047e+00,\n       -1.56138063e+00, -1.79148370e+00, -1.62114235e+00, -1.54164953e+00]), 'split3_train_score': array([-3.98071146e-01, -1.40228016e-01, -8.58220414e-02, -2.21829097e-03,\n       -2.22338473e-05, -5.54517640e-06, -5.25752715e-05, -1.39660960e-09,\n       -7.19732889e-12, -1.87721652e+00, -1.78924445e+00, -1.74787938e+00,\n       -1.79696305e+00, -1.63442412e+00, -1.55871356e+00, -1.78772137e+00,\n       -1.61758319e+00, -1.53871579e+00, -3.34424032e-01, -1.12114499e-01,\n       -6.59848334e-02, -1.23449028e-04, -7.45799752e-07, -5.78135596e-08,\n       -5.25007145e-05, -1.39449232e-09, -7.19155384e-12, -1.86005751e+00,\n       -1.75643436e+00, -1.70796463e+00, -1.79370869e+00, -1.62936105e+00,\n       -1.55117788e+00, -1.78776375e+00, -1.61766430e+00, -1.53878716e+00,\n       -3.19910492e-01, -1.01223266e-01, -5.98853325e-02, -5.57082673e-05,\n       -1.92142780e-09, -4.39191196e-11, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.85651575e+00, -1.74975997e+00, -1.69954041e+00,\n       -1.78849797e+00, -1.62053165e+00, -1.54272428e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.60891366e-01, -8.90524013e-02,\n       -5.22082872e-02, -5.44590991e-05, -1.48130663e-09, -1.69267807e-10,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.85073593e+00,\n       -1.73886168e+00, -1.68772985e+00, -1.78853863e+00, -1.61876710e+00,\n       -1.54004736e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.85484115e-01, -9.33111082e-02, -4.81597887e-02, -6.10658874e-05,\n       -2.56776732e-09, -1.70287000e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.85085184e+00, -1.73947905e+00, -1.68850864e+00,\n       -1.78913154e+00, -1.62035077e+00, -1.54212321e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.86542033e-01, -7.35929977e-02,\n       -4.49498014e-02, -5.41571414e-05, -1.49860580e-09, -8.48117978e-12,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84970924e+00,\n       -1.73736376e+00, -1.68579611e+00, -1.78888067e+00, -1.61997815e+00,\n       -1.54168851e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.52293352e-01, -8.70288847e-02, -4.96285334e-02, -5.64104669e-05,\n       -2.71188337e-09, -7.51179222e-12, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84883944e+00, -1.73931604e+00, -1.68716810e+00,\n       -1.78772153e+00, -1.61751645e+00, -1.53859077e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.89693345e-01, -7.87734912e-02,\n       -4.48726028e-02, -5.47561648e-05, -1.72714118e-09, -8.80056021e-12,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84883220e+00,\n       -1.73892629e+00, -1.68743469e+00, -1.78772153e+00, -1.61751645e+00,\n       -1.53859077e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.75214280e-01, -1.02399920e-01, -5.73607027e-02, -5.57033177e-05,\n       -1.92681553e-09, -4.99385771e-11, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.85015364e+00, -1.74088651e+00, -1.68779471e+00,\n       -1.78804983e+00, -1.61817193e+00, -1.53941037e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.59016523e-01, -9.89027350e-02,\n       -4.34898592e-02, -6.39345144e-05, -1.97935001e-09, -9.29726813e-12,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.85119173e+00,\n       -1.74004673e+00, -1.68682415e+00, -1.78874476e+00, -1.61938736e+00,\n       -1.54088509e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.69646212e-01, -6.77354940e-02, -4.24932003e-02, -6.76475296e-05,\n       -1.68329589e-09, -4.24217053e-11, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.85092180e+00, -1.73937179e+00, -1.68538884e+00,\n       -1.78868259e+00, -1.61933156e+00, -1.54083104e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.63243506e-01, -6.80692369e-02,\n       -3.65434309e-02, -6.73746548e-05, -5.49740598e-09, -2.56288770e-11,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84769391e+00,\n       -1.73322147e+00, -1.67783942e+00, -1.78867702e+00, -1.61931598e+00,\n       -1.54081526e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.37347351e-01, -7.34533168e-02, -3.65462839e-02, -6.90893049e-05,\n       -5.25262108e-09, -7.71311570e-12, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84769727e+00, -1.73328699e+00, -1.67919417e+00,\n       -1.78867534e+00, -1.61932642e+00, -1.54082617e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.31780948e-01, -8.13681466e-02,\n       -3.93039113e-02, -6.00927070e-05, -9.00023726e-09, -1.38108388e-11,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84769727e+00,\n       -1.73328699e+00, -1.67919417e+00, -1.78861079e+00, -1.61926377e+00,\n       -1.54075547e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.30258507e-01, -6.24794997e-02, -3.39173432e-02, -5.56889893e-05,\n       -6.87634277e-09, -1.02107153e-11, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84769557e+00, -1.73307154e+00, -1.67880572e+00,\n       -1.78863562e+00, -1.61928764e+00, -1.54079746e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.35066272e-01, -7.21082567e-02,\n       -3.32096064e-02, -6.29767687e-05, -1.70491034e-09, -1.22138683e-11,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84769500e+00,\n       -1.73194893e+00, -1.67692100e+00, -1.78875290e+00, -1.61951394e+00,\n       -1.54102899e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.38100336e-01, -8.26450091e-02, -3.72623929e-02, -6.13998501e-05,\n       -1.56933168e-09, -8.82598135e-12, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84756256e+00, -1.73198484e+00, -1.67700191e+00,\n       -1.78863210e+00, -1.61927671e+00, -1.54080523e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.18127214e-01, -6.26920798e-02,\n       -3.44243564e-02, -5.69739924e-05, -3.41747418e-09, -7.51174037e-12,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84756256e+00,\n       -1.73187699e+00, -1.67696307e+00, -1.78861359e+00, -1.61926696e+00,\n       -1.54076079e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.02544018e-01, -6.07624811e-02, -3.52163316e-02, -5.47041860e-05,\n       -2.36140441e-09, -1.12283775e-11, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84690402e+00, -1.73110862e+00, -1.67554687e+00,\n       -1.78859556e+00, -1.61925301e+00, -1.54076238e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.27181440e-01, -7.21079746e-02,\n       -3.69659402e-02, -5.80287207e-05, -3.16505729e-09, -1.26803273e-11,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84667092e+00,\n       -1.73099646e+00, -1.67594615e+00, -1.78860272e+00, -1.61926039e+00,\n       -1.54076383e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.18104235e-01, -6.32061513e-02, -3.45246537e-02, -6.05824101e-05,\n       -1.72285337e-09, -8.87914997e-12, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84667092e+00, -1.73099646e+00, -1.67594615e+00,\n       -1.78860105e+00, -1.61925827e+00, -1.54076283e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.25153357e-01, -7.29624335e-02,\n       -3.37557652e-02, -7.99435929e-05, -4.57321475e-08, -2.30929689e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.85323270e+00,\n       -1.74535963e+00, -1.69357946e+00, -1.79044645e+00, -1.62205940e+00,\n       -1.54343720e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.31062759e-01, -7.62300777e-02, -3.87202907e-02, -7.17245502e-05,\n       -5.08989348e-08, -1.10897305e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.85407047e+00, -1.74669985e+00, -1.69542898e+00,\n       -1.79069388e+00, -1.62246855e+00, -1.54382187e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -3.49743507e-01, -1.20497828e-01,\n       -7.36220406e-02, -1.58297104e-04, -1.12457792e-06, -5.23866006e-07,\n       -5.28683763e-05, -1.40425796e-09, -7.24735858e-12, -1.85387742e+00,\n       -1.74446273e+00, -1.69473105e+00, -1.80162609e+00, -1.64169701e+00,\n       -1.56713943e+00, -1.79075017e+00, -1.62121260e+00, -1.54250515e+00,\n       -3.03314056e-01, -1.08833106e-01, -5.77233103e-02, -8.73839977e-05,\n       -5.80562007e-08, -4.71132416e-08, -5.24791637e-05, -1.39398811e-09,\n       -7.18421866e-12, -1.84954027e+00, -1.73728388e+00, -1.68503940e+00,\n       -1.79791927e+00, -1.63566146e+00, -1.55962726e+00, -1.78766018e+00,\n       -1.61746089e+00, -1.53853790e+00, -2.70242754e-01, -8.78415784e-02,\n       -5.57318035e-02, -8.39677075e-05, -6.18036494e-09, -1.56359498e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84645052e+00,\n       -1.73281623e+00, -1.68062642e+00, -1.79485387e+00, -1.63157904e+00,\n       -1.55539721e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.94874726e-01, -8.82105771e-02, -4.75855612e-02, -7.78612618e-05,\n       -4.40424717e-08, -2.08460771e-08, -5.25058698e-05, -1.39462925e-09,\n       -7.18752357e-12, -1.84487708e+00, -1.72909881e+00, -1.67531174e+00,\n       -1.79552265e+00, -1.63211461e+00, -1.55660004e+00, -1.78805210e+00,\n       -1.61809708e+00, -1.53914333e+00, -2.45534504e-01, -7.64293150e-02,\n       -3.98601245e-02, -7.91712307e-05, -1.75823327e-08, -1.88996605e-10,\n       -5.24897027e-05, -1.39419271e-09, -7.18527141e-12, -1.84362202e+00,\n       -1.72663502e+00, -1.67257936e+00, -1.79285152e+00, -1.62647957e+00,\n       -1.54911952e+00, -1.78766541e+00, -1.61746563e+00, -1.53854241e+00,\n       -2.30138546e-01, -7.13504930e-02, -4.61915520e-02, -1.16946936e-04,\n       -2.48256990e-08, -9.45618541e-09, -5.24967607e-05, -1.39438730e-09,\n       -7.18627326e-12, -1.84409832e+00, -1.72914856e+00, -1.67254933e+00,\n       -1.79311164e+00, -1.62689645e+00, -1.54960681e+00, -1.78776958e+00,\n       -1.61768160e+00, -1.53881360e+00, -2.40422683e-01, -6.37024234e-02,\n       -3.52632986e-02, -8.16865883e-05, -5.66130154e-09, -2.66201025e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84520503e+00,\n       -1.72855467e+00, -1.67485367e+00, -1.79288446e+00, -1.62655372e+00,\n       -1.54919824e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.10149667e-01, -5.45594487e-02, -3.31158568e-02, -1.25028087e-04,\n       -5.25472627e-08, -4.85961024e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84446880e+00, -1.72739526e+00, -1.67358532e+00,\n       -1.79288881e+00, -1.62654970e+00, -1.54906134e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.26914398e-01, -6.48812451e-02,\n       -3.68759435e-02, -7.00255063e-05, -1.65128150e-08, -3.27441409e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84556318e+00,\n       -1.72996799e+00, -1.67686652e+00, -1.79305816e+00, -1.62640350e+00,\n       -1.54879689e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.62980122e-01, -7.47000074e-02, -4.44629211e-02, -6.74477301e-05,\n       -7.71955877e-08, -5.85511348e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84540024e+00, -1.72901580e+00, -1.67577559e+00,\n       -1.79037964e+00, -1.62269086e+00, -1.54496189e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.19843988e-01, -6.21582655e-02,\n       -3.50618036e-02, -8.93712830e-05, -8.08652297e-09, -4.63532573e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84476503e+00,\n       -1.72864329e+00, -1.67514079e+00, -1.79037528e+00, -1.62262157e+00,\n       -1.54463006e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.59879383e-01, -6.32971550e-02, -3.47780319e-02, -8.82662876e-05,\n       -6.10048070e-09, -1.44894979e-09, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84477751e+00, -1.72872423e+00, -1.67519488e+00,\n       -1.79024236e+00, -1.62234690e+00, -1.54429333e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.83909337e-01, -6.99504109e-02,\n       -3.76781415e-02, -7.40159594e-05, -3.63104968e-09, -4.36308008e-10,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84707717e+00,\n       -1.73204670e+00, -1.67894759e+00, -1.79081432e+00, -1.62331436e+00,\n       -1.54549440e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.24676884e-01, -5.95003297e-02, -2.85062793e-02, -1.00147558e-04,\n       -6.50689839e-09, -1.61991115e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84715294e+00, -1.73224738e+00, -1.67930812e+00,\n       -1.79048380e+00, -1.62281452e+00, -1.54490552e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.39303441e-01, -6.16557553e-02,\n       -3.18821303e-02, -9.37397369e-05, -9.18497589e-09, -1.45204297e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84675539e+00,\n       -1.73217833e+00, -1.67936914e+00, -1.79033987e+00, -1.62272051e+00,\n       -1.54486288e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.43814569e-01, -6.32622365e-02, -3.40603843e-02, -6.79016177e-05,\n       -4.85183463e-09, -6.41576465e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84675539e+00, -1.73210072e+00, -1.67925967e+00,\n       -1.79023206e+00, -1.62262312e+00, -1.54477032e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.50358490e-01, -6.29108084e-02,\n       -2.98097694e-02, -1.07589950e-04, -2.27667362e-07, -1.72970869e-08,\n       -5.25164642e-05, -1.39491066e-09, -7.18896899e-12, -1.84472032e+00,\n       -1.72855443e+00, -1.67540162e+00, -1.79512904e+00, -1.62795904e+00,\n       -1.54936601e+00, -1.78774201e+00, -1.61761831e+00, -1.53872857e+00,\n       -2.65287670e-01, -7.94653849e-02, -4.38818485e-02, -8.23223834e-05,\n       -8.59608915e-08, -9.12587286e-09, -5.25164642e-05, -1.39491066e-09,\n       -7.18896899e-12, -1.84471729e+00, -1.72852025e+00, -1.67531180e+00,\n       -1.79510708e+00, -1.62816096e+00, -1.54970322e+00, -1.78774201e+00,\n       -1.61761831e+00, -1.53872857e+00, -2.41233776e-01, -6.78463494e-02,\n       -3.82490213e-02, -7.94132610e-05, -1.03089375e-07, -1.48906401e-09,\n       -5.25164642e-05, -1.39491066e-09, -7.18896899e-12, -1.84364245e+00,\n       -1.72720917e+00, -1.67400057e+00, -1.79510708e+00, -1.62786606e+00,\n       -1.54933639e+00, -1.78774201e+00, -1.61761831e+00, -1.53872857e+00,\n       -2.18164919e-01, -7.04681414e-02, -3.93435909e-02, -7.22932324e-05,\n       -3.24054924e-09, -7.54513509e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84244266e+00, -1.72430924e+00, -1.67034019e+00,\n       -1.79148565e+00, -1.62565068e+00, -1.54844443e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.26716050e-01, -7.05134349e-02,\n       -3.14014608e-02, -7.15754926e-05, -3.60423638e-09, -1.32850815e-11,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84244266e+00,\n       -1.72430924e+00, -1.67026654e+00, -1.79148479e+00, -1.62565068e+00,\n       -1.54824866e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.51959984e-01, -6.62200401e-02, -4.04722925e-02, -8.00899558e-05,\n       -4.23281027e-09, -1.49621066e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84244266e+00, -1.72454141e+00, -1.67034019e+00,\n       -1.79099974e+00, -1.62611773e+00, -1.54829757e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.38742476e-01, -7.08772429e-02,\n       -2.88763014e-02, -6.91024860e-05, -4.37247876e-09, -1.61863441e-10,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84241163e+00,\n       -1.72430924e+00, -1.67195114e+00, -1.79150091e+00, -1.62564982e+00,\n       -1.55253016e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00]), 'split4_train_score': array([-4.35476867e-01, -1.51004010e-01, -8.92568427e-02, -2.61736039e-04,\n       -1.49079345e-05, -2.06977448e-06, -5.27168820e-05, -1.40023396e-09,\n       -7.21658248e-12, -1.88325733e+00, -1.79266273e+00, -1.75121802e+00,\n       -1.80450315e+00, -1.64029801e+00, -1.56398936e+00, -1.79251860e+00,\n       -1.62205073e+00, -1.54300662e+00, -3.58738061e-01, -1.19454502e-01,\n       -7.83916279e-02, -3.26228679e-04, -7.93352582e-06, -1.04371373e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86579099e+00,\n       -1.76461593e+00, -1.71878045e+00, -1.79936058e+00, -1.63480260e+00,\n       -1.55853605e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.40284633e-01, -1.26873915e-01, -7.70502301e-02, -2.92946369e-04,\n       -4.61652451e-07, -6.22682412e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86625771e+00, -1.76449421e+00, -1.71805447e+00,\n       -1.79801625e+00, -1.63181047e+00, -1.55429759e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.87508497e-01, -1.08131505e-01,\n       -6.94562050e-02, -2.62417072e-04, -1.01479254e-06, -4.61636864e-08,\n       -5.26261159e-05, -1.39788257e-09, -7.20415479e-12, -1.86184810e+00,\n       -1.75667530e+00, -1.70843419e+00, -1.80127064e+00, -1.63843639e+00,\n       -1.56246878e+00, -1.79247278e+00, -1.62197079e+00, -1.54290815e+00,\n       -3.27892342e-01, -1.11444817e-01, -7.33922376e-02, -1.59128756e-04,\n       -3.63387981e-07, -2.50063950e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86217730e+00, -1.75629353e+00, -1.70776108e+00,\n       -1.79814091e+00, -1.62923819e+00, -1.55072128e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.94108887e-01, -9.42990597e-02,\n       -5.49289794e-02, -4.05759264e-04, -5.45439443e-06, -1.21741039e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86098204e+00,\n       -1.75393283e+00, -1.70499363e+00, -1.79756413e+00, -1.62830448e+00,\n       -1.54981622e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.44555478e-01, -1.04876454e-01, -6.15040591e-02, -3.98905907e-04,\n       -4.78240720e-06, -2.64649269e-07, -5.29139932e-05, -1.40546950e-09,\n       -7.22878777e-12, -1.86115903e+00, -1.75397275e+00, -1.70509412e+00,\n       -1.79749598e+00, -1.63056675e+00, -1.55324328e+00, -1.79233391e+00,\n       -1.62168965e+00, -1.54256032e+00, -2.73317541e-01, -8.91148827e-02,\n       -4.70439647e-02, -2.70405800e-04, -2.38577272e-06, -4.44407647e-07,\n       -5.29139932e-05, -1.40260252e-09, -7.24356056e-12, -1.86129827e+00,\n       -1.75409485e+00, -1.70528462e+00, -1.79735676e+00, -1.63049541e+00,\n       -1.55323877e+00, -1.79233391e+00, -1.62168965e+00, -1.54256032e+00,\n       -2.63090400e-01, -8.22733465e-02, -4.05727671e-02, -2.24607810e-04,\n       -8.75734990e-07, -8.38117411e-08, -5.26616145e-05, -1.39876597e-09,\n       -7.20898130e-12, -1.86167768e+00, -1.75500462e+00, -1.70567719e+00,\n       -1.79610734e+00, -1.62875774e+00, -1.55120604e+00, -1.79237753e+00,\n       -1.62176021e+00, -1.54265575e+00, -2.82407450e-01, -9.86312126e-02,\n       -6.15673232e-02, -1.74372910e-04, -1.85089899e-07, -1.28233245e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86167768e+00,\n       -1.75500462e+00, -1.70567719e+00, -1.79605608e+00, -1.62854140e+00,\n       -1.55096008e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.66703896e-01, -8.03570562e-02, -4.79399655e-02, -1.76641822e-04,\n       -1.09883012e-07, -2.22380102e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86167610e+00, -1.75486337e+00, -1.70543289e+00,\n       -1.79592974e+00, -1.62825591e+00, -1.55058297e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.77339971e-01, -9.88060530e-02,\n       -5.38045636e-02, -1.16273967e-04, -8.64677848e-07, -5.81954107e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86229298e+00,\n       -1.75689431e+00, -1.70837638e+00, -1.79585741e+00, -1.62819057e+00,\n       -1.55052087e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.40008259e-01, -8.23097028e-02, -4.86406545e-02, -1.00502205e-04,\n       -2.22184753e-07, -1.26558864e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86229298e+00, -1.75689431e+00, -1.70841748e+00,\n       -1.79586688e+00, -1.62822755e+00, -1.55057792e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.58680058e-01, -9.84752662e-02,\n       -5.68225558e-02, -1.39635554e-04, -5.83850297e-08, -2.04827295e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86203051e+00,\n       -1.75622683e+00, -1.70759783e+00, -1.79586689e+00, -1.62822760e+00,\n       -1.55058002e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.46634339e-01, -6.72760526e-02, -3.79492004e-02, -1.47222370e-04,\n       -6.38277734e-08, -3.22625625e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86130684e+00, -1.75488594e+00, -1.70469293e+00,\n       -1.79555767e+00, -1.62794835e+00, -1.55031468e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.60240014e-01, -8.22372985e-02,\n       -5.52410373e-02, -1.65123270e-04, -4.02093772e-07, -2.98467450e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86063768e+00,\n       -1.75400291e+00, -1.70396710e+00, -1.79555767e+00, -1.62794835e+00,\n       -1.55031468e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.22508815e-01, -6.12283506e-02, -3.36566519e-02, -1.17500724e-04,\n       -1.66476339e-07, -3.70933226e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85636977e+00, -1.74979648e+00, -1.70032657e+00,\n       -1.79576840e+00, -1.62842369e+00, -1.55091415e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.37667132e-01, -6.78836571e-02,\n       -3.76288440e-02, -1.52713970e-04, -2.51503901e-07, -9.61396720e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85636977e+00,\n       -1.74979648e+00, -1.70032657e+00, -1.79576840e+00, -1.62842369e+00,\n       -1.55091415e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.33242781e-01, -6.47288854e-02, -3.55697502e-02, -9.67916613e-05,\n       -1.54711908e-07, -2.97039193e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85599401e+00, -1.74912435e+00, -1.69937836e+00,\n       -1.79585048e+00, -1.62851288e+00, -1.55099888e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.44327458e-01, -5.92622289e-02,\n       -3.47135667e-02, -1.06585394e-04, -2.49382032e-07, -1.65590535e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85599401e+00,\n       -1.74912435e+00, -1.69937836e+00, -1.79581817e+00, -1.62842598e+00,\n       -1.55088866e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.41372744e-01, -7.87960472e-02, -4.11223853e-02, -1.37311267e-04,\n       -6.53369358e-09, -8.52659234e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85599401e+00, -1.74912435e+00, -1.69952991e+00,\n       -1.79581804e+00, -1.62842598e+00, -1.55088858e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.23172328e-01, -5.62565266e-02,\n       -3.17601911e-02, -1.62600722e-04, -5.74352368e-07, -1.58859368e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85815210e+00,\n       -1.75198360e+00, -1.70231362e+00, -1.79570852e+00, -1.62841155e+00,\n       -1.55184424e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.43471467e-01, -7.19359978e-02, -3.62117948e-02, -8.09086367e-05,\n       -3.45115838e-08, -7.66488229e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85801666e+00, -1.75042959e+00, -1.70148257e+00,\n       -1.79618115e+00, -1.62980250e+00, -1.55316504e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.91813214e-01, -1.37507693e-01,\n       -8.38947664e-02, -1.27160794e-04, -5.30683416e-06, -6.64815500e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86697034e+00,\n       -1.76537154e+00, -1.71872177e+00, -1.79796295e+00, -1.63255524e+00,\n       -1.55595098e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.55621898e-01, -1.37176181e-01, -6.85931824e-02, -1.00791867e-04,\n       -3.06492666e-07, -7.09263617e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86369077e+00, -1.76005378e+00, -1.71250854e+00,\n       -1.79865653e+00, -1.63375778e+00, -1.55676387e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.73064615e-01, -1.14652787e-01,\n       -7.22719838e-02, -6.52384888e-05, -2.94192897e-07, -7.83495960e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85963599e+00,\n       -1.75265142e+00, -1.70363976e+00, -1.79764954e+00, -1.63218717e+00,\n       -1.55553465e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.85284696e-01, -1.00398307e-01, -5.23631609e-02, -6.06917266e-05,\n       -8.79371604e-08, -1.27077264e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85916730e+00, -1.75258832e+00, -1.70348723e+00,\n       -1.79485610e+00, -1.62663886e+00, -1.54862062e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.75138736e-01, -9.01673427e-02,\n       -5.06601300e-02, -1.04568187e-04, -6.15646052e-07, -7.88599660e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85928588e+00,\n       -1.75271253e+00, -1.70330586e+00, -1.79451741e+00, -1.62606101e+00,\n       -1.54778506e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.97332783e-01, -8.97385016e-02, -5.16041290e-02, -6.42151573e-05,\n       -1.05336830e-08, -6.27314452e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85881696e+00, -1.75133142e+00, -1.70227133e+00,\n       -1.79304696e+00, -1.62310874e+00, -1.54432603e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.86018313e-01, -7.83207206e-02,\n       -4.42666784e-02, -6.68875852e-05, -1.54447273e-08, -2.47589784e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85791841e+00,\n       -1.74834744e+00, -1.69748192e+00, -1.79314855e+00, -1.62329697e+00,\n       -1.54455250e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.66969160e-01, -8.36510420e-02, -4.68636911e-02, -1.05190095e-04,\n       -1.04984548e-08, -3.00867587e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85674601e+00, -1.74637183e+00, -1.69507387e+00,\n       -1.79463851e+00, -1.62628119e+00, -1.54817534e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.08628241e-01, -8.95350472e-02,\n       -5.00268862e-02, -1.00190781e-04, -3.36405076e-08, -6.47381316e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85725643e+00,\n       -1.74906089e+00, -1.70041114e+00, -1.79587509e+00, -1.62808352e+00,\n       -1.55037567e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.02119951e-01, -8.84846871e-02, -5.23755846e-02, -1.82984634e-04,\n       -1.93964674e-07, -1.54717440e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85779793e+00, -1.74956903e+00, -1.70033878e+00,\n       -1.79595284e+00, -1.62817595e+00, -1.55072515e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.95755495e-01, -8.12211977e-02,\n       -5.82753204e-02, -1.09611341e-04, -2.56458762e-07, -8.62114402e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85832495e+00,\n       -1.75038664e+00, -1.70101216e+00, -1.79546118e+00, -1.62761195e+00,\n       -1.55031909e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.80723789e-01, -9.71636525e-02, -5.98319491e-02, -7.41884949e-05,\n       -3.24909579e-08, -8.31049341e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85833679e+00, -1.74982064e+00, -1.69961814e+00,\n       -1.79434549e+00, -1.62560154e+00, -1.54731719e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.52398584e-01, -9.05782547e-02,\n       -5.07504520e-02, -9.13192882e-05, -3.74449374e-08, -1.81352579e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85829481e+00,\n       -1.74956667e+00, -1.69908145e+00, -1.79436257e+00, -1.62559151e+00,\n       -1.54736056e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.79575173e-01, -8.70115178e-02, -4.64652563e-02, -7.22480496e-05,\n       -4.90017296e-08, -1.94768721e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85547616e+00, -1.74449779e+00, -1.69337449e+00,\n       -1.79431694e+00, -1.62559733e+00, -1.54738370e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.11219088e-01, -8.37805892e-02,\n       -5.24026581e-02, -7.05305637e-05, -4.51212942e-08, -8.04359201e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85375969e+00,\n       -1.74436356e+00, -1.69356390e+00, -1.79469180e+00, -1.62629678e+00,\n       -1.54822289e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.10115868e-01, -9.10734358e-02, -5.32270341e-02, -7.66312677e-05,\n       -4.30669889e-08, -6.76271669e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85420696e+00, -1.74409225e+00, -1.69293525e+00,\n       -1.79469180e+00, -1.62629498e+00, -1.54822289e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.80660792e-01, -8.84119055e-02,\n       -4.43647326e-02, -6.69892576e-05, -2.71749102e-09, -1.08757271e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85281608e+00,\n       -1.73902674e+00, -1.68657342e+00, -1.79413383e+00, -1.62528582e+00,\n       -1.54706547e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.99012175e-01, -8.37487119e-02, -4.79879725e-02, -6.69113649e-05,\n       -3.88814477e-09, -6.21944782e-11, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85281608e+00, -1.73902619e+00, -1.68661866e+00,\n       -1.79413383e+00, -1.62528582e+00, -1.54706547e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.03711715e-01, -9.65497062e-02,\n       -4.35940773e-02, -5.59471509e-05, -2.17791516e-09, -1.04334682e-11,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85281608e+00,\n       -1.73902461e+00, -1.68656219e+00, -1.79430427e+00, -1.62581995e+00,\n       -1.54763728e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.88084835e-01, -8.53360287e-02, -4.50535475e-02, -5.41419425e-05,\n       -1.86960036e-09, -1.23375420e-11, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85277804e+00, -1.73970920e+00, -1.68785156e+00,\n       -1.79430427e+00, -1.62582421e+00, -1.54764259e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.76554598e-01, -7.69985353e-02,\n       -4.14751382e-02, -5.44007574e-05, -1.71900733e-09, -1.69529676e-11,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85277804e+00,\n       -1.73972336e+00, -1.68690784e+00, -1.79430427e+00, -1.62516876e+00,\n       -1.54763728e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.58023586e-01, -8.10021422e-02, -4.50313056e-02, -5.70426117e-05,\n       -1.18742968e-08, -4.92255967e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85262797e+00, -1.74100368e+00, -1.68775235e+00,\n       -1.79419665e+00, -1.62533131e+00, -1.55672007e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.45846523e-01, -7.13969918e-02,\n       -5.77018465e-02, -1.04366124e-04, -2.50665975e-09, -9.04189179e-12,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.84994711e+00,\n       -1.73857558e+00, -1.68818728e+00, -1.79331193e+00, -1.62723292e+00,\n       -1.54916412e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00]), 'split5_train_score': array([-4.36186828e-01, -1.52539593e-01, -9.21417207e-02, -8.32943969e-04,\n       -3.38161682e-05, -9.40767689e-06, -5.26217605e-05, -1.39763159e-09,\n       -7.20317503e-12, -1.88505693e+00, -1.79638205e+00, -1.75565707e+00,\n       -1.80318380e+00, -1.64311719e+00, -1.56923143e+00, -1.79241272e+00,\n       -1.62179990e+00, -1.54266519e+00, -3.49120138e-01, -1.22127241e-01,\n       -7.36539889e-02, -5.79746673e-05, -9.79017177e-09, -4.34076148e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86328904e+00,\n       -1.76009524e+00, -1.71186202e+00, -1.79334728e+00, -1.62359215e+00,\n       -1.54488637e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.00617203e-01, -9.21356350e-02, -5.00140968e-02, -8.47581001e-05,\n       -1.83541008e-08, -8.93979114e-09, -5.26255908e-05, -1.39780913e-09,\n       -7.20407172e-12, -1.86222368e+00, -1.75562957e+00, -1.70736661e+00,\n       -1.79709592e+00, -1.63079537e+00, -1.55373730e+00, -1.79246399e+00,\n       -1.62187776e+00, -1.54273936e+00, -2.85764857e-01, -9.15018253e-02,\n       -5.38565583e-02, -1.04084667e-04, -1.04434957e-06, -8.96178879e-08,\n       -5.26250421e-05, -1.39767695e-09, -7.20340712e-12, -1.86153950e+00,\n       -1.75408640e+00, -1.70481625e+00, -1.79641195e+00, -1.62982674e+00,\n       -1.55263089e+00, -1.79239844e+00, -1.62180322e+00, -1.54270257e+00,\n       -3.06003958e-01, -8.78334520e-02, -5.46450189e-02, -1.21431682e-04,\n       -2.13475427e-07, -1.33050532e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86172277e+00, -1.75650069e+00, -1.70848333e+00,\n       -1.79589487e+00, -1.62875666e+00, -1.55119543e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.32599950e-01, -1.04922684e-01,\n       -5.90191008e-02, -8.57471524e-05, -1.14808930e-07, -2.14151760e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86115066e+00,\n       -1.75557824e+00, -1.70759922e+00, -1.79596432e+00, -1.62873188e+00,\n       -1.55120114e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.11922042e-01, -9.05206185e-02, -5.32274320e-02, -1.22098578e-04,\n       -5.36045762e-09, -1.59433082e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86020665e+00, -1.75391905e+00, -1.70552302e+00,\n       -1.79603812e+00, -1.62882512e+00, -1.55133557e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.95109916e-01, -1.04220495e-01,\n       -5.39487713e-02, -5.82611098e-05, -3.23807283e-09, -4.81743075e-11,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86010590e+00,\n       -1.75227319e+00, -1.70296711e+00, -1.79554223e+00, -1.62797915e+00,\n       -1.55031810e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.78812556e-01, -8.80774040e-02, -5.69541554e-02, -2.06920788e-04,\n       -3.09121108e-07, -2.44242644e-07, -5.27696381e-05, -1.40163404e-09,\n       -7.22379815e-12, -1.85709680e+00, -1.74889796e+00, -1.69914967e+00,\n       -1.79613760e+00, -1.62851094e+00, -1.55070987e+00, -1.79247367e+00,\n       -1.62197219e+00, -1.54291522e+00, -2.68261411e-01, -8.42617826e-02,\n       -4.52660105e-02, -1.29674844e-04, -8.19406956e-08, -1.88471290e-09,\n       -5.26719800e-05, -1.39904129e-09, -7.21043189e-12, -1.85696112e+00,\n       -1.74881636e+00, -1.69919690e+00, -1.79603316e+00, -1.62804320e+00,\n       -1.55009854e+00, -1.79247367e+00, -1.62197219e+00, -1.54291522e+00,\n       -2.42001342e-01, -7.51791359e-02, -4.29182799e-02, -6.97060664e-05,\n       -8.57910455e-09, -2.58159120e-09, -5.26703648e-05, -1.39899839e-09,\n       -7.21021108e-12, -1.85629341e+00, -1.74786180e+00, -1.69799826e+00,\n       -1.79565885e+00, -1.62750769e+00, -1.54918224e+00, -1.79247367e+00,\n       -1.62197219e+00, -1.54291522e+00, -2.90823170e-01, -9.67183640e-02,\n       -5.02054044e-02, -8.06741992e-05, -7.85645344e-09, -4.58761185e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85564204e+00,\n       -1.74722473e+00, -1.69783711e+00, -1.79572717e+00, -1.62727828e+00,\n       -1.54904635e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.52655504e-01, -7.98290334e-02, -4.30166731e-02, -9.95424207e-05,\n       -6.48974467e-08, -1.41363255e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85549451e+00, -1.74627386e+00, -1.69624954e+00,\n       -1.79539719e+00, -1.62653577e+00, -1.54812557e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.01345000e-01, -7.76735230e-02,\n       -4.71867796e-02, -7.38193815e-05, -1.12760983e-08, -1.21614009e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85518047e+00,\n       -1.74587112e+00, -1.69572889e+00, -1.79539599e+00, -1.62653685e+00,\n       -1.54812659e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.42382879e-01, -7.29397027e-02, -3.87802256e-02, -8.19175796e-05,\n       -1.77708666e-08, -1.96683009e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85545917e+00, -1.74667773e+00, -1.69621144e+00,\n       -1.79539599e+00, -1.62653685e+00, -1.54812659e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.59703670e-01, -7.22658304e-02,\n       -3.99681018e-02, -9.06179176e-05, -4.43124700e-07, -1.11838047e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85351766e+00,\n       -1.74073463e+00, -1.68875555e+00, -1.79594657e+00, -1.62798222e+00,\n       -1.54947173e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.41324519e-01, -6.36286014e-02, -3.69287682e-02, -1.54342154e-04,\n       -1.97649746e-07, -7.37855338e-11, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85351766e+00, -1.74032133e+00, -1.68727711e+00,\n       -1.79594538e+00, -1.62800206e+00, -1.54951709e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.17253747e-01, -6.32687454e-02,\n       -3.39696085e-02, -9.23315816e-05, -8.79256797e-08, -1.65928951e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85320836e+00,\n       -1.73930896e+00, -1.68582171e+00, -1.79595064e+00, -1.62800861e+00,\n       -1.54952609e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.23809779e-01, -5.80307821e-02, -3.02752798e-02, -1.43863768e-04,\n       -2.82573680e-07, -7.99690112e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85317944e+00, -1.73931223e+00, -1.68577906e+00,\n       -1.79613039e+00, -1.62831736e+00, -1.54989977e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.33611808e-01, -6.27673928e-02,\n       -3.92520287e-02, -1.19632038e-04, -6.26717827e-08, -6.23088561e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85328402e+00,\n       -1.73948920e+00, -1.68611593e+00, -1.79552334e+00, -1.62703751e+00,\n       -1.54880998e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.35927127e-01, -5.98550865e-02, -3.27200941e-02, -9.53727222e-05,\n       -5.84508989e-08, -3.99817282e-11, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85328402e+00, -1.73948920e+00, -1.68611593e+00,\n       -1.79552445e+00, -1.62703836e+00, -1.54881083e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.29294841e-01, -6.04258582e-02,\n       -3.55772727e-02, -1.59561811e-04, -3.43335349e-08, -7.49347807e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85330415e+00,\n       -1.73995186e+00, -1.68682122e+00, -1.79552325e+00, -1.62704861e+00,\n       -1.54870306e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.23429986e-01, -5.01656393e-02, -2.30782803e-02, -1.17319424e-04,\n       -4.22290852e-08, -3.58004886e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85401603e+00, -1.74093438e+00, -1.68772280e+00,\n       -1.79552325e+00, -1.62704861e+00, -1.54870273e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.60701126e-01, -1.21455238e-01,\n       -7.78967571e-02, -4.39210526e-04, -3.05113880e-05, -6.53474489e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86847562e+00,\n       -1.76594519e+00, -1.71736221e+00, -1.80087769e+00, -1.63690773e+00,\n       -1.56110708e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.21900676e-01, -1.04271617e-01, -5.86708891e-02, -1.03553116e-04,\n       -5.25930211e-07, -8.63199807e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86255833e+00, -1.75774377e+00, -1.70773708e+00,\n       -1.79846666e+00, -1.63334576e+00, -1.55683087e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.17041383e-01, -1.07738821e-01,\n       -6.78206797e-02, -9.29398203e-05, -1.75517167e-07, -1.28174064e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86429862e+00,\n       -1.75612688e+00, -1.70368432e+00, -1.79744674e+00, -1.63183131e+00,\n       -1.55514756e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.70010540e-01, -8.59289988e-02, -4.84949417e-02, -8.42254739e-05,\n       -7.72324438e-08, -2.97887363e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86282672e+00, -1.75134511e+00, -1.69834498e+00,\n       -1.79600293e+00, -1.62899350e+00, -1.55177888e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.67597258e-01, -8.22557604e-02,\n       -4.44468636e-02, -7.80818678e-05, -1.74587215e-08, -3.77116373e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86241604e+00,\n       -1.75201943e+00, -1.70022300e+00, -1.79695141e+00, -1.63091410e+00,\n       -1.55419006e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.87239592e-01, -7.65002055e-02, -5.62817657e-02, -7.46621236e-05,\n       -1.49587339e-08, -9.42070810e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85552889e+00, -1.74317318e+00, -1.69193455e+00,\n       -1.79501980e+00, -1.62700770e+00, -1.54931999e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.00598062e-01, -7.80252124e-02,\n       -5.24534235e-02, -8.76813864e-05, -8.33516441e-09, -7.54456333e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85539213e+00,\n       -1.74278436e+00, -1.69163758e+00, -1.79501980e+00, -1.62700770e+00,\n       -1.54931999e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.16405514e-01, -6.96093799e-02, -5.64461608e-02, -7.52664313e-05,\n       -7.30735650e-09, -1.25130955e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85441062e+00, -1.74109298e+00, -1.68928258e+00,\n       -1.79554926e+00, -1.62749914e+00, -1.55016613e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.58173058e-01, -7.79642064e-02,\n       -4.50025408e-02, -1.16421469e-04, -1.09109615e-06, -2.54989935e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85692709e+00,\n       -1.74556509e+00, -1.69480541e+00, -1.79678228e+00, -1.62948990e+00,\n       -1.55255100e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.77750696e-01, -8.37827753e-02, -4.03762539e-02, -1.31284247e-04,\n       -1.41351941e-07, -1.73608661e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85544652e+00, -1.74301596e+00, -1.69189395e+00,\n       -1.79686528e+00, -1.62986877e+00, -1.55298165e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.39105473e-01, -7.56650346e-02,\n       -3.30597646e-02, -1.05242805e-04, -8.81916758e-08, -4.95518276e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85541091e+00,\n       -1.74288476e+00, -1.69153860e+00, -1.79880108e+00, -1.63275159e+00,\n       -1.55621474e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.76162742e-01, -7.49173157e-02, -3.95781322e-02, -8.14408805e-05,\n       -4.39672200e-09, -1.66559959e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85527120e+00, -1.74238115e+00, -1.69098072e+00,\n       -1.80100064e+00, -1.63490733e+00, -1.55768279e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.38057743e-01, -6.40475188e-02,\n       -3.34965800e-02, -9.27477568e-05, -2.49213987e-07, -4.48521643e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85581449e+00,\n       -1.74338042e+00, -1.69189650e+00, -1.80063284e+00, -1.63728445e+00,\n       -1.56100364e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.76349069e-01, -7.74884168e-02, -4.04510963e-02, -9.01508715e-05,\n       -5.32760986e-09, -3.73254861e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85576357e+00, -1.74356151e+00, -1.69152619e+00,\n       -1.79845692e+00, -1.63441306e+00, -1.55822337e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.81433426e-01, -8.21332879e-02,\n       -4.65275418e-02, -1.04663202e-04, -5.05902401e-09, -3.04623211e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85698633e+00,\n       -1.74476232e+00, -1.69252921e+00, -1.80016091e+00, -1.63682850e+00,\n       -1.56074068e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.23815120e-01, -6.19628579e-02, -3.36680495e-02, -9.32842685e-05,\n       -8.53277374e-09, -1.30565916e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85698633e+00, -1.74474985e+00, -1.69257843e+00,\n       -1.80018434e+00, -1.63669348e+00, -1.56076620e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.27386017e-01, -6.92518303e-02,\n       -3.01160464e-02, -7.16991149e-05, -3.15180105e-08, -3.53548419e-11,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85482991e+00,\n       -1.74155350e+00, -1.68916221e+00, -1.79886703e+00, -1.63370319e+00,\n       -1.55668538e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.56478854e-01, -6.47901614e-02, -3.35271833e-02, -7.86666608e-05,\n       -2.73984431e-08, -5.23350512e-10, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85482991e+00, -1.74144451e+00, -1.68893312e+00,\n       -1.79905787e+00, -1.63368982e+00, -1.55658497e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.54483595e-01, -6.87350778e-02,\n       -3.84574570e-02, -8.42350199e-05, -3.53613420e-09, -1.71077464e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85447763e+00,\n       -1.73543181e+00, -1.68158957e+00, -1.79819898e+00, -1.63242935e+00,\n       -1.55526597e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.48871333e-01, -8.08853764e-02, -4.45906024e-02, -8.13730214e-05,\n       -5.99479525e-09, -1.37306353e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85447763e+00, -1.73543181e+00, -1.68153033e+00,\n       -1.79755000e+00, -1.63110080e+00, -1.55361588e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.80120775e-01, -7.67178527e-02,\n       -4.20274020e-02, -9.33384861e-05, -2.49908443e-09, -7.14028628e-11,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85269478e+00,\n       -1.73483737e+00, -1.68078955e+00, -1.79546439e+00, -1.62873713e+00,\n       -1.55411433e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.31872036e-01, -7.41019325e-02, -3.71842092e-02, -9.84363012e-05,\n       -5.43069518e-09, -4.08253512e-11, -5.26163458e-05, -1.39756357e-09,\n       -7.22335237e-12, -1.85329359e+00, -1.73652001e+00, -1.68122759e+00,\n       -1.79644856e+00, -1.63006053e+00, -1.55307443e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.51507324e-01, -8.39949377e-02,\n       -3.47090232e-02, -6.88666966e-05, -7.26373323e-09, -1.37798666e-11,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85447763e+00,\n       -1.73390505e+00, -1.68182183e+00, -1.79579466e+00, -1.63020436e+00,\n       -1.55374048e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00]), 'split6_train_score': array([-4.53891777e-01, -1.59725136e-01, -9.87399282e-02, -1.68335330e-03,\n       -2.14803412e-05, -8.89344678e-06, -5.26521970e-05, -1.39851581e-09,\n       -7.20773525e-12, -1.88558740e+00, -1.80228232e+00, -1.76462058e+00,\n       -1.80240859e+00, -1.64325833e+00, -1.56959460e+00, -1.79233317e+00,\n       -1.62168898e+00, -1.54255968e+00, -3.67474721e-01, -1.31532834e-01,\n       -7.99015372e-02, -3.92906420e-04, -5.90465425e-06, -3.89197930e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86763897e+00,\n       -1.76688698e+00, -1.71832525e+00, -1.80014422e+00, -1.63697845e+00,\n       -1.56119166e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.75964517e-01, -1.21811454e-01, -7.68757027e-02, -2.63638048e-04,\n       -1.65002694e-06, -1.00604384e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86633791e+00, -1.76447064e+00, -1.71735826e+00,\n       -1.79790926e+00, -1.63262578e+00, -1.55580384e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.02882823e-01, -8.69879793e-02,\n       -5.30024179e-02, -2.36789830e-04, -6.26325598e-07, -9.67615680e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86572103e+00,\n       -1.76432505e+00, -1.71776839e+00, -1.79779453e+00, -1.63203874e+00,\n       -1.55509125e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.66475585e-01, -9.58093518e-02, -5.37829369e-02, -1.36727257e-04,\n       -1.30229081e-06, -1.64700619e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86462750e+00, -1.76233669e+00, -1.71512267e+00,\n       -1.79810080e+00, -1.63244341e+00, -1.55530257e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.20420773e-01, -1.00420689e-01,\n       -5.77182126e-02, -1.34184803e-04, -7.11378453e-07, -4.37633441e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86397140e+00,\n       -1.76094386e+00, -1.71380289e+00, -1.79705747e+00, -1.63100598e+00,\n       -1.55367866e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.63294289e-01, -8.78167732e-02, -5.32712393e-02, -1.26380435e-04,\n       -5.23815051e-07, -4.26313789e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86394417e+00, -1.76035438e+00, -1.71240137e+00,\n       -1.79695742e+00, -1.63081032e+00, -1.55343262e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.65100164e-01, -8.37544188e-02,\n       -4.82919117e-02, -1.13039516e-04, -5.64976188e-07, -3.53659072e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86166552e+00,\n       -1.75612148e+00, -1.70821585e+00, -1.79749970e+00, -1.63197328e+00,\n       -1.55468146e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.93078316e-01, -8.02135839e-02, -4.45226247e-02, -1.16838855e-04,\n       -4.96678390e-08, -7.32921088e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86176211e+00, -1.75639150e+00, -1.70865167e+00,\n       -1.79736182e+00, -1.63174052e+00, -1.55477062e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.68447812e-01, -8.08573472e-02,\n       -4.58596516e-02, -2.91140304e-04, -8.34190392e-07, -9.45413465e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85959591e+00,\n       -1.75274278e+00, -1.70399114e+00, -1.79806278e+00, -1.63463513e+00,\n       -1.55854412e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.40382792e-01, -7.48373163e-02, -4.28499110e-02, -1.80159360e-04,\n       -2.32965355e-07, -6.76655165e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85920373e+00, -1.75225118e+00, -1.70348968e+00,\n       -1.79802655e+00, -1.63410060e+00, -1.55796035e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.81965215e-01, -9.02346336e-02,\n       -5.30062497e-02, -2.96165645e-04, -9.52165953e-07, -7.02031484e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85806508e+00,\n       -1.75019295e+00, -1.70042320e+00, -1.79802162e+00, -1.63398609e+00,\n       -1.55784392e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.46856649e-01, -7.26257354e-02, -4.16265040e-02, -2.84946333e-04,\n       -1.94811449e-07, -9.33542838e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85780426e+00, -1.74969832e+00, -1.69984536e+00,\n       -1.79801662e+00, -1.63398519e+00, -1.55784478e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.89687603e-01, -6.94956066e-02,\n       -4.28882266e-02, -1.05257311e-04, -9.53112006e-08, -1.58078726e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85553725e+00,\n       -1.74468370e+00, -1.69330027e+00, -1.79853339e+00, -1.63346596e+00,\n       -1.55709872e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.41088383e-01, -8.03149008e-02, -4.85461100e-02, -1.73226133e-04,\n       -1.49803238e-08, -4.94924146e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85532311e+00, -1.74328886e+00, -1.69142816e+00,\n       -1.79926468e+00, -1.63539007e+00, -1.55961097e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.34004135e-01, -7.56431971e-02,\n       -3.47824274e-02, -1.84765200e-04, -7.39225327e-07, -4.74139595e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85618984e+00,\n       -1.74454685e+00, -1.69366955e+00, -1.80026903e+00, -1.63752768e+00,\n       -1.56236151e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.18236526e-01, -6.24446487e-02, -3.86123123e-02, -1.37770182e-04,\n       -3.23628449e-07, -3.40283614e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85325584e+00, -1.73925050e+00, -1.68725493e+00,\n       -1.80027721e+00, -1.63753792e+00, -1.56237010e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.58834053e-01, -6.34686593e-02,\n       -3.98482193e-02, -1.38148756e-04, -3.89163068e-07, -2.20747613e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85322496e+00,\n       -1.73882315e+00, -1.68656139e+00, -1.79968045e+00, -1.63651204e+00,\n       -1.56110937e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.49457494e-01, -7.03703578e-02, -4.60023997e-02, -2.05395827e-04,\n       -2.52990138e-07, -1.70159902e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85376025e+00, -1.73965635e+00, -1.68749869e+00,\n       -1.80062153e+00, -1.63797542e+00, -1.56255792e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.65996183e-01, -6.75312403e-02,\n       -3.78343900e-02, -1.13181255e-04, -2.27210836e-07, -2.68905797e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85364045e+00,\n       -1.73943075e+00, -1.68750338e+00, -1.80061408e+00, -1.63796371e+00,\n       -1.56254962e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.71143099e-01, -7.31402153e-02, -3.73553977e-02, -1.40949884e-04,\n       -6.57965388e-08, -1.40586541e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85461431e+00, -1.74141052e+00, -1.68977136e+00,\n       -1.80005154e+00, -1.63696493e+00, -1.56156722e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.26599168e-01, -6.00251539e-02,\n       -4.21415081e-02, -3.48071780e-04, -1.02850774e-06, -4.21952755e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85565217e+00,\n       -1.74335019e+00, -1.69209470e+00, -1.80002602e+00, -1.63696493e+00,\n       -1.56158549e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.30358701e-01, -6.62782921e-02, -3.16807759e-02, -1.95914626e-04,\n       -3.19501001e-07, -1.00064860e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85600106e+00, -1.74458656e+00, -1.69351108e+00,\n       -1.80005539e+00, -1.63696493e+00, -1.56157224e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.79999651e-01, -1.31428478e-01,\n       -7.79343300e-02, -2.18676712e-04, -5.22005975e-06, -3.69990679e-06,\n       -5.26445120e-05, -1.39831170e-09, -7.20667996e-12, -1.86787461e+00,\n       -1.76773966e+00, -1.72218673e+00, -1.80247129e+00, -1.63848358e+00,\n       -1.56242864e+00, -1.79264102e+00, -1.62196751e+00, -1.54282463e+00,\n       -3.07194018e-01, -1.10439228e-01, -7.00759122e-02, -4.33007347e-04,\n       -5.04394794e-06, -6.47854186e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85817080e+00, -1.75087548e+00, -1.70209014e+00,\n       -1.79701122e+00, -1.63076648e+00, -1.55366992e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.09486437e-01, -9.64629716e-02,\n       -4.91761709e-02, -2.01112760e-04, -8.27978972e-07, -2.32805662e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85587140e+00,\n       -1.74479125e+00, -1.69428919e+00, -1.79479890e+00, -1.62656576e+00,\n       -1.54829903e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.85699401e-01, -1.12876814e-01, -7.08589445e-02, -1.95581375e-04,\n       -2.00299622e-08, -8.82005729e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85371488e+00, -1.74032254e+00, -1.68947990e+00,\n       -1.79510780e+00, -1.62726665e+00, -1.54951931e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.79922224e-01, -8.32929732e-02,\n       -4.88666474e-02, -2.02535249e-04, -1.25643015e-07, -2.38617626e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85455523e+00,\n       -1.74263882e+00, -1.69182589e+00, -1.79503524e+00, -1.62716241e+00,\n       -1.54898214e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.87728742e-01, -8.77501027e-02, -4.86746643e-02, -9.56194175e-05,\n       -4.42206553e-07, -7.05027060e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85753275e+00, -1.74837763e+00, -1.69872244e+00,\n       -1.79635081e+00, -1.62948553e+00, -1.55160471e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.15071537e-01, -9.57417842e-02,\n       -4.89941781e-02, -1.19604539e-04, -1.03737576e-07, -1.62338528e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85750985e+00,\n       -1.74820135e+00, -1.69863687e+00, -1.79616572e+00, -1.62913841e+00,\n       -1.55119416e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.19865506e-01, -1.12993790e-01, -6.94523750e-02, -1.37101173e-04,\n       -2.60358772e-07, -8.39289922e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85689495e+00, -1.74795662e+00, -1.69852882e+00,\n       -1.79591943e+00, -1.62884575e+00, -1.55101147e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.39471975e-01, -1.11554350e-01,\n       -7.21318647e-02, -1.38743937e-04, -1.15975292e-07, -2.74582914e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85723074e+00,\n       -1.74878765e+00, -1.69926189e+00, -1.79470473e+00, -1.62652300e+00,\n       -1.54863288e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.23260268e-01, -1.01783707e-01, -5.74316645e-02, -1.09113054e-04,\n       -4.46428746e-07, -1.57392517e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85712796e+00, -1.74847730e+00, -1.69870617e+00,\n       -1.79525259e+00, -1.62696465e+00, -1.54899174e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.16563597e-01, -1.00955493e-01,\n       -5.76552388e-02, -9.51532668e-05, -1.15959190e-07, -9.98127707e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85624847e+00,\n       -1.74670906e+00, -1.69660202e+00, -1.79468083e+00, -1.62614560e+00,\n       -1.54794841e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.06749164e-01, -9.45327617e-02, -5.03134025e-02, -8.77330297e-05,\n       -1.28071982e-08, -3.18331951e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85623486e+00, -1.74663406e+00, -1.69648129e+00,\n       -1.79467724e+00, -1.62611332e+00, -1.54793464e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.80288901e-01, -7.42349409e-02,\n       -5.41307529e-02, -1.33703978e-04, -2.91073252e-08, -3.95724053e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85547347e+00,\n       -1.74491368e+00, -1.69303107e+00, -1.79535553e+00, -1.62722500e+00,\n       -1.54915129e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.98773565e-01, -8.63707766e-02, -4.72681800e-02, -1.28009918e-04,\n       -7.38919177e-08, -3.43341836e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85489182e+00, -1.74408644e+00, -1.69214040e+00,\n       -1.79537017e+00, -1.62728680e+00, -1.54924891e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.92646418e-01, -8.25453290e-02,\n       -4.79167595e-02, -1.05711423e-04, -4.38827859e-07, -3.34044243e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85381101e+00,\n       -1.74266056e+00, -1.69103397e+00, -1.79552316e+00, -1.62758743e+00,\n       -1.54962316e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.79186557e-01, -7.68698325e-02, -4.65706670e-02, -1.33483538e-04,\n       -5.90380713e-08, -1.70245390e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.84984923e+00, -1.73475690e+00, -1.68322295e+00,\n       -1.79484963e+00, -1.62615309e+00, -1.54799077e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.69584382e-01, -9.08581439e-02,\n       -5.13688900e-02, -9.56748574e-05, -7.76477078e-08, -5.02579050e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.84927989e+00,\n       -1.73359768e+00, -1.68173524e+00, -1.79563087e+00, -1.62740505e+00,\n       -1.54949441e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.56874111e-01, -7.63506891e-02, -3.79296232e-02, -9.52281415e-05,\n       -5.53087711e-08, -2.60112243e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.84927989e+00, -1.73359768e+00, -1.68173524e+00,\n       -1.79563472e+00, -1.62740759e+00, -1.54951303e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.49760129e-01, -6.64413545e-02,\n       -3.83543292e-02, -1.32133150e-04, -2.53947108e-07, -1.75677704e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.84927989e+00,\n       -1.73359768e+00, -1.68173524e+00, -1.79561639e+00, -1.62736111e+00,\n       -1.54943937e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.17882275e-01, -6.91384143e-02, -3.90753541e-02, -1.02161083e-04,\n       -6.76724220e-08, -2.13289042e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.84927989e+00, -1.73359768e+00, -1.68173524e+00,\n       -1.79585212e+00, -1.62785284e+00, -1.54977252e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.10806426e-01, -7.37775659e-02,\n       -3.52370119e-02, -1.10719729e-04, -2.08467769e-08, -2.14526144e-08,\n       -5.26514331e-05, -1.39756357e-09, -7.20282512e-12, -1.84895705e+00,\n       -1.73359768e+00, -1.68059013e+00, -1.79603332e+00, -1.62785527e+00,\n       -1.54977359e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.30480640e-01, -6.57381822e-02, -3.77023214e-02, -1.24751737e-04,\n       -3.37644963e-07, -1.65436179e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.84969298e+00, -1.73287002e+00, -1.68173524e+00,\n       -1.79577577e+00, -1.62856769e+00, -1.54868087e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.33623362e-01, -7.41231079e-02,\n       -3.39182180e-02, -1.29906307e-04, -9.18997272e-08, -2.44079821e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.84863410e+00,\n       -1.73353867e+00, -1.68173514e+00, -1.79602541e+00, -1.62764529e+00,\n       -1.55018121e+00, -1.79233242e+00, -1.62181733e+00, -1.54255904e+00]), 'split7_train_score': array([-4.04445044e-01, -1.48468294e-01, -9.10427075e-02, -4.97032925e-04,\n       -1.02005558e-05, -9.88036449e-07, -5.26335661e-05, -1.39817952e-09,\n       -7.20489646e-12, -1.87779427e+00, -1.79081495e+00, -1.75079047e+00,\n       -1.80364122e+00, -1.64460013e+00, -1.57129670e+00, -1.79172126e+00,\n       -1.62117452e+00, -1.54210136e+00, -3.06933147e-01, -1.03099234e-01,\n       -5.71656169e-02, -1.08526545e-04, -2.26747819e-07, -2.42626512e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86066161e+00,\n       -1.75525279e+00, -1.70799851e+00, -1.79438423e+00, -1.62623469e+00,\n       -1.54813016e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.94873905e-01, -1.06793771e-01, -6.16707511e-02, -9.57551236e-05,\n       -2.61024824e-08, -2.91924576e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86056657e+00, -1.75457968e+00, -1.70653279e+00,\n       -1.79409495e+00, -1.62566134e+00, -1.54748616e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.02487019e-01, -9.10000732e-02,\n       -5.13689658e-02, -9.01486637e-05, -5.05237632e-09, -9.68694238e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85682538e+00,\n       -1.74808683e+00, -1.69880253e+00, -1.79376361e+00, -1.62499639e+00,\n       -1.54666462e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.88922668e-01, -9.41969115e-02, -4.58907251e-02, -6.53849386e-05,\n       -1.64011689e-09, -3.04137697e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86014382e+00, -1.75458362e+00, -1.70668042e+00,\n       -1.79411772e+00, -1.62545651e+00, -1.54719510e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.90290620e-01, -8.47914418e-02,\n       -4.75304078e-02, -9.98803644e-05, -1.56831541e-09, -9.75526124e-12,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86032107e+00,\n       -1.75599442e+00, -1.70826715e+00, -1.79335500e+00, -1.62427582e+00,\n       -1.54581200e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.53554747e-01, -7.94968772e-02, -4.21882625e-02, -6.77427706e-05,\n       -7.34445909e-08, -1.15432127e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85674164e+00, -1.75029477e+00, -1.70219769e+00,\n       -1.79327717e+00, -1.62415554e+00, -1.54566481e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.87230147e-01, -7.36900421e-02,\n       -4.23266014e-02, -7.22669467e-05, -3.37499875e-09, -4.58484398e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85791495e+00,\n       -1.75124498e+00, -1.70132653e+00, -1.79336775e+00, -1.62433127e+00,\n       -1.54576003e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.70311045e-01, -7.36131502e-02, -4.18372591e-02, -1.04557241e-04,\n       -3.77906190e-09, -2.99717610e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85667890e+00, -1.74833856e+00, -1.69834850e+00,\n       -1.79311790e+00, -1.62384481e+00, -1.54515953e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.53267895e-01, -8.79161013e-02,\n       -5.22739643e-02, -7.39884540e-05, -3.85826020e-09, -1.26076716e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85663261e+00,\n       -1.74815079e+00, -1.69784435e+00, -1.79311654e+00, -1.62384359e+00,\n       -1.54515928e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.82164049e-01, -8.42659966e-02, -4.72949576e-02, -6.73099866e-05,\n       -4.09355933e-09, -7.26582590e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85615247e+00, -1.74682536e+00, -1.69677271e+00,\n       -1.79494579e+00, -1.62691702e+00, -1.54912684e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.53441373e-01, -8.06919091e-02,\n       -4.60042146e-02, -6.75882590e-05, -6.03934806e-09, -1.70237251e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85535011e+00,\n       -1.74529273e+00, -1.69472092e+00, -1.79342238e+00, -1.62429859e+00,\n       -1.54575363e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.64952667e-01, -6.62804542e-02, -3.38755990e-02, -1.09142661e-04,\n       -1.97970972e-08, -1.55229861e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85439644e+00, -1.74385636e+00, -1.69305029e+00,\n       -1.79424629e+00, -1.62599851e+00, -1.54772712e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.46460954e-01, -8.15808537e-02,\n       -4.23624148e-02, -1.61106483e-04, -5.48993109e-09, -4.13558335e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85439644e+00,\n       -1.74385535e+00, -1.69304578e+00, -1.79424629e+00, -1.62644813e+00,\n       -1.54940476e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.78230387e-01, -8.16110712e-02, -4.34999370e-02, -8.56175351e-05,\n       -4.74737388e-07, -1.48151606e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85395678e+00, -1.74263728e+00, -1.69173595e+00,\n       -1.79424629e+00, -1.62645067e+00, -1.54940476e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.60130712e-01, -7.76708298e-02,\n       -4.27554986e-02, -8.61619827e-05, -2.16747561e-08, -2.82619697e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85739399e+00,\n       -1.74736077e+00, -1.69411702e+00, -1.79401686e+00, -1.62555556e+00,\n       -1.54738490e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.51809712e-01, -8.22360772e-02, -3.71981315e-02, -1.16290325e-04,\n       -4.40322435e-09, -1.93074983e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85697943e+00, -1.74621865e+00, -1.69337430e+00,\n       -1.79816707e+00, -1.63158688e+00, -1.55294605e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.67620344e-01, -7.48465086e-02,\n       -3.31721439e-02, -7.67003664e-05, -6.64786981e-09, -3.40845579e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85697943e+00,\n       -1.74621862e+00, -1.69337430e+00, -1.79815984e+00, -1.63083395e+00,\n       -1.55224561e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.18894749e-01, -5.30164954e-02, -3.48237151e-02, -1.08355322e-04,\n       -3.89213585e-07, -2.03853413e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85697943e+00, -1.74621862e+00, -1.69337430e+00,\n       -1.79815984e+00, -1.63098236e+00, -1.55252026e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.22049609e-01, -6.71442574e-02,\n       -2.90711782e-02, -1.17006447e-04, -1.61475847e-07, -8.96218187e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85693024e+00,\n       -1.74613318e+00, -1.69327057e+00, -1.79815984e+00, -1.63098236e+00,\n       -1.55251961e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.45766568e-01, -5.83512358e-02, -2.97393743e-02, -1.04034989e-04,\n       -2.04170206e-07, -7.36878703e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85632692e+00, -1.74577229e+00, -1.69526653e+00,\n       -1.79815984e+00, -1.63098236e+00, -1.55251961e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.20051017e-01, -7.37443460e-02,\n       -2.79515115e-02, -8.82061820e-05, -3.63985799e-08, -1.09490828e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85389064e+00,\n       -1.74030153e+00, -1.68770066e+00, -1.79796551e+00, -1.63033735e+00,\n       -1.55178142e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.24283022e-01, -6.84431004e-02, -2.92747012e-02, -1.01464458e-04,\n       -4.94120071e-08, -3.15474595e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85389064e+00, -1.74030153e+00, -1.68770066e+00,\n       -1.79796551e+00, -1.63029986e+00, -1.55171336e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.61523857e-01, -1.33533102e-01,\n       -8.56056783e-02, -1.79211286e-03, -2.81134044e-05, -7.28509053e-06,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86031065e+00,\n       -1.75662280e+00, -1.70884368e+00, -1.79843829e+00, -1.63447571e+00,\n       -1.55877083e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.49189647e-01, -1.27805950e-01, -7.36118342e-02, -1.30201355e-04,\n       -9.71246743e-07, -1.96256575e-07, -5.25972785e-05, -1.39705705e-09,\n       -7.19995617e-12, -1.85674614e+00, -1.74812307e+00, -1.69450176e+00,\n       -1.79372390e+00, -1.62554102e+00, -1.54760534e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.98576599e-01, -1.15024158e-01,\n       -6.92723313e-02, -8.51486297e-05, -1.58907959e-08, -1.49291932e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85790965e+00,\n       -1.74882323e+00, -1.69518384e+00, -1.79522946e+00, -1.62694084e+00,\n       -1.54904274e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.83244438e-01, -9.01585438e-02, -4.60267082e-02, -7.83006008e-05,\n       -1.17309299e-08, -1.51319118e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85401968e+00, -1.74308867e+00, -1.68872909e+00,\n       -1.79459652e+00, -1.62590593e+00, -1.54783578e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.73162064e-01, -8.18293888e-02,\n       -4.37000582e-02, -8.64666810e-05, -5.42458260e-08, -3.49174939e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85309624e+00,\n       -1.74143075e+00, -1.68775214e+00, -1.79460512e+00, -1.62591365e+00,\n       -1.54784308e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.58235199e-01, -6.81442946e-02, -3.84535985e-02, -1.11019967e-04,\n       -4.16616636e-07, -1.21689197e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85682490e+00, -1.74914155e+00, -1.69675332e+00,\n       -1.79552042e+00, -1.62873434e+00, -1.55146232e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.78027615e-01, -1.03379266e-01,\n       -6.17215001e-02, -7.00468781e-05, -5.08999520e-09, -5.35309953e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85682490e+00,\n       -1.74905064e+00, -1.69647108e+00, -1.79563641e+00, -1.62895401e+00,\n       -1.55176985e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.05468357e-01, -1.19413793e-01, -6.48885104e-02, -7.34196020e-05,\n       -4.82551498e-07, -3.06799068e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85661626e+00, -1.74906675e+00, -1.69689902e+00,\n       -1.79560070e+00, -1.62889986e+00, -1.55172388e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.68679353e-01, -8.79416984e-02,\n       -5.03014891e-02, -8.93573350e-05, -5.28002997e-07, -3.51617941e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85636225e+00,\n       -1.74730842e+00, -1.69393005e+00, -1.79432728e+00, -1.62632422e+00,\n       -1.54847917e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.83149496e-01, -8.72835501e-02, -5.09019793e-02, -1.38712943e-04,\n       -8.53252780e-08, -5.80854727e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85631269e+00, -1.74724932e+00, -1.69392426e+00,\n       -1.79454431e+00, -1.62643565e+00, -1.54852529e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.77804679e-01, -8.15869207e-02,\n       -4.92418406e-02, -1.01482999e-04, -1.17911357e-08, -1.98960195e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85631273e+00,\n       -1.74713207e+00, -1.69374440e+00, -1.79461794e+00, -1.62656675e+00,\n       -1.54869348e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.01082059e-01, -7.75983728e-02, -4.80527852e-02, -2.34086520e-04,\n       -8.42176061e-07, -1.18121364e-07, -5.26008136e-05, -1.39727725e-09,\n       -7.20109163e-12, -1.85579001e+00, -1.74676793e+00, -1.69227735e+00,\n       -1.79526811e+00, -1.62786996e+00, -1.55033028e+00, -1.79175037e+00,\n       -1.62116270e+00, -1.54205819e+00, -2.77468649e-01, -9.05465600e-02,\n       -4.68452304e-02, -6.81217373e-05, -2.11036890e-08, -9.00848838e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85565411e+00,\n       -1.74656458e+00, -1.69205016e+00, -1.79416800e+00, -1.62563883e+00,\n       -1.54751983e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.76384631e-01, -7.41891187e-02, -4.37164858e-02, -8.14376581e-05,\n       -1.19605269e-08, -4.48518197e-10, -5.25972785e-05, -1.39705707e-09,\n       -7.19995617e-12, -1.85565411e+00, -1.74657188e+00, -1.69208414e+00,\n       -1.79447798e+00, -1.62627667e+00, -1.54832791e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.71452104e-01, -6.95016683e-02,\n       -3.86511120e-02, -7.23617866e-05, -3.58779072e-07, -9.32368536e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85704249e+00,\n       -1.74907167e+00, -1.69515761e+00, -1.79481478e+00, -1.62681136e+00,\n       -1.54893556e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.78116681e-01, -7.96056924e-02, -4.17503758e-02, -1.02258810e-04,\n       -1.23831218e-07, -2.80161370e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85704442e+00, -1.74906211e+00, -1.69522557e+00,\n       -1.79481244e+00, -1.62679979e+00, -1.54893451e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.19898365e-01, -7.66236228e-02,\n       -3.58565292e-02, -6.91835122e-05, -1.89507934e-08, -3.54909887e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85529770e+00,\n       -1.74401730e+00, -1.68489721e+00, -1.79461494e+00, -1.62631438e+00,\n       -1.54846538e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.55964656e-01, -7.99433798e-02, -4.56288728e-02, -6.67307610e-05,\n       -1.23744739e-08, -1.66448410e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85529770e+00, -1.74401730e+00, -1.68489712e+00,\n       -1.79461494e+00, -1.62631438e+00, -1.54846668e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.30251348e-01, -5.69572365e-02,\n       -3.01258153e-02, -6.34718289e-05, -7.25739435e-09, -2.00205643e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85529770e+00,\n       -1.74401712e+00, -1.68489696e+00, -1.79461494e+00, -1.62631438e+00,\n       -1.54846668e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.41527427e-01, -7.12394002e-02, -4.30372307e-02, -1.23178385e-04,\n       -1.56110901e-08, -1.90164753e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85516256e+00, -1.74111894e+00, -1.68404991e+00,\n       -1.79439237e+00, -1.62633748e+00, -1.54845719e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.72866859e-01, -7.90574700e-02,\n       -3.84806819e-02, -8.10466200e-05, -8.41757430e-09, -9.11315831e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85516256e+00,\n       -1.74093319e+00, -1.68404991e+00, -1.79577797e+00, -1.62528801e+00,\n       -1.54845719e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.70590462e-01, -5.98974392e-02, -3.65152286e-02, -1.10869948e-04,\n       -3.83912905e-08, -3.12306046e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85504878e+00, -1.74289778e+00, -1.68047934e+00,\n       -1.79484758e+00, -1.62551410e+00, -1.54845783e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.42360601e-01, -6.64928881e-02,\n       -3.79622738e-02, -8.09440698e-05, -1.08996780e-08, -3.49913401e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85532806e+00,\n       -1.74198138e+00, -1.68342992e+00, -1.79392309e+00, -1.62632638e+00,\n       -1.54837122e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'split8_train_score': array([-4.58747779e-01, -1.44198092e-01, -1.01420534e-01, -2.26738370e-03,\n       -5.60590959e-05, -1.42205176e-05, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.88706286e+00, -1.80398661e+00, -1.76380217e+00,\n       -1.80678309e+00, -1.64959751e+00, -1.57616614e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.59239680e-01, -1.24542205e-01,\n       -7.49473226e-02, -8.17633303e-05, -6.98363050e-08, -6.11362910e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86484204e+00,\n       -1.76316662e+00, -1.71707276e+00, -1.79494280e+00, -1.62687246e+00,\n       -1.54853424e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.79993328e-01, -9.35972405e-02, -6.35407929e-02, -7.03216933e-05,\n       -6.94146430e-09, -5.97363466e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86248084e+00, -1.75870761e+00, -1.71158255e+00,\n       -1.79668729e+00, -1.63088802e+00, -1.55343443e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.04836481e-01, -8.50323598e-02,\n       -5.49074945e-02, -6.02298399e-05, -3.00239559e-09, -3.95715959e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86001729e+00,\n       -1.75390297e+00, -1.70518344e+00, -1.79549925e+00, -1.62719758e+00,\n       -1.54880745e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.82626453e-01, -9.14763925e-02, -5.92063912e-02, -6.41247650e-05,\n       -8.10067165e-09, -8.32248768e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86038251e+00, -1.75474142e+00, -1.70641761e+00,\n       -1.79542467e+00, -1.62703073e+00, -1.54857599e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.84267537e-01, -8.79663357e-02,\n       -5.38715505e-02, -8.11153995e-05, -3.10902951e-08, -8.07716162e-12,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86034835e+00,\n       -1.75459625e+00, -1.70612990e+00, -1.79522937e+00, -1.62704612e+00,\n       -1.54846847e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.91131709e-01, -8.91116803e-02, -5.46875421e-02, -8.17931617e-05,\n       -1.87938058e-09, -2.78594994e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86041021e+00, -1.75450757e+00, -1.70613480e+00,\n       -1.79516286e+00, -1.62690428e+00, -1.54829465e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.85020475e-01, -9.61252841e-02,\n       -5.85423593e-02, -6.39903838e-05, -1.76795454e-09, -2.25253118e-10,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.86059539e+00,\n       -1.75416242e+00, -1.70601496e+00, -1.79434701e+00, -1.62591879e+00,\n       -1.54741955e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.84124445e-01, -7.84514324e-02, -4.94261333e-02, -7.46203892e-05,\n       -2.82332778e-09, -1.49957649e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86218590e+00, -1.75690794e+00, -1.70869598e+00,\n       -1.79392686e+00, -1.62512493e+00, -1.54689737e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.99934645e-01, -8.74086954e-02,\n       -5.15570191e-02, -9.49580254e-05, -4.58264782e-09, -1.34526676e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86206562e+00,\n       -1.75682862e+00, -1.70861610e+00, -1.79393402e+00, -1.62512493e+00,\n       -1.54689737e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.54507206e-01, -7.29730221e-02, -4.37649275e-02, -6.48869846e-05,\n       -3.72118707e-09, -1.80726823e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86205417e+00, -1.75675609e+00, -1.70850152e+00,\n       -1.79392362e+00, -1.62510626e+00, -1.54686865e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.53293790e-01, -7.50516422e-02,\n       -4.61950526e-02, -6.03564722e-05, -2.15020647e-09, -5.25816568e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86161636e+00,\n       -1.75553911e+00, -1.70744048e+00, -1.79388825e+00, -1.62501320e+00,\n       -1.54674631e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.55680706e-01, -7.38557315e-02, -4.69528439e-02, -9.56670185e-05,\n       -2.05762254e-09, -2.65897083e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86169012e+00, -1.75600445e+00, -1.70795385e+00,\n       -1.79388825e+00, -1.62501320e+00, -1.54675247e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.97733088e-01, -1.00717969e-01,\n       -5.39089455e-02, -9.42852625e-05, -8.41229985e-09, -1.12308812e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86121238e+00,\n       -1.75517548e+00, -1.70691606e+00, -1.79377301e+00, -1.62478644e+00,\n       -1.54645619e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.56586139e-01, -8.37389063e-02, -4.94940532e-02, -7.96233185e-05,\n       -1.77963600e-08, -9.81569359e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86046723e+00, -1.75443920e+00, -1.70615933e+00,\n       -1.79495807e+00, -1.62724671e+00, -1.54941705e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.58018048e-01, -7.18530675e-02,\n       -4.44348810e-02, -7.11502643e-05, -5.21988989e-09, -1.61038105e-10,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.85995123e+00,\n       -1.75359115e+00, -1.70515188e+00, -1.79424121e+00, -1.62591087e+00,\n       -1.54816622e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.52740019e-01, -6.57781804e-02, -3.37159511e-02, -7.62226377e-05,\n       -1.76528373e-08, -2.81670936e-10, -5.25972785e-05, -1.39705707e-09,\n       -7.19995617e-12, -1.85981564e+00, -1.75280281e+00, -1.70395439e+00,\n       -1.79398853e+00, -1.62521647e+00, -1.54702114e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.29961198e-01, -7.31763627e-02,\n       -4.27863613e-02, -9.40866945e-05, -2.82638621e-08, -5.22576133e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86128331e+00,\n       -1.75460770e+00, -1.70553248e+00, -1.79398189e+00, -1.62521647e+00,\n       -1.54702113e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.16510831e-01, -5.84366702e-02, -3.12148694e-02, -1.23404688e-04,\n       -1.70845057e-08, -1.75568768e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86087254e+00, -1.75377067e+00, -1.70460935e+00,\n       -1.79368966e+00, -1.62494124e+00, -1.54675698e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.63287184e-01, -6.73683067e-02,\n       -3.45572606e-02, -8.77318510e-05, -2.36421092e-08, -3.61257539e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86087254e+00,\n       -1.75377067e+00, -1.70460935e+00, -1.79368966e+00, -1.62494124e+00,\n       -1.54675698e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.32185173e-01, -4.96558442e-02, -2.52246728e-02, -1.09244923e-04,\n       -6.89298270e-09, -1.59146260e-10, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86087254e+00, -1.75377067e+00, -1.70460935e+00,\n       -1.79368966e+00, -1.62494124e+00, -1.54675698e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.03277102e-01, -6.22964057e-02,\n       -3.53629693e-02, -7.83064529e-05, -2.44486271e-08, -3.50008913e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85759145e+00,\n       -1.74830860e+00, -1.69875665e+00, -1.79584950e+00, -1.62812879e+00,\n       -1.55038141e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.27404829e-01, -5.99996789e-02, -3.21092393e-02, -1.08733098e-04,\n       -4.48475790e-09, -4.11372017e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85759145e+00, -1.74718304e+00, -1.69673142e+00,\n       -1.79584950e+00, -1.62812879e+00, -1.55038141e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.91406595e-01, -1.29792794e-01,\n       -7.84384184e-02, -1.15111958e-04, -4.56533476e-07, -6.42193282e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86305559e+00,\n       -1.76097005e+00, -1.71470278e+00, -1.79942822e+00, -1.63630585e+00,\n       -1.56055685e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.43555109e-01, -1.10418797e-01, -5.97292882e-02, -1.92492976e-04,\n       -1.09262801e-06, -5.00200033e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86036861e+00, -1.75348868e+00, -1.70457829e+00,\n       -1.80017074e+00, -1.63699495e+00, -1.56149555e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.75879641e-01, -1.03352503e-01,\n       -6.26253840e-02, -8.67753047e-05, -6.84677043e-08, -2.71984026e-08,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.85901983e+00,\n       -1.74950512e+00, -1.69965911e+00, -1.80041335e+00, -1.63747793e+00,\n       -1.56208189e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.79219605e-01, -1.03589175e-01, -5.42391409e-02, -9.67138467e-05,\n       -6.48868033e-08, -9.87081114e-10, -5.27651090e-05, -1.40151485e-09,\n       -7.22293377e-12, -1.85746457e+00, -1.74615468e+00, -1.69537669e+00,\n       -1.79910900e+00, -1.63408584e+00, -1.55665313e+00, -1.79182389e+00,\n       -1.62138398e+00, -1.54235554e+00, -2.64933430e-01, -7.95785413e-02,\n       -4.42589723e-02, -1.39289988e-04, -3.93908170e-08, -9.67049058e-09,\n       -5.28430943e-05, -1.41542234e-09, -7.22705164e-12, -1.85622735e+00,\n       -1.74432133e+00, -1.69295504e+00, -1.79877939e+00, -1.63297051e+00,\n       -1.55620027e+00, -1.79181813e+00, -1.62136012e+00, -1.54231791e+00,\n       -2.57127600e-01, -9.49744662e-02, -4.81909095e-02, -9.61257683e-05,\n       -1.35998249e-07, -6.26691297e-10, -5.26163416e-05, -1.39756338e-09,\n       -7.20256415e-12, -1.85120392e+00, -1.73589425e+00, -1.68310408e+00,\n       -1.79883963e+00, -1.63271629e+00, -1.55558143e+00, -1.79174285e+00,\n       -1.62116606e+00, -1.54210093e+00, -2.97150409e-01, -1.03478882e-01,\n       -5.73833098e-02, -8.39234202e-05, -6.65866043e-09, -3.09988208e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85222874e+00,\n       -1.73909477e+00, -1.68773533e+00, -1.79427407e+00, -1.62602500e+00,\n       -1.54795162e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.26150578e-01, -1.18913505e-01, -6.61173490e-02, -5.83550505e-05,\n       -4.44347921e-08, -2.24836663e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85400353e+00, -1.74215746e+00, -1.69135144e+00,\n       -1.79969261e+00, -1.63702840e+00, -1.56095641e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.34168692e-01, -9.24282593e-02,\n       -5.72502706e-02, -7.06416298e-05, -7.91665343e-09, -1.86567975e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85334664e+00,\n       -1.74040951e+00, -1.68882547e+00, -1.79980618e+00, -1.63669131e+00,\n       -1.56048732e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.05074587e-01, -9.61474520e-02, -5.34263093e-02, -5.90630479e-05,\n       -2.36660135e-08, -2.28064946e-09, -5.25998407e-05, -1.39712509e-09,\n       -7.20030751e-12, -1.85045459e+00, -1.73548858e+00, -1.68316145e+00,\n       -1.79528911e+00, -1.62782269e+00, -1.55022444e+00, -1.79169563e+00,\n       -1.62110131e+00, -1.54200069e+00, -2.61203956e-01, -8.50505039e-02,\n       -5.00558332e-02, -6.13345982e-05, -2.81258972e-09, -8.43986479e-11,\n       -5.25998407e-05, -1.39712509e-09, -7.20030751e-12, -1.85044102e+00,\n       -1.73538264e+00, -1.68287038e+00, -1.79536794e+00, -1.62802968e+00,\n       -1.55042045e+00, -1.79168441e+00, -1.62110333e+00, -1.54202137e+00,\n       -2.55558021e-01, -7.81003449e-02, -4.51049889e-02, -6.58588555e-05,\n       -6.96415062e-09, -8.67356153e-12, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84793184e+00, -1.72818341e+00, -1.67320849e+00,\n       -1.79372430e+00, -1.62511532e+00, -1.54605871e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.47566174e-01, -7.25644020e-02,\n       -4.16918727e-02, -5.62279469e-05, -5.89349772e-09, -1.49796673e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84786964e+00,\n       -1.72790702e+00, -1.67291932e+00, -1.79363360e+00, -1.62484869e+00,\n       -1.54653522e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.43606740e-01, -7.62707237e-02, -3.64033682e-02, -8.09148234e-05,\n       -4.93936088e-09, -8.61970399e-11, -5.25972785e-05, -1.39705705e-09,\n       -7.19995617e-12, -1.84745270e+00, -1.72680168e+00, -1.67171960e+00,\n       -1.79557397e+00, -1.62847788e+00, -1.55109602e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.40836086e-01, -7.40104602e-02,\n       -4.28740680e-02, -5.36703683e-05, -2.19785530e-09, -1.40117706e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84745270e+00,\n       -1.72680168e+00, -1.67171960e+00, -1.79531823e+00, -1.62807386e+00,\n       -1.54942496e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.49465528e-01, -7.31032592e-02, -4.58977120e-02, -6.81009206e-05,\n       -2.35873099e-09, -9.32019478e-12, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84701775e+00, -1.72531738e+00, -1.67000415e+00,\n       -1.79470089e+00, -1.62513810e+00, -1.54637963e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.01037634e-01, -6.88214343e-02,\n       -3.83276788e-02, -6.66521609e-05, -1.77470668e-09, -1.93556589e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84511140e+00,\n       -1.72349354e+00, -1.66777874e+00, -1.79456764e+00, -1.62677725e+00,\n       -1.54904644e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.25138997e-01, -6.24331365e-02, -3.39315510e-02, -5.92611075e-05,\n       -1.56210306e-09, -4.28315922e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84511129e+00, -1.72354805e+00, -1.66803511e+00,\n       -1.79444348e+00, -1.62650121e+00, -1.54867697e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.59390681e-01, -8.31409373e-02,\n       -3.75311325e-02, -6.19389988e-05, -2.43768142e-09, -2.29886180e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84557883e+00,\n       -1.72515402e+00, -1.67010147e+00, -1.79437106e+00, -1.62633643e+00,\n       -1.54846734e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -1.96253629e-01, -6.12038942e-02, -3.27536160e-02, -6.43033154e-05,\n       -2.17716279e-09, -4.04661214e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84557883e+00, -1.72515402e+00, -1.67010148e+00,\n       -1.79437479e+00, -1.62633643e+00, -1.54846393e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.41140738e-01, -6.39163415e-02,\n       -3.90044897e-02, -6.11890983e-05, -1.71639353e-09, -8.68490224e-12,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84518862e+00,\n       -1.72488261e+00, -1.67002003e+00, -1.79440627e+00, -1.62778456e+00,\n       -1.54846734e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.39793679e-01, -5.94477085e-02, -3.61410912e-02, -5.76248561e-05,\n       -1.78372757e-09, -1.42273611e-11, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84811402e+00, -1.72467915e+00, -1.66709248e+00,\n       -1.79437479e+00, -1.62633643e+00, -1.54851348e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.53867671e-01, -8.68810400e-02,\n       -4.07276720e-02, -7.04204466e-05, -2.80607136e-09, -1.17045886e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84553931e+00,\n       -1.72515402e+00, -1.67039484e+00, -1.79309772e+00, -1.62733584e+00,\n       -1.54802434e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'split9_train_score': array([-4.58908008e-01, -1.63708591e-01, -1.03144041e-01, -1.91295635e-03,\n       -5.57621929e-05, -1.25115510e-05, -5.26189128e-05, -1.39784927e-09,\n       -7.20542153e-12, -1.88496793e+00, -1.80177442e+00, -1.76394815e+00,\n       -1.80447905e+00, -1.64598128e+00, -1.57276812e+00, -1.79177138e+00,\n       -1.62125291e+00, -1.54217967e+00, -3.58689238e-01, -1.33509983e-01,\n       -7.02932160e-02, -2.23085271e-04, -6.55803108e-06, -6.32661959e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86683136e+00,\n       -1.76852843e+00, -1.72300027e+00, -1.79573045e+00, -1.62730900e+00,\n       -1.54905637e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.90789728e-01, -1.10466660e-01, -6.09459737e-02, -4.18981596e-04,\n       -4.89578905e-06, -6.54422402e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86556392e+00, -1.76554325e+00, -1.71910679e+00,\n       -1.79612892e+00, -1.62723372e+00, -1.54892515e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.18797418e-01, -9.82906010e-02,\n       -5.66494950e-02, -2.19435018e-04, -2.08407917e-06, -1.91955624e-07,\n       -5.26114370e-05, -1.39743311e-09, -7.20140005e-12, -1.86556167e+00,\n       -1.76331765e+00, -1.71691145e+00, -1.80076875e+00, -1.63857167e+00,\n       -1.56097410e+00, -1.79178557e+00, -1.62129279e+00, -1.54223246e+00,\n       -2.92475034e-01, -8.59303126e-02, -5.22350021e-02, -5.20159893e-04,\n       -5.11078718e-06, -9.32405833e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86167695e+00, -1.75723223e+00, -1.71146455e+00,\n       -1.80383432e+00, -1.64040289e+00, -1.56441443e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.05594805e-01, -9.93694825e-02,\n       -5.00364489e-02, -2.72615809e-04, -3.88712064e-06, -3.99724320e-08,\n       -5.28308739e-05, -1.39954236e-09, -7.26924876e-12, -1.85994518e+00,\n       -1.75366859e+00, -1.70785491e+00, -1.80205086e+00, -1.64077961e+00,\n       -1.56625550e+00, -1.79168366e+00, -1.62110131e+00, -1.54200069e+00,\n       -3.35428738e-01, -9.87316079e-02, -5.63702420e-02, -2.38076152e-04,\n       -1.43556034e-06, -5.96230221e-08, -5.26752596e-05, -1.39775617e-09,\n       -7.20699435e-12, -1.85985159e+00, -1.75295279e+00, -1.70433398e+00,\n       -1.80208713e+00, -1.64078767e+00, -1.56626381e+00, -1.79168615e+00,\n       -1.62118081e+00, -1.54200283e+00, -2.84506752e-01, -9.76003391e-02,\n       -5.20374072e-02, -2.10888321e-04, -2.03929254e-06, -2.22337622e-07,\n       -5.26389156e-05, -1.39916416e-09, -7.21083663e-12, -1.85815137e+00,\n       -1.75006570e+00, -1.70107849e+00, -1.80016357e+00, -1.63682545e+00,\n       -1.56121811e+00, -1.79176842e+00, -1.62117758e+00, -1.54207566e+00,\n       -2.75904897e-01, -8.69318914e-02, -4.22983056e-02, -2.49071555e-04,\n       -1.69173200e-06, -2.87437800e-07, -5.26045704e-05, -1.39725948e-09,\n       -7.20102336e-12, -1.85815137e+00, -1.75006401e+00, -1.70105713e+00,\n       -1.80016098e+00, -1.63682604e+00, -1.56135697e+00, -1.79172373e+00,\n       -1.62116392e+00, -1.54206024e+00, -2.74033759e-01, -6.96813639e-02,\n       -4.50555706e-02, -1.11937486e-04, -1.72661760e-07, -2.91111033e-08,\n       -5.26039635e-05, -1.39725948e-09, -7.20102336e-12, -1.85814744e+00,\n       -1.75005046e+00, -1.70104353e+00, -1.80016098e+00, -1.63662206e+00,\n       -1.56096288e+00, -1.79172509e+00, -1.62116392e+00, -1.54206024e+00,\n       -2.62328061e-01, -7.40398106e-02, -4.62474862e-02, -1.33947420e-04,\n       -1.05006442e-06, -2.72659105e-07, -5.26745272e-05, -1.39910889e-09,\n       -7.21056750e-12, -1.85811461e+00, -1.74899528e+00, -1.69949887e+00,\n       -1.79999350e+00, -1.63630678e+00, -1.56063775e+00, -1.79180632e+00,\n       -1.62134880e+00, -1.54231144e+00, -2.34573484e-01, -7.45950086e-02,\n       -4.61680245e-02, -2.76118418e-04, -1.74343716e-06, -3.39755308e-08,\n       -5.27603816e-05, -1.40132026e-09, -7.22192420e-12, -1.85839445e+00,\n       -1.74907258e+00, -1.69923655e+00, -1.80043529e+00, -1.63561535e+00,\n       -1.55939868e+00, -1.79228995e+00, -1.62234107e+00, -1.54356090e+00,\n       -2.53701352e-01, -7.40262632e-02, -4.28486984e-02, -2.07582728e-04,\n       -8.43964336e-07, -8.03204502e-08, -5.26945958e-05, -1.40138929e-09,\n       -7.22228446e-12, -1.85839445e+00, -1.74907258e+00, -1.69923746e+00,\n       -1.80043194e+00, -1.63561220e+00, -1.55939868e+00, -1.79228995e+00,\n       -1.62232670e+00, -1.54356090e+00, -2.54879656e-01, -8.00256886e-02,\n       -4.52664333e-02, -2.06808372e-04, -4.42929943e-08, -5.90914958e-08,\n       -5.27603500e-05, -1.40138939e-09, -7.22228446e-12, -1.85816044e+00,\n       -1.74873768e+00, -1.69879882e+00, -1.80046103e+00, -1.63569370e+00,\n       -1.55947128e+00, -1.79227152e+00, -1.62233244e+00, -1.54355789e+00,\n       -2.66286250e-01, -6.73281218e-02, -3.99673762e-02, -3.25046889e-04,\n       -2.29618079e-07, -1.99553174e-08, -5.27603816e-05, -1.40139001e-09,\n       -7.22229214e-12, -1.85815926e+00, -1.74872076e+00, -1.69877777e+00,\n       -1.80044320e+00, -1.63564713e+00, -1.55940059e+00, -1.79229525e+00,\n       -1.62233751e+00, -1.54355188e+00, -2.73286468e-01, -7.07681992e-02,\n       -4.01723759e-02, -1.89081405e-04, -1.99239039e-06, -1.77292186e-08,\n       -5.27604046e-05, -1.40138929e-09, -7.22192420e-12, -1.85800578e+00,\n       -1.74827855e+00, -1.69833421e+00, -1.80089504e+00, -1.63629245e+00,\n       -1.55996392e+00, -1.79229791e+00, -1.62232098e+00, -1.54356694e+00,\n       -2.26444513e-01, -6.95099105e-02, -4.38270418e-02, -1.93091715e-04,\n       -5.94341187e-07, -5.13272243e-08, -5.27603816e-05, -1.40138929e-09,\n       -7.22228945e-12, -1.85813991e+00, -1.74868489e+00, -1.69869778e+00,\n       -1.80120281e+00, -1.63718127e+00, -1.56075841e+00, -1.79230590e+00,\n       -1.62231528e+00, -1.54354888e+00, -2.31118160e-01, -6.72895706e-02,\n       -3.31047675e-02, -1.81145136e-04, -7.23912678e-08, -1.65023654e-08,\n       -5.27603816e-05, -1.40138879e-09, -7.22227571e-12, -1.85813215e+00,\n       -1.74868516e+00, -1.69875978e+00, -1.80146519e+00, -1.63753584e+00,\n       -1.56095762e+00, -1.79227676e+00, -1.62230960e+00, -1.54356694e+00,\n       -2.57636676e-01, -7.05007196e-02, -3.74147908e-02, -1.97567144e-04,\n       -1.95206616e-07, -1.60509156e-08, -5.27603769e-05, -1.39971060e-09,\n       -7.22228446e-12, -1.85790911e+00, -1.74846328e+00, -1.69869057e+00,\n       -1.80146519e+00, -1.63753584e+00, -1.56095762e+00, -1.79227152e+00,\n       -1.62232602e+00, -1.54354888e+00, -2.82100682e-01, -7.51404285e-02,\n       -4.41338027e-02, -8.10225871e-05, -3.39983874e-07, -6.52459352e-08,\n       -5.27603848e-05, -1.40138929e-09, -7.22228446e-12, -1.85780120e+00,\n       -1.74831213e+00, -1.69836000e+00, -1.80146519e+00, -1.63753584e+00,\n       -1.56095762e+00, -1.79229525e+00, -1.62231813e+00, -1.54354888e+00,\n       -2.50599248e-01, -7.07240305e-02, -3.91323138e-02, -2.66209955e-04,\n       -5.80233379e-08, -1.58146005e-08, -5.27577831e-05, -1.40132026e-09,\n       -7.22228446e-12, -1.85632050e+00, -1.74600679e+00, -1.69555577e+00,\n       -1.80169896e+00, -1.63801750e+00, -1.56148832e+00, -1.79228203e+00,\n       -1.62232957e+00, -1.54355188e+00, -2.48797013e-01, -7.44200286e-02,\n       -4.68700569e-02, -3.22305658e-04, -1.12333074e-07, -2.06236233e-09,\n       -5.27577831e-05, -1.39964192e-09, -7.22192420e-12, -1.85617900e+00,\n       -1.74567689e+00, -1.69530888e+00, -1.80220485e+00, -1.63845322e+00,\n       -1.56239988e+00, -1.79227265e+00, -1.62233972e+00, -1.54356566e+00,\n       -2.87440761e-01, -7.51747530e-02, -3.95598674e-02, -1.78904132e-04,\n       -4.40406051e-07, -4.36487247e-08, -5.27577831e-05, -1.40132026e-09,\n       -7.22192420e-12, -1.85617900e+00, -1.74567689e+00, -1.69530888e+00,\n       -1.80230801e+00, -1.63880376e+00, -1.56290316e+00, -1.79227527e+00,\n       -1.62229693e+00, -1.54357171e+00, -3.85465951e-01, -1.23707197e-01,\n       -8.61617215e-02, -3.38286439e-04, -1.15276710e-05, -1.34166111e-06,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86491120e+00,\n       -1.76242880e+00, -1.71496086e+00, -1.79971239e+00, -1.63690232e+00,\n       -1.56215858e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.59087556e-01, -1.23811144e-01, -6.83466613e-02, -1.55049912e-04,\n       -5.50492198e-07, -1.33033409e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86075933e+00, -1.75669483e+00, -1.70812958e+00,\n       -1.79908672e+00, -1.63496017e+00, -1.55786049e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.67576655e-01, -1.13728930e-01,\n       -6.76319965e-02, -1.99870654e-04, -5.14301200e-07, -4.77840381e-08,\n       -5.26195207e-05, -1.39770003e-09, -7.20193137e-12, -1.86028871e+00,\n       -1.75544801e+00, -1.70660962e+00, -1.79987324e+00, -1.63274593e+00,\n       -1.55565871e+00, -1.79180632e+00, -1.62134880e+00, -1.54231144e+00,\n       -3.04264702e-01, -9.08560424e-02, -5.13476635e-02, -1.61064187e-04,\n       -3.10632652e-07, -3.08937829e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85973806e+00, -1.75523195e+00, -1.70710177e+00,\n       -1.79921806e+00, -1.63346464e+00, -1.55607787e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.97731666e-01, -8.84252290e-02,\n       -5.02152599e-02, -8.80806146e-05, -6.53189614e-08, -3.61980623e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85973806e+00,\n       -1.75516387e+00, -1.70715236e+00, -1.79906148e+00, -1.63543124e+00,\n       -1.55955849e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.04615925e-01, -9.28974905e-02, -5.15195713e-02, -1.50884159e-04,\n       -2.87886429e-08, -3.27346341e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85195456e+00, -1.73914212e+00, -1.68794224e+00,\n       -1.79903721e+00, -1.63512259e+00, -1.55901329e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.04613074e-01, -1.11599753e-01,\n       -7.02719596e-02, -1.22730910e-04, -1.92895507e-07, -9.84925905e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85346120e+00,\n       -1.74110403e+00, -1.68992571e+00, -1.79930856e+00, -1.63551106e+00,\n       -1.55977571e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.83823060e-01, -9.60441109e-02, -4.62195086e-02, -1.16863672e-04,\n       -8.76049097e-08, -3.19292203e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85354779e+00, -1.74087743e+00, -1.68919482e+00,\n       -1.79965452e+00, -1.63647866e+00, -1.55939472e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.76163791e-01, -9.76905682e-02,\n       -5.40241344e-02, -1.06521514e-04, -4.07109073e-07, -7.92943332e-09,\n       -5.26006947e-05, -1.39714777e-09, -7.20043033e-12, -1.85232466e+00,\n       -1.73739234e+00, -1.68456991e+00, -1.79955872e+00, -1.63649531e+00,\n       -1.56049406e+00, -1.79171138e+00, -1.62112639e+00, -1.54202455e+00,\n       -2.86540460e-01, -9.21299048e-02, -5.57952247e-02, -7.59621070e-05,\n       -2.69206229e-09, -1.82037472e-10, -5.25998407e-05, -1.39712510e-09,\n       -7.20060501e-12, -1.85145190e+00, -1.73677341e+00, -1.68424374e+00,\n       -1.79817265e+00, -1.63279830e+00, -1.55648533e+00, -1.79170991e+00,\n       -1.62112506e+00, -1.54202386e+00, -2.73415111e-01, -7.96661575e-02,\n       -4.79473757e-02, -9.29861526e-05, -1.26929554e-07, -1.78251141e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85130819e+00,\n       -1.73601182e+00, -1.68278923e+00, -1.79626935e+00, -1.62967200e+00,\n       -1.55249070e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.78348751e-01, -8.76892035e-02, -5.35691980e-02, -1.32037361e-04,\n       -1.29414078e-07, -1.39907345e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85203563e+00, -1.73719642e+00, -1.68432859e+00,\n       -1.79906713e+00, -1.63400986e+00, -1.55578409e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.54464738e-01, -8.27270571e-02,\n       -4.81114835e-02, -8.67254244e-05, -1.19068359e-08, -2.09522191e-09,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.85201793e+00,\n       -1.73703901e+00, -1.68411804e+00, -1.79786292e+00, -1.63098978e+00,\n       -1.55296951e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.45517981e-01, -7.58788520e-02, -4.47073685e-02, -7.15427235e-05,\n       -1.44384662e-07, -1.00119312e-09, -5.25998407e-05, -1.39712509e-09,\n       -7.20030635e-12, -1.85195434e+00, -1.73698978e+00, -1.68419075e+00,\n       -1.80032380e+00, -1.63795987e+00, -1.56268019e+00, -1.79168366e+00,\n       -1.62110131e+00, -1.54200171e+00, -2.56154481e-01, -7.16909427e-02,\n       -4.09234168e-02, -9.04922015e-05, -1.52471390e-07, -7.00503855e-09,\n       -5.25998407e-05, -1.39712511e-09, -7.20092928e-12, -1.85195434e+00,\n       -1.73698978e+00, -1.68419075e+00, -1.80010653e+00, -1.63751414e+00,\n       -1.56216589e+00, -1.79168366e+00, -1.62110131e+00, -1.54200154e+00,\n       -2.70731548e-01, -8.49677994e-02, -4.76133667e-02, -7.37268749e-05,\n       -4.66837786e-08, -1.25667210e-09, -5.25972785e-05, -1.39705706e-09,\n       -7.19995617e-12, -1.85182745e+00, -1.73658456e+00, -1.68376910e+00,\n       -1.79716116e+00, -1.63166081e+00, -1.55508580e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.52660856e-01, -7.64102918e-02,\n       -4.36964945e-02, -9.73097262e-05, -4.37468190e-08, -1.40119418e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85018839e+00,\n       -1.73412321e+00, -1.68100096e+00, -1.79313404e+00, -1.62411694e+00,\n       -1.54583046e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.75172102e-01, -8.80086001e-02, -4.90677200e-02, -1.21191122e-04,\n       -1.16123671e-07, -2.57334617e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85008488e+00, -1.73420258e+00, -1.68112329e+00,\n       -1.79343953e+00, -1.62469605e+00, -1.54653583e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.57890737e-01, -7.74653278e-02,\n       -4.06449009e-02, -1.20343903e-04, -5.68731553e-08, -1.21088149e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84954941e+00,\n       -1.73306583e+00, -1.67977946e+00, -1.79375683e+00, -1.62515117e+00,\n       -1.54701978e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.66799306e-01, -7.94736948e-02, -4.57994822e-02, -1.36802397e-04,\n       -1.17127434e-07, -8.09385353e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84920590e+00, -1.73199082e+00, -1.67827611e+00,\n       -1.79375683e+00, -1.62514758e+00, -1.54702810e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.64433771e-01, -7.31522336e-02,\n       -4.73096883e-02, -9.42364239e-05, -1.09630411e-08, -4.37853734e-11,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84915300e+00,\n       -1.73093549e+00, -1.67851382e+00, -1.79374789e+00, -1.62535041e+00,\n       -1.54701978e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.44123916e-01, -8.11120628e-02, -3.91589957e-02, -9.08317736e-05,\n       -4.59551968e-09, -3.36990807e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84920796e+00, -1.73197260e+00, -1.67569328e+00,\n       -1.79410874e+00, -1.62477916e+00, -1.54632276e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.90607598e-01, -6.20783993e-02,\n       -4.90088595e-02, -7.10724407e-05, -1.18773259e-07, -7.47351293e-11,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.84980736e+00,\n       -1.73087293e+00, -1.67782722e+00, -1.79449077e+00, -1.62568741e+00,\n       -1.54626471e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'mean_train_score': array([-4.42408416e-01, -1.56569127e-01, -9.63129197e-02, -1.82893260e-03,\n       -6.85556374e-05, -7.99815188e-06, -5.27613877e-05, -1.40142471e-09,\n       -7.22250805e-12, -1.88344336e+00, -1.79864574e+00, -1.75948228e+00,\n       -1.80270939e+00, -1.64322083e+00, -1.56911432e+00, -1.79070280e+00,\n       -1.62037265e+00, -1.54139330e+00, -3.46354997e-01, -1.18845976e-01,\n       -7.01761606e-02, -1.88380594e-04, -3.50640459e-06, -7.76078608e-07,\n       -5.25762208e-05, -1.39649894e-09, -7.19766394e-12, -1.86483006e+00,\n       -1.76355029e+00, -1.71701042e+00, -1.79620367e+00, -1.63073958e+00,\n       -1.55356929e+00, -1.79056614e+00, -1.62012395e+00, -1.54108919e+00,\n       -3.12196536e-01, -1.04201321e-01, -6.26894116e-02, -1.89218755e-04,\n       -1.28944359e-06, -2.85233774e-07, -5.25645064e-05, -1.39618663e-09,\n       -7.19558137e-12, -1.86319917e+00, -1.76021515e+00, -1.71302578e+00,\n       -1.79539943e+00, -1.62900436e+00, -1.55147923e+00, -1.79054822e+00,\n       -1.62008101e+00, -1.54103019e+00, -2.93171142e-01, -9.02431012e-02,\n       -5.20474310e-02, -1.60156807e-04, -6.89876872e-07, -6.99806954e-08,\n       -5.25668444e-05, -1.39624292e-09, -7.19579226e-12, -1.86064952e+00,\n       -1.75540425e+00, -1.70729531e+00, -1.79567481e+00, -1.62966527e+00,\n       -1.55212008e+00, -1.79056597e+00, -1.62012103e+00, -1.54108466e+00,\n       -2.84634751e-01, -9.07916165e-02, -5.22139299e-02, -1.54555131e-04,\n       -8.13128495e-07, -1.69143188e-07, -5.25635819e-05, -1.39616208e-09,\n       -7.19545671e-12, -1.86081804e+00, -1.75594432e+00, -1.70832781e+00,\n       -1.79572642e+00, -1.62915058e+00, -1.55179755e+00, -1.79053507e+00,\n       -1.62006207e+00, -1.54101216e+00, -2.92760773e-01, -8.89677434e-02,\n       -4.94931388e-02, -1.65017710e-04, -1.09078932e-06, -1.48002030e-07,\n       -5.25869415e-05, -1.39641061e-09, -7.20238597e-12, -1.85950327e+00,\n       -1.75379001e+00, -1.70592998e+00, -1.79543549e+00, -1.62913414e+00,\n       -1.55199417e+00, -1.79053514e+00, -1.62006214e+00, -1.54101222e+00,\n       -2.76250754e-01, -8.81628244e-02, -5.08347262e-02, -1.45070380e-04,\n       -7.84917082e-07, -4.93785110e-08, -5.26011448e-05, -1.39702259e-09,\n       -7.19875679e-12, -1.85862609e+00, -1.75243893e+00, -1.70380941e+00,\n       -1.79525240e+00, -1.62902239e+00, -1.55184817e+00, -1.79053554e+00,\n       -1.62007022e+00, -1.54101256e+00, -2.75577769e-01, -8.65100389e-02,\n       -4.79757689e-02, -1.72011922e-04, -8.16342637e-07, -1.11543017e-07,\n       -5.25975104e-05, -1.39687669e-09, -7.20061830e-12, -1.85786144e+00,\n       -1.75080771e+00, -1.70182313e+00, -1.79485838e+00, -1.62827714e+00,\n       -1.55093337e+00, -1.79054377e+00, -1.62006990e+00, -1.54101985e+00,\n       -2.70295768e-01, -7.94593765e-02, -4.45829376e-02, -1.52023121e-04,\n       -4.05691661e-07, -9.28059325e-08, -5.25841672e-05, -1.39670961e-09,\n       -7.19827635e-12, -1.85766284e+00, -1.75040703e+00, -1.70142586e+00,\n       -1.79492351e+00, -1.62828201e+00, -1.55099224e+00, -1.79055778e+00,\n       -1.62010398e+00, -1.54106347e+00, -2.66080115e-01, -8.23510978e-02,\n       -4.70720821e-02, -1.53433326e-04, -3.80015062e-07, -5.50192826e-08,\n       -5.25698138e-05, -1.39633010e-09, -7.19632410e-12, -1.85734425e+00,\n       -1.74957888e+00, -1.70027417e+00, -1.79518232e+00, -1.62909456e+00,\n       -1.55209092e+00, -1.79055341e+00, -1.62009679e+00, -1.54105380e+00,\n       -2.58106193e-01, -7.55729771e-02, -4.45695585e-02, -1.64644964e-04,\n       -2.35373298e-07, -7.73717524e-08, -5.25767087e-05, -1.39651075e-09,\n       -7.19725644e-12, -1.85724659e+00, -1.74924513e+00, -1.69981628e+00,\n       -1.79531082e+00, -1.62932514e+00, -1.55242918e+00, -1.79056153e+00,\n       -1.62011527e+00, -1.54107891e+00, -2.61265810e-01, -8.08229514e-02,\n       -4.65555292e-02, -1.60456654e-04, -6.01927645e-07, -4.38146129e-08,\n       -5.25824446e-05, -1.39665619e-09, -7.19800243e-12, -1.85635636e+00,\n       -1.74785482e+00, -1.69829868e+00, -1.79509905e+00, -1.62880950e+00,\n       -1.55170501e+00, -1.79059729e+00, -1.62019525e+00, -1.54116995e+00,\n       -2.53029787e-01, -7.41419995e-02, -4.27150418e-02, -1.38154799e-04,\n       -2.06719925e-07, -5.50136850e-08, -5.25758660e-05, -1.39666310e-09,\n       -7.19803846e-12, -1.85606339e+00, -1.74722951e+00, -1.69725063e+00,\n       -1.79504863e+00, -1.62856077e+00, -1.55134619e+00, -1.79059683e+00,\n       -1.62018654e+00, -1.54116989e+00, -2.52993035e-01, -7.93676358e-02,\n       -4.33620876e-02, -1.28405777e-04, -1.49817219e-07, -2.06987251e-08,\n       -5.25824414e-05, -1.39666311e-09, -7.19803846e-12, -1.85572848e+00,\n       -1.74641212e+00, -1.69606732e+00, -1.79506162e+00, -1.62845644e+00,\n       -1.55130593e+00, -1.79059453e+00, -1.62019499e+00, -1.54117388e+00,\n       -2.53456924e-01, -7.29187885e-02, -4.06061458e-02, -1.50376225e-04,\n       -1.53025132e-07, -2.27917598e-08, -5.25824446e-05, -1.39666317e-09,\n       -7.19803923e-12, -1.85545814e+00, -1.74589537e+00, -1.69533954e+00,\n       -1.79514443e+00, -1.62871896e+00, -1.55164875e+00, -1.79059728e+00,\n       -1.62018908e+00, -1.54117186e+00, -2.50656836e-01, -7.26520860e-02,\n       -4.08256537e-02, -1.31352403e-04, -4.47016308e-07, -2.43672549e-08,\n       -5.25890589e-05, -1.39683903e-09, -7.19890912e-12, -1.85564364e+00,\n       -1.74584081e+00, -1.69505392e+00, -1.79559000e+00, -1.62957451e+00,\n       -1.55241961e+00, -1.79064397e+00, -1.62027936e+00, -1.54128835e+00,\n       -2.35028703e-01, -6.85061379e-02, -3.72364837e-02, -1.27187097e-04,\n       -1.55225349e-07, -1.95773663e-08, -5.25914412e-05, -1.39694251e-09,\n       -7.19924807e-12, -1.85477752e+00, -1.74458582e+00, -1.69344745e+00,\n       -1.79625833e+00, -1.63063910e+00, -1.55366111e+00, -1.79063102e+00,\n       -1.62025130e+00, -1.54124740e+00, -2.38799372e-01, -6.63858476e-02,\n       -3.55162423e-02, -1.13730419e-04, -1.07135620e-07, -8.73485988e-09,\n       -5.25881973e-05, -1.39681585e-09, -7.19882510e-12, -1.85486192e+00,\n       -1.74453584e+00, -1.69332903e+00, -1.79638044e+00, -1.63080783e+00,\n       -1.55387457e+00, -1.79063060e+00, -1.62025125e+00, -1.54125836e+00,\n       -2.39367301e-01, -6.34681817e-02, -3.61132637e-02, -1.59987431e-04,\n       -1.60734852e-07, -9.32050683e-09, -5.25881968e-05, -1.39664803e-09,\n       -7.19882598e-12, -1.85457830e+00, -1.74412752e+00, -1.69280777e+00,\n       -1.79654413e+00, -1.63104140e+00, -1.55412012e+00, -1.79063057e+00,\n       -1.62025038e+00, -1.54125167e+00, -2.49972313e-01, -6.61253074e-02,\n       -3.58574638e-02, -1.10236543e-04, -1.21494874e-07, -1.69198206e-08,\n       -5.25881976e-05, -1.39681590e-09, -7.19882598e-12, -1.85476106e+00,\n       -1.74480012e+00, -1.69388663e+00, -1.79633268e+00, -1.63070318e+00,\n       -1.55376594e+00, -1.79063095e+00, -1.62025316e+00, -1.54124953e+00,\n       -2.41663032e-01, -6.33615246e-02, -3.36242433e-02, -1.33951045e-04,\n       -1.10171831e-07, -1.35349120e-08, -5.25879374e-05, -1.39716550e-09,\n       -7.19956060e-12, -1.85466361e+00, -1.74474484e+00, -1.69406243e+00,\n       -1.79602236e+00, -1.62994099e+00, -1.55295320e+00, -1.79062294e+00,\n       -1.62024378e+00, -1.54123754e+00, -2.23536290e-01, -6.44183648e-02,\n       -3.50918480e-02, -1.61502351e-04, -2.24777946e-07, -9.37322988e-09,\n       -5.25879374e-05, -1.39684864e-09, -7.19878995e-12, -1.85498925e+00,\n       -1.74550629e+00, -1.69500336e+00, -1.79661829e+00, -1.63108084e+00,\n       -1.55408239e+00, -1.79062658e+00, -1.62025306e+00, -1.54124947e+00,\n       -2.41394606e-01, -6.58760436e-02, -3.25691430e-02, -1.37983713e-04,\n       -1.87101831e-07, -2.77472838e-08, -5.25949154e-05, -1.39726892e-09,\n       -7.19891848e-12, -1.85545715e+00, -1.74588151e+00, -1.69515803e+00,\n       -1.79714855e+00, -1.63207359e+00, -1.55547969e+00, -1.79063882e+00,\n       -1.62026844e+00, -1.54127364e+00, -3.79407125e-01, -1.30556653e-01,\n       -8.16618759e-02, -5.01619845e-04, -1.14821858e-05, -2.74426697e-06,\n       -5.26053198e-05, -1.39727070e-09, -7.20219142e-12, -1.86380426e+00,\n       -1.76177292e+00, -1.71488300e+00, -1.79895275e+00, -1.63539864e+00,\n       -1.55967187e+00, -1.79087500e+00, -1.62046523e+00, -1.54143550e+00,\n       -3.37326329e-01, -1.18535597e-01, -6.73236941e-02, -1.66837659e-04,\n       -1.21178920e-06, -2.65653472e-07, -5.25635819e-05, -1.39616890e-09,\n       -7.19549195e-12, -1.85870373e+00, -1.75253835e+00, -1.70329283e+00,\n       -1.79693058e+00, -1.63217963e+00, -1.55559976e+00, -1.79053514e+00,\n       -1.62006214e+00, -1.54101222e+00, -3.15924006e-01, -1.09431933e-01,\n       -6.62409509e-02, -1.19293623e-04, -2.34183030e-07, -6.90616224e-08,\n       -5.25658061e-05, -1.39622638e-09, -7.19565423e-12, -1.85730936e+00,\n       -1.74890759e+00, -1.69848568e+00, -1.79648647e+00, -1.63083530e+00,\n       -1.55403872e+00, -1.79054741e+00, -1.62008688e+00, -1.54104330e+00,\n       -2.91020716e-01, -9.83654328e-02, -5.53351567e-02, -1.11932700e-04,\n       -1.40146199e-07, -2.23640355e-08, -5.25830356e-05, -1.39667879e-09,\n       -7.19812020e-12, -1.85630360e+00, -1.74680176e+00, -1.69610271e+00,\n       -1.79581250e+00, -1.62957946e+00, -1.55238789e+00, -1.79058843e+00,\n       -1.62015409e+00, -1.54110831e+00, -2.67688297e-01, -8.28451119e-02,\n       -4.63883725e-02, -1.12652767e-04, -1.22208379e-07, -7.78191051e-09,\n       -5.25896023e-05, -1.39803611e-09, -7.19835953e-12, -1.85577200e+00,\n       -1.74621257e+00, -1.69569250e+00, -1.79660297e+00, -1.63045563e+00,\n       -1.55323796e+00, -1.79054930e+00, -1.62008866e+00, -1.54104455e+00,\n       -2.80064123e-01, -8.78604790e-02, -5.16736249e-02, -1.21564535e-04,\n       -1.57414176e-07, -2.93361079e-08, -5.25726659e-05, -1.39728345e-09,\n       -7.20182866e-12, -1.85543615e+00, -1.74555864e+00, -1.69475254e+00,\n       -1.79650920e+00, -1.63024897e+00, -1.55302806e+00, -1.79061006e+00,\n       -1.62019016e+00, -1.54115089e+00, -2.91939825e-01, -9.28034415e-02,\n       -5.33650511e-02, -1.02299271e-04, -7.26727780e-08, -3.64794752e-08,\n       -5.25689950e-05, -1.39630586e-09, -7.20072515e-12, -1.85574120e+00,\n       -1.74594119e+00, -1.69569385e+00, -1.79618449e+00, -1.62997146e+00,\n       -1.55278392e+00, -1.79059305e+00, -1.62016147e+00, -1.54111317e+00,\n       -2.91616078e-01, -9.76444058e-02, -5.60608266e-02, -1.00985789e-04,\n       -2.21108886e-07, -2.44775748e-08, -5.26446479e-05, -1.39831530e-09,\n       -7.20655422e-12, -1.85539721e+00, -1.74542134e+00, -1.69512467e+00,\n       -1.79712288e+00, -1.63195474e+00, -1.55499355e+00, -1.79063861e+00,\n       -1.62019842e+00, -1.54114828e+00, -2.91319285e-01, -9.16877066e-02,\n       -5.42945113e-02, -1.04973045e-04, -3.53173685e-07, -4.52665672e-08,\n       -5.26185187e-05, -1.39762128e-09, -7.20297948e-12, -1.85629817e+00,\n       -1.74649021e+00, -1.69603821e+00, -1.79699189e+00, -1.63151541e+00,\n       -1.55484719e+00, -1.79062141e+00, -1.62023144e+00, -1.54121596e+00,\n       -2.90555704e-01, -8.88656122e-02, -5.02773773e-02, -1.05742286e-04,\n       -1.55719813e-07, -1.26303691e-08, -5.25640943e-05, -1.39617569e-09,\n       -7.19555673e-12, -1.85545700e+00, -1.74506916e+00, -1.69424239e+00,\n       -1.79536092e+00, -1.62893379e+00, -1.55180385e+00, -1.79053904e+00,\n       -1.62006458e+00, -1.54101460e+00, -2.73822267e-01, -8.43021859e-02,\n       -4.88210856e-02, -9.99786080e-05, -1.21855476e-07, -1.67834618e-08,\n       -5.25791278e-05, -1.39650277e-09, -7.19727692e-12, -1.85534706e+00,\n       -1.74479035e+00, -1.69373252e+00, -1.79531075e+00, -1.62887093e+00,\n       -1.55162694e+00, -1.79053612e+00, -1.62006316e+00, -1.54101507e+00,\n       -2.74141219e-01, -8.17295935e-02, -4.71136683e-02, -1.31185404e-04,\n       -1.67800198e-07, -2.70011230e-08, -5.25755760e-05, -1.39695193e-09,\n       -7.19707356e-12, -1.85510482e+00, -1.74405166e+00, -1.69245798e+00,\n       -1.79552700e+00, -1.62896234e+00, -1.55130791e+00, -1.79054272e+00,\n       -1.62006909e+00, -1.54101875e+00, -2.58343980e-01, -7.74204778e-02,\n       -4.51811058e-02, -9.98777133e-05, -6.07885634e-08, -1.62726284e-08,\n       -5.26203339e-05, -1.39784999e-09, -7.20442766e-12, -1.85523361e+00,\n       -1.74367537e+00, -1.69183019e+00, -1.79562144e+00, -1.62943809e+00,\n       -1.55212914e+00, -1.79055206e+00, -1.62009265e+00, -1.54104804e+00,\n       -2.64876711e-01, -7.78872998e-02, -4.16096772e-02, -8.62340414e-05,\n       -5.42084538e-08, -1.34196458e-08, -5.25877170e-05, -1.39764159e-09,\n       -7.20428810e-12, -1.85448890e+00, -1.74230892e+00, -1.69028066e+00,\n       -1.79506101e+00, -1.62885247e+00, -1.55164910e+00, -1.79054752e+00,\n       -1.62008635e+00, -1.54104215e+00, -2.62265278e-01, -7.61110858e-02,\n       -4.19729501e-02, -9.26192826e-05, -1.08254960e-07, -8.87806053e-09,\n       -5.25953360e-05, -1.39729479e-09, -7.20200476e-12, -1.85443054e+00,\n       -1.74252053e+00, -1.69060852e+00, -1.79526628e+00, -1.62919447e+00,\n       -1.55192918e+00, -1.79054752e+00, -1.62008635e+00, -1.54104213e+00,\n       -2.61655409e-01, -7.28816613e-02, -4.15135144e-02, -9.61472493e-05,\n       -3.83689483e-08, -4.28727318e-09, -5.25675698e-05, -1.39631494e-09,\n       -7.19599991e-12, -1.85398606e+00, -1.74157417e+00, -1.68967686e+00,\n       -1.79484942e+00, -1.62816151e+00, -1.55085433e+00, -1.79053532e+00,\n       -1.62006229e+00, -1.54101244e+00, -2.46100193e-01, -7.55820636e-02,\n       -3.97073971e-02, -8.49528737e-05, -7.47624677e-08, -1.22999509e-08,\n       -5.25773435e-05, -1.39642965e-09, -7.19683644e-12, -1.85242949e+00,\n       -1.73926106e+00, -1.68650089e+00, -1.79514996e+00, -1.62843042e+00,\n       -1.55086568e+00, -1.79056597e+00, -1.62011553e+00, -1.54108308e+00,\n       -2.59055531e-01, -7.67048909e-02, -4.17979690e-02, -8.69329473e-05,\n       -4.77656089e-08, -3.64535717e-09, -5.25773435e-05, -1.39642965e-09,\n       -7.19725672e-12, -1.85241883e+00, -1.73927831e+00, -1.68653679e+00,\n       -1.79517696e+00, -1.62849971e+00, -1.55098445e+00, -1.79056782e+00,\n       -1.62011727e+00, -1.54108302e+00, -2.59218025e-01, -7.29638619e-02,\n       -3.84996160e-02, -8.65938716e-05, -6.40327081e-08, -1.26556590e-08,\n       -5.25770928e-05, -1.39692936e-09, -7.19797451e-12, -1.85224444e+00,\n       -1.73856186e+00, -1.68568583e+00, -1.79510594e+00, -1.62840279e+00,\n       -1.55083164e+00, -1.79056791e+00, -1.62012977e+00, -1.54108537e+00,\n       -2.43810804e-01, -7.29593551e-02, -3.92787791e-02, -9.41899074e-05,\n       -4.28837377e-08, -4.53285120e-09, -5.25699900e-05, -1.39659016e-09,\n       -7.19835704e-12, -1.85203042e+00, -1.73784370e+00, -1.68505947e+00,\n       -1.79470666e+00, -1.62823066e+00, -1.55094747e+00, -1.79055900e+00,\n       -1.62010091e+00, -1.54106643e+00, -2.49818401e-01, -7.32605647e-02,\n       -3.89813807e-02, -8.13266600e-05, -1.42739422e-08, -4.19738521e-09,\n       -5.25882498e-05, -1.39664865e-09, -7.19800722e-12, -1.85168780e+00,\n       -1.73643440e+00, -1.68440394e+00, -1.79466302e+00, -1.62816427e+00,\n       -1.55066483e+00, -1.79056069e+00, -1.62010376e+00, -1.54101226e+00,\n       -2.48181368e-01, -7.16515722e-02, -3.80440634e-02, -8.88849039e-05,\n       -5.54944769e-08, -6.26505263e-09, -5.25942313e-05, -1.39630795e-09,\n       -7.20001667e-12, -1.85213216e+00, -1.73807609e+00, -1.68240925e+00,\n       -1.79447469e+00, -1.62793772e+00, -1.55095327e+00, -1.79054062e+00,\n       -1.62010361e+00, -1.54102556e+00, -2.50739844e-01, -7.86771242e-02,\n       -4.02957927e-02, -9.47364028e-05, -4.35049038e-08, -1.46573202e-09,\n       -5.25750006e-05, -1.39675703e-09, -7.19722928e-12, -1.85156673e+00,\n       -1.73759340e+00, -1.68467895e+00, -1.79415173e+00, -1.62847638e+00,\n       -1.55143370e+00, -1.79056507e+00, -1.62011599e+00, -1.54101226e+00]), 'std_train_score': array([2.30854501e-02, 1.03011955e-02, 5.99603210e-03, 1.32799621e-03,\n       1.10993819e-04, 4.28531106e-06, 4.52263444e-07, 1.20191202e-11,\n       6.19473824e-14, 3.57971402e-03, 7.07724014e-03, 8.86804736e-03,\n       4.14898533e-03, 7.69179188e-03, 9.32898729e-03, 2.19967833e-03,\n       1.97656803e-03, 1.88838793e-03, 2.37274044e-02, 9.33323277e-03,\n       6.75890780e-03, 1.08237625e-04, 3.36746113e-06, 1.17108813e-06,\n       6.34495532e-08, 1.68611327e-12, 8.20392632e-15, 3.09332522e-03,\n       5.39458156e-03, 6.63709305e-03, 3.17740807e-03, 5.06107198e-03,\n       6.00889761e-03, 2.23074802e-03, 1.99105593e-03, 1.88041277e-03,\n       2.79174512e-02, 1.18663494e-02, 8.35997208e-03, 1.20581491e-04,\n       1.66905972e-06, 3.53432099e-07, 6.70736359e-08, 1.78151319e-12,\n       9.18666606e-15, 2.97579006e-03, 5.46166090e-03, 6.75428651e-03,\n       3.17153289e-03, 4.25180563e-03, 4.39160842e-03, 2.26871533e-03,\n       2.05876145e-03, 1.95831496e-03, 1.63457954e-02, 8.44835705e-03,\n       7.99531991e-03, 8.31868802e-05, 6.21843604e-07, 7.11929317e-08,\n       6.86325056e-08, 1.81854645e-12, 9.31884957e-15, 4.35577118e-03,\n       7.55353283e-03, 8.93070966e-03, 3.99176241e-03, 6.01724483e-03,\n       6.54900829e-03, 2.28001544e-03, 2.08622537e-03, 1.99724981e-03,\n       1.97168925e-02, 9.10560029e-03, 8.67081641e-03, 1.27178223e-04,\n       1.48380196e-06, 2.83920341e-07, 6.62843858e-08, 1.76054896e-12,\n       9.07842878e-15, 3.77243265e-03, 6.44815275e-03, 7.79025073e-03,\n       4.13228155e-03, 5.57742104e-03, 6.31678598e-03, 2.25792294e-03,\n       2.04295095e-03, 1.94326644e-03, 2.04040384e-02, 1.08402346e-02,\n       6.65789887e-03, 1.04446888e-04, 1.83700216e-06, 3.57257810e-07,\n       1.04301986e-07, 2.02492007e-12, 2.40188564e-14, 3.61773932e-03,\n       5.96456245e-03, 7.30586360e-03, 3.60719267e-03, 5.42887492e-03,\n       6.54303934e-03, 2.25796084e-03, 2.04298524e-03, 1.94329906e-03,\n       2.82579483e-02, 8.45413132e-03, 6.09436052e-03, 9.76520935e-05,\n       1.40546990e-06, 7.70801511e-08, 1.26951558e-07, 3.31654609e-12,\n       1.37288429e-14, 3.88001932e-03, 5.14494277e-03, 6.44016780e-03,\n       3.89245597e-03, 5.96316601e-03, 7.03785795e-03, 2.25820606e-03,\n       2.04727093e-03, 1.94351012e-03, 1.44062505e-02, 9.34128495e-03,\n       5.11131281e-03, 1.32116448e-04, 8.59610036e-07, 1.53554763e-07,\n       1.25287079e-07, 2.71321491e-12, 1.74176424e-14, 3.83946111e-03,\n       4.78690747e-03, 5.62066616e-03, 3.61077507e-03, 5.31917850e-03,\n       6.21867456e-03, 2.26252884e-03, 2.04709586e-03, 1.94734031e-03,\n       1.79164978e-02, 1.23648543e-02, 8.37918537e-03, 6.33712860e-05,\n       5.17684361e-07, 1.19348421e-07, 9.31368638e-08, 2.47376280e-12,\n       1.27788195e-14, 3.71446995e-03, 5.07586236e-03, 6.23497287e-03,\n       3.78626878e-03, 5.78900704e-03, 6.82876947e-03, 2.27517544e-03,\n       2.07599046e-03, 1.98485389e-03, 1.53454297e-02, 1.11043673e-02,\n       6.62927782e-03, 9.23658025e-05, 5.11948966e-07, 7.21271204e-08,\n       7.28073870e-08, 1.93499526e-12, 9.98679174e-15, 3.27340269e-03,\n       4.69747637e-03, 5.86072005e-03, 3.63810931e-03, 5.62908059e-03,\n       6.71934682e-03, 2.27167526e-03, 2.07035803e-03, 1.97729302e-03,\n       1.45189514e-02, 4.76209779e-03, 1.88992456e-03, 1.39686034e-04,\n       3.34238277e-07, 9.49694740e-08, 7.87432823e-08, 2.09147887e-12,\n       1.07855343e-14, 3.34784148e-03, 4.93362807e-03, 6.30081342e-03,\n       3.61471791e-03, 5.56819634e-03, 6.72909848e-03, 2.27599112e-03,\n       2.08060480e-03, 1.99146416e-03, 2.11111389e-02, 1.10680782e-02,\n       6.31484080e-03, 1.22748278e-04, 6.44122967e-07, 6.54377678e-08,\n       8.92939373e-08, 2.35800810e-12, 1.21340922e-14, 4.16185252e-03,\n       6.23518311e-03, 7.99677162e-03, 3.71892985e-03, 5.64557493e-03,\n       6.68008519e-03, 2.29626298e-03, 2.14021425e-03, 2.07499702e-03,\n       1.53221962e-02, 5.10709423e-03, 5.00393542e-03, 7.08514129e-05,\n       2.73372119e-07, 5.56795112e-08, 7.76000014e-08, 2.37171301e-12,\n       1.22053871e-14, 4.41044831e-03, 6.61474126e-03, 8.05956535e-03,\n       3.73852393e-03, 5.69831216e-03, 6.70646354e-03, 2.29612377e-03,\n       2.13674716e-03, 2.07498084e-03, 3.24279452e-02, 1.18109856e-02,\n       7.92434809e-03, 6.05853759e-05, 3.48956948e-07, 2.83741379e-08,\n       8.92876420e-08, 2.37173195e-12, 1.22053871e-14, 4.38849123e-03,\n       6.71303359e-03, 8.17866164e-03, 3.76659741e-03, 5.52149652e-03,\n       6.40662168e-03, 2.29463383e-03, 2.13952817e-03, 2.07570123e-03,\n       1.76238427e-02, 7.93335390e-03, 5.93245781e-03, 8.44851505e-05,\n       1.69135424e-07, 2.90185346e-08, 8.92939373e-08, 2.37185557e-12,\n       1.22069130e-14, 4.33340049e-03, 6.65901152e-03, 7.97232232e-03,\n       3.86760332e-03, 5.70192000e-03, 6.61506626e-03, 2.29649228e-03,\n       2.13821919e-03, 2.07465037e-03, 1.28429242e-02, 4.68544238e-03,\n       6.01794860e-03, 5.04024875e-05, 5.77255944e-07, 3.43386791e-08,\n       9.35053064e-08, 2.48373763e-12, 1.27153924e-14, 4.08211979e-03,\n       6.59767463e-03, 8.20094202e-03, 4.36875721e-03, 6.82274677e-03,\n       7.65262697e-03, 2.31474276e-03, 2.17881566e-03, 2.13313339e-03,\n       1.27037303e-02, 8.89378653e-03, 4.98391784e-03, 4.07895802e-05,\n       1.80867440e-07, 2.45497081e-08, 9.59838135e-08, 2.59790741e-12,\n       1.30943385e-14, 3.68965906e-03, 6.12947344e-03, 7.74683356e-03,\n       4.22215331e-03, 6.46389033e-03, 7.60869710e-03, 2.30911494e-03,\n       2.16203868e-03, 2.10567650e-03, 1.71489625e-02, 5.30150211e-03,\n       4.19292456e-03, 3.57632718e-05, 1.18069792e-07, 7.57331356e-09,\n       9.27255117e-08, 2.46275755e-12, 1.26718419e-14, 3.91286702e-03,\n       6.50533315e-03, 8.17318207e-03, 4.19938203e-03, 6.48632194e-03,\n       7.66821360e-03, 2.30809100e-03, 2.16177781e-03, 2.11305420e-03,\n       2.46010903e-02, 5.98758844e-03, 4.58630134e-03, 1.01000055e-04,\n       1.23213159e-07, 1.09395339e-08, 9.27246394e-08, 2.18718798e-12,\n       1.26734621e-14, 3.86434077e-03, 6.20552172e-03, 7.96392461e-03,\n       4.31466678e-03, 6.67061961e-03, 7.84355278e-03, 2.30793640e-03,\n       2.16200821e-03, 2.10815711e-03, 2.36516651e-02, 8.27273596e-03,\n       6.96241523e-03, 3.72523230e-05, 1.13140938e-07, 2.11695522e-08,\n       9.27261067e-08, 2.46285048e-12, 1.26734621e-14, 4.02080746e-03,\n       6.49755104e-03, 8.26525847e-03, 4.20198092e-03, 6.49679430e-03,\n       7.62813852e-03, 2.30876884e-03, 2.16315842e-03, 2.10690244e-03,\n       1.86959004e-02, 8.37797328e-03, 4.57601989e-03, 6.37248113e-05,\n       1.47902493e-07, 2.40993288e-08, 9.22450170e-08, 2.94447748e-12,\n       1.34738027e-14, 3.89922735e-03, 6.27962462e-03, 8.04514983e-03,\n       3.87368765e-03, 5.49801984e-03, 6.46814668e-03, 2.30503027e-03,\n       2.15878248e-03, 2.10040198e-03, 1.17125855e-02, 7.65664778e-03,\n       5.56961466e-03, 9.39430425e-05, 3.18875705e-07, 1.26797792e-08,\n       9.22450170e-08, 2.46691923e-12, 1.26070656e-14, 2.53678024e-03,\n       4.00673712e-03, 5.17655574e-03, 3.68129628e-03, 5.53122887e-03,\n       6.29084525e-03, 2.30625060e-03, 2.16401767e-03, 2.10773781e-03,\n       2.33898755e-02, 8.48079763e-03, 4.58070529e-03, 7.43445630e-05,\n       2.00921792e-07, 4.24149615e-08, 9.96017143e-08, 3.11713116e-12,\n       1.26436939e-14, 2.67708544e-03, 4.40934522e-03, 5.40997994e-03,\n       3.70635445e-03, 5.84955129e-03, 7.19552473e-03, 2.29937177e-03,\n       2.14515193e-03, 2.09692849e-03, 1.70754671e-02, 8.60328498e-03,\n       6.01819469e-03, 4.99766057e-04, 1.03823358e-05, 2.55953622e-06,\n       1.07728614e-07, 2.86142666e-12, 1.73255578e-14, 4.22730947e-03,\n       7.07665730e-03, 8.31278143e-03, 2.85201070e-03, 3.69049776e-03,\n       4.01254686e-03, 2.06901259e-03, 1.88815468e-03, 1.81567389e-03,\n       2.64813001e-02, 1.21409553e-02, 6.49897954e-03, 9.64050116e-05,\n       1.41894005e-06, 2.73121498e-07, 6.62843858e-08, 1.75196074e-12,\n       9.03394685e-15, 3.74752798e-03, 6.70988779e-03, 8.44484214e-03,\n       3.34830106e-03, 4.81590263e-03, 5.48433380e-03, 2.25782782e-03,\n       2.04286488e-03, 1.94318457e-03, 3.54128997e-02, 1.10336988e-02,\n       9.48852758e-03, 4.75649404e-05, 2.47055444e-07, 8.99862408e-08,\n       6.77350802e-08, 1.80328479e-12, 9.19491516e-15, 4.35053639e-03,\n       6.58417792e-03, 7.51642845e-03, 3.73083813e-03, 5.33386400e-03,\n       6.05190913e-03, 2.26449013e-03, 2.05687577e-03, 1.96125869e-03,\n       1.66826811e-02, 1.41503042e-02, 1.06006779e-02, 4.18090944e-05,\n       1.72474148e-07, 3.23380819e-08, 8.70825445e-08, 2.31298042e-12,\n       1.19020063e-14, 4.57577750e-03, 7.78742439e-03, 9.73386077e-03,\n       3.77627203e-03, 5.64481866e-03, 6.35447788e-03, 2.21795032e-03,\n       1.98524993e-03, 1.89384710e-03, 1.67128287e-02, 6.54471593e-03,\n       5.70764458e-03, 4.27211656e-05, 1.72459088e-07, 7.23018470e-09,\n       1.05896399e-07, 6.03851931e-12, 1.29638427e-14, 4.81685125e-03,\n       8.26390900e-03, 1.03139275e-02, 3.46790483e-03, 5.05268305e-03,\n       5.83999465e-03, 2.26430729e-03, 2.05680989e-03, 1.96095119e-03,\n       2.47503592e-02, 1.15623751e-02, 7.00932241e-03, 7.43749288e-05,\n       1.65032302e-07, 7.39665876e-08, 6.31809920e-08, 3.11272884e-12,\n       1.75166131e-14, 5.01714243e-03, 8.15664244e-03, 1.05764247e-02,\n       3.46561973e-03, 4.69653774e-03, 5.32469774e-03, 2.21172500e-03,\n       1.96736796e-03, 1.86314553e-03, 2.32484194e-02, 1.50668971e-02,\n       9.70767569e-03, 4.20175528e-05, 1.00208182e-07, 7.24401582e-08,\n       6.43918454e-08, 1.71029842e-12, 1.62035007e-14, 4.61971557e-03,\n       8.06189667e-03, 1.00550294e-02, 3.47747411e-03, 4.89212290e-03,\n       5.59837363e-03, 2.22306189e-03, 1.99332488e-03, 1.89434667e-03,\n       3.43168388e-02, 2.15399064e-02, 1.15187718e-02, 2.49068760e-05,\n       2.77888500e-07, 2.89587435e-08, 2.36401634e-07, 6.27922705e-12,\n       3.23117928e-14, 4.50404730e-03, 8.07708545e-03, 1.02959546e-02,\n       3.45315462e-03, 5.20559513e-03, 5.81968836e-03, 2.20493333e-03,\n       1.98601039e-03, 1.88846582e-03, 3.31805340e-02, 1.39023420e-02,\n       9.93648164e-03, 3.03422788e-05, 4.00364209e-07, 7.96330350e-08,\n       1.61406459e-07, 4.28723631e-12, 2.20505585e-14, 4.78615356e-03,\n       8.07205656e-03, 9.94399047e-03, 3.21721228e-03, 4.49316709e-03,\n       5.27019178e-03, 2.21327451e-03, 1.98576604e-03, 1.89414915e-03,\n       2.12290932e-02, 1.14059747e-02, 7.00193314e-03, 3.53034428e-05,\n       1.43145267e-07, 1.64266725e-08, 6.65522645e-08, 1.76766464e-12,\n       9.13029915e-15, 4.86534148e-03, 8.30603971e-03, 1.00084577e-02,\n       2.13954478e-03, 3.00110818e-03, 3.60791162e-03, 2.25995699e-03,\n       2.04423975e-03, 1.94452218e-03, 2.87764208e-02, 1.17466195e-02,\n       8.68745950e-03, 1.93010553e-05, 9.80018147e-08, 2.69272805e-08,\n       4.39996068e-08, 1.20799212e-12, 6.21850571e-15, 5.03155868e-03,\n       8.42000349e-03, 1.02214057e-02, 2.27992377e-03, 3.17698869e-03,\n       3.73490968e-03, 2.25596237e-03, 2.04124561e-03, 1.94260777e-03,\n       2.31447460e-02, 1.09791577e-02, 7.40193005e-03, 7.51882488e-05,\n       2.52433318e-07, 3.59189353e-08, 4.63605953e-08, 1.52237818e-12,\n       6.51072146e-15, 5.26661427e-03, 9.29621508e-03, 1.12790886e-02,\n       3.04921702e-03, 4.05242672e-03, 4.50430017e-03, 2.25940395e-03,\n       2.04434655e-03, 1.94454581e-03, 1.66630634e-02, 8.65649398e-03,\n       6.20185469e-03, 3.52777792e-05, 7.73871678e-08, 2.62393835e-08,\n       1.24552380e-07, 3.05731308e-12, 1.58814098e-14, 4.82282135e-03,\n       8.24921544e-03, 1.00382456e-02, 2.91603347e-03, 4.65923534e-03,\n       5.43734590e-03, 2.23893523e-03, 2.01242011e-03, 1.91012778e-03,\n       2.16797989e-02, 8.02881981e-03, 6.18298255e-03, 1.86040143e-05,\n       6.99216001e-08, 2.54100123e-08, 8.53038527e-08, 4.34966446e-12,\n       2.57329865e-14, 4.14615597e-03, 7.47624621e-03, 8.96028091e-03,\n       3.08111896e-03, 4.51815453e-03, 5.30486239e-03, 2.24943853e-03,\n       2.02696970e-03, 1.92407358e-03, 3.03159189e-02, 6.98939178e-03,\n       6.62533020e-03, 3.64923456e-05, 1.52421605e-07, 1.06992239e-08,\n       1.01738916e-07, 3.41803517e-12, 1.92697799e-14, 4.33004228e-03,\n       7.67533280e-03, 9.07762503e-03, 3.32385460e-03, 4.75661835e-03,\n       5.54780279e-03, 2.24943853e-03, 2.02696970e-03, 1.92406500e-03,\n       2.28864271e-02, 1.08356708e-02, 6.54423585e-03, 3.08952287e-05,\n       3.65004792e-08, 5.11314953e-09, 6.78421342e-08, 1.84499004e-12,\n       9.18274759e-15, 4.57236097e-03, 8.43503602e-03, 9.91295247e-03,\n       2.97353499e-03, 4.22234113e-03, 4.94123555e-03, 2.25781082e-03,\n       2.04284950e-03, 1.94319107e-03, 2.25851682e-02, 1.01370799e-02,\n       6.52386833e-03, 1.51549459e-05, 8.53216073e-08, 2.80995321e-08,\n       5.50529557e-08, 1.68145928e-12, 8.67106209e-15, 4.73192068e-03,\n       8.84647343e-03, 1.04929195e-02, 2.40646691e-03, 3.74860736e-03,\n       4.23661217e-03, 2.25538089e-03, 2.03793768e-03, 1.94136926e-03,\n       2.30470090e-02, 7.86531378e-03, 5.37378873e-03, 2.15908588e-05,\n       5.27326002e-08, 3.87358718e-09, 5.50529557e-08, 1.68145912e-12,\n       7.72821111e-15, 4.73743211e-03, 8.85751832e-03, 1.04801393e-02,\n       2.41444606e-03, 3.72911316e-03, 4.23998297e-03, 2.25485363e-03,\n       2.03890761e-03, 1.94151709e-03, 2.02516535e-02, 1.19557385e-02,\n       3.37557481e-03, 2.37695384e-05, 7.42531662e-08, 3.31084560e-08,\n       5.57915339e-08, 1.05854933e-12, 6.40216454e-15, 4.84554766e-03,\n       8.81136307e-03, 1.03196127e-02, 2.19906685e-03, 3.41801014e-03,\n       3.83749070e-03, 2.25587062e-03, 2.04529819e-03, 1.94265437e-03,\n       2.57848297e-02, 1.01615352e-02, 6.99613326e-03, 2.56871202e-05,\n       5.03080165e-08, 5.94756167e-09, 6.75908731e-08, 1.35271501e-12,\n       6.52030133e-15, 5.05054923e-03, 9.01106284e-03, 1.06650255e-02,\n       2.34298815e-03, 3.04923901e-03, 3.65189362e-03, 2.26657449e-03,\n       2.05876252e-03, 1.96743985e-03, 2.67689031e-02, 6.15495721e-03,\n       4.37976230e-03, 1.72601852e-05, 1.41599633e-08, 6.84527688e-09,\n       5.06988883e-08, 1.29629596e-12, 7.46143653e-15, 4.98257491e-03,\n       7.90991562e-03, 1.02763949e-02, 2.21809696e-03, 3.67100838e-03,\n       3.91328089e-03, 2.26644503e-03, 2.05977911e-03, 1.94303339e-03,\n       1.29168429e-02, 9.51616800e-03, 3.00992197e-03, 2.19989607e-05,\n       9.91387891e-08, 1.06250592e-08, 5.29981271e-08, 1.46033061e-12,\n       1.01505162e-14, 4.65212940e-03, 9.06889359e-03, 9.52854779e-03,\n       1.78571952e-03, 2.86033861e-03, 3.61556961e-03, 2.24542778e-03,\n       2.06011664e-03, 1.94725193e-03, 1.65772889e-02, 1.19777041e-02,\n       9.14067838e-03, 2.96635281e-05, 5.25585962e-08, 2.92978124e-09,\n       4.63992301e-08, 1.45397596e-12, 6.21098492e-15, 4.97990787e-03,\n       9.22738763e-03, 9.71014121e-03, 2.48324688e-03, 3.01290333e-03,\n       4.21414663e-03, 2.24491219e-03, 2.07030729e-03, 1.94303339e-03])}"}, {"dataset_variant": "only_binary", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "regressor": "[GradientBoostingRegressor(criterion = 'mse')]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "np.arange(1, X[:, mask].shape[1])", "scaler": "[MinMaxScaler()]", "regressor__learning_rate": "[0.1, 1e-3]", "regressor__n_estimators": "[100, 200, 250]", "regressor__max_depth": "[5, 10, 15]"}], "metrics": "['neg_root_mean_squared_error']", "binarize": "False", "n_split_outer_kcv": 10}, "best_params": "{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}", "mean_test_score": -1.581709785943403, "cv_results": "{'mean_fit_time': array([0.0925005 , 0.16170082, 0.21530046, 0.1237999 , 0.23740039,\n       0.29710014, 0.13030016, 0.26959796, 0.33440216, 0.093999  ,\n       0.15669997, 0.19770041, 0.11909964, 0.23309822, 0.29619963,\n       0.16719992, 0.25999143, 0.33020048, 0.09079888, 0.18180015,\n       0.23150034, 0.14380021, 0.29910362, 0.36629927, 0.14540043,\n       0.27900231, 0.34790146, 0.09209757, 0.18680036, 0.25689991,\n       0.13440008, 0.27860162, 0.33219969, 0.1419981 , 0.28860018,\n       0.36470196, 0.10560026, 0.2132009 , 0.25098915, 0.15910008,\n       0.31510181, 0.41449771, 0.16779869, 0.32930083, 0.39539735,\n       0.10789967, 0.2022016 , 0.26599152, 0.16279974, 0.31380031,\n       0.37460237, 0.16279707, 0.32019935, 0.4216002 , 0.11999953,\n       0.22679758, 0.27980244, 0.17749722, 0.35620015, 0.4596976 ,\n       0.19079945, 0.35300076, 0.43320007, 0.11109738, 0.24709868,\n       0.29240065, 0.1718998 , 0.33140063, 0.41719863, 0.17959974,\n       0.38419895, 0.4402097 , 0.12329814, 0.24719949, 0.30900016,\n       0.23450077, 0.39719858, 0.49649768, 0.19609952, 0.39359946,\n       0.49160063, 0.12239799, 0.24389992, 0.30579586, 0.18779702,\n       0.37950156, 0.47379565, 0.20039897, 0.39230361, 0.50779955,\n       0.15429816, 0.27641344, 0.3365113 , 0.21049716, 0.44971197,\n       0.54801009, 0.21259749, 0.41510155, 0.536203  , 0.16079891,\n       0.26841378, 0.32791319, 0.20339856, 0.4193027 , 0.50031614,\n       0.2162982 , 0.42270844, 0.53740418, 0.16359975, 0.30430584,\n       0.36121049, 0.22849731, 0.47870958, 0.59750576, 0.23479931,\n       0.45720217, 0.57630785, 0.14429965, 0.28291047, 0.35030935,\n       0.22069952, 0.45250316, 0.54240599, 0.22849758, 0.47870297,\n       0.58341613, 0.16149931, 0.31721864, 0.3920186 , 0.27739668,\n       0.5137115 , 0.63141196, 0.27090776, 0.49541173, 0.6070138 ,\n       0.1546005 , 0.33440807, 0.39692369, 0.23809831, 0.46501129,\n       0.59470856, 0.26290343, 0.48820827, 0.61891665, 0.17859793,\n       0.34351285, 0.4213083 , 0.26031249, 0.54661102, 0.6820123 ,\n       0.26130798, 0.52540743, 0.64930737, 0.1654    , 0.3414068 ,\n       0.43050406, 0.26320124, 0.49871416, 0.61870368, 0.27951241,\n       0.52981198, 0.65131016, 0.20839891, 0.40020742, 0.45430462,\n       0.27770777, 0.58220923, 0.73510604, 0.27861025, 0.56090877,\n       0.68200629, 0.17309928, 0.34531095, 0.45641191, 0.27460449,\n       0.5233063 , 0.66941154, 0.3006079 , 0.55461469, 0.69980981,\n       0.20869818, 0.38081069, 0.47300673, 0.30391357, 0.61210613,\n       0.77790914, 0.32630742, 0.59540324, 0.72520697, 0.21219835,\n       0.37611482, 0.45581203, 0.28310738, 0.57301023, 0.69500535,\n       0.2953181 , 0.59330139, 0.74460561, 0.20299873, 0.41041236,\n       0.52180545, 0.30911756, 0.64331205, 0.83601084, 0.31300163,\n       0.63530254, 0.76601157, 0.19879847, 0.39350324, 0.49600677,\n       0.29901648, 0.59850917, 0.75069687, 0.31420777, 0.62295721,\n       0.7961082 , 0.21239741, 0.42350972, 0.5456074 , 0.33610322,\n       0.67801256, 0.86800311, 0.32990823, 0.65960834, 0.83010373,\n       0.20999863, 0.4020185 , 0.53640523, 0.31661348, 0.6190105 ,\n       0.78721087, 0.33110311, 0.66241071, 0.82421622, 0.22339711,\n       0.44701421, 0.58081076, 0.34310806, 0.71330907, 0.91841407,\n       0.34490063, 0.69330831, 0.8531054 , 0.21629713, 0.44251182,\n       0.53630931, 0.32691035, 0.66581051, 0.81741552, 0.35030262,\n       0.72491081, 0.86091075, 0.27040362, 0.47831223, 0.58440347,\n       0.36921375, 0.76010799, 0.96761124, 0.37800789, 0.71400626,\n       0.89830344, 0.22689838, 0.44900379, 0.57560632, 0.35261176,\n       0.6823077 , 0.86470408, 0.36691113, 0.74680684, 0.90931449,\n       0.24800122, 0.49971132, 0.6186096 , 0.37890794, 0.78191385,\n       1.01130776, 0.39720244, 0.75581136, 0.94670432, 0.25340405,\n       0.46820815, 0.59599819, 0.37161143, 0.71430526, 0.90310979,\n       0.38980753, 0.76820588, 0.95470693, 0.25450993, 0.52771146,\n       0.64210987, 0.39530993, 0.83430693, 0.9278033 , 0.37661388,\n       0.7943059 , 0.98320851, 0.24799941, 0.48599682, 0.61410844,\n       0.39041193, 0.75211179, 0.9412112 , 0.3997112 , 0.81000471,\n       0.99291179, 0.29620764, 0.54021227, 0.66811457, 0.43780849,\n       0.86101072, 1.08960755, 0.4110121 , 0.83150403, 1.01630957,\n       0.25870314, 0.52520659, 0.63021209, 0.39219987, 0.80520349,\n       0.9736131 , 0.43341293, 0.83480797, 1.04400196, 0.29440937,\n       0.57441008, 0.69760978, 0.42820141, 0.90601189, 1.13491549,\n       0.44000118, 0.85420771, 1.0654078 , 0.26680562, 0.53560612,\n       0.66420739, 0.40940788, 0.83830848, 0.89810319, 0.44560187,\n       0.86640487, 1.09021213, 0.07849998, 0.15529919, 0.19870055,\n       0.12099943, 0.24030032, 0.32100604, 0.14429815, 0.25029318,\n       0.30849771, 0.07999961, 0.16280088, 0.19950004, 0.12009997,\n       0.26649985, 0.30150185, 0.12699814, 0.25199797, 0.32399814,\n       0.09140029, 0.17950001, 0.26360021, 0.1433002 , 0.28825977,\n       0.34850173, 0.14829791, 0.28200202, 0.37429969, 0.09229753,\n       0.19390013, 0.22540002, 0.13589988, 0.26980021, 0.33790088,\n       0.18059664, 0.29890263, 0.36319809, 0.10580032, 0.20419915,\n       0.25329771, 0.17029755, 0.33420198, 0.41320026, 0.16159782,\n       0.32050161, 0.41519709, 0.11139989, 0.22100077, 0.25299592,\n       0.15779917, 0.30340183, 0.37359948, 0.19079697, 0.32860186,\n       0.40259979, 0.11439807, 0.23309984, 0.27859955, 0.2084991 ,\n       0.36680026, 0.44499927, 0.18569894, 0.36440105, 0.47109544,\n       0.11499808, 0.22809999, 0.27430017, 0.16760223, 0.34359961,\n       0.44190133, 0.18589742, 0.36330218, 0.44989712, 0.15100033,\n       0.26680105, 0.32840123, 0.19429839, 0.39700205, 0.50609956,\n       0.21509759, 0.40000148, 0.48649728, 0.12420015, 0.27359824,\n       0.3242996 , 0.18729937, 0.37139904, 0.46060092, 0.23779426,\n       0.40069754, 0.48710196, 0.13789794, 0.26960917, 0.3634146 ,\n       0.2344991 , 0.42941241, 0.54760988, 0.25290077, 0.43470643,\n       0.53101447, 0.13739979, 0.26661747, 0.34230788, 0.22410591,\n       0.40540421, 0.49991844, 0.25080352, 0.43430808, 0.54180882,\n       0.14960027, 0.29570625, 0.39531257, 0.23139932, 0.46961172,\n       0.59130886, 0.24469757, 0.46110866, 0.56460822, 0.14439969,\n       0.29101233, 0.36831226, 0.21899743, 0.43721344, 0.56251261,\n       0.25639782, 0.46220927, 0.58890932, 0.18059931, 0.33430884,\n       0.39441457, 0.24619713, 0.52200563, 0.64460635, 0.24989939,\n       0.49640956, 0.62321198, 0.15439961, 0.30420172, 0.3823118 ,\n       0.27050586, 0.47381504, 0.58531058, 0.24970703, 0.522402  ,\n       0.62761402, 0.18009987, 0.35071084, 0.44100487, 0.26191087,\n       0.53871186, 0.69440408, 0.26151385, 0.52101436, 0.65051479,\n       0.18029966, 0.32681656, 0.40130882, 0.25740416, 0.50791483,\n       0.62651193, 0.26910002, 0.53121014, 0.65557187, 0.18389993,\n       0.36410978, 0.46471145, 0.29140909, 0.57660782, 0.73580778,\n       0.28581183, 0.54961772, 0.70600803, 0.19110191, 0.34592032,\n       0.4307102 , 0.27581236, 0.53851452, 0.66090965, 0.28351181,\n       0.5809025 , 0.70110736, 0.19539917, 0.40480592, 0.48520432,\n       0.29770517, 0.60909719, 0.7795099 , 0.29511571, 0.60200984,\n       0.74350314, 0.18579938, 0.36231744, 0.48240776, 0.29601438,\n       0.56001301, 0.71161094, 0.31020515, 0.59550219, 0.76300938,\n       0.21480105, 0.40490763, 0.50849841, 0.32811232, 0.64661436,\n       0.82201126, 0.33470981, 0.6160115 , 0.77479918, 0.20489779,\n       0.40641003, 0.48780975, 0.32831233, 0.60300667, 0.75520539,\n       0.34259779, 0.62960358, 0.78750248, 0.23159757, 0.43260622,\n       0.53210773, 0.35320301, 0.68680451, 0.86681399, 0.34211481,\n       0.64721174, 0.81800611, 0.20420027, 0.40550411, 0.51200562,\n       0.33290088, 0.63920052, 0.79180436, 0.35401397, 0.65542061,\n       0.8251039 , 0.22509923, 0.44650533, 0.57250407, 0.34961457,\n       0.70840352, 0.92980511, 0.35401027, 0.69240544, 0.86731167,\n       0.2154973 , 0.42541411, 0.55420806, 0.3315099 , 0.65351834,\n       0.82881148, 0.35140107, 0.70290401, 0.87170646, 0.23609936,\n       0.49711201, 0.58731787, 0.36911383, 0.76910956, 0.84360743,\n       0.37281044, 0.73201065, 0.90801022, 0.24190478, 0.45401196,\n       0.55920587, 0.37930899, 0.69291193, 0.86770813, 0.37340391,\n       0.72901192, 0.92751133, 0.2524992 , 0.49270859, 0.63090093,\n       0.37921438, 0.78591216, 1.00970781, 0.38060346, 0.76400571,\n       0.79810028, 0.24749804, 0.49571371, 0.58201582, 0.36381073,\n       0.7371042 , 0.90240119, 0.4154068 , 0.77490461, 0.97031684,\n       0.25831203, 0.51241164, 0.66200571, 0.39770973, 0.81500828,\n       0.93261247, 0.39391203, 0.79360449, 0.96751356, 0.28029709,\n       0.49471235, 0.60351806, 0.39981358, 0.75591249, 0.82890263,\n       0.39600759, 0.7894104 , 1.01030903, 0.27091608, 0.54531426,\n       0.68180206, 0.40860579, 0.88330057, 1.02152309, 0.39210157,\n       0.81821804, 1.03091083, 0.25621157, 0.50600963, 0.64840057,\n       0.39721134, 0.78840802, 0.96080563, 0.34261227, 0.84079914,\n       1.02720487, 0.30380366, 0.57301841, 0.69451005, 0.45991018,\n       0.8785095 , 1.08966017, 0.36511238, 0.86460698, 1.05410757,\n       0.28939867, 0.54510303, 0.65860791, 0.43560867, 0.81461639,\n       0.89789937, 0.42861409, 0.76010327, 1.04820919]), 'std_fit_time': array([0.02075783, 0.01711184, 0.02157342, 0.0065528 , 0.00214748,\n       0.00427722, 0.00867283, 0.02648545, 0.03858448, 0.01397711,\n       0.00219452, 0.00562347, 0.00425216, 0.00284192, 0.00563342,\n       0.03863358, 0.02908706, 0.02981667, 0.00271252, 0.01018649,\n       0.01755379, 0.00843564, 0.01950115, 0.03199609, 0.01034611,\n       0.00682684, 0.00684712, 0.00475716, 0.01574   , 0.03300745,\n       0.0025768 , 0.02177434, 0.00362894, 0.00204825, 0.00771148,\n       0.02159732, 0.00990135, 0.01754815, 0.00400029, 0.00516738,\n       0.00344687, 0.03454756, 0.02123085, 0.02566144, 0.00816687,\n       0.01189506, 0.00830416, 0.03004128, 0.02046918, 0.02549525,\n       0.00621907, 0.0104006 , 0.00639395, 0.03827867, 0.01216514,\n       0.00918483, 0.00625919, 0.00963378, 0.00516984, 0.02592109,\n       0.02353674, 0.01037059, 0.01132076, 0.00266365, 0.02707281,\n       0.02456233, 0.01194516, 0.00513988, 0.00815544, 0.00462962,\n       0.03852449, 0.01180538, 0.00134644, 0.00494392, 0.00433796,\n       0.03475679, 0.00942694, 0.00741954, 0.00935321, 0.01517656,\n       0.03300398, 0.00559203, 0.00641515, 0.00854569, 0.00593109,\n       0.02634816, 0.02765337, 0.00930857, 0.01046384, 0.02892612,\n       0.03328064, 0.01848438, 0.00725528, 0.00639089, 0.03407093,\n       0.01433965, 0.00756627, 0.01250953, 0.04049768, 0.02140813,\n       0.01480016, 0.00827743, 0.01060433, 0.03709679, 0.02626193,\n       0.00912187, 0.01644956, 0.02376186, 0.03249292, 0.02143325,\n       0.00227166, 0.00751418, 0.02282943, 0.01498525, 0.01031597,\n       0.01414515, 0.01793262, 0.00310004, 0.00556867, 0.00302703,\n       0.01334812, 0.02650521, 0.01626368, 0.00564347, 0.03168979,\n       0.02686318, 0.01145727, 0.00765277, 0.00563971, 0.02696604,\n       0.02765955, 0.0105144 , 0.02919227, 0.01673582, 0.01990459,\n       0.00443161, 0.02808854, 0.03074704, 0.01396072, 0.01463204,\n       0.03303088, 0.01789467, 0.01506178, 0.02644992, 0.02279525,\n       0.0176875 , 0.00996785, 0.00448907, 0.01617084, 0.01006918,\n       0.00899063, 0.0252562 , 0.02823306, 0.00943751, 0.02515576,\n       0.03151962, 0.02362984, 0.01422305, 0.00985859, 0.02390918,\n       0.02565013, 0.01733708, 0.02674246, 0.04791637, 0.00893199,\n       0.00523631, 0.01234041, 0.01469888, 0.00736391, 0.03266958,\n       0.01782773, 0.00254803, 0.00508067, 0.04072537, 0.01810054,\n       0.00713201, 0.03008885, 0.02341381, 0.01547448, 0.03909469,\n       0.01912576, 0.00621182, 0.00428179, 0.01973683, 0.01561451,\n       0.02333025, 0.03394461, 0.02733387, 0.0224015 , 0.02525896,\n       0.02093309, 0.00665713, 0.00938429, 0.02887684, 0.00959889,\n       0.00906687, 0.01948456, 0.03453473, 0.00433546, 0.01077909,\n       0.02558147, 0.00554034, 0.0106033 , 0.04941576, 0.00944178,\n       0.04583735, 0.02391253, 0.01007753, 0.01271841, 0.02798151,\n       0.01748817, 0.01967644, 0.02959039, 0.0094241 , 0.01998694,\n       0.03605666, 0.00456517, 0.00407716, 0.03198362, 0.02697515,\n       0.01183537, 0.01926895, 0.01567349, 0.03258635, 0.03036201,\n       0.00905398, 0.00374073, 0.03485652, 0.01234601, 0.01429478,\n       0.02700414, 0.01132994, 0.02771804, 0.02679846, 0.0025764 ,\n       0.00412258, 0.02275656, 0.00635067, 0.01229126, 0.03232735,\n       0.01235163, 0.01814369, 0.02522794, 0.00735043, 0.02977148,\n       0.01233379, 0.00619877, 0.02454175, 0.03341448, 0.01363126,\n       0.04845568, 0.02017581, 0.03428021, 0.02265127, 0.00303344,\n       0.02047104, 0.02239654, 0.03282764, 0.03209044, 0.02060543,\n       0.03059253, 0.00512567, 0.01041549, 0.03376258, 0.02247228,\n       0.01491217, 0.01906762, 0.01417469, 0.04361876, 0.03564673,\n       0.00585438, 0.01002222, 0.01738127, 0.01064669, 0.0134849 ,\n       0.01351065, 0.02883217, 0.02988275, 0.03235375, 0.03618679,\n       0.0096483 , 0.02385877, 0.01994415, 0.0094009 , 0.01721729,\n       0.01451943, 0.02778288, 0.03700985, 0.00186031, 0.02577079,\n       0.0111621 , 0.00816441, 0.02971798, 0.13152727, 0.04362353,\n       0.02790437, 0.0323384 , 0.00681404, 0.00519561, 0.01568637,\n       0.038022  , 0.01782354, 0.0308224 , 0.01297903, 0.03219229,\n       0.0334604 , 0.03761234, 0.01469745, 0.00875639, 0.04423674,\n       0.01725119, 0.01611051, 0.01440473, 0.0423445 , 0.0369226 ,\n       0.00616509, 0.02848107, 0.00426679, 0.00983929, 0.04060997,\n       0.02318318, 0.03748416, 0.0285201 , 0.05463129, 0.02341081,\n       0.02855614, 0.01481489, 0.00875822, 0.05042189, 0.03723183,\n       0.03641911, 0.03159919, 0.03633147, 0.00579189, 0.02031275,\n       0.01356739, 0.01411812, 0.02869403, 0.13629391, 0.02031452,\n       0.03286531, 0.03859369, 0.00050083, 0.00319855, 0.01621198,\n       0.00141276, 0.00460406, 0.03526655, 0.03051751, 0.00651824,\n       0.00612008, 0.00063275, 0.00949635, 0.0091658 , 0.00490751,\n       0.02952568, 0.01790102, 0.00340862, 0.0085702 , 0.02054782,\n       0.00228919, 0.00257997, 0.03159552, 0.0042674 , 0.01201773,\n       0.00294339, 0.01110123, 0.00707293, 0.03479098, 0.0053863 ,\n       0.01981118, 0.00930849, 0.00287917, 0.00370608, 0.00931462,\n       0.03655197, 0.02384089, 0.01373112, 0.00621112, 0.00798468,\n       0.00685819, 0.02142985, 0.01983329, 0.03062308, 0.00397984,\n       0.0108541 , 0.031952  , 0.02189144, 0.03119663, 0.00711799,\n       0.01087053, 0.00541316, 0.00352649, 0.02897866, 0.01958707,\n       0.00989218, 0.00436474, 0.01301003, 0.00237471, 0.0348369 ,\n       0.02619028, 0.00232752, 0.00928531, 0.01489391, 0.0283479 ,\n       0.01006025, 0.0107097 , 0.00195695, 0.00179954, 0.01485372,\n       0.02816611, 0.00986225, 0.01365112, 0.01323651, 0.03463813,\n       0.03492754, 0.02448291, 0.00431524, 0.01104582, 0.02829017,\n       0.02463749, 0.02511897, 0.01754026, 0.00702499, 0.03365961,\n       0.02998945, 0.0043605 , 0.01250632, 0.00786091, 0.02972672,\n       0.0184447 , 0.01326233, 0.00676109, 0.00360532, 0.03773327,\n       0.026038  , 0.00794569, 0.01474329, 0.03383715, 0.02554359,\n       0.01592185, 0.00648542, 0.01079609, 0.02569176, 0.02461442,\n       0.00856211, 0.00610668, 0.02452512, 0.01864562, 0.01494024,\n       0.00531273, 0.00674714, 0.03798661, 0.01275083, 0.01274485,\n       0.00923938, 0.0302699 , 0.01940371, 0.01582214, 0.0056434 ,\n       0.01388212, 0.02719288, 0.00468981, 0.01037495, 0.03437287,\n       0.02652278, 0.01035037, 0.02346511, 0.03835355, 0.0171104 ,\n       0.00826693, 0.00299278, 0.02956523, 0.01284121, 0.00856236,\n       0.02048605, 0.02078983, 0.00417643, 0.00365546, 0.00830653,\n       0.02919582, 0.02409775, 0.01039818, 0.00771781, 0.03666384,\n       0.03775267, 0.01484864, 0.0210554 , 0.02148792, 0.00317459,\n       0.01410256, 0.0259831 , 0.00620659, 0.0119778 , 0.02022441,\n       0.02324307, 0.00775521, 0.00244537, 0.01073284, 0.01953777,\n       0.01188566, 0.01118238, 0.01927386, 0.02105043, 0.00734118,\n       0.01385247, 0.0270394 , 0.01292475, 0.01547887, 0.0403137 ,\n       0.01935968, 0.01369162, 0.04338485, 0.02899369, 0.00665554,\n       0.00585037, 0.01423665, 0.01901612, 0.00935689, 0.01488406,\n       0.04298566, 0.02222322, 0.00848797, 0.03103317, 0.01656069,\n       0.00635623, 0.01651996, 0.02108439, 0.00706371, 0.02907756,\n       0.0325966 , 0.00481283, 0.00184493, 0.03531283, 0.02880244,\n       0.00856542, 0.02896311, 0.02321422, 0.01640763, 0.04306193,\n       0.02190437, 0.00413123, 0.01334497, 0.02801055, 0.00995873,\n       0.02536357, 0.02810408, 0.01744724, 0.03556214, 0.01711952,\n       0.02765924, 0.00683407, 0.03075592, 0.01611668, 0.04614789,\n       0.03837494, 0.02544086, 0.02482597, 0.02791091, 0.01359105,\n       0.00465275, 0.03827332, 0.02042732, 0.0184633 , 0.023648  ,\n       0.02199084, 0.03921307, 0.00171895, 0.00377386, 0.01412936,\n       0.0212381 , 0.02551833, 0.02865034, 0.03983883, 0.01822741,\n       0.02844127, 0.00457651, 0.00349495, 0.019124  , 0.01273314,\n       0.01635425, 0.04196587, 0.01464609, 0.03406079, 0.03280929,\n       0.00424794, 0.00349571, 0.02902745, 0.0065767 , 0.01065158,\n       0.02198375, 0.01254431, 0.03657612, 0.04569728, 0.00383203,\n       0.03192245, 0.01214979, 0.01167135, 0.04264567, 0.11686507,\n       0.02001555, 0.02322592, 0.04159312, 0.01772488, 0.02229879,\n       0.01012601, 0.03583292, 0.00949749, 0.02665946, 0.01533729,\n       0.02509926, 0.03926303, 0.01009361, 0.00709569, 0.02953134,\n       0.00576059, 0.02052854, 0.03368668, 0.0130383 , 0.03223168,\n       0.11880439, 0.02459407, 0.03337602, 0.00732134, 0.00568712,\n       0.02419304, 0.01587   , 0.04001852, 0.02662027, 0.05408376,\n       0.00710166, 0.00861647, 0.02393456, 0.00780988, 0.01740839,\n       0.14465693, 0.01343401, 0.03069491, 0.03087132, 0.04278495,\n       0.01980498, 0.00410451, 0.02939726, 0.02048766, 0.11094013,\n       0.06385411, 0.02669963, 0.0540085 , 0.00620576, 0.02939347,\n       0.02227091, 0.00924774, 0.04745159, 0.11689294, 0.06057485,\n       0.03178922, 0.04774011, 0.00493315, 0.00414432, 0.01996327,\n       0.00918842, 0.01605109, 0.08115154, 0.04666342, 0.03743265,\n       0.03114269, 0.03394605, 0.03450778, 0.00692387, 0.02879786,\n       0.02446496, 0.08722895, 0.05310554, 0.04939257, 0.0406068 ,\n       0.02825214, 0.04171209, 0.00813035, 0.03136951, 0.01366305,\n       0.11989546, 0.01395209, 0.09377974, 0.10571442]), 'mean_score_time': array([0.00119998, 0.00100043, 0.00149999, 0.00119996, 0.0017004 ,\n       0.00200012, 0.00120068, 0.00180025, 0.00190027, 0.00129914,\n       0.00120025, 0.00109975, 0.00120051, 0.00150034, 0.00200176,\n       0.00170076, 0.00180256, 0.00210032, 0.00120006, 0.0013999 ,\n       0.00120027, 0.00130103, 0.00200138, 0.00229828, 0.00120015,\n       0.00200083, 0.00200062, 0.00090046, 0.00120032, 0.00120034,\n       0.0011003 , 0.00160079, 0.00200055, 0.00139947, 0.00190029,\n       0.00210085, 0.00109963, 0.00120037, 0.00110066, 0.00150023,\n       0.0019001 , 0.00230036, 0.00150106, 0.0018012 , 0.00210092,\n       0.00100012, 0.00100017, 0.0013    , 0.00119996, 0.00200036,\n       0.00190003, 0.00120189, 0.00170126, 0.00210013, 0.00100019,\n       0.00120075, 0.00120027, 0.00170071, 0.00190103, 0.00210133,\n       0.00150087, 0.00180144, 0.00210001, 0.00100095, 0.00140049,\n       0.00120046, 0.00130036, 0.00150054, 0.00190141, 0.00140088,\n       0.00190208, 0.00199966, 0.00110009, 0.00140002, 0.0013006 ,\n       0.00140204, 0.00200198, 0.00210345, 0.00120125, 0.00200231,\n       0.0020016 , 0.00080011, 0.00110035, 0.00100024, 0.00130122,\n       0.00200152, 0.00210092, 0.00120177, 0.00200126, 0.00230076,\n       0.00109997, 0.00120029, 0.0012006 , 0.00130293, 0.00200191,\n       0.00210171, 0.00150092, 0.00180261, 0.00200157, 0.00140159,\n       0.00110059, 0.00120091, 0.00130053, 0.00180273, 0.00200543,\n       0.00170221, 0.00200202, 0.00230174, 0.00120068, 0.00110099,\n       0.00140064, 0.00140045, 0.00200176, 0.00220146, 0.00120215,\n       0.00190349, 0.00210238, 0.00110087, 0.00100133, 0.00140069,\n       0.00140107, 0.0019031 , 0.00190177, 0.00140126, 0.00200231,\n       0.00240035, 0.00100033, 0.00129995, 0.00150054, 0.00150275,\n       0.00200098, 0.00220156, 0.001599  , 0.00170047, 0.00230045,\n       0.00110021, 0.00100093, 0.00150204, 0.00110078, 0.00190248,\n       0.00210116, 0.00150177, 0.00180099, 0.00210049, 0.00100207,\n       0.00110013, 0.00140095, 0.00130126, 0.00200016, 0.00220051,\n       0.00130162, 0.00180194, 0.00210156, 0.00109987, 0.00120125,\n       0.00120206, 0.00120239, 0.00160077, 0.00200224, 0.0015007 ,\n       0.00190146, 0.00220034, 0.0012008 , 0.00159929, 0.00140121,\n       0.00130227, 0.00200207, 0.00200105, 0.00130157, 0.00190115,\n       0.00210187, 0.00100057, 0.00130072, 0.00110068, 0.00140195,\n       0.00180199, 0.00200124, 0.00130119, 0.00180113, 0.00220256,\n       0.0011023 , 0.00140195, 0.00170147, 0.0016022 , 0.00200233,\n       0.00220149, 0.00120132, 0.00170245, 0.0022022 , 0.00110133,\n       0.00120084, 0.001301  , 0.0011019 , 0.00170095, 0.00200176,\n       0.00119998, 0.00200276, 0.00200169, 0.00100186, 0.00140064,\n       0.00140202, 0.0014004 , 0.00190184, 0.00220037, 0.00130303,\n       0.00190232, 0.00220098, 0.00110233, 0.00130205, 0.00140109,\n       0.00130036, 0.00170157, 0.00220308, 0.00130219, 0.00200262,\n       0.00200286, 0.00099983, 0.00130105, 0.00140176, 0.00120256,\n       0.00210061, 0.00230231, 0.00140183, 0.00190334, 0.00230165,\n       0.00099947, 0.00129943, 0.00160208, 0.00120111, 0.0019027 ,\n       0.00200109, 0.00120256, 0.00189974, 0.00200062, 0.00110338,\n       0.00150084, 0.0013998 , 0.00140185, 0.00210238, 0.00210042,\n       0.0013032 , 0.00190153, 0.0021019 , 0.00110114, 0.0012012 ,\n       0.00140185, 0.0013011 , 0.00170121, 0.00210004, 0.00150316,\n       0.00190048, 0.00220194, 0.00120189, 0.00130093, 0.00160315,\n       0.00130119, 0.00210152, 0.00230129, 0.00120137, 0.00200229,\n       0.00200255, 0.00100038, 0.00120246, 0.0013021 , 0.00150077,\n       0.00180175, 0.00220227, 0.00140097, 0.00180202, 0.00210018,\n       0.00110152, 0.00130117, 0.00150187, 0.00120277, 0.00200098,\n       0.00220344, 0.00130258, 0.00200195, 0.0021023 , 0.00100265,\n       0.00110173, 0.001103  , 0.0010015 , 0.00190244, 0.00210116,\n       0.00150208, 0.00200229, 0.00240161, 0.00110314, 0.00120146,\n       0.00150149, 0.00150163, 0.00200076, 0.00200198, 0.00130014,\n       0.00200157, 0.00209963, 0.00110106, 0.00120351, 0.00150092,\n       0.00130131, 0.00160077, 0.00210109, 0.00140254, 0.00200207,\n       0.00240119, 0.00140162, 0.0013005 , 0.00130155, 0.00140233,\n       0.00200117, 0.0020015 , 0.00140147, 0.00190277, 0.00230165,\n       0.00100367, 0.0011014 , 0.00150123, 0.00130274, 0.0019027 ,\n       0.00220048, 0.0016012 , 0.00190158, 0.00240269, 0.00120013,\n       0.00130119, 0.00140135, 0.00130136, 0.00210114, 0.00220056,\n       0.00130234, 0.00190189, 0.00210156, 0.00100288, 0.00110185,\n       0.00130179, 0.00120199, 0.00180147, 0.00200264, 0.00110142,\n       0.00190203, 0.00230095, 0.00099995, 0.00119977, 0.00119989,\n       0.00160019, 0.00170078, 0.00199873, 0.00160015, 0.0018023 ,\n       0.00210059, 0.00090067, 0.0012002 , 0.00099993, 0.0011003 ,\n       0.00180066, 0.00190022, 0.00130117, 0.00180006, 0.00210044,\n       0.0010006 , 0.001301  , 0.00130022, 0.00170083, 0.00200133,\n       0.00210037, 0.00130093, 0.00190148, 0.00210125, 0.00110054,\n       0.00100012, 0.0010004 , 0.00130043, 0.00180128, 0.00200155,\n       0.00140078, 0.00190005, 0.00200031, 0.00109951, 0.00129979,\n       0.00130031, 0.00150151, 0.00209863, 0.0021004 , 0.00150075,\n       0.00170155, 0.00200136, 0.00110066, 0.00120049, 0.00150015,\n       0.00140052, 0.00190094, 0.00200162, 0.00140164, 0.0019002 ,\n       0.00220077, 0.001     , 0.00110013, 0.00120037, 0.0015012 ,\n       0.00190113, 0.00220087, 0.00110304, 0.00190125, 0.00200114,\n       0.00080042, 0.00130022, 0.00110059, 0.00130029, 0.00170205,\n       0.00210123, 0.00140085, 0.00200138, 0.00210075, 0.00119994,\n       0.00140049, 0.0017004 , 0.00140018, 0.00189998, 0.00220063,\n       0.00160124, 0.00180192, 0.00210116, 0.00100052, 0.00140288,\n       0.00140035, 0.00140138, 0.00170124, 0.00200119, 0.00130062,\n       0.0018008 , 0.00220203, 0.00100071, 0.00120041, 0.00139971,\n       0.00150557, 0.00180111, 0.00240109, 0.00130196, 0.0020009 ,\n       0.00200071, 0.00120101, 0.00110021, 0.00140066, 0.00110025,\n       0.00170176, 0.00179951, 0.00130143, 0.00190113, 0.00210252,\n       0.00110037, 0.00130057, 0.0014004 , 0.00110009, 0.00190082,\n       0.00220063, 0.0015018 , 0.00180213, 0.0020014 , 0.00090077,\n       0.00099812, 0.00120015, 0.00120015, 0.00180085, 0.00199966,\n       0.00170133, 0.00180147, 0.00220201, 0.00100012, 0.00140173,\n       0.00129945, 0.00150266, 0.00180209, 0.00230136, 0.00130315,\n       0.00190082, 0.0020014 , 0.00110123, 0.00130141, 0.00110097,\n       0.00130396, 0.00170009, 0.00200229, 0.00150287, 0.00200179,\n       0.00200067, 0.0011009 , 0.00159822, 0.00150225, 0.00130055,\n       0.00190127, 0.00230126, 0.00140247, 0.00200081, 0.00220065,\n       0.00100095, 0.0011004 , 0.00120001, 0.00150287, 0.00180123,\n       0.00200074, 0.00130272, 0.00190113, 0.0020005 , 0.00100067,\n       0.00120053, 0.00120084, 0.00140064, 0.00190156, 0.00230141,\n       0.00160062, 0.00149982, 0.00210037, 0.00100052, 0.00130007,\n       0.00110116, 0.00130174, 0.00189931, 0.00190127, 0.00140083,\n       0.00200171, 0.00210097, 0.00100043, 0.00130122, 0.00160284,\n       0.00130267, 0.00190294, 0.00230219, 0.00100064, 0.0018012 ,\n       0.00210214, 0.00100102, 0.00109985, 0.00129981, 0.0012008 ,\n       0.00170095, 0.00200343, 0.00140221, 0.00190244, 0.00199881,\n       0.00120022, 0.00130136, 0.00160244, 0.00150056, 0.00190065,\n       0.00220096, 0.00130138, 0.00180175, 0.00210295, 0.00090163,\n       0.00110455, 0.00150135, 0.00150082, 0.00180163, 0.00200181,\n       0.00140405, 0.00190215, 0.00210173, 0.00100257, 0.00140254,\n       0.00140321, 0.00130277, 0.00200233, 0.00219994, 0.00140052,\n       0.00180104, 0.00190177, 0.0010015 , 0.00120163, 0.00130148,\n       0.0012033 , 0.0017031 , 0.00200164, 0.0016011 , 0.00170119,\n       0.00220165, 0.00120137, 0.00140197, 0.00130203, 0.0012012 ,\n       0.00200224, 0.00240211, 0.00120122, 0.00190213, 0.00210106,\n       0.00100076, 0.00120075, 0.00130157, 0.00100121, 0.00160019,\n       0.00190043, 0.00160317, 0.00180166, 0.00200186, 0.00120013,\n       0.00120163, 0.00130067, 0.00140069, 0.00190098, 0.00220129,\n       0.00160167, 0.00190144, 0.00199943, 0.00100043, 0.00120139,\n       0.00120206, 0.0014019 , 0.00160086, 0.00200183, 0.001402  ,\n       0.00200138, 0.00220039, 0.00130124, 0.00110188, 0.00150237,\n       0.00160081, 0.00200217, 0.00220094, 0.00140343, 0.00190175,\n       0.00200024, 0.00120442, 0.00130072, 0.00140083, 0.00160146,\n       0.00180194, 0.00220304, 0.00150168, 0.00190265, 0.00210106,\n       0.00130301, 0.00160189, 0.00150156, 0.00130169, 0.00210233,\n       0.00220101, 0.0013021 , 0.00190244, 0.00210221, 0.00120184,\n       0.00110052, 0.00170002, 0.00149896, 0.00170093, 0.00160184,\n       0.00140224, 0.00190125, 0.00240061, 0.00100081, 0.00160041,\n       0.00150173, 0.00120199, 0.00210483, 0.00200117, 0.00140238,\n       0.00160034, 0.00210104, 0.00100038, 0.00110188, 0.00130329,\n       0.00130169, 0.00180151, 0.00200219, 0.00119934, 0.00190146,\n       0.00210173, 0.00100114, 0.00150039, 0.00130174, 0.00140088,\n       0.00200174, 0.00200131, 0.00130062, 0.00190198, 0.0021018 ,\n       0.00110278, 0.0015028 , 0.00140195, 0.00140264, 0.0018002 ,\n       0.00180295, 0.00120151, 0.00190196, 0.00230284]), 'std_score_time': array([3.99577809e-04, 2.70791452e-07, 5.00012058e-04, 4.00126118e-04,\n       4.58203690e-04, 8.01100617e-07, 4.00066518e-04, 4.00222238e-04,\n       2.99717285e-04, 6.40366349e-04, 3.99982989e-04, 3.00353951e-04,\n       4.00031081e-04, 5.00417260e-04, 2.66346742e-06, 4.58177666e-04,\n       4.01246034e-04, 2.99980094e-04, 4.00198098e-04, 4.89766107e-04,\n       3.99851870e-04, 4.58740152e-04, 2.67666668e-06, 4.55312213e-04,\n       4.00091592e-04, 1.77601839e-06, 6.55542711e-07, 3.00159708e-04,\n       4.00066834e-04, 3.99995316e-04, 2.99534513e-04, 4.89241150e-04,\n       5.58632589e-07, 4.89339004e-04, 2.99884708e-04, 5.38380798e-04,\n       2.99040618e-04, 4.00520734e-04, 2.99813051e-04, 4.99916850e-04,\n       2.99898924e-04, 4.58766430e-04, 4.99797766e-04, 4.00349831e-04,\n       3.00019681e-04, 4.97832609e-07, 4.76837158e-07, 4.58526587e-04,\n       4.00126786e-04, 6.86463358e-07, 3.00510972e-04, 3.99036219e-04,\n       4.58454331e-04, 2.99884462e-04, 4.45402663e-07, 4.00985619e-04,\n       3.99911801e-04, 4.58356467e-04, 3.00290188e-04, 2.99327898e-04,\n       6.70790276e-04, 4.00403370e-04, 2.99684310e-04, 1.90749764e-06,\n       4.90592809e-04, 4.01727954e-04, 4.58137159e-04, 5.00274734e-04,\n       3.00576156e-04, 4.89650180e-04, 5.38270192e-04, 1.54070801e-06,\n       2.99922962e-04, 4.89959873e-04, 4.58136154e-04, 4.89670137e-04,\n       1.38795658e-06, 2.99189066e-04, 3.98948769e-04, 1.56359696e-06,\n       9.83314067e-07, 4.00054560e-04, 3.00074306e-04, 3.99662366e-07,\n       4.57368273e-04, 1.50789149e-06, 2.97802929e-04, 4.00354977e-04,\n       2.97488687e-06, 4.58345422e-04, 3.00041938e-04, 4.00436651e-04,\n       3.99627434e-04, 4.58324598e-04, 2.86935547e-06, 3.00880729e-04,\n       5.00989897e-04, 4.00687332e-04, 9.34406182e-07, 4.91255451e-04,\n       3.00073965e-04, 4.00604445e-04, 4.57923941e-04, 6.00001866e-04,\n       1.61848113e-05, 4.59079109e-04, 1.56505045e-06, 4.58693588e-04,\n       3.99651543e-04, 2.99383881e-04, 4.89456214e-04, 4.89756697e-04,\n       2.17471204e-06, 4.00056958e-04, 4.01960938e-04, 3.00485658e-04,\n       2.99478317e-04, 3.01329907e-04, 2.61707156e-06, 4.89658926e-04,\n       4.91298126e-04, 2.99969115e-04, 3.00060087e-04, 4.91581219e-04,\n       1.29735640e-06, 4.89969773e-04, 8.53325375e-07, 4.57933665e-04,\n       4.99655393e-04, 4.98918321e-04, 1.60308795e-06, 4.00135792e-04,\n       4.89014047e-04, 4.57576177e-04, 4.58549627e-04, 3.00201489e-04,\n       7.82071088e-07, 5.00710293e-04, 2.99858242e-04, 3.00313394e-04,\n       3.00814535e-04, 5.01086528e-04, 3.99880065e-04, 3.00003443e-04,\n       1.90734863e-06, 2.99195370e-04, 4.89932382e-04, 4.57337430e-04,\n       2.36515557e-06, 3.99400042e-04, 4.58352202e-04, 4.00594419e-04,\n       3.00443269e-04, 2.99438071e-04, 3.99602700e-04, 3.95379397e-04,\n       3.99747862e-04, 4.90973284e-04, 1.11828226e-06, 5.00634160e-04,\n       3.00615463e-04, 3.97060665e-04, 4.00724643e-04, 4.91635707e-04,\n       4.89474811e-04, 4.58762295e-04, 2.74347172e-06, 1.22501684e-06,\n       4.59163319e-04, 2.99855797e-04, 2.99783514e-04, 9.05048985e-07,\n       4.58058933e-04, 3.00282596e-04, 4.90478416e-04, 4.00677165e-04,\n       4.48036151e-04, 4.59413526e-04, 4.00128295e-04, 3.99876957e-04,\n       2.99426119e-04, 4.90874115e-04, 4.56773004e-04, 4.91467473e-04,\n       1.47434471e-06, 4.00227127e-04, 4.00404013e-04, 4.58820103e-04,\n       4.00468289e-04, 2.99909498e-04, 3.98734300e-04, 4.57924474e-04,\n       3.00515001e-04, 4.58356343e-04, 1.14341534e-06, 4.00173827e-04,\n       1.35626437e-06, 1.45825660e-06, 1.68063961e-06, 4.90038103e-04,\n       4.90177260e-04, 4.90135161e-04, 2.99768022e-04, 3.99653221e-04,\n       4.58210886e-04, 3.00085551e-04, 4.00534034e-04, 2.99427961e-04,\n       4.57758007e-04, 4.89377411e-04, 4.58138015e-04, 4.58138512e-04,\n       4.00258375e-04, 4.58548982e-04, 1.17383324e-06, 5.26381573e-06,\n       7.40250335e-07, 4.58935613e-04, 4.89805845e-04, 3.99906107e-04,\n       3.01158496e-04, 4.58165655e-04, 4.90578055e-04, 3.01185101e-04,\n       4.58600449e-04, 8.22112067e-07, 4.58695881e-04, 4.90345322e-04,\n       4.00569591e-04, 3.01031291e-04, 1.67504960e-06, 3.99724621e-04,\n       2.99731707e-04, 1.02713867e-06, 3.00018146e-04, 5.00061710e-04,\n       4.88205793e-04, 4.90166412e-04, 3.00497428e-04, 3.01061229e-04,\n       4.58881880e-04, 5.39013771e-04, 2.99536032e-04, 2.99584823e-04,\n       4.00345941e-04, 4.90701948e-04, 4.58384379e-04, 4.58529574e-04,\n       2.99676843e-04, 4.98797732e-04, 2.99392336e-04, 4.01916508e-04,\n       4.00058397e-04, 4.59011796e-04, 4.90294733e-04, 4.58270220e-04,\n       2.99825051e-04, 4.59042591e-04, 4.00263093e-04, 2.57403747e-06,\n       1.43863438e-06, 2.09061964e-06, 4.00547119e-04, 4.58976710e-04,\n       5.00325044e-04, 4.00439522e-04, 4.00844798e-04, 4.90547446e-04,\n       4.00630436e-04, 3.01060530e-04, 2.98656067e-04, 4.58025289e-04,\n       5.01186648e-04, 4.02418792e-04, 1.71942613e-06, 4.03444146e-04,\n       4.57468462e-04, 4.47079933e-04, 3.00358133e-04, 6.40294834e-06,\n       3.00570531e-04, 3.00228581e-04, 1.81949463e-06, 2.99967853e-04,\n       2.99146223e-04, 5.00586647e-04, 2.60040249e-06, 4.90206705e-04,\n       2.99045801e-04, 3.99438237e-04, 5.00514356e-04, 5.00229453e-04,\n       6.66105840e-06, 1.13568357e-06, 4.57814318e-04, 2.03090090e-06,\n       2.92899107e-04, 2.99600562e-04, 4.00138015e-04, 5.00516116e-04,\n       4.58245377e-04, 4.90342763e-04, 3.00918387e-04, 4.89182626e-04,\n       1.73259948e-06, 4.90409979e-04, 4.90216311e-04, 4.57994545e-04,\n       4.58349365e-04, 4.90703234e-04, 1.57157454e-06, 1.49064055e-06,\n       4.89066304e-04, 3.00880842e-04, 4.57457000e-04, 5.92128273e-06,\n       2.99255042e-04, 5.01110937e-04, 4.59335609e-04, 3.00850357e-04,\n       4.01676896e-04, 4.90843956e-04, 3.00554130e-04, 4.89864936e-04,\n       3.99506511e-04, 4.58269376e-04, 4.88871876e-04, 4.55468704e-04,\n       3.01061833e-04, 4.00032598e-04, 4.58560404e-04, 3.00660678e-04,\n       2.99568314e-04, 3.25194552e-06, 3.00532520e-04, 4.58139033e-04,\n       3.99771345e-04, 4.00894775e-04, 6.33478111e-04, 3.01032344e-04,\n       3.00469658e-04, 4.57702281e-04, 4.45402663e-07, 3.98912043e-04,\n       4.00162045e-04, 4.89775147e-04, 4.58402997e-04, 4.37684825e-06,\n       6.63471137e-04, 4.01056168e-04, 5.38340591e-04, 3.00226726e-04,\n       4.00126033e-04, 2.13248060e-07, 2.99931748e-04, 3.99352333e-04,\n       5.38632745e-04, 4.59586840e-04, 3.99828341e-04, 3.00097750e-04,\n       3.16297988e-07, 4.57721100e-04, 4.58490089e-04, 4.58120835e-04,\n       4.46655784e-04, 2.99566340e-04, 4.58178025e-04, 3.00052035e-04,\n       2.99908588e-04, 3.00566502e-04, 5.20167928e-07, 2.82100667e-07,\n       4.58297446e-04, 3.98295965e-04, 4.09143232e-06, 4.89580603e-04,\n       5.38513034e-04, 1.56867830e-06, 2.99399651e-04, 4.58250793e-04,\n       4.58375346e-04, 5.00591200e-04, 3.00334949e-04, 3.00114600e-04,\n       5.00107669e-04, 4.58804809e-04, 8.26250241e-07, 3.00368073e-04,\n       4.00221698e-04, 5.00560434e-04, 4.89942335e-04, 2.99144532e-04,\n       2.88516035e-06, 4.89269994e-04, 2.99931463e-04, 3.99685336e-04,\n       5.84490331e-07, 3.00305744e-04, 3.99983007e-04, 4.99893290e-04,\n       3.00091859e-04, 3.99757797e-04, 3.03312463e-04, 3.00293462e-04,\n       1.25345606e-06, 4.00212964e-04, 4.58125742e-04, 2.99915065e-04,\n       4.58234999e-04, 4.59235756e-04, 2.99916354e-04, 4.89912475e-04,\n       1.33258711e-06, 2.99835850e-04, 3.99423613e-04, 4.89814134e-04,\n       4.58619862e-04, 4.89582132e-04, 3.00495109e-04, 3.99281132e-04,\n       4.90000790e-04, 3.99750962e-04, 3.00019700e-04, 4.42842856e-07,\n       4.92911675e-04, 4.89833570e-04, 4.90312892e-04, 4.58544005e-04,\n       1.34954183e-06, 4.57965387e-04, 4.00199153e-04, 3.98710534e-04,\n       7.07665543e-07, 3.99900535e-04, 4.89533040e-04, 4.99321138e-04,\n       4.00712131e-04, 4.90341731e-04, 4.58445560e-04, 1.20253756e-06,\n       1.15430054e-06, 3.98006199e-04, 2.99962793e-04, 4.89677841e-04,\n       2.98996458e-04, 4.58419276e-04, 3.99440756e-04, 4.58164564e-04,\n       3.00004921e-04, 2.99990042e-04, 2.99987046e-04, 4.58464347e-04,\n       4.89941154e-04, 3.00002212e-04, 2.99900232e-04, 4.00413800e-04,\n       4.99537290e-04, 4.00335480e-04, 1.74632455e-06, 3.00262213e-04,\n       6.11133373e-06, 4.00149967e-04, 4.00209555e-04, 4.00104070e-04,\n       2.44026977e-06, 4.58138834e-04, 4.00355222e-04, 3.99556341e-04,\n       8.31393994e-07, 4.90219154e-04, 4.60523912e-04, 5.00252499e-04,\n       4.00784642e-04, 4.57487013e-04, 4.58704010e-04, 3.00941621e-04,\n       1.50883363e-06, 3.01224725e-04, 4.57554949e-04, 2.99551589e-04,\n       4.56382620e-04, 4.54832943e-04, 2.52948517e-06, 4.98263952e-04,\n       1.76639046e-06, 1.00135803e-06, 3.00849771e-04, 4.92715483e-04,\n       4.98195751e-04, 4.58636835e-04, 3.00450383e-04, 4.57913786e-04,\n       4.88625045e-04, 1.32745847e-06, 3.99746540e-04, 1.22524883e-06,\n       3.00059556e-04, 4.00114025e-04, 4.97312196e-04, 4.00125457e-04,\n       1.65198442e-06, 4.58829652e-04, 2.99133739e-04, 9.17524405e-07,\n       1.44415548e-06, 3.99722613e-04, 3.99151767e-04, 4.90039240e-04,\n       3.00706345e-04, 4.58392278e-04, 4.89348999e-04, 5.00274314e-04,\n       2.95990366e-04, 1.04605727e-06, 4.58271600e-04, 2.99567991e-04,\n       4.57077275e-04, 2.99744671e-04, 3.00131782e-04, 4.90419080e-04,\n       4.47184332e-04, 3.00642755e-04, 1.86652971e-06, 4.57889558e-04,\n       4.89849916e-04, 4.57873875e-04, 3.00607544e-04, 4.58769865e-04,\n       7.53945746e-07, 3.99925343e-04, 3.00569680e-04, 1.41934167e-06,\n       2.99923720e-04, 4.58880874e-04, 4.00306317e-04, 4.57628251e-04,\n       5.45348299e-06, 4.88951238e-04, 3.00284376e-04, 7.53131045e-06,\n       4.00116308e-04, 4.57586513e-04, 4.89416731e-04, 5.00251369e-04,\n       3.00243357e-04, 4.00247184e-04, 4.60071671e-04, 4.00320009e-04,\n       3.00059556e-04, 3.00546588e-04, 2.98826733e-04, 5.00179990e-04,\n       5.00228094e-04, 5.97083660e-04, 1.77713825e-06, 4.90174045e-04,\n       2.99869688e-04, 3.00465174e-04, 1.18946740e-06, 4.91163256e-04,\n       4.91259608e-04, 4.59371141e-04, 1.68654816e-06, 3.99565864e-04,\n       4.90724942e-04, 4.00022291e-04, 3.00698843e-04, 1.61773638e-06,\n       3.99770758e-04, 4.57352647e-04, 4.00425874e-04, 4.58616714e-04,\n       1.96677265e-06, 4.90467493e-04, 4.59137671e-04, 4.00974578e-04,\n       4.00141339e-04, 4.89534831e-04, 4.57931471e-04, 4.01777240e-04,\n       1.73571346e-06, 4.91206697e-04, 4.00392811e-04, 2.99783988e-04,\n       2.99656650e-04, 1.24458152e-06, 4.00450489e-04, 4.57914382e-04,\n       1.74290341e-06, 4.89726318e-04, 3.00570928e-04, 4.89192999e-04,\n       4.00810792e-04, 1.11929842e-06, 4.00162954e-04, 4.00188010e-04,\n       4.57882297e-04, 4.89855250e-04, 3.00517366e-04, 3.99785609e-04,\n       4.90400931e-04, 2.99790460e-04, 4.93451587e-06, 1.68739054e-06,\n       3.99592142e-04, 4.00690307e-04, 4.90178939e-04, 4.90468119e-04,\n       1.91938062e-06, 4.91362023e-04, 1.50487269e-06, 4.00831886e-04,\n       4.57561540e-04, 2.99488968e-04, 5.00347030e-04, 4.90721180e-04,\n       1.68266773e-06, 3.99425261e-04, 4.90691005e-04, 2.99975623e-04,\n       4.47168282e-04, 3.99517893e-04, 4.58163335e-04, 4.90030508e-04,\n       4.90859156e-04, 3.99880407e-04, 4.00700635e-04, 4.99227899e-04,\n       3.00672903e-04, 2.99892708e-04, 4.56491690e-04, 4.89661984e-04,\n       5.00538897e-04, 4.58981997e-04, 3.00514694e-04, 3.99338039e-04,\n       4.60431972e-04, 3.00363132e-04, 2.99205230e-04, 4.00319583e-04,\n       2.99464716e-04, 4.58266251e-04, 5.01244707e-04, 4.58548139e-04,\n       4.91025320e-04, 4.90881867e-04, 3.00839303e-04, 4.90292275e-04,\n       2.04831949e-06, 4.90097307e-04, 4.99753392e-04, 4.01081766e-04,\n       3.04850335e-04, 1.49748886e-06, 4.91151717e-04, 4.90330795e-04,\n       2.99664066e-04, 1.10524435e-06, 2.99650199e-04, 4.58871650e-04,\n       4.59811676e-04, 3.99843104e-04, 4.49063249e-04, 4.00507324e-04,\n       2.99830243e-04, 3.00627394e-04, 1.93824187e-06, 4.99845224e-04,\n       4.58848872e-04, 4.90721273e-04, 1.82651040e-06, 4.48942456e-04,\n       4.58646655e-04, 3.00531650e-04, 3.00522816e-04, 3.00219458e-04,\n       5.00156309e-04, 4.90478648e-04, 4.91035511e-04, 4.00078512e-04,\n       4.00020301e-04, 4.03289551e-04, 3.01953252e-04, 4.56951693e-04]), 'param_reduce_dim': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_reduce_dim__n_components': masked_array(data=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n                   5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n                   6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n                   7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n                   8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n                   9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\n                   10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n                   10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n                   11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12,\n                   12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13,\n                   13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n                   13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n                   14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15,\n                   15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16,\n                   16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n                   17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n                   17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n                   18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19,\n                   19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 1, 1,\n                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,\n                   4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5,\n                   5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6,\n                   6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7,\n                   7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8,\n                   8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9,\n                   9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10,\n                   10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n                   10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n                   11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12,\n                   12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13,\n                   13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n                   14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n                   14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\n                   15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16,\n                   16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17,\n                   17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n                   17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n                   18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19,\n                   19, 19, 19, 19, 19, 19, 19, 19, 19, 19],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__learning_rate': masked_array(data=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__max_depth': masked_array(data=[5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10,\n                   15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5,\n                   10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__n_estimators': masked_array(data=[100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_scaler': masked_array(data=[MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler()],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=8), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 4, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 5, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 6, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 7, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 8, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 9, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 10, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 11, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 12, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 13, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 14, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 15, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 16, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 17, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 18, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'reduce_dim__n_components': 19, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}], 'split0_test_score': array([-1.83313528, -1.83934145, -1.81174819, -1.91373461, -1.9491171 ,\n       -1.99459255, -2.09731681, -2.10663765, -2.16539261, -1.9737229 ,\n       -1.9286941 , -1.90821778, -1.97065227, -1.9285471 , -1.91548882,\n       -1.97064301, -1.92968373, -1.91677854, -1.73778628, -1.80871688,\n       -1.82380256, -1.99828728, -2.01957351, -2.01065091, -2.15082869,\n       -2.1597424 , -2.16841327, -1.94785418, -1.88477861, -1.85862479,\n       -1.96351067, -1.91489344, -1.8967019 , -1.96561623, -1.9246564 ,\n       -1.90756666, -1.67381842, -1.7634508 , -1.76195658, -2.02090431,\n       -1.95105887, -1.97783855, -2.20549842, -2.20800008, -2.19238081,\n       -1.94751249, -1.88351964, -1.85717527, -1.96913633, -1.92374646,\n       -1.9056849 , -1.96165282, -1.92027149, -1.89957585, -1.58475302,\n       -1.59375077, -1.61828436, -2.03069203, -1.993986  , -2.055924  ,\n       -2.19057839, -2.23371997, -2.18061533, -1.95031808, -1.89017625,\n       -1.86463518, -1.9642665 , -1.90579892, -1.8828661 , -1.96002005,\n       -1.91479864, -1.89248733, -1.63188759, -1.64788726, -1.6590329 ,\n       -1.9768291 , -1.99772622, -1.98899778, -2.20652355, -2.1743252 ,\n       -2.22118742, -1.95051259, -1.89162204, -1.86481221, -1.96681498,\n       -1.92546991, -1.91275762, -1.96179862, -1.91722583, -1.89944768,\n       -1.58858873, -1.6393689 , -1.65548294, -1.86672135, -1.88325479,\n       -1.8834681 , -2.26887186, -2.29199675, -2.27545472, -1.94982605,\n       -1.88847816, -1.86223856, -1.97196777, -1.92949339, -1.91060503,\n       -1.98656233, -1.96130575, -1.95572109, -1.61510537, -1.65449018,\n       -1.71152297, -1.76038913, -1.78960489, -1.79780259, -2.07928404,\n       -2.06759714, -2.05071529, -1.95213947, -1.89340396, -1.86770905,\n       -1.95019906, -1.87877286, -1.84825095, -1.97089358, -1.92552757,\n       -1.91044075, -1.66255158, -1.71037046, -1.71299206, -1.91324768,\n       -1.91452622, -1.90209273, -2.14020156, -2.10667972, -2.12235328,\n       -1.95507723, -1.89984282, -1.87643975, -1.95587226, -1.89852172,\n       -1.87793207, -1.96071527, -1.91049779, -1.89137715, -1.67568884,\n       -1.66229213, -1.62262588, -1.89185408, -1.92318139, -1.8608846 ,\n       -2.0898577 , -2.1562043 , -2.09914449, -1.95313224, -1.89150537,\n       -1.86353293, -1.95379271, -1.89247752, -1.87191593, -1.96093935,\n       -1.91127889, -1.89242   , -1.6150968 , -1.65166898, -1.71693522,\n       -1.96897333, -2.01910208, -2.0022465 , -2.11202071, -2.11362303,\n       -2.09387585, -1.95720846, -1.89678812, -1.86878224, -1.94980625,\n       -1.89098193, -1.8667928 , -1.95966896, -1.91071155, -1.88934768,\n       -1.6190043 , -1.68255735, -1.61176289, -1.84323631, -1.86266992,\n       -1.84752078, -2.06008648, -2.12803469, -2.10673477, -1.96054456,\n       -1.90113624, -1.87344557, -1.95968674, -1.90665532, -1.88142911,\n       -1.9622827 , -1.91675838, -1.89940361, -1.56336394, -1.60746631,\n       -1.54472471, -1.84391279, -1.81279604, -1.87178833, -2.08026501,\n       -2.11762895, -2.13114584, -1.96271807, -1.90163678, -1.87175499,\n       -1.96256726, -1.91144217, -1.88773666, -1.96711342, -1.92405877,\n       -1.90376005, -1.56106671, -1.63114538, -1.66637588, -1.79236752,\n       -1.81755789, -1.78802514, -2.04045964, -2.04930161, -1.97391195,\n       -1.96263803, -1.9016957 , -1.87179753, -1.95625053, -1.91166203,\n       -1.88690169, -1.95946551, -1.90551221, -1.88318726, -1.65142625,\n       -1.70405915, -1.67283795, -1.9385648 , -1.9358106 , -1.88725607,\n       -2.00817043, -2.00651375, -1.99759957, -1.96250275, -1.90737471,\n       -1.88261737, -1.95650836, -1.9208634 , -1.90495974, -1.95679556,\n       -1.90378719, -1.88134927, -1.76505102, -1.74291283, -1.75842652,\n       -1.8857213 , -1.8825373 , -1.95643945, -2.13033557, -2.1447119 ,\n       -2.13117617, -1.95578154, -1.89556148, -1.86136707, -1.9696538 ,\n       -1.94290085, -1.92903709, -1.9698029 , -1.93350856, -1.91683535,\n       -1.62712664, -1.68443671, -1.72726699, -1.76903755, -1.86510154,\n       -1.72998587, -2.01335527, -1.98534489, -2.05290826, -1.96134892,\n       -1.8992564 , -1.86343862, -1.97179687, -1.93210412, -1.91374383,\n       -1.97405217, -1.93516257, -1.91416408, -1.64609589, -1.66979535,\n       -1.69740788, -1.88288197, -1.90833444, -1.90690472, -1.98926285,\n       -1.95503616, -1.9323722 , -1.9663304 , -1.90898795, -1.87371514,\n       -1.98343166, -1.94772691, -1.9311753 , -1.9639028 , -1.91458442,\n       -1.89282696, -1.59390266, -1.62463429, -1.64622128, -1.82185961,\n       -1.81847188, -1.85612887, -1.97254929, -1.96689851, -1.94329182,\n       -1.96365522, -1.90414084, -1.87166033, -1.96859399, -1.93216884,\n       -1.91645425, -1.95991247, -1.90934022, -1.88695056, -1.67002688,\n       -1.69625101, -1.68874341, -1.86239277, -1.82416342, -1.87764862,\n       -1.98338402, -1.93200017, -1.9803536 , -1.96250941, -1.90485926,\n       -1.87084013, -1.95865239, -1.91034651, -1.89130588, -1.94920623,\n       -1.8918698 , -1.86677766, -1.7979519 , -1.83534551, -1.85674083,\n       -2.12742484, -2.13839693, -2.11829797, -2.14058942, -2.17510221,\n       -2.15442915, -1.95511022, -1.89333376, -1.87003299, -1.96722437,\n       -1.93526271, -1.92909394, -1.96756589, -1.92501609, -1.91054638,\n       -1.80822276, -1.95753553, -1.79343972, -2.01899633, -2.15984091,\n       -2.02301321, -2.08083028, -2.10706432, -2.09984127, -1.95250189,\n       -1.88454478, -1.85309475, -1.96663925, -1.93566467, -1.93139512,\n       -1.96717463, -1.92119799, -1.90011444, -1.77554442, -1.84336059,\n       -1.82272715, -2.11056397, -2.07650066, -2.06929705, -2.15885255,\n       -2.13601088, -2.19512659, -1.95535597, -1.89870109, -1.87341394,\n       -1.98090868, -1.96285138, -1.95333495, -1.97177064, -1.93331756,\n       -1.91848398, -1.78025431, -1.87477444, -1.91264906, -2.12243041,\n       -2.13065651, -2.15676644, -2.22533379, -2.1799177 , -2.17291123,\n       -1.9533087 , -1.89552067, -1.87219741, -1.98520028, -1.96423195,\n       -1.95524104, -1.97849001, -1.94278775, -1.93133247, -1.83938968,\n       -1.79948883, -1.78824659, -2.08692996, -2.06785404, -2.06539014,\n       -2.38941656, -2.39314543, -2.37976586, -1.95299321, -1.89521457,\n       -1.8732346 , -2.00526793, -1.97954382, -1.97928432, -1.99835357,\n       -1.98660505, -1.98216396, -1.69548438, -1.75530133, -1.69866256,\n       -2.09796598, -2.12406821, -2.11927047, -2.37915016, -2.42269924,\n       -2.39289578, -1.95186595, -1.89111849, -1.86758997, -1.99766688,\n       -1.98059678, -1.97346487, -2.00160041, -1.98761517, -1.98377903,\n       -1.78078551, -1.87718393, -1.8803792 , -2.1550895 , -2.17330766,\n       -2.23671169, -2.25495045, -2.28726202, -2.26091114, -1.95492357,\n       -1.90066921, -1.87744431, -1.97652802, -1.94271833, -1.93399589,\n       -1.97346123, -1.93704286, -1.92390532, -1.74242048, -1.78098122,\n       -1.76226296, -2.01345061, -1.97018263, -1.99474342, -2.25993535,\n       -2.24905477, -2.24355252, -1.94719654, -1.8824105 , -1.85552622,\n       -1.97255035, -1.92967569, -1.91074238, -1.96945952, -1.92860903,\n       -1.91352461, -1.80132739, -1.82569246, -1.83391686, -2.08368606,\n       -2.06085361, -2.05296733, -2.14852127, -2.13116696, -2.08204579,\n       -1.94699701, -1.88208767, -1.85504624, -1.96135187, -1.91698249,\n       -1.90254717, -1.9612891 , -1.91240658, -1.89212309, -1.75827102,\n       -1.79808874, -1.79776093, -2.14221345, -2.16738212, -2.05082668,\n       -2.19953746, -2.22612381, -2.16496358, -1.94699118, -1.87646665,\n       -1.84561634, -1.96678981, -1.92409802, -1.90841365, -1.96957355,\n       -1.92837443, -1.9138609 , -1.69767234, -1.72913621, -1.75478055,\n       -2.11122633, -2.18713074, -2.18984159, -2.16138144, -2.14746049,\n       -2.19805938, -1.94693897, -1.87715822, -1.84710453, -1.96639696,\n       -1.92182755, -1.90560282, -1.96991988, -1.92855312, -1.9127295 ,\n       -1.8292715 , -1.86286374, -1.87839683, -2.18718539, -2.20318343,\n       -2.18001257, -2.20733186, -2.18668659, -2.19864391, -1.94783493,\n       -1.87751306, -1.84880752, -1.96682765, -1.92629697, -1.9097389 ,\n       -1.97080146, -1.93360493, -1.92009195, -1.72311003, -1.7413394 ,\n       -1.7736339 , -2.22311526, -2.15210336, -2.18541311, -2.32822619,\n       -2.35944014, -2.37503095, -1.95056926, -1.89101   , -1.86690987,\n       -1.99049508, -1.96912007, -1.96441977, -1.9891837 , -1.96767164,\n       -1.96312853, -1.68828958, -1.72511969, -1.7314978 , -2.17794952,\n       -2.22141773, -2.18002713, -2.33256143, -2.3454751 , -2.32704773,\n       -1.95099127, -1.89543282, -1.87225537, -1.98745805, -1.96533127,\n       -1.9586288 , -1.98610861, -1.96306593, -1.95432725, -1.83038389,\n       -1.82983827, -1.84651434, -2.21242886, -2.26478059, -2.22350382,\n       -2.34305984, -2.36559494, -2.36486164, -1.95498931, -1.90060313,\n       -1.87803845, -1.99280379, -1.97414014, -1.96933882, -1.99263856,\n       -1.97232651, -1.96920578, -1.80038107, -1.85656604, -1.86410692,\n       -2.22224921, -2.23019841, -2.20610057, -2.23974791, -2.27992047,\n       -2.24702306, -1.95513087, -1.90125911, -1.88057134, -1.97400349,\n       -1.93883982, -1.92934801, -1.9755465 , -1.94213306, -1.93076337,\n       -1.77275838, -1.81930987, -1.86958857, -2.10285333, -2.10059185,\n       -2.13746372, -2.15487663, -2.15750354, -2.11493301, -1.94593285,\n       -1.88965762, -1.86519905, -1.96378879, -1.91944711, -1.90061095,\n       -1.96567415, -1.9189771 , -1.90455397, -1.72162102, -1.7953109 ,\n       -1.81697895, -2.11984495, -2.15148594, -2.16578825, -2.1384765 ,\n       -2.1989576 , -2.20234309, -1.94578343, -1.88437048, -1.86001469,\n       -1.96718413, -1.92329787, -1.91100325, -1.96899726, -1.92866252,\n       -1.91085663, -1.73977928, -1.8139756 , -1.81669866, -2.16078428,\n       -2.08968469, -2.11014383, -2.32126028, -2.23851762, -2.28735655,\n       -1.94484843, -1.88289561, -1.85945722, -1.97162348, -1.93741745,\n       -1.9257073 , -1.97228388, -1.93786908, -1.92427578]), 'split1_test_score': array([-1.7151805 , -1.77497655, -1.78336859, -1.7439693 , -1.72910007,\n       -1.798091  , -1.95523659, -1.9524734 , -1.94929106, -1.93367769,\n       -1.88088651, -1.85416009, -1.91469089, -1.85297512, -1.82851081,\n       -1.91028764, -1.84488351, -1.81877078, -1.45561083, -1.52674681,\n       -1.48935776, -1.62755799, -1.66896414, -1.59108073, -1.74123695,\n       -1.81086495, -1.72112286, -1.8872924 , -1.78563219, -1.74647925,\n       -1.89292562, -1.8136304 , -1.77999811, -1.89467759, -1.83670207,\n       -1.80801118, -1.38622341, -1.45619195, -1.46134321, -1.53364951,\n       -1.59378546, -1.57536353, -1.56431894, -1.56247021, -1.62787126,\n       -1.88712726, -1.78829897, -1.74892638, -1.89834676, -1.81688251,\n       -1.78484607, -1.89073275, -1.80371704, -1.76616555, -1.3394951 ,\n       -1.37601365, -1.36951967, -1.51672664, -1.45050749, -1.42147053,\n       -1.48878224, -1.41554663, -1.40686856, -1.88794414, -1.78585302,\n       -1.74480113, -1.878622  , -1.77812427, -1.73900268, -1.88119037,\n       -1.78240364, -1.74042586, -1.26723104, -1.23312489, -1.34502352,\n       -1.39119253, -1.36750188, -1.38854345, -1.52597688, -1.50576439,\n       -1.48932195, -1.87488015, -1.76874545, -1.72601211, -1.87890923,\n       -1.77925196, -1.73662503, -1.88124273, -1.78189354, -1.74149191,\n       -1.36482721, -1.53542179, -1.52720855, -1.4763057 , -1.39173809,\n       -1.46222713, -1.54149911, -1.59454456, -1.53484156, -1.87869445,\n       -1.78134146, -1.74089508, -1.88213483, -1.78484589, -1.7407935 ,\n       -1.8787312 , -1.78102656, -1.74068964, -1.31391628, -1.39904286,\n       -1.40931911, -1.55282842, -1.52014029, -1.57605043, -1.55103504,\n       -1.5901483 , -1.62576044, -1.87714404, -1.77818313, -1.73637814,\n       -1.88845986, -1.79670406, -1.76206898, -1.88953268, -1.80004494,\n       -1.76393   , -1.44905073, -1.56835079, -1.49589025, -1.70854304,\n       -1.72445923, -1.7071524 , -1.68637   , -1.70981187, -1.71294662,\n       -1.87927777, -1.77915634, -1.73721298, -1.8960713 , -1.81185746,\n       -1.77499384, -1.90085247, -1.82715028, -1.79577228, -1.30472495,\n       -1.33398577, -1.37730957, -1.61944288, -1.66479872, -1.57587867,\n       -1.75799148, -1.79262725, -1.77042928, -1.87978751, -1.77896249,\n       -1.73647855, -1.90371283, -1.82495387, -1.79046945, -1.90477587,\n       -1.83233495, -1.80242532, -1.48412054, -1.46740708, -1.36776417,\n       -1.65045292, -1.57523245, -1.67082413, -1.76324758, -1.76151655,\n       -1.78528397, -1.8798924 , -1.78180315, -1.7405242 , -1.9054343 ,\n       -1.82689574, -1.78917889, -1.9071937 , -1.83645294, -1.80671645,\n       -1.40466031, -1.39441021, -1.48966348, -1.58656771, -1.62633087,\n       -1.64637823, -1.7557847 , -1.72756543, -1.76324387, -1.89234448,\n       -1.79378172, -1.75345781, -1.90063893, -1.82131169, -1.78528192,\n       -1.90774534, -1.83855264, -1.80773373, -1.36950632, -1.48528048,\n       -1.4372776 , -1.66204425, -1.59843206, -1.66302575, -1.75430708,\n       -1.71993803, -1.83834856, -1.89482491, -1.79948302, -1.76127449,\n       -1.90578298, -1.83168908, -1.80325836, -1.91205179, -1.83925166,\n       -1.81081186, -1.38628851, -1.43380302, -1.41145145, -1.60521709,\n       -1.62738813, -1.60469091, -1.75433788, -1.8074077 , -1.72108223,\n       -1.89466133, -1.79926076, -1.76093796, -1.90662993, -1.8354724 ,\n       -1.80764696, -1.91470524, -1.84307046, -1.81672203, -1.44576016,\n       -1.45449729, -1.4049311 , -1.50463854, -1.50767033, -1.51734267,\n       -1.62057338, -1.61256757, -1.61852667, -1.90559471, -1.81438789,\n       -1.77466896, -1.91717092, -1.8470915 , -1.81423387, -1.91467174,\n       -1.84841751, -1.81913791, -1.41165618, -1.43263385, -1.45068446,\n       -1.44481507, -1.40743113, -1.48687784, -1.43554169, -1.47562683,\n       -1.42406684, -1.88923643, -1.79171626, -1.75022096, -1.8919673 ,\n       -1.80019418, -1.76003151, -1.88946802, -1.80119873, -1.76007663,\n       -1.32126801, -1.2889621 , -1.3702278 , -1.4202719 , -1.38583271,\n       -1.37247244, -1.37792885, -1.38323849, -1.36533917, -1.88762132,\n       -1.7855005 , -1.73991682, -1.88608042, -1.78931942, -1.75376829,\n       -1.88295543, -1.78628305, -1.75070245, -1.29391031, -1.40484132,\n       -1.37619825, -1.4069151 , -1.42159476, -1.40180204, -1.44011133,\n       -1.4026732 , -1.46053287, -1.8800231 , -1.76950315, -1.72166981,\n       -1.88081233, -1.78836289, -1.74886856, -1.8786817 , -1.78183439,\n       -1.73867098, -1.34082073, -1.3488095 , -1.3587993 , -1.48176175,\n       -1.40746742, -1.42264937, -1.48561967, -1.47997394, -1.49956221,\n       -1.88686793, -1.77772881, -1.72819646, -1.88285648, -1.78655565,\n       -1.74582075, -1.88460504, -1.79452132, -1.75345921, -1.27347672,\n       -1.33452755, -1.32360003, -1.41855802, -1.5180989 , -1.44383399,\n       -1.53030517, -1.49179039, -1.49736997, -1.88663489, -1.77720102,\n       -1.72785953, -1.88195664, -1.78392943, -1.74364378, -1.88370838,\n       -1.79052327, -1.75013134, -1.37129617, -1.31118602, -1.33882901,\n       -1.31983657, -1.31055883, -1.27416581, -1.31178647, -1.34349225,\n       -1.2689066 , -1.88496839, -1.78802125, -1.74422606, -1.87161133,\n       -1.77117842, -1.7306902 , -1.87110987, -1.76088713, -1.70996431,\n       -1.22206861, -1.25890448, -1.27859901, -1.42924079, -1.44560196,\n       -1.40342542, -1.68469709, -1.71899671, -1.67202438, -1.88867218,\n       -1.79149789, -1.74830238, -1.90348954, -1.82702767, -1.79395041,\n       -1.90183578, -1.8260394 , -1.791692  , -1.13028215, -1.1820203 ,\n       -1.23856169, -1.57135826, -1.5513877 , -1.57281618, -1.89956681,\n       -1.88435628, -1.89183707, -1.88763613, -1.79280715, -1.75085621,\n       -1.91825384, -1.85202896, -1.82727756, -1.91692119, -1.85667695,\n       -1.83357537, -1.13330183, -1.13833448, -1.24520572, -1.61250453,\n       -1.52822374, -1.64445649, -1.90300734, -1.90032866, -1.84188968,\n       -1.89149377, -1.8008635 , -1.76077309, -1.91432812, -1.84733942,\n       -1.81718676, -1.91670394, -1.85766687, -1.83496665, -1.18263564,\n       -1.0987254 , -1.2119037 , -1.49421048, -1.48473617, -1.4427827 ,\n       -1.8518158 , -1.86179886, -1.87377821, -1.89118433, -1.79961563,\n       -1.75856345, -1.92112654, -1.85497514, -1.82604056, -1.91858002,\n       -1.86263124, -1.84152808, -1.13572226, -1.14095896, -1.13940391,\n       -1.48895026, -1.50296888, -1.46921032, -1.94067195, -1.93821717,\n       -1.9391473 , -1.89143625, -1.79925918, -1.75835316, -1.91944161,\n       -1.85412011, -1.82470726, -1.92270879, -1.87072716, -1.84915868,\n       -1.26857925, -1.24683471, -1.24337946, -1.67356162, -1.69470627,\n       -1.73220497, -2.0232059 , -1.99086959, -2.0231767 , -1.8981226 ,\n       -1.81140733, -1.77116957, -1.92396342, -1.86814355, -1.85198186,\n       -1.92216641, -1.86560906, -1.84651037, -1.35148766, -1.32518665,\n       -1.34855085, -1.80545308, -1.749983  , -1.78280493, -1.83353321,\n       -1.79461929, -1.83425049, -1.9016927 , -1.82276333, -1.78589801,\n       -1.90293471, -1.82925144, -1.79686079, -1.90417163, -1.83037766,\n       -1.80206774, -1.29703785, -1.32610058, -1.37346444, -1.76768927,\n       -1.77237849, -1.7672334 , -1.73164784, -1.74361668, -1.78440611,\n       -1.89768019, -1.81614589, -1.77793282, -1.89094065, -1.81197845,\n       -1.77497231, -1.8915782 , -1.81058115, -1.77823566, -1.29473431,\n       -1.33204473, -1.37494912, -1.65160195, -1.65602449, -1.64674176,\n       -1.76750471, -1.72944749, -1.73947821, -1.89883019, -1.8132281 ,\n       -1.77560087, -1.89141791, -1.80911904, -1.77436704, -1.89633973,\n       -1.82024575, -1.78604787, -1.32032979, -1.3019645 , -1.32192838,\n       -1.62565489, -1.63654055, -1.65025968, -1.68174618, -1.69958771,\n       -1.72440013, -1.90066438, -1.81510247, -1.77827927, -1.8923614 ,\n       -1.80971742, -1.77534864, -1.89651266, -1.81777514, -1.78589943,\n       -1.39238975, -1.38429302, -1.42396705, -1.56491493, -1.58936403,\n       -1.64580859, -1.83799351, -1.80236485, -1.835546  , -1.90359093,\n       -1.8267736 , -1.79347066, -1.91379617, -1.83747199, -1.80618935,\n       -1.91587268, -1.8569653 , -1.82967631, -1.33215067, -1.30914157,\n       -1.36636228, -1.67955828, -1.67099235, -1.6785954 , -1.87362856,\n       -1.86369939, -1.84486991, -1.90280122, -1.82727998, -1.79485845,\n       -1.91264695, -1.83898042, -1.80744345, -1.91677528, -1.85372451,\n       -1.82878149, -1.34660163, -1.38494745, -1.36670148, -1.53342834,\n       -1.62489315, -1.70333591, -1.81007436, -1.85852793, -1.84589998,\n       -1.90172424, -1.82514267, -1.79193974, -1.90284876, -1.82775359,\n       -1.79303635, -1.91031448, -1.84565998, -1.81833945, -1.22251643,\n       -1.24153826, -1.30335154, -1.68003407, -1.65410984, -1.66606312,\n       -1.77669104, -1.79179611, -1.79837462, -1.90206862, -1.82505557,\n       -1.79137697, -1.9052891 , -1.82622962, -1.79336401, -1.90931814,\n       -1.84129799, -1.81465852, -1.3421128 , -1.38882663, -1.34870101,\n       -1.5278587 , -1.55036501, -1.59463439, -1.72281632, -1.71301857,\n       -1.75646604, -1.90380074, -1.82764434, -1.7939425 , -1.90501917,\n       -1.82572002, -1.78927668, -1.91106488, -1.84443142, -1.81942732,\n       -1.29624115, -1.30522162, -1.32753571, -1.5397143 , -1.53618562,\n       -1.52625255, -1.78867297, -1.73686371, -1.73979343, -1.90206538,\n       -1.82504686, -1.79085302, -1.90744281, -1.83606293, -1.80906625,\n       -1.91184401, -1.84949783, -1.82490988, -1.39495378, -1.37338847,\n       -1.37133082, -1.52743167, -1.51923947, -1.59316811, -1.70470574,\n       -1.75627389, -1.73967412, -1.90107058, -1.82436876, -1.79140074,\n       -1.90960567, -1.84303777, -1.81361767, -1.91003864, -1.84497788,\n       -1.81930251, -1.39125396, -1.39380785, -1.42629386, -1.58053733,\n       -1.56756178, -1.55163175, -1.8091128 , -1.78596643, -1.80602417,\n       -1.89699561, -1.81840835, -1.78363368, -1.91244089, -1.83852088,\n       -1.80684493, -1.90365162, -1.83851021, -1.81287334]), 'split2_test_score': array([-1.51266115, -1.52599018, -1.52605218, -1.62719116, -1.59852353,\n       -1.65725321, -2.11739995, -2.12141016, -2.10245263, -1.88824255,\n       -1.82402662, -1.80351181, -1.89273827, -1.83746375, -1.81107403,\n       -1.89259944, -1.83904817, -1.8144751 , -1.73261791, -1.68415313,\n       -1.69401936, -2.27565823, -2.26218002, -2.26549706, -2.24610579,\n       -2.24468484, -2.21708937, -1.91743523, -1.87894323, -1.86231829,\n       -1.91868752, -1.88248364, -1.87099526, -1.9163378 , -1.88054752,\n       -1.86933047, -1.67296392, -1.63194982, -1.62175654, -2.12881834,\n       -2.1149895 , -2.11910546, -2.21945945, -2.25099559, -2.25265539,\n       -1.9202059 , -1.88541648, -1.87403194, -1.91279867, -1.87423091,\n       -1.85968627, -1.91496026, -1.8793967 , -1.86668369, -1.67226165,\n       -1.73866185, -1.74070418, -2.07900911, -1.95592549, -1.98591274,\n       -2.26390504, -2.27871345, -2.28339193, -1.92161259, -1.89114229,\n       -1.88129414, -1.92924132, -1.89787106, -1.88630108, -1.94188912,\n       -1.93044092, -1.91770908, -1.78604543, -1.76243291, -1.75832225,\n       -2.00097821, -2.00740137, -2.0273981 , -2.21192994, -2.16365029,\n       -2.14568003, -1.92229014, -1.89423849, -1.88501025, -1.9067331 ,\n       -1.85228102, -1.8337469 , -1.92464464, -1.89504957, -1.87257064,\n       -1.80130722, -1.80374737, -1.81068821, -2.1113417 , -2.05488384,\n       -2.02796202, -2.24355183, -2.23080534, -2.26318679, -1.91966003,\n       -1.88522587, -1.87101171, -1.9092688 , -1.8790479 , -1.87151717,\n       -1.91253582, -1.87297879, -1.86002894, -1.7172312 , -1.71496073,\n       -1.72774562, -1.9755998 , -2.01313872, -1.97489635, -2.14645481,\n       -2.1476072 , -2.20945918, -1.91408684, -1.87164413, -1.85541261,\n       -1.90281775, -1.8504323 , -1.83871407, -1.90135461, -1.85381106,\n       -1.83423394, -1.58319891, -1.55820511, -1.59110075, -2.07399016,\n       -2.103087  , -2.09313051, -2.34591895, -2.32088733, -2.31520186,\n       -1.91449476, -1.87172963, -1.85864699, -1.91611879, -1.8824811 ,\n       -1.87321411, -1.91803078, -1.88476147, -1.87697284, -1.69151329,\n       -1.65908165, -1.66697526, -2.19183512, -2.17134835, -2.17773752,\n       -2.36451868, -2.36530148, -2.34892623, -1.91601651, -1.87398762,\n       -1.86196945, -1.9301606 , -1.90475228, -1.89770685, -1.92913397,\n       -1.90675839, -1.90105444, -1.74160409, -1.68389364, -1.61902614,\n       -2.26981251, -2.2916518 , -2.31817975, -2.39869644, -2.34667378,\n       -2.35758845, -1.92632047, -1.89253827, -1.87820295, -1.92202741,\n       -1.89496629, -1.88768037, -1.92009551, -1.88925005, -1.88318624,\n       -1.67555147, -1.72163565, -1.68346039, -2.13414844, -2.26663351,\n       -2.24062734, -2.41759372, -2.39241283, -2.43001966, -1.92633822,\n       -1.89246471, -1.87798189, -1.92319532, -1.89624667, -1.88992118,\n       -1.92047292, -1.89410162, -1.88571977, -1.65567895, -1.65790548,\n       -1.61635224, -2.22749527, -2.24995453, -2.19884527, -2.43974532,\n       -2.38397627, -2.39109454, -1.92631811, -1.89173817, -1.8781305 ,\n       -1.92110474, -1.89555075, -1.88846295, -1.91812477, -1.88949601,\n       -1.88069475, -1.71934023, -1.68132868, -1.73801692, -2.27080911,\n       -2.26457083, -2.2053741 , -2.63790764, -2.56644441, -2.60877476,\n       -1.93025541, -1.89620725, -1.88246676, -1.94242524, -1.93476659,\n       -1.9362524 , -1.94107996, -1.93354783, -1.93639837, -1.63099584,\n       -1.63346206, -1.6761109 , -2.24902051, -2.17848506, -2.27071866,\n       -2.51884996, -2.54603769, -2.58233455, -1.92986535, -1.89504187,\n       -1.88117406, -1.93470099, -1.91830805, -1.91641727, -1.93630673,\n       -1.92301209, -1.92292242, -1.56707853, -1.6214674 , -1.5553475 ,\n       -2.24682617, -2.15380662, -2.20447277, -2.53034342, -2.49240919,\n       -2.50500012, -1.92858054, -1.889584  , -1.87392236, -1.93437961,\n       -1.91805231, -1.91659077, -1.93639558, -1.92505849, -1.92486215,\n       -1.52333511, -1.53762656, -1.48203968, -2.17311395, -2.16271741,\n       -2.16964832, -2.44644994, -2.40138724, -2.44218424, -1.923118  ,\n       -1.88275436, -1.86527308, -1.92254954, -1.89614358, -1.86755937,\n       -1.92488256, -1.89921836, -1.89637356, -1.53250241, -1.58002571,\n       -1.57360637, -1.93678432, -2.07106282, -2.04068943, -2.12358716,\n       -2.16193113, -2.15717938, -1.91927405, -1.87717132, -1.8591813 ,\n       -1.89819381, -1.84901501, -1.83867273, -1.8959048 , -1.84611365,\n       -1.82636317, -1.65564115, -1.64821494, -1.60197463, -2.03728313,\n       -1.99699113, -2.05973203, -2.12384085, -2.17773485, -2.20177406,\n       -1.91926042, -1.87746444, -1.85928535, -1.89984029, -1.84873344,\n       -1.81357453, -1.89886336, -1.84686678, -1.83075456, -1.58097166,\n       -1.5937938 , -1.57197135, -2.13105269, -2.10350344, -2.09602037,\n       -2.13682681, -2.14085723, -2.19549762, -1.91419186, -1.86982782,\n       -1.85104642, -1.90394697, -1.86279489, -1.82821098, -1.90799589,\n       -1.86067218, -1.84891775, -1.67676008, -1.71056629, -1.71443417,\n       -2.11744832, -2.10173265, -2.08421691, -2.35438073, -2.36005919,\n       -2.35755769, -1.91379027, -1.86775721, -1.84964357, -1.91030596,\n       -1.8657503 , -1.85257036, -1.91041175, -1.872866  , -1.86042297,\n       -1.72570937, -1.73375587, -1.74346812, -2.26935538, -2.25955258,\n       -2.27586715, -2.48329843, -2.45747051, -2.43984881, -1.93973568,\n       -1.91096877, -1.90128241, -1.9259381 , -1.89843418, -1.89322444,\n       -1.92554201, -1.89728119, -1.89131172, -1.78663734, -1.84120939,\n       -1.81600657, -2.31296652, -2.33324763, -2.32404663, -2.42912502,\n       -2.3996486 , -2.42111873, -1.93565337, -1.9026256 , -1.89007778,\n       -1.93258957, -1.91080754, -1.90508984, -1.92980477, -1.90509963,\n       -1.89894804, -1.79954694, -1.88005672, -1.8250678 , -2.12250264,\n       -2.14048481, -2.11508877, -2.13903866, -2.17581766, -2.15714527,\n       -1.92782901, -1.89809447, -1.8837152 , -1.89836682, -1.84288395,\n       -1.82354524, -1.89925204, -1.84428569, -1.8228392 , -1.74548415,\n       -1.82069342, -1.76106645, -2.14014387, -2.10851145, -2.10507708,\n       -2.17259569, -2.18201097, -2.14476598, -1.92794618, -1.89850249,\n       -1.88216983, -1.89320543, -1.83553134, -1.81207226, -1.88955566,\n       -1.82704583, -1.80569103, -1.80875998, -1.79118656, -1.82099629,\n       -2.15116199, -2.13257734, -2.15332582, -2.14959397, -2.16371636,\n       -2.12053176, -1.92818265, -1.9002468 , -1.88386769, -1.8936321 ,\n       -1.83485628, -1.81130285, -1.89083255, -1.82779345, -1.80535989,\n       -1.71623639, -1.75727779, -1.79615301, -2.18487633, -2.2628077 ,\n       -2.20053303, -2.21321775, -2.17488795, -2.18344234, -1.93535501,\n       -1.91389421, -1.90334639, -1.90339502, -1.85687633, -1.84453467,\n       -1.90381593, -1.85866518, -1.84255309, -1.64576948, -1.57865595,\n       -1.58632317, -1.98012105, -2.01527218, -1.9342163 , -2.21631884,\n       -2.21519287, -2.17720615, -1.91847441, -1.87654927, -1.85909426,\n       -1.91360499, -1.87035774, -1.85106311, -1.91885494, -1.88295108,\n       -1.86994981, -1.64027332, -1.64833689, -1.64718462, -2.15964848,\n       -2.14494867, -2.13887902, -2.44215514, -2.39257552, -2.41604908,\n       -1.92107346, -1.88125921, -1.86489018, -1.92943236, -1.90356079,\n       -1.89517843, -1.93257216, -1.90924397, -1.90590568, -1.65836631,\n       -1.66126749, -1.63398536, -2.25923931, -2.22699315, -2.25010799,\n       -2.51281107, -2.5189312 , -2.52665443, -1.92048836, -1.88448708,\n       -1.86948687, -1.92957386, -1.90522829, -1.89759887, -1.93452497,\n       -1.91341039, -1.91180226, -1.6593538 , -1.63743662, -1.72262199,\n       -2.10465049, -2.16002119, -2.11176229, -2.43275589, -2.43468008,\n       -2.42111977, -1.92358285, -1.8875705 , -1.86366423, -1.92902602,\n       -1.90345456, -1.8954341 , -1.92579405, -1.89907177, -1.89090254,\n       -1.68059135, -1.71263383, -1.69343368, -2.09989981, -2.16687994,\n       -2.12479264, -2.44041867, -2.41490277, -2.39241257, -1.92389676,\n       -1.88756363, -1.86455059, -1.94210398, -1.92538332, -1.92061022,\n       -1.92487154, -1.8977094 , -1.89108272, -1.64056861, -1.71141806,\n       -1.72152099, -2.12378516, -2.21533387, -2.12222125, -2.52770559,\n       -2.54716955, -2.54367525, -1.92449261, -1.8871729 , -1.86522233,\n       -1.94271057, -1.92474767, -1.91932306, -1.93140694, -1.91011927,\n       -1.9069743 , -1.64475741, -1.62065234, -1.63833417, -2.0556584 ,\n       -1.96271916, -1.8152481 , -2.2880009 , -2.27246261, -2.24445774,\n       -1.91547478, -1.87292604, -1.84268778, -1.91748354, -1.88194452,\n       -1.8732283 , -1.91503493, -1.8771569 , -1.86964423, -1.59988886,\n       -1.59238881, -1.59923988, -2.07072353, -2.07602409, -2.04521859,\n       -2.07744357, -2.11726886, -2.09568749, -1.92080184, -1.87992112,\n       -1.851139  , -1.90980899, -1.8665802 , -1.85261484, -1.90319194,\n       -1.85113433, -1.83205856, -1.58107998, -1.63385816, -1.61635674,\n       -1.8672563 , -1.88129318, -2.07760106, -2.06221123, -2.09955184,\n       -2.10819817, -1.92106979, -1.88290965, -1.85557146, -1.908365  ,\n       -1.86363402, -1.84422413, -1.90040954, -1.84724679, -1.8270999 ,\n       -1.55657078, -1.6317075 , -1.51702961, -2.05959372, -1.96179006,\n       -1.99079092, -2.14460727, -2.05685194, -2.10749399, -1.91723038,\n       -1.87389628, -1.85201844, -1.91030901, -1.86840564, -1.84968288,\n       -1.9036472 , -1.8558381 , -1.83924007, -1.622009  , -1.66570988,\n       -1.6760747 , -2.04278299, -2.00640189, -2.06848839, -2.22577116,\n       -2.17990281, -2.19496788, -1.91593007, -1.87731739, -1.85991771,\n       -1.91298853, -1.87517597, -1.85783553, -1.91670916, -1.87688336,\n       -1.86627471, -1.65899295, -1.61254237, -1.59640648, -1.9808082 ,\n       -2.00716527, -1.93987825, -2.32052135, -2.37030043, -2.3412066 ,\n       -1.91367037, -1.87148971, -1.85170667, -1.91707946, -1.88749878,\n       -1.87529438, -1.92435507, -1.89633222, -1.88676143]), 'split3_test_score': array([-1.91917833, -1.92229046, -1.9389379 , -2.19353058, -2.19741184,\n       -2.16290539, -2.22804129, -2.21434371, -2.22232355, -1.97043254,\n       -1.9454388 , -1.93613338, -1.96394449, -1.93919694, -1.92913543,\n       -1.95771279, -1.92388789, -1.91250274, -2.1514381 , -2.17970674,\n       -2.20411542, -2.36168124, -2.28233946, -2.33612956, -2.34415182,\n       -2.29301288, -2.39473071, -1.96415037, -1.94380703, -1.93487158,\n       -1.96739547, -1.93438144, -1.92599737, -1.97128683, -1.95066465,\n       -1.94623684, -2.09698627, -2.08630836, -2.08242451, -2.32650255,\n       -2.27999378, -2.30139618, -2.26002458, -2.27422056, -2.27876514,\n       -1.97067158, -1.95168741, -1.94396488, -1.95525849, -1.92136931,\n       -1.91738575, -1.9528157 , -1.91574729, -1.90388572, -2.02332843,\n       -2.05904884, -2.05691447, -2.24647328, -2.26151682, -2.27395817,\n       -2.26765082, -2.27858492, -2.29473347, -1.95988836, -1.92703163,\n       -1.91266016, -1.96375575, -1.94075997, -1.93673491, -1.96185387,\n       -1.92952965, -1.92158667, -2.16691267, -2.18432978, -2.19554508,\n       -2.29701897, -2.31497669, -2.28955766, -2.35442176, -2.3135727 ,\n       -2.26498903, -1.96059042, -1.92826128, -1.91454007, -1.95863667,\n       -1.92889477, -1.91703442, -1.9590574 , -1.93190728, -1.92072241,\n       -2.18332615, -2.19332574, -2.2200002 , -2.26662084, -2.24736558,\n       -2.28358147, -2.26050297, -2.26873705, -2.23398668, -1.96085238,\n       -1.92869474, -1.91660879, -1.95509649, -1.9184874 , -1.90736653,\n       -1.94711674, -1.90837548, -1.89657037, -2.11411417, -2.16084131,\n       -2.13369526, -2.33650374, -2.33457391, -2.32341747, -2.35037681,\n       -2.34122801, -2.29550531, -1.95874982, -1.92518898, -1.91359537,\n       -1.96119623, -1.93182124, -1.92482901, -1.96356715, -1.93655702,\n       -1.92923882, -1.99422189, -2.02750472, -2.01029608, -2.34294082,\n       -2.33618928, -2.33980928, -2.4062194 , -2.41169887, -2.33420007,\n       -1.95578536, -1.92308971, -1.91154717, -1.96628919, -1.94664403,\n       -1.9324374 , -1.9702505 , -1.94925045, -1.9445656 , -2.10899971,\n       -2.0647537 , -2.1115526 , -2.34134542, -2.35275241, -2.32399082,\n       -2.46972762, -2.52653245, -2.48017167, -1.95287547, -1.91812222,\n       -1.90619124, -1.96877794, -1.94055986, -1.92932131, -1.97200271,\n       -1.95005132, -1.94780035, -1.96080327, -2.0033484 , -1.96940278,\n       -2.29021614, -2.35411519, -2.33852241, -2.54884605, -2.51411655,\n       -2.51629441, -1.95287547, -1.91814221, -1.90616814, -1.97190801,\n       -1.94375821, -1.94319674, -1.97423806, -1.96049354, -1.96151549,\n       -1.98197295, -1.99843183, -2.00519463, -2.38299572, -2.33175517,\n       -2.3841703 , -2.55049102, -2.49611055, -2.51784069, -1.95223596,\n       -1.91720304, -1.90644018, -1.96635459, -1.94676032, -1.94675047,\n       -1.97418423, -1.95943732, -1.96372549, -1.95002983, -1.95230152,\n       -1.95992805, -2.37350752, -2.39728177, -2.38678073, -2.53400989,\n       -2.53110943, -2.49266838, -1.95223596, -1.91696395, -1.90561702,\n       -1.96738775, -1.9519392 , -1.93383706, -1.97589889, -1.96065929,\n       -1.95664562, -1.91312087, -1.97466604, -1.98485143, -2.32155817,\n       -2.34830655, -2.38050719, -2.39844567, -2.39552085, -2.3932817 ,\n       -1.95223596, -1.91708872, -1.9057351 , -1.96271409, -1.93962002,\n       -1.92326037, -1.95554432, -1.92140049, -1.9119606 , -1.9601293 ,\n       -2.0183912 , -2.01983132, -2.36259499, -2.37024357, -2.35457644,\n       -2.3413971 , -2.41552063, -2.36963277, -1.95223596, -1.91705368,\n       -1.90563117, -1.96015528, -1.93628272, -1.93013149, -1.95840871,\n       -1.92492717, -1.91136444, -1.94826773, -1.95756961, -1.9637202 ,\n       -2.37680768, -2.32053044, -2.36569206, -2.33748952, -2.39697889,\n       -2.38896425, -1.95412488, -1.92233984, -1.91291028, -1.95731231,\n       -1.92957895, -1.92110978, -1.95503068, -1.92634146, -1.91718193,\n       -2.11998776, -2.13167026, -2.13913621, -2.39435333, -2.39239079,\n       -2.36477388, -2.53986222, -2.57810701, -2.57185808, -1.96739558,\n       -1.94950552, -1.94369717, -1.97167152, -1.96086482, -1.95808372,\n       -1.96767057, -1.94944297, -1.94444962, -2.09486345, -2.07472655,\n       -2.12944273, -2.41759544, -2.45100112, -2.48827732, -2.59126968,\n       -2.59596122, -2.58310579, -1.96399633, -1.94489044, -1.93944002,\n       -1.98263016, -1.97713606, -1.9787238 , -1.98084528, -1.97508869,\n       -1.97945522, -1.98618439, -2.02570146, -2.02138763, -2.4977242 ,\n       -2.4899578 , -2.50550083, -2.64278593, -2.6043428 , -2.59697331,\n       -1.96394151, -1.94518282, -1.94020842, -1.98260966, -1.97703017,\n       -1.98215928, -1.98377214, -1.97434206, -1.97833678, -1.944718  ,\n       -1.99847543, -1.99298777, -2.37971641, -2.41652475, -2.40637956,\n       -2.56386719, -2.52422237, -2.50151857, -1.96394421, -1.94041448,\n       -1.93401423, -1.97804001, -1.96211387, -1.96094276, -1.97481852,\n       -1.95989434, -1.95448812, -1.71865414, -1.60314928, -1.64218686,\n       -2.00254381, -1.9793913 , -1.95908868, -2.33491156, -2.31949092,\n       -2.30318926, -1.94643548, -1.87739137, -1.84646834, -1.95150023,\n       -1.90823175, -1.89254536, -1.9509034 , -1.92435414, -1.91365038,\n       -1.93010943, -1.91962529, -1.91979977, -2.11744932, -2.13337146,\n       -2.12757773, -2.34735698, -2.31753788, -2.35934615, -1.95001922,\n       -1.8991054 , -1.88150407, -1.95605594, -1.92279203, -1.91347327,\n       -1.95789582, -1.93342253, -1.92295819, -1.89537729, -1.95177397,\n       -2.01896667, -1.98063988, -1.96937161, -2.01877033, -2.27010657,\n       -2.26334963, -2.27152979, -1.94680754, -1.89397549, -1.87743251,\n       -1.93830012, -1.88702376, -1.86945181, -1.93739631, -1.89027366,\n       -1.87357203, -1.99076482, -2.03803221, -2.04264489, -2.1111441 ,\n       -2.14598002, -2.09213692, -2.3551995 , -2.31990046, -2.32651238,\n       -1.93763206, -1.89159452, -1.87424306, -1.93739292, -1.89288549,\n       -1.87649159, -1.94838031, -1.90722655, -1.88988219, -2.01245648,\n       -2.1249231 , -2.0652515 , -2.1865283 , -2.22670202, -2.25665986,\n       -2.5580254 , -2.56705743, -2.50703057, -1.94286796, -1.8962315 ,\n       -1.87842704, -1.95264247, -1.91393965, -1.89499833, -1.96972007,\n       -1.946066  , -1.93853456, -2.0239005 , -1.96411289, -1.99718163,\n       -2.01159719, -2.02993823, -2.01021264, -2.34019753, -2.37708495,\n       -2.32866973, -1.95075971, -1.90800196, -1.88999493, -1.9379954 ,\n       -1.88392203, -1.86430594, -1.95194324, -1.91857738, -1.90907236,\n       -1.8953339 , -1.92509065, -1.99248115, -2.17964105, -2.17893238,\n       -2.13675452, -2.32574323, -2.33440664, -2.27617934, -1.94419662,\n       -1.90203439, -1.8854609 , -1.95449024, -1.9134685 , -1.89473064,\n       -1.95696607, -1.92447603, -1.91975373, -1.95210173, -1.97214365,\n       -2.04158891, -2.46665295, -2.40851363, -2.45501661, -2.51075786,\n       -2.50316007, -2.49428931, -1.95971702, -1.91454023, -1.89726491,\n       -1.96917401, -1.9476888 , -1.9458049 , -1.96278734, -1.93992367,\n       -1.93326579, -2.03146855, -2.0147911 , -2.03236795, -2.41197556,\n       -2.4262964 , -2.40343497, -2.55182665, -2.54412175, -2.54365352,\n       -1.9526945 , -1.90745568, -1.89070351, -1.96819088, -1.95107167,\n       -1.94770658, -1.96195299, -1.93862777, -1.93514812, -2.02529369,\n       -2.04433018, -2.011194  , -2.37806864, -2.32356203, -2.4231704 ,\n       -2.4954161 , -2.51173515, -2.51071893, -1.95328511, -1.90803667,\n       -1.89144303, -1.97007849, -1.94774295, -1.94801084, -1.96404261,\n       -1.93881016, -1.93445639, -1.98254705, -2.01961591, -2.02177464,\n       -2.46345351, -2.47378364, -2.49167259, -2.49067266, -2.46491792,\n       -2.50422975, -1.96068307, -1.9117732 , -1.89454056, -1.96395302,\n       -1.94232672, -1.93671738, -1.95963481, -1.93823447, -1.93343895,\n       -1.9227332 , -1.96340375, -1.95258206, -2.3940322 , -2.51566389,\n       -2.53401398, -2.5095691 , -2.48355086, -2.47154254, -1.95706105,\n       -1.90926541, -1.89150289, -1.97189794, -1.94866708, -1.94683143,\n       -1.96283798, -1.9420981 , -1.93437809, -1.93164419, -1.99104509,\n       -1.89101828, -2.44794552, -2.4104653 , -2.45604021, -2.4458407 ,\n       -2.43542584, -2.47956704, -1.95648046, -1.91317069, -1.89645836,\n       -1.96881148, -1.94871832, -1.94557927, -1.9674465 , -1.94364446,\n       -1.93606374, -1.93181845, -1.96498349, -1.97434713, -2.43684871,\n       -2.40307388, -2.37177866, -2.47208811, -2.50119238, -2.45086186,\n       -1.95572656, -1.90526627, -1.88572825, -1.97234169, -1.95859895,\n       -1.95098441, -1.96559115, -1.94841769, -1.94466577, -1.9700329 ,\n       -2.01037973, -1.98075196, -2.15454399, -2.23964906, -2.19313714,\n       -2.52680681, -2.57540929, -2.56724668, -1.95505901, -1.91056645,\n       -1.89092063, -1.97020271, -1.95237567, -1.94844023, -1.97032958,\n       -1.95796006, -1.95176721, -1.98848246, -1.98450986, -2.00779416,\n       -2.2336029 , -2.32927745, -2.39807999, -2.47007677, -2.51014744,\n       -2.41805199, -1.95599771, -1.91135673, -1.89155969, -1.97780673,\n       -1.96241249, -1.95950627, -1.98055578, -1.96746409, -1.96223561,\n       -1.92675732, -1.96709827, -1.97354532, -2.34375378, -2.32550019,\n       -2.34967469, -2.47713132, -2.47522495, -2.51812104, -1.95892043,\n       -1.90921367, -1.89218037, -1.97487662, -1.95972557, -1.95443806,\n       -1.98044487, -1.97004471, -1.96872634, -1.99208699, -1.95914187,\n       -1.98490539, -2.33795604, -2.32705792, -2.30606509, -2.51384942,\n       -2.50262079, -2.49809192, -1.95773311, -1.91194505, -1.8962427 ,\n       -1.97065382, -1.94813409, -1.93895073, -1.98065735, -1.97247247,\n       -1.9698886 , -1.90951483, -1.91879376, -1.93316188, -2.42931804,\n       -2.41903676, -2.41943107, -2.40720189, -2.42182845, -2.35628258,\n       -1.95873525, -1.91504757, -1.89960121, -1.97266362, -1.95541023,\n       -1.94966247, -1.97312766, -1.95483553, -1.94961   ]), 'split4_test_score': array([-1.47071608, -1.48704285, -1.44385616, -1.96485201, -1.96636823,\n       -2.00499819, -1.93893728, -1.95117432, -1.96261734, -1.85004646,\n       -1.76715724, -1.7305481 , -1.87150399, -1.80465652, -1.78040217,\n       -1.87213943, -1.80499917, -1.77662896, -1.37957145, -1.40014116,\n       -1.38316241, -1.51715507, -1.50920923, -1.49107512, -1.91433575,\n       -1.93313343, -1.93007302, -1.86083093, -1.76868919, -1.72815553,\n       -1.87758053, -1.81030434, -1.78377334, -1.88342281, -1.82628302,\n       -1.8031949 , -1.39751301, -1.44326696, -1.46914911, -1.4668088 ,\n       -1.40246057, -1.46045002, -1.60609486, -1.56103433, -1.58820618,\n       -1.87138262, -1.79301008, -1.76260919, -1.85030663, -1.75650111,\n       -1.71385967, -1.8500799 , -1.75829972, -1.71811233, -1.4923251 ,\n       -1.55255975, -1.54209996, -1.46664728, -1.67615241, -1.47221402,\n       -1.76081206, -1.77876506, -1.73748896, -1.87411086, -1.79931768,\n       -1.76485337, -1.86781526, -1.7945769 , -1.76432345, -1.87434809,\n       -1.80305082, -1.77356468, -1.34600498, -1.37182158, -1.38488763,\n       -1.37405711, -1.35812547, -1.34667812, -1.63326037, -1.67197126,\n       -1.62111758, -1.86212424, -1.77823857, -1.74134389, -1.86196249,\n       -1.78071475, -1.74543421, -1.86459889, -1.77927113, -1.7463886 ,\n       -1.38631068, -1.44135769, -1.45033165, -1.58299008, -1.5631983 ,\n       -1.43034576, -1.74082888, -1.7561806 , -1.73972859, -1.85216574,\n       -1.75257966, -1.70999681, -1.85634223, -1.77718061, -1.7377765 ,\n       -1.86042997, -1.78157548, -1.74747496, -1.35391451, -1.38370781,\n       -1.41792949, -1.58037859, -1.60393615, -1.53321228, -1.7595732 ,\n       -1.75391157, -1.74310183, -1.84793923, -1.75096709, -1.70902628,\n       -1.86389467, -1.77991258, -1.74764914, -1.86513653, -1.79105371,\n       -1.75896233, -1.36383139, -1.41746441, -1.40722233, -1.6260539 ,\n       -1.62176244, -1.64216788, -1.68205194, -1.72715683, -1.7307382 ,\n       -1.84567097, -1.74937044, -1.70796359, -1.85755754, -1.78068465,\n       -1.74659926, -1.86022205, -1.78094429, -1.74784154, -1.42434326,\n       -1.44215954, -1.43454586, -1.69453216, -1.6431744 , -1.60678987,\n       -1.72028986, -1.74085348, -1.74384387, -1.85249909, -1.75791862,\n       -1.71640005, -1.87115405, -1.80055056, -1.7741157 , -1.87076494,\n       -1.79960165, -1.77350173, -1.41386574, -1.42464865, -1.44967491,\n       -1.59678273, -1.58024702, -1.62337025, -1.71791177, -1.72053574,\n       -1.69784824, -1.85364319, -1.75755541, -1.71654124, -1.86692752,\n       -1.79826037, -1.76770301, -1.87119152, -1.80236407, -1.76509024,\n       -1.43682775, -1.50391351, -1.46969901, -1.84805432, -1.84970172,\n       -1.84821787, -1.92662979, -1.91675924, -1.90118687, -1.86383874,\n       -1.78359739, -1.74959458, -1.89067132, -1.84187741, -1.82328101,\n       -1.89161413, -1.8434778 , -1.82517743, -1.41644128, -1.46220006,\n       -1.40965329, -1.83078435, -1.88094884, -1.8607303 , -1.89330529,\n       -1.89005443, -1.88382551, -1.86431532, -1.78334947, -1.74756059,\n       -1.88973999, -1.84220814, -1.82126341, -1.8938294 , -1.84166607,\n       -1.82342671, -1.39179858, -1.41221222, -1.43517365, -1.80694973,\n       -1.7846407 , -1.82802478, -1.88186304, -1.9141629 , -1.89936712,\n       -1.86556414, -1.78237659, -1.74645844, -1.89238133, -1.84182137,\n       -1.82297983, -1.89504677, -1.84530347, -1.82584442, -1.39620553,\n       -1.3859556 , -1.43960012, -1.79898058, -1.79163251, -1.843652  ,\n       -1.92385831, -1.9119873 , -1.913242  , -1.86458932, -1.7824909 ,\n       -1.74644142, -1.89589281, -1.8489329 , -1.83069214, -1.90075301,\n       -1.85020911, -1.826375  , -1.41637323, -1.41819621, -1.41571951,\n       -1.76739133, -1.76137172, -1.75773527, -2.02239033, -2.01469083,\n       -1.98045445, -1.86533081, -1.78367207, -1.74811915, -1.89844468,\n       -1.84541432, -1.8209219 , -1.8991737 , -1.85449392, -1.83470551,\n       -1.46910097, -1.46781782, -1.44929255, -1.53955913, -1.54080634,\n       -1.58416707, -1.77578624, -1.79436885, -1.82707006, -1.85816301,\n       -1.76676239, -1.72950177, -1.88204014, -1.80689711, -1.77650948,\n       -1.8823917 , -1.82366897, -1.79579728, -1.47279194, -1.52016915,\n       -1.47526803, -1.86098332, -1.84860838, -1.86661135, -2.06063409,\n       -2.03781998, -2.10066828, -1.87392575, -1.80196036, -1.77007612,\n       -1.90311456, -1.8572272 , -1.84386123, -1.90372553, -1.864528  ,\n       -1.85214743, -1.39275037, -1.43366537, -1.42066695, -1.88290352,\n       -1.85825872, -1.88880615, -2.11066216, -2.01408681, -2.04567082,\n       -1.87595156, -1.80404601, -1.77388452, -1.90457145, -1.86005432,\n       -1.84354196, -1.90771052, -1.87086548, -1.85881946, -1.44779509,\n       -1.48194609, -1.51676325, -1.83650485, -1.81195962, -1.84762681,\n       -1.88839788, -1.89791687, -1.9414919 , -1.87734519, -1.80577528,\n       -1.77358051, -1.89289005, -1.84031757, -1.8219077 , -1.89014428,\n       -1.83935077, -1.81582271, -1.30580066, -1.34011897, -1.35282215,\n       -1.7047896 , -1.6979148 , -1.70040721, -1.91551278, -1.96013083,\n       -1.96001785, -1.8784118 , -1.81550832, -1.7853714 , -1.87979319,\n       -1.81818439, -1.79669151, -1.8797473 , -1.81820634, -1.79507763,\n       -1.21412738, -1.22858334, -1.2398397 , -1.59750343, -1.58311556,\n       -1.61290557, -1.68325472, -1.6765438 , -1.66784472, -1.87005798,\n       -1.80234384, -1.7696909 , -1.85429002, -1.76592074, -1.72450252,\n       -1.85575992, -1.77116176, -1.73729695, -1.35634826, -1.3866026 ,\n       -1.37450961, -1.58751035, -1.51999636, -1.53360027, -1.46442941,\n       -1.50251331, -1.46843125, -1.86862029, -1.79808602, -1.76856563,\n       -1.84969494, -1.75197554, -1.70829469, -1.84666151, -1.75037625,\n       -1.70850234, -1.3779712 , -1.36220122, -1.41190442, -1.62951845,\n       -1.58187583, -1.5940291 , -1.66695331, -1.59565554, -1.59706867,\n       -1.86641139, -1.80450522, -1.77829835, -1.87013453, -1.79334807,\n       -1.76333558, -1.86965674, -1.79101354, -1.76287234, -1.51838023,\n       -1.52154743, -1.53204203, -1.80858342, -1.78088258, -1.81319206,\n       -1.81100132, -1.81126212, -1.81041419, -1.88835519, -1.84510644,\n       -1.82924098, -1.8839937 , -1.82123822, -1.80498649, -1.87500191,\n       -1.81053961, -1.78565578, -1.50920986, -1.52065188, -1.53454886,\n       -1.86788587, -1.80925467, -1.84003688, -1.91560451, -1.85914295,\n       -1.91310836, -1.89467093, -1.85490732, -1.84040926, -1.89303157,\n       -1.84363962, -1.82083723, -1.88589346, -1.82906461, -1.80679061,\n       -1.59001261, -1.61136908, -1.64198444, -1.98130154, -2.08471903,\n       -2.11219507, -2.12519079, -2.13501503, -2.11926911, -1.89869388,\n       -1.86706886, -1.85358738, -1.90409079, -1.86814917, -1.8494314 ,\n       -1.90974868, -1.87622675, -1.86192005, -1.53957255, -1.59231022,\n       -1.57320257, -2.00894482, -1.99720703, -2.00820604, -1.94581266,\n       -1.97353895, -1.9497739 , -1.89238074, -1.85292579, -1.83602937,\n       -1.87899   , -1.81578119, -1.79248918, -1.88036513, -1.82036876,\n       -1.79484295, -1.57031466, -1.56999176, -1.63204356, -2.01072672,\n       -2.05599419, -2.05173867, -1.97316984, -1.96586184, -1.9964963 ,\n       -1.89197393, -1.85222719, -1.83444507, -1.87893117, -1.81695973,\n       -1.79458978, -1.88120331, -1.82104354, -1.79734731, -1.58592611,\n       -1.61925689, -1.62153742, -1.99639401, -1.99039529, -1.94736043,\n       -1.88048166, -1.89747595, -1.90169281, -1.8986255 , -1.85933678,\n       -1.84049384, -1.87626069, -1.80885321, -1.78509184, -1.87585535,\n       -1.81462196, -1.78833972, -1.62013195, -1.65950959, -1.63173005,\n       -1.88325488, -1.85608197, -1.86624389, -1.85480416, -1.82169503,\n       -1.86318509, -1.89893643, -1.85882632, -1.84171559, -1.87641013,\n       -1.81186679, -1.78735835, -1.87462704, -1.8067599 , -1.78225411,\n       -1.67200807, -1.69234809, -1.70733066, -1.87057345, -1.85411958,\n       -1.89933863, -1.89467725, -1.88146852, -1.90321956, -1.89622853,\n       -1.85578792, -1.83761295, -1.88030094, -1.82075698, -1.79892482,\n       -1.88028138, -1.81733633, -1.79166417, -1.60060895, -1.64791352,\n       -1.60664244, -1.78808136, -1.79982176, -1.77907815, -1.89326628,\n       -1.90220901, -1.90730703, -1.90616058, -1.87181369, -1.85739177,\n       -1.88984443, -1.83989973, -1.81791858, -1.88986186, -1.83690708,\n       -1.81534861, -1.63155532, -1.65884723, -1.66261526, -1.80551913,\n       -1.81971122, -1.83212335, -1.89482235, -1.85433373, -1.86663053,\n       -1.90294434, -1.86966724, -1.85589529, -1.88437159, -1.82743629,\n       -1.80382126, -1.88817673, -1.82798088, -1.80479724, -1.60158855,\n       -1.61789673, -1.63168343, -1.75580577, -1.75459571, -1.77025994,\n       -1.90416598, -1.85770197, -1.86267508, -1.90478238, -1.87148657,\n       -1.85493435, -1.88389227, -1.82466187, -1.80178574, -1.88754103,\n       -1.82534918, -1.80408643, -1.65403318, -1.68694291, -1.69862955,\n       -1.82995106, -1.8882466 , -1.82863022, -1.87323204, -1.85426218,\n       -1.83935198, -1.90347503, -1.86725978, -1.85314728, -1.88669006,\n       -1.83120825, -1.80904722, -1.88866221, -1.83120374, -1.80913993,\n       -1.66835735, -1.71220764, -1.70121863, -1.84396295, -1.84347863,\n       -1.84882683, -1.89480165, -1.86558208, -1.89315489, -1.90397049,\n       -1.86969055, -1.85860213, -1.88800962, -1.83234366, -1.80922082,\n       -1.89233542, -1.83707791, -1.81680256, -1.58727804, -1.6123105 ,\n       -1.63041637, -1.86906081, -1.84333604, -1.80631686, -1.92365133,\n       -1.87167762, -1.91442708, -1.90328463, -1.86842343, -1.85695981,\n       -1.88797988, -1.82874088, -1.80520639, -1.8915635 , -1.83702438,\n       -1.81518269, -1.6575024 , -1.69340765, -1.70368384, -1.82848511,\n       -1.84484667, -1.87879785, -1.88169453, -1.86754924, -1.9061682 ,\n       -1.90289489, -1.86929128, -1.85949598, -1.88421786, -1.82346648,\n       -1.79858338, -1.88853566, -1.82989717, -1.80527992]), 'split5_test_score': array([-1.50903783, -1.47207978, -1.45787127, -1.89310664, -1.92494863,\n       -1.95492712, -1.79384617, -1.82569678, -1.85568453, -1.89684279,\n       -1.83769487, -1.81236545, -1.87747533, -1.82241536, -1.80278886,\n       -1.87663605, -1.81109732, -1.78636334, -1.44818161, -1.5165733 ,\n       -1.48685826, -1.76226668, -1.74869266, -1.74755699, -1.98708807,\n       -1.97789392, -1.95280738, -1.87966871, -1.81424003, -1.78743346,\n       -1.87313236, -1.80679496, -1.78050584, -1.87645796, -1.81332939,\n       -1.78849628, -1.61093812, -1.62560597, -1.6243656 , -1.8538695 ,\n       -1.85034094, -1.87141414, -2.02131364, -2.01171904, -2.05855668,\n       -1.87989724, -1.81663398, -1.79366735, -1.88673325, -1.82799392,\n       -1.80329878, -1.89260301, -1.84305219, -1.82364316, -1.59861114,\n       -1.62933145, -1.6765587 , -1.56381501, -1.65853214, -1.68050505,\n       -1.90092677, -1.89441694, -1.88977464, -1.87319871, -1.80768944,\n       -1.78369397, -1.87126968, -1.79093072, -1.75708796, -1.87389604,\n       -1.80475495, -1.77639564, -1.71844356, -1.7905432 , -1.72574083,\n       -1.6574844 , -1.60485334, -1.62723711, -1.77778473, -1.78349994,\n       -1.78008119, -1.87615043, -1.8140074 , -1.79196532, -1.86227425,\n       -1.78487526, -1.75143488, -1.87344701, -1.80625959, -1.77767794,\n       -1.58507678, -1.70670245, -1.68819757, -1.64288984, -1.58559277,\n       -1.59603127, -1.83570647, -1.84003397, -1.83754412, -1.8749899 ,\n       -1.8090365 , -1.78304181, -1.86927379, -1.79538229, -1.76261199,\n       -1.87307002, -1.80573573, -1.77746264, -1.60934345, -1.65652771,\n       -1.67205578, -1.70288618, -1.6989433 , -1.70375305, -1.97854276,\n       -1.9786418 , -1.97595825, -1.87387634, -1.81062176, -1.78336562,\n       -1.87282726, -1.80707637, -1.77873815, -1.88090528, -1.82330357,\n       -1.80015262, -1.55447039, -1.62075983, -1.61314866, -1.74624137,\n       -1.69618228, -1.76049114, -1.97533354, -1.99349293, -1.98751031,\n       -1.86836732, -1.79647154, -1.76647872, -1.86682883, -1.80097853,\n       -1.76989259, -1.88121118, -1.8210297 , -1.79692565, -1.58721836,\n       -1.73876948, -1.67731365, -1.70884569, -1.70324501, -1.67619947,\n       -1.95015707, -1.93389594, -1.99781175, -1.86824661, -1.79753827,\n       -1.76769931, -1.8651203 , -1.7867034 , -1.75193281, -1.88115085,\n       -1.82085004, -1.79801543, -1.70172974, -1.68068626, -1.72592727,\n       -1.66107489, -1.65607752, -1.69210345, -1.76614705, -1.75957211,\n       -1.73554979, -1.87100226, -1.80355484, -1.77441127, -1.85829935,\n       -1.77014738, -1.72994726, -1.86124343, -1.77932688, -1.74305658,\n       -1.68830636, -1.67770966, -1.69717954, -1.74400415, -1.74180125,\n       -1.70347802, -1.82697072, -1.85240968, -1.84700996, -1.86895239,\n       -1.80380914, -1.77554994, -1.87894914, -1.79185066, -1.75525281,\n       -1.88296609, -1.81949467, -1.79864043, -1.72707599, -1.74899124,\n       -1.76902617, -1.81126372, -1.76236806, -1.83590541, -1.88984729,\n       -1.95767343, -1.9330591 , -1.87267028, -1.80749427, -1.77751893,\n       -1.8913603 , -1.8091308 , -1.77470809, -1.89453848, -1.84212174,\n       -1.81832494, -1.73250228, -1.75622058, -1.72835904, -1.83360956,\n       -1.77901022, -1.83698741, -1.82787845, -1.84082469, -1.84163061,\n       -1.87395246, -1.80681123, -1.77495564, -1.88952312, -1.81594529,\n       -1.78329234, -1.86641465, -1.79254495, -1.7624383 , -1.67687583,\n       -1.65791373, -1.67570232, -1.82920954, -1.81097676, -1.80649184,\n       -1.78094273, -1.79076479, -1.76866993, -1.87372797, -1.80666248,\n       -1.77476707, -1.88417144, -1.80878892, -1.77689886, -1.86058272,\n       -1.78128967, -1.7465499 , -1.7683281 , -1.78108451, -1.75546838,\n       -1.82090209, -1.86166838, -1.83680254, -1.99288497, -1.96581469,\n       -1.90980261, -1.87825809, -1.81232355, -1.78258498, -1.88435083,\n       -1.80249596, -1.76845477, -1.8930761 , -1.8434017 , -1.82269293,\n       -1.66655829, -1.65028832, -1.68705084, -1.80799978, -1.80872649,\n       -1.84444761, -1.91085275, -1.92818362, -1.95258098, -1.87353287,\n       -1.80308342, -1.7717768 , -1.87448422, -1.7945531 , -1.76156612,\n       -1.87566698, -1.81268029, -1.78651664, -1.67149301, -1.72133649,\n       -1.75656024, -1.76348675, -1.79537407, -1.76096742, -1.99361052,\n       -1.93712339, -1.96997793, -1.87374818, -1.80328603, -1.7736668 ,\n       -1.87748139, -1.8011678 , -1.77119439, -1.88034352, -1.81775895,\n       -1.79322876, -1.67122323, -1.687929  , -1.69606184, -1.96105249,\n       -2.01033903, -2.01249975, -2.02746239, -2.0563162 , -2.04496695,\n       -1.87728772, -1.8157707 , -1.7885885 , -1.87779414, -1.80751844,\n       -1.77897903, -1.88296641, -1.81807585, -1.79862693, -1.66598205,\n       -1.72622424, -1.71710087, -2.04482545, -2.04964501, -1.99973749,\n       -2.08250275, -2.07262018, -2.0875098 , -1.87877287, -1.81826104,\n       -1.79330096, -1.87096879, -1.81540779, -1.79326682, -1.88318409,\n       -1.82257831, -1.80147655, -1.50612913, -1.48454866, -1.48686406,\n       -1.68286855, -1.66957313, -1.68865006, -1.83095148, -1.85125831,\n       -1.85753506, -1.86470821, -1.7811939 , -1.74495765, -1.84403998,\n       -1.74630865, -1.70744617, -1.8631845 , -1.78401306, -1.74897061,\n       -1.52680982, -1.50178758, -1.47963731, -1.82564509, -1.79291292,\n       -1.80501257, -1.87144343, -1.88582064, -1.86626118, -1.87513325,\n       -1.80561197, -1.77588292, -1.86528787, -1.79580819, -1.76571481,\n       -1.86177872, -1.78406275, -1.75651991, -1.51642212, -1.52776124,\n       -1.53985957, -1.80812662, -1.87057573, -1.82812418, -1.92462944,\n       -1.92109213, -1.92908577, -1.87706723, -1.80743781, -1.77696038,\n       -1.8819629 , -1.82029448, -1.79087692, -1.88717877, -1.82886775,\n       -1.80463642, -1.56310216, -1.56141187, -1.58513813, -1.89176882,\n       -1.92503842, -1.94411011, -1.98824653, -1.96983523, -2.01161584,\n       -1.87644629, -1.80510776, -1.77460589, -1.87916305, -1.83003303,\n       -1.81364479, -1.87804945, -1.81432865, -1.78778773, -1.5394572 ,\n       -1.67211942, -1.58973063, -1.83998592, -1.86149554, -1.83618058,\n       -2.00520144, -1.99553704, -2.0004167 , -1.87496421, -1.80289026,\n       -1.77119145, -1.87751013, -1.81464823, -1.79191672, -1.87784051,\n       -1.81353714, -1.79242978, -1.5675965 , -1.6208499 , -1.68633643,\n       -1.8777665 , -1.84132351, -1.84595034, -2.00975448, -2.00534222,\n       -2.00863508, -1.86789894, -1.79026924, -1.75471975, -1.87913687,\n       -1.81916096, -1.79554721, -1.88194822, -1.82228404, -1.79878247,\n       -1.56534967, -1.582713  , -1.59699529, -1.68685786, -1.67271477,\n       -1.67679284, -1.9862549 , -1.98434179, -1.99451487, -1.86649871,\n       -1.78942904, -1.75470584, -1.87917038, -1.81919474, -1.79100546,\n       -1.8843471 , -1.83138536, -1.80869843, -1.6328607 , -1.64032229,\n       -1.69434697, -2.01973058, -1.97742706, -2.06932324, -2.2107915 ,\n       -2.25280944, -2.29358598, -1.87510169, -1.79849858, -1.76455463,\n       -1.88904421, -1.83742598, -1.81843626, -1.89700515, -1.85687449,\n       -1.83996403, -1.61104709, -1.64717652, -1.66009712, -1.88324692,\n       -1.91624601, -1.87936658, -2.17506955, -2.18660836, -2.16304073,\n       -1.87281612, -1.7996501 , -1.76759444, -1.88239719, -1.8294453 ,\n       -1.80944595, -1.88576551, -1.83540009, -1.81230261, -1.70355448,\n       -1.7452659 , -1.72911697, -2.00039318, -2.01388173, -2.05873642,\n       -2.18458756, -2.24034149, -2.24511874, -1.86930227, -1.79566212,\n       -1.76512805, -1.88566296, -1.83591588, -1.81750141, -1.89128025,\n       -1.84503217, -1.8285298 , -1.63904927, -1.67172538, -1.65689516,\n       -2.06869894, -2.08688897, -2.0441188 , -2.2569617 , -2.21338582,\n       -2.2325232 , -1.87252468, -1.79701727, -1.76648417, -1.89564568,\n       -1.85476438, -1.83793746, -1.89455788, -1.84838863, -1.83331615,\n       -1.64269688, -1.656049  , -1.65898396, -2.02786201, -2.12185481,\n       -2.04390223, -2.26337734, -2.21043543, -2.24360206, -1.87432048,\n       -1.80053832, -1.76873119, -1.89920972, -1.86012609, -1.84391112,\n       -1.89652328, -1.85262559, -1.83979733, -1.63400492, -1.67206227,\n       -1.67945786, -2.23162198, -2.22533167, -2.18531027, -2.31441854,\n       -2.30868319, -2.3301606 , -1.88105559, -1.81556926, -1.78659237,\n       -1.9091901 , -1.8758482 , -1.86480508, -1.90446421, -1.86959909,\n       -1.85870771, -1.69635097, -1.69456005, -1.72598231, -2.17746595,\n       -2.18163984, -2.18470195, -2.33963419, -2.30063642, -2.32917985,\n       -1.88388432, -1.81869272, -1.78846295, -1.90981588, -1.87789553,\n       -1.86779345, -1.90461825, -1.86975362, -1.86026548, -1.67063576,\n       -1.66956172, -1.69527759, -2.08838754, -2.12232594, -2.14872611,\n       -2.32708927, -2.34752304, -2.32301044, -1.8927775 , -1.83207021,\n       -1.80424953, -1.91564017, -1.88671216, -1.87455311, -1.91160809,\n       -1.88050164, -1.87248748, -1.68278287, -1.72887703, -1.74704469,\n       -2.06206741, -2.10834542, -2.09570383, -2.3094364 , -2.30746402,\n       -2.29138981, -1.88993745, -1.8263111 , -1.79482868, -1.91600295,\n       -1.88860839, -1.88081391, -1.90867423, -1.87849816, -1.86861367,\n       -1.64338131, -1.73351842, -1.66531173, -2.088517  , -2.0918399 ,\n       -2.09023456, -2.29008748, -2.29043323, -2.30531244, -1.88921075,\n       -1.82200419, -1.78767634, -1.91523461, -1.88659108, -1.8789061 ,\n       -1.90938743, -1.87849082, -1.86765984, -1.66876785, -1.70718238,\n       -1.70261965, -2.10604762, -2.06937817, -2.078945  , -2.34077401,\n       -2.29418134, -2.33144491, -1.88902726, -1.82078969, -1.78724503,\n       -1.9176485 , -1.88816029, -1.87757141, -1.91347263, -1.88583383,\n       -1.87805073, -1.63873883, -1.68273949, -1.66218781, -1.55287575,\n       -1.55969359, -1.53334725, -1.69239284, -1.71186329, -1.71055912,\n       -1.86849129, -1.79037374, -1.75411994, -1.85303594, -1.75466449,\n       -1.71303977, -1.85092897, -1.76342237, -1.727072  ]), 'split6_test_score': array([-1.37839635, -1.30908956, -1.31640719, -1.74875979, -1.8595923 ,\n       -1.84856182, -1.89487731, -1.90743188, -1.89959678, -1.88606973,\n       -1.82139597, -1.78949166, -1.87882314, -1.82355582, -1.79727283,\n       -1.86063662, -1.78029306, -1.7507699 , -1.56246625, -1.54606042,\n       -1.54853635, -2.07104806, -2.08101432, -2.10513017, -2.34032049,\n       -2.27700491, -2.27424602, -1.93595931, -1.92217368, -1.91272782,\n       -1.92442558, -1.89960138, -1.88793541, -1.92381337, -1.90382208,\n       -1.89662792, -1.63038272, -1.5471751 , -1.55431948, -1.97492129,\n       -1.97567727, -2.05391972, -2.06916532, -2.04220256, -2.04108385,\n       -1.92227715, -1.90369999, -1.89952114, -1.88419341, -1.83105629,\n       -1.81201043, -1.88629382, -1.83157857, -1.8124851 , -1.50083193,\n       -1.49571515, -1.42795732, -2.03771885, -2.07431497, -2.00493014,\n       -2.14258279, -2.15144777, -2.14833759, -1.92049975, -1.89552749,\n       -1.88835102, -1.89222494, -1.83865035, -1.81966457, -1.89511408,\n       -1.84972204, -1.83357065, -1.49337353, -1.46910096, -1.48378481,\n       -2.0543576 , -2.01879383, -2.02412507, -2.15865381, -2.12627451,\n       -2.12805964, -1.92562616, -1.90700964, -1.89889333, -1.89523506,\n       -1.84849184, -1.83400403, -1.89314028, -1.84360475, -1.8271155 ,\n       -1.45513948, -1.5069593 , -1.46912931, -2.00802694, -1.95892142,\n       -1.98795445, -2.26681157, -2.31465156, -2.30029175, -1.92896173,\n       -1.9058284 , -1.89315241, -1.91965695, -1.89530997, -1.8814128 ,\n       -1.93023661, -1.91750189, -1.91283122, -1.49916305, -1.38358853,\n       -1.47754927, -1.81355513, -1.84816048, -1.82500178, -2.22812996,\n       -2.20274894, -2.19896678, -1.90792076, -1.86446604, -1.84635425,\n       -1.92166534, -1.88886732, -1.87821978, -1.90941678, -1.87726515,\n       -1.86571078, -1.37265132, -1.34815254, -1.38905261, -1.69789493,\n       -1.64521945, -1.68476035, -2.06139401, -2.03730729, -2.0701802 ,\n       -1.90506204, -1.86079001, -1.84163538, -1.89624204, -1.84224793,\n       -1.8207116 , -1.88702738, -1.8316089 , -1.8117073 , -1.33745557,\n       -1.32814698, -1.31326522, -1.69804639, -1.72063   , -1.71308347,\n       -2.06053423, -2.05883183, -2.06107561, -1.90495494, -1.86083066,\n       -1.84168605, -1.8948155 , -1.84297373, -1.82548231, -1.88519366,\n       -1.83078546, -1.81181189, -1.39458279, -1.36473518, -1.35885575,\n       -1.78598794, -1.72294778, -1.69404538, -2.07677935, -2.08391132,\n       -2.04757395, -1.91293106, -1.87445823, -1.85645143, -1.8956904 ,\n       -1.84598555, -1.82840268, -1.88875215, -1.83601804, -1.81325942,\n       -1.42181848, -1.38683369, -1.37690971, -1.77617727, -1.8204048 ,\n       -1.7856336 , -2.15742375, -2.16459704, -2.14710754, -1.91317369,\n       -1.87350675, -1.8543636 , -1.90237039, -1.85761189, -1.84305568,\n       -1.89448678, -1.84423155, -1.82518195, -1.40082548, -1.38795797,\n       -1.39468666, -1.7589567 , -1.76525057, -1.7881353 , -2.01130116,\n       -1.99025812, -1.99785908, -1.90641458, -1.86586656, -1.84669615,\n       -1.87782827, -1.81470271, -1.78937386, -1.88343356, -1.82448174,\n       -1.80113881, -1.4647684 , -1.384582  , -1.44099445, -1.85147308,\n       -1.80999415, -1.81322933, -1.97102328, -1.96902744, -2.01954595,\n       -1.9040385 , -1.86222662, -1.84252474, -1.8758553 , -1.81174434,\n       -1.78295239, -1.88016714, -1.81907379, -1.79265053, -1.48229963,\n       -1.41216108, -1.39278376, -1.88292863, -1.8002896 , -1.89055739,\n       -2.02043067, -2.00698506, -1.97587865, -1.90441242, -1.86231791,\n       -1.8433998 , -1.87634186, -1.81803415, -1.78539024, -1.88294523,\n       -1.82105554, -1.79694406, -1.38483432, -1.45693519, -1.35700924,\n       -1.80436986, -1.84129942, -1.82118881, -1.99511285, -2.00477555,\n       -2.0002231 , -1.89546634, -1.84672651, -1.82466182, -1.87332722,\n       -1.80922525, -1.78236918, -1.88126819, -1.81852958, -1.7913841 ,\n       -1.43068077, -1.36731399, -1.39671839, -1.81103239, -1.84842895,\n       -1.79266505, -2.01036205, -1.96013579, -1.97895258, -1.89543114,\n       -1.84785925, -1.82662326, -1.8804665 , -1.82654858, -1.79029741,\n       -1.8854543 , -1.82495076, -1.80091758, -1.40257348, -1.44927219,\n       -1.39380107, -1.81654872, -1.78968013, -1.72117701, -1.99220232,\n       -2.05943061, -2.00090551, -1.89935931, -1.85479141, -1.83323651,\n       -1.88493462, -1.82589853, -1.80586605, -1.887968  , -1.83300526,\n       -1.81206634, -1.45548641, -1.33078002, -1.39690455, -1.72633339,\n       -1.8206271 , -1.78126414, -1.97032838, -1.96718475, -1.96983262,\n       -1.89930909, -1.85454024, -1.83383676, -1.89052127, -1.83199706,\n       -1.81092464, -1.89434079, -1.83612505, -1.81714234, -1.44885991,\n       -1.42033481, -1.46064773, -1.78670681, -1.80323764, -1.64231597,\n       -1.90177542, -1.95822638, -1.98663698, -1.89904529, -1.85477528,\n       -1.8362737 , -1.88754677, -1.83168522, -1.81117076, -1.89364846,\n       -1.83673661, -1.81735917, -1.35419821, -1.35077068, -1.37106212,\n       -1.34194896, -1.36232483, -1.39522798, -1.42305869, -1.46640877,\n       -1.46803654, -1.86830349, -1.78857967, -1.75496424, -1.82519208,\n       -1.70674416, -1.65539838, -1.82551882, -1.70906919, -1.66044257,\n       -1.42262522, -1.31542871, -1.34063861, -1.80629175, -1.81201613,\n       -1.79870795, -1.92697085, -1.90698638, -1.92883865, -1.86862679,\n       -1.79442484, -1.76273308, -1.85855109, -1.77957051, -1.75063529,\n       -1.85069206, -1.76523398, -1.72994898, -1.41162369, -1.37277184,\n       -1.33326702, -1.73635936, -1.71295837, -1.73109389, -1.81593705,\n       -1.79832223, -1.80417062, -1.87358158, -1.80518624, -1.77525089,\n       -1.84656964, -1.75219457, -1.71238534, -1.84781336, -1.75830343,\n       -1.72322185, -1.42600308, -1.38727242, -1.38885934, -1.76525755,\n       -1.76929247, -1.67714623, -1.7995145 , -1.83928365, -1.82682608,\n       -1.86844773, -1.79724362, -1.76711955, -1.85321472, -1.76673846,\n       -1.73223398, -1.85504821, -1.77367686, -1.73896396, -1.4340384 ,\n       -1.39999389, -1.39546098, -1.71725051, -1.74254827, -1.77699   ,\n       -1.74058952, -1.74993986, -1.74488233, -1.86635893, -1.79145991,\n       -1.76207635, -1.85238835, -1.76622972, -1.73307688, -1.84985778,\n       -1.75900441, -1.72127724, -1.44234977, -1.39734897, -1.35657646,\n       -1.6869206 , -1.68203748, -1.63845103, -1.81590866, -1.80651267,\n       -1.81512571, -1.86287163, -1.78554851, -1.7563195 , -1.87059324,\n       -1.80082233, -1.77215659, -1.87180545, -1.80277635, -1.77283688,\n       -1.34007519, -1.32077444, -1.25153567, -1.45734341, -1.48821725,\n       -1.50925424, -1.64813391, -1.63832886, -1.62316636, -1.85585227,\n       -1.7767348 , -1.74438004, -1.85098397, -1.7630592 , -1.7250021 ,\n       -1.85117783, -1.76468718, -1.72656073, -1.49377853, -1.47685057,\n       -1.47213547, -1.74356539, -1.73281991, -1.73488663, -1.95531003,\n       -1.94688164, -1.95316888, -1.88126217, -1.80970987, -1.77943032,\n       -1.86954183, -1.79889263, -1.76987901, -1.8670877 , -1.7951515 ,\n       -1.76759872, -1.3823304 , -1.32626483, -1.31130781, -1.6658904 ,\n       -1.63353954, -1.6952273 , -1.86567729, -1.85499348, -1.86476327,\n       -1.88076998, -1.80771826, -1.77568334, -1.85500909, -1.77455102,\n       -1.73659339, -1.84966482, -1.7660018 , -1.73233911, -1.35114917,\n       -1.35037771, -1.30239547, -1.88068163, -1.87470627, -1.8837352 ,\n       -2.01843751, -2.06056878, -2.03347406, -1.88663496, -1.81746811,\n       -1.78719065, -1.87422468, -1.81116972, -1.78782963, -1.8744568 ,\n       -1.80511599, -1.78349501, -1.40832478, -1.38855033, -1.36079016,\n       -1.69908608, -1.72810917, -1.77998507, -1.98909352, -1.95009122,\n       -1.95209982, -1.89262715, -1.82960605, -1.80422587, -1.86124349,\n       -1.79308845, -1.76622949, -1.86269862, -1.78657262, -1.75478921,\n       -1.46817379, -1.40640047, -1.41202155, -1.80553734, -1.79576919,\n       -1.82841602, -1.96747074, -1.95190148, -1.96587858, -1.89360296,\n       -1.83205678, -1.80508729, -1.86272808, -1.79965326, -1.77818282,\n       -1.85952078, -1.78043416, -1.75345093, -1.35086044, -1.35074381,\n       -1.36943056, -1.67191264, -1.58572139, -1.60510696, -1.72332471,\n       -1.7615668 , -1.71907735, -1.88017088, -1.82070257, -1.79268352,\n       -1.84900741, -1.77767103, -1.74960701, -1.84490949, -1.74808673,\n       -1.70941008, -1.43289993, -1.41497154, -1.36862436, -1.51106159,\n       -1.56701534, -1.54623863, -1.65421813, -1.60100131, -1.60401124,\n       -1.88805958, -1.83143444, -1.80351064, -1.84655701, -1.7554353 ,\n       -1.72125967, -1.83702166, -1.73482895, -1.69367045, -1.44136021,\n       -1.34748517, -1.36983425, -1.4944092 , -1.52715427, -1.46342792,\n       -1.78150092, -1.81130848, -1.76281937, -1.88986896, -1.8319734 ,\n       -1.80509658, -1.8606799 , -1.77760206, -1.74357931, -1.85612693,\n       -1.77350389, -1.73807747, -1.44539501, -1.43932536, -1.42319669,\n       -1.67900457, -1.60167077, -1.65903845, -1.8071548 , -1.83898535,\n       -1.7820021 , -1.8891724 , -1.83072261, -1.80546568, -1.86327401,\n       -1.78366231, -1.74783713, -1.85939775, -1.78458643, -1.75725132,\n       -1.5705913 , -1.55004617, -1.52909428, -1.64464448, -1.61759301,\n       -1.66411585, -1.9183092 , -1.82907327, -1.93286083, -1.88824498,\n       -1.8350666 , -1.81047603, -1.8643851 , -1.78489653, -1.75422764,\n       -1.86331551, -1.79262482, -1.75767294, -1.48163172, -1.46775514,\n       -1.46177847, -1.79054552, -1.76817281, -1.77452056, -1.96170052,\n       -1.97312068, -1.90823665, -1.88956369, -1.83808662, -1.81545287,\n       -1.86941099, -1.79416802, -1.76325714, -1.86851512, -1.79662505,\n       -1.76728811, -1.54241227, -1.49228282, -1.48378197, -1.8235971 ,\n       -1.84685628, -1.84536414, -2.02248154, -2.02627088, -2.03296553,\n       -1.8933099 , -1.84182495, -1.81639151, -1.8775994 , -1.81630042,\n       -1.78457231, -1.87597813, -1.81496585, -1.78918495]), 'split7_test_score': array([-2.34910324, -2.43227456, -2.36224173, -2.58585597, -2.61213086,\n       -2.55150601, -2.62688369, -2.63217936, -2.61773331, -1.94911867,\n       -1.9334456 , -1.92645881, -1.94845201, -1.94786017, -1.95260294,\n       -1.94532794, -1.93502463, -1.93806355, -1.94466509, -1.99825431,\n       -1.91732738, -2.33773034, -2.38323423, -2.39957764, -2.6456319 ,\n       -2.6687136 , -2.65842835, -1.93452183, -1.90902891, -1.90200057,\n       -1.960364  , -1.97594371, -1.98678848, -1.96448408, -1.9761574 ,\n       -1.98686675, -1.85480751, -1.85642071, -1.86035412, -2.52820251,\n       -2.54469632, -2.53215055, -2.66362577, -2.69655925, -2.71018368,\n       -1.94416745, -1.92083493, -1.90976377, -1.96707046, -1.98295873,\n       -1.99696   , -1.96347412, -1.97750902, -1.98682   , -1.83370138,\n       -1.78833359, -1.85962281, -2.23526584, -2.2700104 , -2.26195383,\n       -2.59733669, -2.53337253, -2.5792552 , -1.93656925, -1.9112848 ,\n       -1.89626374, -1.95364   , -1.95902779, -1.96172675, -1.95104533,\n       -1.94715665, -1.95307897, -1.80027663, -1.76234869, -1.7353455 ,\n       -2.28228169, -2.36908084, -2.35351638, -2.54868213, -2.52185322,\n       -2.50400043, -1.93244198, -1.9057258 , -1.89598214, -1.94851902,\n       -1.9533648 , -1.95556528, -1.94670302, -1.94224605, -1.94505789,\n       -1.7756216 , -1.77575468, -1.74107795, -2.18840154, -2.15358031,\n       -2.16859827, -2.44301581, -2.35074136, -2.4191562 , -1.92508663,\n       -1.89467505, -1.87927698, -1.92381145, -1.90550654, -1.89704416,\n       -1.92174598, -1.89615332, -1.89041892, -1.8579625 , -1.85241403,\n       -1.85899434, -2.30278861, -2.28749167, -2.28180245, -2.37825006,\n       -2.39148086, -2.41067293, -1.92634082, -1.89298387, -1.879912  ,\n       -1.92714577, -1.90881134, -1.90287837, -1.92659977, -1.90685839,\n       -1.90365779, -1.79984432, -1.81207107, -1.85527977, -2.29021487,\n       -2.28177803, -2.34174433, -2.56860377, -2.5493471 , -2.51947552,\n       -1.92983758, -1.89355544, -1.87753627, -1.95729149, -1.96140262,\n       -1.9706798 , -1.95189557, -1.95081206, -1.95848746, -1.86937028,\n       -1.88513741, -1.86243677, -2.29342535, -2.30393017, -2.35317663,\n       -2.4715465 , -2.39959806, -2.44465003, -1.92669595, -1.89623511,\n       -1.87970406, -1.95348633, -1.95293702, -1.95939051, -1.95253269,\n       -1.95092732, -1.95703537, -1.80411558, -1.82073817, -1.84984685,\n       -2.14305601, -2.18392601, -2.16815582, -2.432233  , -2.38749639,\n       -2.43950419, -1.92820516, -1.89916262, -1.88662157, -1.94582201,\n       -1.93420962, -1.9388295 , -1.94494747, -1.93251941, -1.93159911,\n       -1.81749765, -1.79956382, -1.81568183, -2.18083871, -2.11874348,\n       -2.19145442, -2.45265827, -2.43161712, -2.43075367, -1.93086155,\n       -1.89691644, -1.88462726, -1.94355101, -1.93062722, -1.93181135,\n       -1.94326689, -1.93586036, -1.93579712, -1.80079599, -1.82059949,\n       -1.74454161, -2.20601227, -2.22197801, -2.20123731, -2.44824602,\n       -2.39911687, -2.43859016, -1.92915864, -1.89707663, -1.88129174,\n       -1.94183433, -1.92954912, -1.92976844, -1.94406654, -1.93542111,\n       -1.9317554 , -1.832215  , -1.84012368, -1.80327875, -2.29471996,\n       -2.25542069, -2.26530807, -2.44709944, -2.42422239, -2.43159457,\n       -1.92778269, -1.89535464, -1.87993679, -1.94164746, -1.92738751,\n       -1.92528649, -1.94255474, -1.93230613, -1.93453689, -1.81059288,\n       -1.79967598, -1.80187209, -2.28596892, -2.28830293, -2.25870651,\n       -2.40064273, -2.42533227, -2.40550378, -1.92707491, -1.89345615,\n       -1.87916177, -1.93480689, -1.91807702, -1.91407256, -1.93771311,\n       -1.92415438, -1.92195362, -1.83515426, -1.84316982, -1.80671845,\n       -2.23119275, -2.18624526, -2.2336268 , -2.34794649, -2.40456958,\n       -2.35369505, -1.92837001, -1.89611058, -1.87988424, -1.93443461,\n       -1.91549925, -1.91099064, -1.93676366, -1.92238519, -1.92070573,\n       -1.87831368, -1.79016973, -1.88112901, -2.25108879, -2.15237455,\n       -2.24758201, -2.40211808, -2.37122012, -2.43119906, -1.92883717,\n       -1.89384909, -1.87997055, -1.9341068 , -1.91532997, -1.91296307,\n       -1.93805484, -1.92325681, -1.92209493, -1.81342101, -1.82762056,\n       -1.92464582, -2.117106  , -2.17441201, -2.12640691, -2.40593333,\n       -2.39050443, -2.38574467, -1.92968195, -1.89296228, -1.88170758,\n       -1.93857321, -1.92098559, -1.9168792 , -1.93690715, -1.92431097,\n       -1.9237697 , -1.80129196, -1.82185052, -1.85994447, -2.14676907,\n       -2.16228567, -2.17881731, -2.36123106, -2.3931494 , -2.34120895,\n       -1.92093356, -1.8833114 , -1.86750226, -1.92983912, -1.9064272 ,\n       -1.90047659, -1.9306802 , -1.90971942, -1.906821  , -1.81918438,\n       -1.79318399, -1.81710373, -2.19568108, -2.31533104, -2.33317636,\n       -2.36738867, -2.3760586 , -2.37202673, -1.91605168, -1.87902376,\n       -1.86210159, -1.92905036, -1.90622884, -1.89677423, -1.92912755,\n       -1.90488763, -1.90048397, -1.83322754, -1.84908486, -1.85159454,\n       -2.10220779, -2.05019952, -2.03392484, -2.2436204 , -2.2583257 ,\n       -2.22130694, -1.93225756, -1.89680661, -1.87835306, -1.9278624 ,\n       -1.89349443, -1.87791815, -1.92618823, -1.90156566, -1.89477552,\n       -1.95552741, -1.99746507, -2.00381889, -2.2124239 , -2.20925848,\n       -2.18537891, -2.28816747, -2.31668638, -2.29760105, -1.93201841,\n       -1.89573505, -1.87446014, -1.93373313, -1.91433877, -1.90799382,\n       -1.93399639, -1.91622557, -1.91234087, -2.02662983, -2.07621566,\n       -2.11607842, -2.38184253, -2.30871635, -2.35317364, -2.34613264,\n       -2.34859129, -2.36053989, -1.94241264, -1.90236077, -1.88368442,\n       -1.94448916, -1.93530895, -1.93502398, -1.93801767, -1.9242688 ,\n       -1.91986591, -1.8936312 , -1.88911386, -1.96424954, -2.31705359,\n       -2.31181515, -2.37321249, -2.39509897, -2.41377952, -2.41337366,\n       -1.94258555, -1.90522669, -1.88567741, -1.94252267, -1.93636466,\n       -1.93518204, -1.93782994, -1.92596433, -1.92697169, -1.89630875,\n       -1.8581706 , -1.90864626, -2.30563004, -2.23426724, -2.2307432 ,\n       -2.4414739 , -2.4375561 , -2.44096106, -1.93369912, -1.9027135 ,\n       -1.8851925 , -1.9265053 , -1.90363173, -1.89796831, -1.92499976,\n       -1.90239927, -1.89878881, -1.95949586, -1.95414734, -1.970521  ,\n       -2.57218626, -2.50585519, -2.59152259, -2.61874561, -2.63927537,\n       -2.58076956, -1.93417789, -1.91061324, -1.89565938, -1.96197104,\n       -1.97070812, -1.97921159, -1.96076953, -1.97012877, -1.97945435,\n       -1.90601938, -1.88853691, -1.8750101 , -2.27098622, -2.30423155,\n       -2.30467755, -2.48833941, -2.50549962, -2.50549104, -1.93417723,\n       -1.9176599 , -1.90153238, -1.95178976, -1.94706055, -1.95049255,\n       -1.95062967, -1.9471315 , -1.95313847, -1.9296999 , -1.92310939,\n       -1.94426497, -2.33984948, -2.30277291, -2.32686334, -2.41033839,\n       -2.38038299, -2.36525979, -1.9364552 , -1.91520008, -1.89706378,\n       -1.94004316, -1.92853861, -1.92703136, -1.94270861, -1.92831472,\n       -1.93396623, -1.92059375, -1.890756  , -1.89270881, -2.39638292,\n       -2.31988246, -2.32580682, -2.47099302, -2.49304651, -2.47949176,\n       -1.93798039, -1.91882891, -1.90178173, -1.94015908, -1.93384191,\n       -1.92960237, -1.94032207, -1.93245981, -1.93274687, -1.93129182,\n       -1.95047275, -1.95005617, -2.27690906, -2.2676227 , -2.32683299,\n       -2.37814853, -2.47615849, -2.45913792, -1.93792275, -1.91949667,\n       -1.90203235, -1.93765435, -1.92709971, -1.93269867, -1.94025208,\n       -1.93034821, -1.93084718, -1.76565782, -1.81173697, -1.81665667,\n       -2.32371994, -2.29604666, -2.23205428, -2.3268512 , -2.33353892,\n       -2.38537226, -1.93659793, -1.91586762, -1.90488316, -1.93384044,\n       -1.9146406 , -1.91511759, -1.93597342, -1.92027361, -1.91529479,\n       -1.75983031, -1.78289972, -1.76291431, -2.25822745, -2.21681034,\n       -2.29984604, -2.38825434, -2.3844228 , -2.35736442, -1.92134197,\n       -1.88994817, -1.87666157, -1.92634398, -1.91322431, -1.90798977,\n       -1.92244257, -1.89371124, -1.88664085, -1.85623266, -1.83507072,\n       -1.82473658, -2.11282701, -2.19070336, -2.1797391 , -2.31078269,\n       -2.31888134, -2.31945332, -1.92896882, -1.90349984, -1.89145806,\n       -1.89994035, -1.86343912, -1.8528599 , -1.90095713, -1.85767402,\n       -1.84328473, -1.86758203, -1.91226293, -1.90401949, -2.18830575,\n       -2.21794917, -2.19110611, -2.34124098, -2.32016816, -2.33100799,\n       -1.92866012, -1.90347522, -1.89214612, -1.90019261, -1.86909045,\n       -1.85786686, -1.90143134, -1.85705196, -1.84310861, -1.8036617 ,\n       -1.77886298, -1.75950266, -2.21941489, -2.2247636 , -2.20497404,\n       -2.30853539, -2.31399791, -2.31048878, -1.92178637, -1.89056928,\n       -1.87876998, -1.90818074, -1.87746862, -1.86753585, -1.90628172,\n       -1.86674801, -1.85600492, -1.81127282, -1.79133287, -1.74663781,\n       -2.17698242, -2.20771385, -2.16686004, -2.31327126, -2.30911397,\n       -2.31027696, -1.92143718, -1.89097357, -1.87788805, -1.90785732,\n       -1.87749081, -1.86609723, -1.90683044, -1.86820434, -1.85598877,\n       -1.82332522, -1.83410242, -1.86839913, -2.20723753, -2.1739601 ,\n       -2.1879909 , -2.3899164 , -2.39568035, -2.33111325, -1.92178232,\n       -1.88821982, -1.8723593 , -1.91020106, -1.88452934, -1.87749163,\n       -1.91016124, -1.87409011, -1.86755844, -1.78971789, -1.81426877,\n       -1.85887626, -2.17683458, -2.14496443, -2.13925167, -2.27526262,\n       -2.28358007, -2.25139634, -1.92111803, -1.8867891 , -1.87109554,\n       -1.8999947 , -1.87180024, -1.86640802, -1.90139369, -1.85391154,\n       -1.83958454, -1.87058508, -1.90551809, -1.90476646, -2.1103135 ,\n       -2.04910897, -2.14843419, -2.25014403, -2.25065657, -2.25538794,\n       -1.92348495, -1.89159665, -1.87904339, -1.8983496 , -1.86359523,\n       -1.85462951, -1.90127459, -1.85450142, -1.83544841]), 'split8_test_score': array([-1.88524044, -1.91353894, -1.89495865, -2.22240362, -2.23516888,\n       -2.24125758, -2.25755279, -2.25592262, -2.28739545, -1.94060379,\n       -1.91425345, -1.90243936, -1.92724916, -1.90491943, -1.89834204,\n       -1.92719703, -1.90437098, -1.89546715, -1.66506246, -1.67416363,\n       -1.6647051 , -1.83476037, -1.85010863, -1.8321863 , -2.03461204,\n       -2.01878581, -2.02412693, -1.88426047, -1.82153427, -1.79393795,\n       -1.88231754, -1.80465352, -1.77495783, -1.8866344 , -1.82411159,\n       -1.79796166, -1.69268238, -1.71919928, -1.70554023, -1.98501887,\n       -1.95664571, -1.94419675, -2.02740306, -2.05002618, -2.0403912 ,\n       -1.88273929, -1.82508575, -1.79994384, -1.87729771, -1.80840207,\n       -1.78145461, -1.88096716, -1.81661447, -1.79203481, -1.60553927,\n       -1.66742424, -1.66786472, -2.07584911, -2.01780581, -2.04325107,\n       -2.10477588, -2.10656345, -2.13091372, -1.88823312, -1.83260624,\n       -1.81001252, -1.90636538, -1.85845876, -1.84197612, -1.90762296,\n       -1.86507129, -1.85028989, -1.66574936, -1.57221883, -1.63273234,\n       -1.87946593, -1.87522468, -1.86242871, -1.97239603, -1.96772658,\n       -1.98458484, -1.89094327, -1.83176073, -1.81000514, -1.88525306,\n       -1.82037522, -1.79474899, -1.88687249, -1.82722172, -1.80477013,\n       -1.56163285, -1.59033941, -1.58327774, -2.05974853, -2.05961866,\n       -2.04449837, -2.29844011, -2.28000285, -2.31263622, -1.89230142,\n       -1.82932823, -1.80284555, -1.91835777, -1.8899401 , -1.88219661,\n       -1.91695146, -1.88585881, -1.87608858, -1.51017865, -1.61505075,\n       -1.58482194, -1.93278557, -1.94509713, -1.93355279, -2.0363333 ,\n       -2.04279579, -2.0158557 , -1.89227249, -1.82894292, -1.80350689,\n       -1.89485624, -1.84993406, -1.83914401, -1.89139555, -1.83555285,\n       -1.81490458, -1.53030941, -1.53045071, -1.59799898, -1.91062776,\n       -1.89927344, -1.89547868, -2.06976635, -2.05800589, -2.05583319,\n       -1.89143631, -1.8276116 , -1.80258234, -1.89663264, -1.85514521,\n       -1.8448988 , -1.89555894, -1.84260898, -1.82385598, -1.58745721,\n       -1.588401  , -1.51789854, -1.90563893, -1.98579099, -1.9656435 ,\n       -2.06763226, -2.07956067, -2.10067221, -1.89143631, -1.8276116 ,\n       -1.80256105, -1.89493216, -1.85097764, -1.83978335, -1.89367924,\n       -1.84015962, -1.81928195, -1.59296814, -1.52325372, -1.61360715,\n       -1.97858631, -1.99414304, -1.9640758 , -2.03480884, -2.05749582,\n       -2.08030363, -1.89036183, -1.82604561, -1.80033226, -1.89547114,\n       -1.86082362, -1.85370687, -1.89729985, -1.84941155, -1.83082814,\n       -1.55382153, -1.54690991, -1.52619321, -1.94467448, -1.94710484,\n       -1.94280298, -2.04279113, -2.0258481 , -2.02780039, -1.89204721,\n       -1.82963945, -1.80391213, -1.89938113, -1.85343947, -1.83845148,\n       -1.89019974, -1.83687512, -1.8134663 , -1.72033976, -1.63126455,\n       -1.62709421, -1.88235951, -1.82689543, -1.81579622, -1.85320134,\n       -1.8538373 , -1.87688472, -1.89530109, -1.83287085, -1.81232274,\n       -1.89158089, -1.83387685, -1.81481481, -1.88064381, -1.81364558,\n       -1.78817036, -1.65918093, -1.67455197, -1.63496424, -1.7940587 ,\n       -1.86523772, -1.89795173, -1.86407469, -1.87650245, -1.87167722,\n       -1.89528018, -1.83297725, -1.81291581, -1.89098069, -1.83843106,\n       -1.81406838, -1.88135365, -1.81600145, -1.78703145, -1.61880243,\n       -1.65571764, -1.67493422, -1.89490776, -1.9257861 , -1.89693513,\n       -2.01627066, -2.0411669 , -2.01787156, -1.89631943, -1.83605705,\n       -1.8149932 , -1.8989071 , -1.85250978, -1.83617695, -1.89996398,\n       -1.85760289, -1.83849189, -1.60745695, -1.63443576, -1.64179473,\n       -1.85319515, -1.83290572, -1.89584684, -2.04063965, -2.02562315,\n       -2.06603219, -1.89222055, -1.82835223, -1.80782524, -1.89748175,\n       -1.84906598, -1.82957505, -1.90020507, -1.85197817, -1.83283174,\n       -1.50074668, -1.50284053, -1.51633648, -1.80103074, -1.74530206,\n       -1.78945891, -2.0517196 , -2.01639748, -1.97848609, -1.89757532,\n       -1.83093272, -1.81066481, -1.89258302, -1.83546543, -1.81004877,\n       -1.89592294, -1.84318887, -1.82293408, -1.6046221 , -1.65261141,\n       -1.67687842, -1.76678626, -1.83522928, -1.7495888 , -1.96331909,\n       -2.02072553, -2.04090617, -1.89768312, -1.83057319, -1.81094655,\n       -1.89080724, -1.83615896, -1.81415679, -1.88735559, -1.82696175,\n       -1.80339137, -1.58045969, -1.59011504, -1.60402855, -1.82468299,\n       -1.80107064, -1.84192452, -1.96294121, -1.97757432, -1.93205926,\n       -1.89784002, -1.83097765, -1.80968128, -1.89061461, -1.83572422,\n       -1.81067822, -1.88860563, -1.82869122, -1.80188744, -1.59302936,\n       -1.61980276, -1.65205205, -1.82579962, -1.6843109 , -1.74311711,\n       -1.9470132 , -1.95916447, -1.93137017, -1.89784786, -1.83113082,\n       -1.81204648, -1.88992306, -1.83174768, -1.81126408, -1.88541669,\n       -1.82084699, -1.80164592, -1.73437241, -1.81487486, -1.82285849,\n       -1.89899184, -1.86162412, -1.83809287, -1.91898009, -1.94596959,\n       -1.9221627 , -1.90715467, -1.86629607, -1.84943452, -1.8953477 ,\n       -1.84451013, -1.82600321, -1.89057729, -1.83054837, -1.80773907,\n       -1.69511583, -1.67483341, -1.68953229, -1.86408683, -1.87619745,\n       -1.763433  , -2.18639206, -2.18352365, -2.17801256, -1.89963435,\n       -1.83824451, -1.81445818, -1.90333928, -1.85932359, -1.84136071,\n       -1.89644839, -1.8479423 , -1.83131377, -1.72840621, -1.74366128,\n       -1.8147941 , -2.02755935, -2.07313919, -2.07448867, -2.32174829,\n       -2.31311504, -2.32043517, -1.89862469, -1.83252906, -1.80533463,\n       -1.90281403, -1.87159689, -1.86620736, -1.90891915, -1.87422666,\n       -1.86294438, -1.63260545, -1.64241422, -1.64602645, -1.96544981,\n       -1.90366315, -1.93349368, -2.14073162, -2.16864244, -2.18806994,\n       -1.8955182 , -1.8320727 , -1.80348023, -1.89760818, -1.85629319,\n       -1.84321124, -1.89454215, -1.84381231, -1.82424583, -1.70367947,\n       -1.69439067, -1.60311249, -2.013286  , -1.94874441, -1.93912551,\n       -2.27311671, -2.28135342, -2.28683329, -1.89575823, -1.83941056,\n       -1.81340164, -1.89521616, -1.84244453, -1.8248879 , -1.90848155,\n       -1.86743251, -1.8556272 , -1.6245533 , -1.58171359, -1.65742288,\n       -1.95304136, -2.01291921, -1.96881397, -2.10706781, -2.14398551,\n       -2.14560419, -1.8911684 , -1.83399468, -1.80324037, -1.89948418,\n       -1.85045554, -1.83232534, -1.89691045, -1.84837722, -1.82686028,\n       -1.65970782, -1.66940309, -1.65709686, -1.73895728, -1.76859131,\n       -1.7612612 , -1.97434458, -1.98440716, -2.01100631, -1.9041829 ,\n       -1.85454818, -1.83202118, -1.89871084, -1.84833128, -1.82543265,\n       -1.8976914 , -1.84960765, -1.82822276, -1.62026069, -1.63197984,\n       -1.62768068, -1.84141536, -1.83640486, -1.75873021, -1.90287696,\n       -1.91009488, -1.91257844, -1.90097927, -1.84555907, -1.82068873,\n       -1.87610977, -1.80555358, -1.77754136, -1.87535765, -1.80484887,\n       -1.77697232, -1.67553881, -1.6737275 , -1.67974481, -1.77210375,\n       -1.79544042, -1.84035797, -1.90442168, -1.89797316, -1.90429952,\n       -1.89985296, -1.84596052, -1.81991062, -1.87550504, -1.80079958,\n       -1.77209694, -1.87620321, -1.80237092, -1.77562442, -1.58661886,\n       -1.58096841, -1.62842824, -1.65307051, -1.69789153, -1.65061585,\n       -1.80303771, -1.80254666, -1.81380989, -1.89704489, -1.83793938,\n       -1.80975592, -1.86489739, -1.78595932, -1.75222454, -1.86699603,\n       -1.78597603, -1.75457079, -1.48901203, -1.49217244, -1.53881372,\n       -1.66519761, -1.63853726, -1.65887339, -1.83893576, -1.80736578,\n       -1.82222001, -1.89760258, -1.83889471, -1.81117207, -1.86619567,\n       -1.78439914, -1.75055257, -1.8684088 , -1.792594  , -1.75919718,\n       -1.5085847 , -1.5436363 , -1.52136442, -1.75656212, -1.71900232,\n       -1.67208981, -1.77054905, -1.78041518, -1.79638292, -1.89724923,\n       -1.83816281, -1.81021456, -1.86815901, -1.78631291, -1.75114126,\n       -1.87381558, -1.79570376, -1.76692354, -1.54667198, -1.58485053,\n       -1.53057299, -1.67438366, -1.68053055, -1.73600512, -1.81896648,\n       -1.83339946, -1.83394507, -1.8967471 , -1.83760541, -1.80991755,\n       -1.8601839 , -1.78298793, -1.75307768, -1.86674796, -1.78801225,\n       -1.7521757 , -1.47322495, -1.48707209, -1.49104549, -1.64292047,\n       -1.60595108, -1.62148579, -1.69973315, -1.66123871, -1.63770256,\n       -1.88292636, -1.81019976, -1.77880249, -1.8631472 , -1.77402809,\n       -1.73722278, -1.87603623, -1.80237859, -1.76958005, -1.41908926,\n       -1.43164234, -1.44603776, -1.67122658, -1.63697509, -1.59055279,\n       -1.71664567, -1.69081712, -1.71287924, -1.88360976, -1.80968557,\n       -1.77783131, -1.86509236, -1.77809197, -1.73595712, -1.87525623,\n       -1.8030848 , -1.77379019, -1.45464932, -1.41670368, -1.47947693,\n       -1.63668997, -1.64637883, -1.64177754, -1.69366667, -1.688934  ,\n       -1.72732692, -1.88230539, -1.8060022 , -1.77344551, -1.86367246,\n       -1.77661502, -1.73959395, -1.87046903, -1.79085955, -1.75959496,\n       -1.52844361, -1.56430781, -1.58001572, -1.70840862, -1.67509425,\n       -1.68241886, -1.60055382, -1.60878759, -1.63902126, -1.87760868,\n       -1.79608262, -1.76212336, -1.85974828, -1.76739918, -1.73145308,\n       -1.86429144, -1.77987394, -1.74336395, -1.60176496, -1.57833036,\n       -1.55277955, -1.65431799, -1.66821797, -1.62838096, -1.80045793,\n       -1.84249368, -1.76840352, -1.8874579 , -1.8114245 , -1.77695796,\n       -1.862621  , -1.77815389, -1.74767487, -1.86813011, -1.7895197 ,\n       -1.7607688 , -1.55875066, -1.55035353, -1.5971672 , -1.69560248,\n       -1.70552725, -1.76209928, -1.85205936, -1.84788933, -1.84636257,\n       -1.88991044, -1.81784592, -1.78499588, -1.87007682, -1.79188328,\n       -1.75955175, -1.87018098, -1.80152635, -1.77046099]), 'split9_test_score': array([-1.70969369, -1.70212825, -1.69498099, -2.1943895 , -2.12661199,\n       -2.10327022, -2.12366233, -2.2160722 , -2.19909127, -1.91039292,\n       -1.88061201, -1.86167436, -1.9162878 , -1.88083623, -1.87162084,\n       -1.91680906, -1.88148216, -1.87390583, -1.51434701, -1.54064825,\n       -1.53346298, -1.83694176, -1.84585177, -1.84717228, -1.91348759,\n       -1.86618526, -1.91928384, -1.9066628 , -1.85517437, -1.83144163,\n       -1.88555345, -1.82236649, -1.79769462, -1.88377454, -1.81957761,\n       -1.79482704, -1.59515616, -1.61376498, -1.66950446, -1.87945607,\n       -1.90717455, -1.8644192 , -1.95517823, -1.90419291, -1.86944769,\n       -1.90729062, -1.8574922 , -1.83504746, -1.88991726, -1.83225764,\n       -1.80936013, -1.88048358, -1.81542355, -1.78799565, -1.51440931,\n       -1.56690139, -1.60879532, -1.92769428, -1.92780456, -1.92089061,\n       -1.98118719, -1.97853457, -1.97565967, -1.90814747, -1.86368821,\n       -1.84386129, -1.89583466, -1.83797708, -1.81550985, -1.88823145,\n       -1.82393751, -1.80237952, -1.63203519, -1.69341459, -1.6242147 ,\n       -1.98701472, -1.97189149, -2.00467758, -2.04056785, -2.0133138 ,\n       -2.02223603, -1.91185269, -1.87267521, -1.85528444, -1.90103926,\n       -1.85410435, -1.83848725, -1.90024075, -1.85179714, -1.8366139 ,\n       -1.62177982, -1.59927536, -1.65575548, -2.08239655, -2.05934495,\n       -2.02879506, -2.12400978, -2.0463398 , -2.04150159, -1.91704585,\n       -1.88117779, -1.86295753, -1.90883351, -1.86887886, -1.85660797,\n       -1.90589106, -1.86515145, -1.84924665, -1.48023844, -1.54869159,\n       -1.57299481, -1.94516908, -1.91955341, -1.92783621, -1.94631638,\n       -1.92304818, -1.92946058, -1.90253342, -1.85018377, -1.82484448,\n       -1.89175377, -1.83756537, -1.81998206, -1.89041424, -1.83115601,\n       -1.80703212, -1.50696793, -1.51147616, -1.51169406, -1.86572447,\n       -1.82656969, -1.85509498, -1.92823663, -1.88689273, -1.90097093,\n       -1.89758977, -1.8436014 , -1.82080223, -1.87073325, -1.7969178 ,\n       -1.76637878, -1.87070704, -1.80109547, -1.77049154, -1.47024636,\n       -1.48877484, -1.44383852, -1.94160143, -1.91221742, -1.9309073 ,\n       -1.91236713, -1.88106374, -1.92596903, -1.90733631, -1.8670792 ,\n       -1.84722953, -1.86369432, -1.78318718, -1.75363628, -1.86572289,\n       -1.78695032, -1.75530711, -1.51172122, -1.54735791, -1.51967677,\n       -2.05760562, -2.01320268, -2.01684224, -1.83424578, -1.91424386,\n       -1.84838643, -1.90731664, -1.86769112, -1.8491076 , -1.8642972 ,\n       -1.78406912, -1.75564148, -1.86462331, -1.78388814, -1.75301188,\n       -1.53045616, -1.44220755, -1.50694307, -2.02046861, -2.06508223,\n       -2.05455727, -1.96374195, -1.93301386, -1.93061269, -1.90712773,\n       -1.86799143, -1.84839294, -1.87400632, -1.80411458, -1.77870867,\n       -1.87479482, -1.80247149, -1.77671328, -1.5290402 , -1.46020418,\n       -1.43885722, -2.07490137, -2.02886453, -2.03207147, -1.85211899,\n       -1.89002372, -1.85123863, -1.90521461, -1.86278748, -1.8420856 ,\n       -1.86470413, -1.78596232, -1.7590881 , -1.86424771, -1.78587163,\n       -1.75286304, -1.54789764, -1.57510733, -1.57143801, -2.05272614,\n       -2.02620608, -2.07022302, -1.87910915, -1.92527847, -1.90233599,\n       -1.90774024, -1.86775758, -1.85068094, -1.86602586, -1.78848859,\n       -1.75911379, -1.86550493, -1.78814485, -1.75510425, -1.47162578,\n       -1.53770789, -1.56373809, -1.98699971, -1.96334313, -1.97421447,\n       -1.87123768, -1.82658392, -1.82570053, -1.90691095, -1.86508356,\n       -1.8466304 , -1.86402047, -1.78435299, -1.75617356, -1.86459212,\n       -1.78254947, -1.75125453, -1.49742717, -1.5543219 , -1.50390294,\n       -1.81656966, -1.86394721, -1.84189664, -1.85073462, -1.80457897,\n       -1.82381004, -1.90455452, -1.85900881, -1.83723245, -1.87527522,\n       -1.80279393, -1.78504514, -1.87486436, -1.80302138, -1.77521815,\n       -1.50101854, -1.412353  , -1.50838949, -1.810472  , -1.82597631,\n       -1.91687742, -1.8197929 , -1.8368278 , -1.84568363, -1.90246626,\n       -1.85615903, -1.83378102, -1.8755728 , -1.80226461, -1.78141972,\n       -1.87506328, -1.8011522 , -1.77091329, -1.48588143, -1.53608015,\n       -1.48524945, -1.92180469, -1.97240866, -2.01833963, -1.79684804,\n       -1.8493874 , -1.83488934, -1.90423917, -1.86016127, -1.83937317,\n       -1.87433504, -1.80001431, -1.78416589, -1.87243675, -1.8000342 ,\n       -1.76916688, -1.50003645, -1.54116063, -1.54599542, -1.78099752,\n       -1.79239777, -1.83885517, -1.83859094, -1.7859337 , -1.80573684,\n       -1.90578632, -1.86222901, -1.84169734, -1.87200909, -1.80019864,\n       -1.76659655, -1.87396536, -1.80135508, -1.77082983, -1.52717045,\n       -1.50506104, -1.51993083, -1.78465375, -1.79136579, -1.77883013,\n       -1.81712678, -1.7929112 , -1.84144299, -1.905025  , -1.86249391,\n       -1.84231595, -1.87172957, -1.79621348, -1.76382624, -1.87087413,\n       -1.79742212, -1.76826451, -1.57916194, -1.64470251, -1.6628176 ,\n       -2.06080638, -2.12675641, -2.03831164, -2.28104872, -2.26807021,\n       -2.28021809, -1.90194554, -1.83980883, -1.81439417, -1.93114356,\n       -1.90829403, -1.89870787, -1.92250474, -1.88919714, -1.88089456,\n       -1.50769094, -1.54507587, -1.54056092, -1.9259061 , -1.93422505,\n       -2.01154965, -1.95325426, -2.03032845, -1.98560997, -1.8974638 ,\n       -1.8329157 , -1.80440725, -1.89509611, -1.84858064, -1.82914342,\n       -1.89878581, -1.84475737, -1.82845091, -1.50054249, -1.55544949,\n       -1.56161315, -1.97724058, -2.08506674, -2.10632373, -2.11764165,\n       -2.11235942, -2.11822022, -1.89983183, -1.83779953, -1.81072205,\n       -1.9041555 , -1.85590898, -1.83840843, -1.91414481, -1.8789132 ,\n       -1.86558137, -1.54808204, -1.57982814, -1.61375801, -1.94996578,\n       -1.99441133, -1.98142265, -2.15277498, -2.15179471, -2.13616495,\n       -1.90144147, -1.84514974, -1.8191877 , -1.91082307, -1.86857931,\n       -1.85302028, -1.94052899, -1.91894393, -1.90078058, -1.48194094,\n       -1.51138661, -1.55766495, -1.81328039, -1.87885415, -1.81643626,\n       -2.04295148, -2.08841056, -1.9589479 , -1.90189214, -1.84569464,\n       -1.82008855, -1.89234137, -1.83640917, -1.81709059, -1.88960428,\n       -1.83274685, -1.80671964, -1.51131108, -1.42704214, -1.54966384,\n       -2.05310649, -2.0215906 , -1.97170595, -2.26990397, -2.24713613,\n       -2.20505682, -1.90693227, -1.84654613, -1.82103499, -1.90344948,\n       -1.85633933, -1.83995322, -1.90130406, -1.85770356, -1.84396424,\n       -1.4311059 , -1.4271193 , -1.42841544, -2.14363738, -2.0535973 ,\n       -2.12284973, -2.22615668, -2.27158548, -2.22290807, -1.91509995,\n       -1.86706359, -1.84119034, -1.91219433, -1.87119754, -1.85531045,\n       -1.91160563, -1.87741537, -1.86475362, -1.43520014, -1.46150469,\n       -1.40352971, -1.94073021, -1.9285057 , -1.93426159, -2.11636052,\n       -2.20866725, -2.22710197, -1.9155936 , -1.86953927, -1.84327214,\n       -1.90803896, -1.85647634, -1.83690526, -1.90846141, -1.86857782,\n       -1.85192423, -1.44542746, -1.41587953, -1.42462673, -1.89462356,\n       -1.90836713, -1.95605243, -2.18785837, -2.14838222, -2.14093425,\n       -1.91542447, -1.86647058, -1.83969914, -1.90409404, -1.86206584,\n       -1.844324  , -1.90408322, -1.86328701, -1.84856266, -1.41557028,\n       -1.37108014, -1.44580957, -1.80364246, -1.84479163, -1.80730101,\n       -2.05457353, -2.09287988, -2.13463479, -1.91370937, -1.8648293 ,\n       -1.83911866, -1.90001858, -1.84873774, -1.82746824, -1.89978425,\n       -1.85056376, -1.83191716, -1.39535881, -1.37215795, -1.44684519,\n       -1.82156562, -1.82934469, -1.82238057, -2.05200969, -2.06043185,\n       -2.06878091, -1.91379601, -1.86598456, -1.83747344, -1.89891749,\n       -1.84591822, -1.8286698 , -1.89985266, -1.84959362, -1.8305693 ,\n       -1.45255203, -1.40376441, -1.47131534, -1.9178177 , -1.81437231,\n       -1.80751399, -2.0832391 , -2.17181635, -2.11224493, -1.91328897,\n       -1.85697616, -1.8268089 , -1.89910076, -1.85245032, -1.83254266,\n       -1.89941622, -1.85276392, -1.83763473, -1.47126729, -1.52295279,\n       -1.48836968, -1.93674706, -1.93200741, -1.94423817, -2.23733714,\n       -2.23140196, -2.17956981, -1.91275878, -1.85764348, -1.82843177,\n       -1.90944089, -1.8682981 , -1.85450294, -1.90919684, -1.86753907,\n       -1.85545443, -1.42764157, -1.49683432, -1.49519653, -1.80252841,\n       -1.81911142, -1.8479646 , -2.04518777, -2.12330672, -2.10509218,\n       -1.91299818, -1.85674003, -1.82539027, -1.8980568 , -1.84740697,\n       -1.82645618, -1.89813736, -1.84974878, -1.82987133, -1.46876723,\n       -1.52492323, -1.52857488, -1.93004138, -1.81319707, -1.85621532,\n       -2.10807037, -2.10708383, -2.13468436, -1.9122389 , -1.85661917,\n       -1.82552275, -1.89222314, -1.83568639, -1.81446716, -1.8860017 ,\n       -1.82905438, -1.80907146, -1.47546392, -1.56327838, -1.56828231,\n       -1.82120485, -1.86897848, -1.84498504, -2.1976811 , -2.14604364,\n       -2.20249215, -1.91364719, -1.85864776, -1.82825596, -1.8958405 ,\n       -1.83772552, -1.81382284, -1.89258552, -1.84235211, -1.82136417,\n       -1.42440519, -1.41964664, -1.52139705, -1.84268356, -1.7632718 ,\n       -1.83805172, -2.1573091 , -2.1646133 , -2.16891331, -1.91356151,\n       -1.85880026, -1.82811908, -1.89698052, -1.83726857, -1.810262  ,\n       -1.89249839, -1.84233471, -1.82478973, -1.39799569, -1.47677609,\n       -1.4646733 , -1.76086423, -1.77017717, -1.69778588, -1.81449219,\n       -1.80419077, -1.78055962, -1.91305047, -1.85659565, -1.82544955,\n       -1.8598528 , -1.77025551, -1.73111031, -1.85953307, -1.77666781,\n       -1.74137666, -1.4792022 , -1.54346749, -1.51677157, -1.73358156,\n       -1.80186547, -1.75514372, -2.0549222 , -2.05620361, -2.02397324,\n       -1.9131063 , -1.85681011, -1.82616825, -1.87774663, -1.80818149,\n       -1.77866884, -1.88104177, -1.81613126, -1.79429523]), 'mean_test_score': array([-1.72823429, -1.73787526, -1.72304229, -2.00877932, -2.01989734,\n       -2.03173631, -2.10337542, -2.11833421, -2.12615785, -1.919915  ,\n       -1.87336052, -1.85250008, -1.91618174, -1.87424264, -1.85872388,\n       -1.9129989 , -1.86547706, -1.84837259, -1.6591747 , -1.68751646,\n       -1.67453476, -1.9623087 , -1.9651168 , -1.96260568, -2.13177991,\n       -2.1250022 , -2.12603218, -1.91186362, -1.85840015, -1.83579909,\n       -1.91458927, -1.86650533, -1.84853482, -1.91665056, -1.87558517,\n       -1.85991197, -1.66114719, -1.67433339, -1.68107138, -1.96981517,\n       -1.95768229, -1.97002541, -2.05920823, -2.05614207, -2.06595419,\n       -1.91332716, -1.86256794, -1.84246512, -1.9091059 , -1.85753989,\n       -1.83845466, -1.90740631, -1.856161  , -1.83574019, -1.61652563,\n       -1.64677407, -1.65683215, -1.91798914, -1.92865561, -1.91210102,\n       -2.06985379, -2.06496653, -2.06270391, -1.91205223, -1.8604317 ,\n       -1.83904265, -1.91230355, -1.86021758, -1.84051935, -1.91352114,\n       -1.86508661, -1.84614883, -1.650796  , -1.64872227, -1.65446295,\n       -1.89006802, -1.88855758, -1.891316  , -2.04301971, -2.02419519,\n       -2.01612581, -1.91074121, -1.85922846, -1.83838489, -1.90653771,\n       -1.85278239, -1.83198386, -1.90917458, -1.85764766, -1.83718566,\n       -1.63236105, -1.67922527, -1.68011496, -1.92854431, -1.89574987,\n       -1.89134619, -2.10232384, -2.09740338, -2.09583282, -1.90995842,\n       -1.85563659, -1.83220252, -1.91147436, -1.8644073 , -1.84479323,\n       -1.91332712, -1.86756633, -1.8506533 , -1.60711676, -1.63693155,\n       -1.65666286, -1.89028843, -1.89606399, -1.88773254, -2.04542963,\n       -2.04392078, -2.04554563, -1.90530032, -1.84665856, -1.82201047,\n       -1.9074816 , -1.85298975, -1.83404745, -1.90892162, -1.85811303,\n       -1.83882637, -1.58170979, -1.61048058, -1.61846755, -1.9175479 ,\n       -1.9049047 , -1.92219223, -2.08640962, -2.08012806, -2.07494102,\n       -1.90425991, -1.84452189, -1.82008454, -1.90796373, -1.8576881 ,\n       -1.83777383, -1.90964712, -1.85997594, -1.84179973, -1.60570178,\n       -1.61915025, -1.60277619, -1.92865674, -1.93810689, -1.91842918,\n       -2.08646225, -2.09344692, -2.09726942, -1.90529809, -1.84697912,\n       -1.82234522, -1.90996467, -1.85800731, -1.83937545, -1.91158962,\n       -1.8629698 , -1.84586536, -1.62206079, -1.6167738 , -1.6190717 ,\n       -1.94025484, -1.93906456, -1.94883657, -2.06849366, -2.06591852,\n       -2.06022089, -1.90797569, -1.85177396, -1.82771429, -1.90756836,\n       -1.85500978, -1.83610796, -1.9089254 , -1.85804362, -1.83776112,\n       -1.61299169, -1.61541732, -1.61826878, -1.94611657, -1.96302278,\n       -1.96448408, -2.11541715, -2.10683685, -2.11023101, -1.91074645,\n       -1.85600463, -1.83277659, -1.91388049, -1.86504952, -1.84739437,\n       -1.91420136, -1.86912609, -1.85315591, -1.61330977, -1.62141713,\n       -1.59421418, -1.96712377, -1.95447698, -1.96543161, -2.07563474,\n       -2.07336165, -2.08347145, -1.91091716, -1.85592672, -1.83242527,\n       -1.91138906, -1.86060511, -1.84023117, -1.91339484, -1.86566736,\n       -1.84675915, -1.62081791, -1.63637409, -1.64149038, -1.96234891,\n       -1.9578333 , -1.96903217, -2.07021989, -2.07686929, -2.06632021,\n       -1.91141489, -1.85617563, -1.83284097, -1.91244336, -1.86453392,\n       -1.84417546, -1.91018369, -1.85969056, -1.84058741, -1.61447136,\n       -1.62595416, -1.63223419, -1.9733814 , -1.95725406, -1.97004512,\n       -2.05023736, -2.05834599, -2.047496  , -1.91232338, -1.85799262,\n       -1.83494852, -1.91226761, -1.86532414, -1.84651467, -1.91127329,\n       -1.8617005 , -1.8416343 , -1.62016275, -1.64427271, -1.62087919,\n       -1.92477911, -1.91117432, -1.9400579 , -2.06834191, -2.07297796,\n       -2.05832248, -1.90919237, -1.85253953, -1.82787286, -1.91166273,\n       -1.8615221 , -1.84241258, -1.91360483, -1.86799172, -1.84964942,\n       -1.60381364, -1.5833479 , -1.61575875, -1.87779596, -1.87276571,\n       -1.88120786, -2.03482279, -2.02552113, -2.04462622, -1.90954896,\n       -1.85156627, -1.82646439, -1.90913518, -1.85594907, -1.83259598,\n       -1.91021148, -1.85990048, -1.84048635, -1.6018155 , -1.64364789,\n       -1.64890583, -1.88908926, -1.92677057, -1.90807646, -2.03567784,\n       -2.0410593 , -2.04662821, -1.91082614, -1.85442874, -1.8303013 ,\n       -1.9114314 , -1.86036933, -1.84335639, -1.90880711, -1.85842203,\n       -1.83910868, -1.5977797 , -1.60528608, -1.61519846, -1.91613677,\n       -1.91578671, -1.93861782, -2.04960119, -2.04231953, -2.03810768,\n       -1.91108334, -1.85553919, -1.83145412, -1.90992501, -1.8586408 ,\n       -1.83692058, -1.91054219, -1.85899025, -1.84036281, -1.59712145,\n       -1.61696007, -1.6260901 , -1.92658915, -1.93181405, -1.91686864,\n       -2.02185879, -2.01457679, -2.03352183, -1.91013683, -1.85437627,\n       -1.83033795, -1.90647046, -1.85407853, -1.83223132, -1.90681242,\n       -1.8524782 , -1.83253677, -1.58775522, -1.59443476, -1.61002098,\n       -1.83588667, -1.82984725, -1.8130384 , -1.97548403, -1.9948308 ,\n       -1.97933599, -1.90530856, -1.8414697 , -1.8137846 , -1.90040208,\n       -1.8397959 , -1.81670651, -1.90077118, -1.84157231, -1.8182484 ,\n       -1.60080068, -1.61329951, -1.60293343, -1.90668989, -1.92060925,\n       -1.90068712, -2.05056656, -2.06009587, -2.04952287, -1.90738635,\n       -1.84553927, -1.81858161, -1.90624203, -1.8547461 , -1.83513938,\n       -1.90499095, -1.85073248, -1.83019477, -1.61278138, -1.64808263,\n       -1.66363839, -1.94941674, -1.95009603, -1.96117346, -2.07481694,\n       -2.06793588, -2.07804951, -1.90855913, -1.84715088, -1.82122984,\n       -1.90997384, -1.8599991 , -1.84063509, -1.90986282, -1.86003239,\n       -1.84093317, -1.6145263 , -1.63534396, -1.66355033, -1.94875957,\n       -1.94314414, -1.95118629, -2.07658992, -2.07149556, -2.06715777,\n       -1.90611142, -1.84753789, -1.82192979, -1.90887544, -1.85986975,\n       -1.84130925, -1.91184818, -1.86197065, -1.84206426, -1.63537709,\n       -1.65014394, -1.64131256, -1.94058289, -1.93345959, -1.92825774,\n       -2.12861878, -2.13680718, -2.11477961, -1.90760195, -1.85168395,\n       -1.82735864, -1.91001974, -1.85685916, -1.83823224, -1.91019951,\n       -1.86080079, -1.84284161, -1.62783835, -1.61533136, -1.64113138,\n       -1.97605825, -1.96625333, -1.96085   , -2.15465986, -2.16031126,\n       -2.14495443, -1.90799646, -1.85205055, -1.8271189 , -1.91564024,\n       -1.86946211, -1.85138121, -1.91657162, -1.87350477, -1.85760588,\n       -1.61532056, -1.63063029, -1.63634306, -1.94722522, -1.96818252,\n       -1.97932348, -2.12655376, -2.13066041, -2.12200653, -1.91071027,\n       -1.86005095, -1.83648383, -1.91553168, -1.86981992, -1.85219177,\n       -1.91616099, -1.87322469, -1.85760166, -1.63431519, -1.63830445,\n       -1.64538862, -2.01599135, -1.99190889, -1.99990523, -2.13620353,\n       -2.14344021, -2.14507674, -1.91288533, -1.8587696 , -1.83388224,\n       -1.9120032 , -1.8619642 , -1.84267536, -1.91262591, -1.86559976,\n       -1.84840764, -1.63753593, -1.63387172, -1.64874627, -2.00459736,\n       -2.00339469, -2.01110645, -2.14513406, -2.13583465, -2.13751803,\n       -1.9117263 , -1.8577804 , -1.83276871, -1.90860114, -1.86012568,\n       -1.84070569, -1.90846346, -1.85914226, -1.84103355, -1.63107761,\n       -1.64531529, -1.64952333, -2.00422142, -2.0063251 , -2.00454287,\n       -2.12945358, -2.15562089, -2.15296834, -1.91228346, -1.85769509,\n       -1.83258666, -1.90965787, -1.86039239, -1.84312047, -1.91131056,\n       -1.86324989, -1.84638671, -1.59774376, -1.60840059, -1.62728365,\n       -1.97665083, -1.98924848, -1.98471921, -2.10852122, -2.09331548,\n       -2.11719903, -1.9143954 , -1.85978009, -1.83495429, -1.90839903,\n       -1.85820038, -1.83989682, -1.90879798, -1.85878169, -1.83983912,\n       -1.63288316, -1.64082923, -1.64823099, -1.98826124, -1.99970198,\n       -2.00357345, -2.1362881 , -2.12679648, -2.12768375, -1.91284158,\n       -1.85745858, -1.83234481, -1.91304682, -1.86703432, -1.84960623,\n       -1.91063835, -1.86229527, -1.84513406, -1.60871197, -1.63665378,\n       -1.62517456, -1.98899779, -1.9863011 , -1.98717477, -2.14734969,\n       -2.15618767, -2.15326563, -1.91402053, -1.86254678, -1.83899241,\n       -1.91322712, -1.86897106, -1.85295368, -1.91209499, -1.86429781,\n       -1.84693293, -1.61407218, -1.63602511, -1.6358364 , -1.93316863,\n       -1.9423482 , -1.92940102, -2.08775614, -2.08383431, -2.07418917,\n       -1.91233897, -1.85889772, -1.83368189, -1.90822731, -1.8584921 ,\n       -1.8390298 , -1.90824707, -1.85760433, -1.83882699, -1.60279248,\n       -1.60445172, -1.61607683, -1.92770158, -1.93135752, -1.91620788,\n       -2.08700088, -2.09785015, -2.09327277, -1.91379827, -1.86085505,\n       -1.83578795, -1.91038132, -1.85995487, -1.84016362, -1.90982939,\n       -1.86009608, -1.8421208 , -1.62356534, -1.64902209, -1.65002268,\n       -1.90568674, -1.9312468 , -1.95134111, -2.06892945, -2.07474415,\n       -2.06825792, -1.91359737, -1.86030869, -1.83546761, -1.90985317,\n       -1.85859167, -1.83795674, -1.90941959, -1.85969797, -1.8411479 ,\n       -1.62108316, -1.65371664, -1.65531357, -1.93813693, -1.90893054,\n       -1.93158206, -2.08162658, -2.0580614 , -2.07507174, -1.91185278,\n       -1.85676785, -1.83196071, -1.90909764, -1.85766696, -1.83753594,\n       -1.90935997, -1.85988501, -1.84152777, -1.62578269, -1.64501744,\n       -1.65204335, -1.93856864, -1.92684318, -1.92587108, -2.06991414,\n       -2.07069992, -2.05895452, -1.91240192, -1.85801107, -1.83407366,\n       -1.905794  , -1.85209245, -1.83126353, -1.90790105, -1.85625786,\n       -1.8368574 , -1.64467325, -1.66068886, -1.66409197, -1.88959033,\n       -1.88913467, -1.89442713, -2.06117908, -2.05770458, -2.05662865,\n       -1.91054474, -1.85555839, -1.83146137, -1.90348337, -1.84769387,\n       -1.82465546, -1.90413583, -1.85079915, -1.82952621]), 'std_test_score': array([0.27227344, 0.30369778, 0.29145416, 0.27475885, 0.27288989,\n       0.23932342, 0.2241167 , 0.22078336, 0.21606146, 0.0381718 ,\n       0.05597685, 0.06403337, 0.03442958, 0.05047233, 0.05912008,\n       0.03569383, 0.05397565, 0.06344308, 0.23019519, 0.23085093,\n       0.23502101, 0.28177447, 0.27385129, 0.29694801, 0.25375239,\n       0.24451792, 0.25945856, 0.0319184 , 0.05630751, 0.067094  ,\n       0.03582297, 0.05964018, 0.07142061, 0.03592541, 0.05708449,\n       0.06808953, 0.19536196, 0.18379878, 0.17790248, 0.3052926 ,\n       0.30468832, 0.29867783, 0.30270863, 0.32138114, 0.31165085,\n       0.03173477, 0.05280623, 0.06218547, 0.03896343, 0.0639968 ,\n       0.07794438, 0.0372269 , 0.06265199, 0.07487002, 0.18253655,\n       0.17702573, 0.18990113, 0.27869432, 0.25036907, 0.28164183,\n       0.29080067, 0.29809846, 0.31122676, 0.02937577, 0.04790062,\n       0.05646258, 0.03584709, 0.06046283, 0.07209206, 0.03445887,\n       0.05821083, 0.06913427, 0.24027569, 0.24946734, 0.22674696,\n       0.30741023, 0.33109012, 0.32415391, 0.30526717, 0.28946214,\n       0.29353387, 0.03183066, 0.05404849, 0.06398518, 0.03664789,\n       0.06121754, 0.07317006, 0.0343267 , 0.05770556, 0.06770416,\n       0.22921994, 0.203149  , 0.21061351, 0.25918854, 0.27092669,\n       0.28017844, 0.27767807, 0.25843448, 0.27998025, 0.03281152,\n       0.05566988, 0.06554341, 0.03394403, 0.05421643, 0.06602485,\n       0.03542121, 0.05730581, 0.0688669 , 0.2279015 , 0.22822271,\n       0.20957408, 0.25478721, 0.25324123, 0.25002383, 0.24269606,\n       0.23550266, 0.23089428, 0.03290204, 0.05187508, 0.06122028,\n       0.03031334, 0.04706655, 0.05575141, 0.033052  , 0.04876043,\n       0.05772047, 0.184941  , 0.18746121, 0.18531655, 0.23522567,\n       0.24439893, 0.24340181, 0.27691594, 0.26413387, 0.24751008,\n       0.03398657, 0.05344586, 0.06277958, 0.03771341, 0.06011305,\n       0.07196875, 0.03700161, 0.05727256, 0.06866197, 0.23442448,\n       0.22413094, 0.23060075, 0.25032146, 0.25049247, 0.27234623,\n       0.25775947, 0.25414637, 0.24554295, 0.03183115, 0.05115951,\n       0.06046077, 0.03719502, 0.05878043, 0.06985452, 0.03718892,\n       0.05799492, 0.06887884, 0.17196418, 0.18361903, 0.19143059,\n       0.24330489, 0.27557031, 0.25654038, 0.28940368, 0.26731833,\n       0.28269624, 0.03260151, 0.05278868, 0.06220675, 0.03720151,\n       0.05779252, 0.07114535, 0.03803711, 0.05967558, 0.07203467,\n       0.17575214, 0.18668238, 0.17802824, 0.22495531, 0.21647498,\n       0.23259227, 0.25992595, 0.24976761, 0.25396057, 0.03082744,\n       0.0466575 , 0.05462686, 0.03112189, 0.05039106, 0.06140908,\n       0.03292267, 0.05065643, 0.06022761, 0.18101593, 0.17071388,\n       0.17707722, 0.22433871, 0.24529793, 0.21767975, 0.27497856,\n       0.25974873, 0.2483875 , 0.03025011, 0.04501913, 0.05230775,\n       0.03372804, 0.05396106, 0.06099078, 0.03589079, 0.05519469,\n       0.06377741, 0.17160257, 0.18228022, 0.1738356 , 0.24095479,\n       0.23686817, 0.23565698, 0.29253609, 0.26309566, 0.28418972,\n       0.03004611, 0.04555367, 0.05320118, 0.03333698, 0.05451097,\n       0.06365347, 0.03518864, 0.05504966, 0.06654538, 0.16657507,\n       0.18241211, 0.18360228, 0.2473527 , 0.24620619, 0.24244453,\n       0.27131361, 0.29174786, 0.29248355, 0.02966098, 0.04398174,\n       0.05201443, 0.03184379, 0.05144327, 0.06164526, 0.03379502,\n       0.05304392, 0.06281249, 0.18848019, 0.17489062, 0.18660362,\n       0.26471074, 0.24388823, 0.24749267, 0.28803334, 0.29097074,\n       0.29836729, 0.02951292, 0.04551252, 0.05302853, 0.03284021,\n       0.05586341, 0.06609213, 0.03141398, 0.05107314, 0.06162102,\n       0.22402842, 0.23294305, 0.23176084, 0.29132574, 0.28332885,\n       0.28983761, 0.33480864, 0.32911169, 0.33926871, 0.03375939,\n       0.05384657, 0.06298078, 0.03650953, 0.060605  , 0.0702387 ,\n       0.03623576, 0.05758149, 0.06760568, 0.21542791, 0.18765671,\n       0.22885017, 0.24575843, 0.2579026 , 0.27454885, 0.29612689,\n       0.30130999, 0.28763591, 0.03219869, 0.05132741, 0.06031048,\n       0.03978453, 0.06259856, 0.07166677, 0.03625175, 0.05818892,\n       0.0701244 , 0.1841734 , 0.20189751, 0.1971587 , 0.2587383 ,\n       0.26731565, 0.26809527, 0.29000742, 0.29253612, 0.28284578,\n       0.03004418, 0.04752544, 0.05649478, 0.03633752, 0.05853752,\n       0.0707209 , 0.03444521, 0.05412532, 0.06496568, 0.18286299,\n       0.18562303, 0.18138493, 0.25568011, 0.26833198, 0.28400941,\n       0.27439269, 0.27547034, 0.26665333, 0.02932755, 0.04585428,\n       0.05425424, 0.03499421, 0.0534673 , 0.06266847, 0.03195932,\n       0.05008799, 0.05854913, 0.18401922, 0.20097794, 0.19779227,\n       0.29469091, 0.29334955, 0.27952208, 0.351941  , 0.33809161,\n       0.34817879, 0.03023153, 0.04279465, 0.04980064, 0.04357275,\n       0.07327128, 0.08716865, 0.04085031, 0.06979259, 0.08441265,\n       0.25310898, 0.27525116, 0.25486784, 0.24988358, 0.25893842,\n       0.25865469, 0.26014788, 0.25012466, 0.25871738, 0.0315451 ,\n       0.04516321, 0.05253746, 0.03750181, 0.0587199 , 0.07074986,\n       0.03910267, 0.06082659, 0.07040671, 0.26117587, 0.27286134,\n       0.28310683, 0.2631055 , 0.27048695, 0.27176038, 0.28284556,\n       0.27228047, 0.2850461 , 0.03155306, 0.04469402, 0.05165793,\n       0.04016072, 0.06681625, 0.07991903, 0.0376951 , 0.06029621,\n       0.07108658, 0.24730868, 0.27120677, 0.25396823, 0.21783956,\n       0.24260626, 0.23772256, 0.22305215, 0.23181162, 0.23629796,\n       0.03040644, 0.04328084, 0.04937628, 0.03677441, 0.05688229,\n       0.06543027, 0.03728783, 0.05628687, 0.06441793, 0.23677579,\n       0.26924899, 0.23558735, 0.23519175, 0.22240845, 0.23287855,\n       0.26902335, 0.26791537, 0.26189328, 0.02824548, 0.04198098,\n       0.0484377 , 0.04141745, 0.05731152, 0.06515562, 0.04287598,\n       0.06474843, 0.07425468, 0.24739564, 0.24598468, 0.25013347,\n       0.27401787, 0.26243137, 0.28912943, 0.23546885, 0.25343215,\n       0.22646178, 0.03037493, 0.04669067, 0.05410755, 0.03762444,\n       0.05717131, 0.06674615, 0.03987263, 0.06080151, 0.07111685,\n       0.20868836, 0.22780426, 0.24832055, 0.26912924, 0.27191818,\n       0.26555327, 0.22065856, 0.23089108, 0.22164636, 0.03092409,\n       0.04904517, 0.05705237, 0.03561585, 0.05270963, 0.06235187,\n       0.03458736, 0.05152369, 0.06183202, 0.18671447, 0.19339206,\n       0.21165927, 0.21541124, 0.20623004, 0.22429875, 0.21404386,\n       0.21486906, 0.20870629, 0.02660766, 0.03851017, 0.04410674,\n       0.03539705, 0.05237516, 0.06102074, 0.03395031, 0.05074792,\n       0.05996563, 0.22063065, 0.22154127, 0.2195944 , 0.24525653,\n       0.23561569, 0.21942703, 0.26440849, 0.26098798, 0.25230399,\n       0.02629346, 0.0389891 , 0.04514076, 0.03691889, 0.05898616,\n       0.07009123, 0.03648081, 0.0577316 , 0.06849414, 0.22575562,\n       0.23474867, 0.2209735 , 0.24523735, 0.22474846, 0.25584291,\n       0.2584889 , 0.27560836, 0.27087988, 0.02591807, 0.03912976,\n       0.04505935, 0.03670274, 0.05668508, 0.06824381, 0.03590127,\n       0.05570141, 0.06606496, 0.18917662, 0.21072324, 0.20551699,\n       0.27026262, 0.27670406, 0.26081886, 0.25696434, 0.25726154,\n       0.25871689, 0.02591503, 0.0377422 , 0.04344487, 0.03613939,\n       0.0554124 , 0.06549807, 0.03564472, 0.05546219, 0.06516562,\n       0.16599272, 0.19183151, 0.17829563, 0.24005028, 0.27238331,\n       0.27100873, 0.25078955, 0.24602221, 0.23053286, 0.02415214,\n       0.03201578, 0.0369065 , 0.03658233, 0.0548144 , 0.06410364,\n       0.03453891, 0.05202347, 0.05926437, 0.18603022, 0.19685326,\n       0.17468962, 0.2638536 , 0.27383923, 0.26516796, 0.27501241,\n       0.27157063, 0.28526529, 0.02488347, 0.03404423, 0.0395675 ,\n       0.04197767, 0.06087052, 0.07036074, 0.04081244, 0.06273012,\n       0.07381989, 0.1837698 , 0.18711175, 0.19725422, 0.30149015,\n       0.28439795, 0.2672145 , 0.28811378, 0.29963101, 0.29555485,\n       0.02473524, 0.03416286, 0.03995911, 0.04132533, 0.06500915,\n       0.07545666, 0.04009533, 0.06253401, 0.07313913, 0.21307377,\n       0.22011074, 0.20210457, 0.24664014, 0.26866583, 0.26902569,\n       0.26953009, 0.28432217, 0.28180377, 0.02378896, 0.03315297,\n       0.03827235, 0.03997941, 0.06253153, 0.07416729, 0.03965033,\n       0.05998897, 0.06940909, 0.19165836, 0.18892376, 0.19341365,\n       0.24220759, 0.264322  , 0.26126391, 0.26300317, 0.27024979,\n       0.25101323, 0.02444201, 0.03439823, 0.0398392 , 0.0371961 ,\n       0.05753478, 0.06883262, 0.03775958, 0.05542225, 0.06280314,\n       0.1787663 , 0.19063608, 0.18997195, 0.24840917, 0.24914878,\n       0.25002387, 0.26245218, 0.27527276, 0.26118506, 0.02430601,\n       0.03413856, 0.04059541, 0.03519543, 0.05556453, 0.06453684,\n       0.03604055, 0.05296522, 0.0627319 , 0.17323637, 0.17123879,\n       0.18556536, 0.24417309, 0.23970412, 0.24079556, 0.25415173,\n       0.24110026, 0.25507922, 0.02271512, 0.03162207, 0.03846745,\n       0.03719081, 0.05715161, 0.06683826, 0.03862787, 0.0590726 ,\n       0.0680197 , 0.15494168, 0.16716218, 0.16583304, 0.26473402,\n       0.24850685, 0.26003799, 0.23819389, 0.23975943, 0.22683935,\n       0.02533032, 0.03642665, 0.044238  , 0.03883927, 0.06039668,\n       0.07121511, 0.03921062, 0.05798967, 0.06665429]), 'rank_test_score': array([113, 114, 112, 569, 574, 578, 650, 657, 661, 489, 343, 243, 481,\n       345, 286, 461, 330, 227, 100, 111, 107, 533, 538, 535, 668, 659,\n       660, 446, 281, 161, 475, 333, 229, 484, 346, 299, 102, 106, 110,\n       544, 529, 545, 603, 596, 610, 465, 321, 205, 403, 266, 174, 381,\n       260, 159,  36,  83,  99, 487, 500, 450, 618, 608, 607, 448, 311,\n       179, 453, 307, 189, 467, 328, 216,  93,  86,  96, 354, 350, 356,\n       585, 576, 573, 429, 292, 173, 377, 245, 140, 405, 270, 167,  59,\n       108, 109, 499, 359, 357, 649, 647, 645, 416, 256, 141, 440, 325,\n       212, 464, 335, 232,  18,  70,  98, 355, 360, 349, 588, 586, 589,\n       370, 219, 123, 382, 247, 153, 399, 279, 175,   1,  22,  40, 486,\n       367, 491, 638, 634, 628, 366, 211, 120, 386, 272, 170, 410, 301,\n       201,  17,  42,  11, 501, 509, 488, 639, 644, 646, 369, 222, 124,\n       417, 276, 181, 441, 322, 215,  48,  37,  41, 515, 513, 522, 616,\n       609, 605, 387, 238, 129, 383, 253, 163, 400, 278, 169,  24,  33,\n        39, 519, 536, 537, 655, 651, 653, 430, 259, 149, 471, 327, 224,\n       473, 338, 248,  26,  47,   4, 541, 527, 539, 630, 624, 636, 432,\n       257, 144, 437, 312, 186, 466, 332, 220,  44,  68,  76, 534, 530,\n       543, 620, 632, 611, 438, 261, 150, 457, 326, 210, 421, 293, 190,\n        28,  52,  58, 547, 528, 546, 594, 601, 591, 454, 275, 155, 451,\n       329, 218, 435, 316, 200,  43,  78,  45, 492, 434, 514, 615, 623,\n       600, 406, 244, 130, 442, 315, 204, 469, 336, 231,  14,   2,  34,\n       347, 341, 348, 580, 577, 587, 409, 236, 126, 404, 258, 147, 423,\n       298, 188,  10,  77,  88, 351, 495, 389, 581, 583, 590, 431, 251,\n       134, 439, 309, 209, 397, 282, 180,   8,  16,  30, 479, 478, 512,\n       593, 584, 582, 433, 254, 137, 415, 285, 166, 425, 290, 187,   6,\n        38,  53, 494, 506, 485, 575, 571, 579, 420, 250, 135, 376, 249,\n       142, 379, 242, 145,   3,   5,  21, 162, 132, 115, 548, 560, 552,\n       371, 197, 116, 361, 182, 117, 363, 199, 118,   9,  25,  13, 378,\n       490, 362, 595, 604, 592, 380, 214, 119, 375, 252, 157, 368, 233,\n       133,  23,  84, 104, 523, 524, 532, 627, 613, 633, 394, 223, 121,\n       418, 302, 191, 414, 303, 193,  29,  63, 103, 521, 518, 525, 631,\n       622, 612, 374, 225, 122, 398, 296, 196, 444, 318, 202,  64,  92,\n        75, 516, 508, 498, 665, 672, 654, 384, 237, 128, 419, 264, 172,\n       422, 313, 207,  55,  32,  74, 549, 540, 531, 681, 684, 675, 388,\n       239, 127, 477, 339, 235, 483, 344, 269,  31,  56,  67, 520, 542,\n       551, 662, 667, 658, 428, 304, 164, 476, 340, 241, 480, 342, 267,\n        62,  72,  82, 572, 559, 562, 670, 674, 676, 460, 287, 152, 447,\n       317, 206, 458, 331, 228,  71,  61,  87, 567, 563, 570, 677, 669,\n       673, 443, 274, 148, 395, 306, 192, 393, 291, 194,  57,  81,  90,\n       565, 568, 566, 666, 682, 679, 452, 273, 146, 411, 310, 208, 436,\n       323, 217,   7,  19,  54, 550, 558, 553, 652, 643, 656, 474, 295,\n       156, 392, 280, 184, 396, 288, 183,  60,  73,  85, 556, 561, 564,\n       671, 663, 664, 459, 265, 143, 462, 334, 230, 427, 319, 213,  20,\n        69,  50, 557, 554, 555, 678, 683, 680, 472, 320, 177, 463, 337,\n       246, 449, 324, 221,  27,  66,  65, 507, 517, 502, 641, 637, 625,\n       455, 289, 151, 390, 283, 178, 391, 268, 176,  12,  15,  35, 497,\n       504, 482, 640, 648, 642, 470, 314, 160, 424, 300, 185, 412, 305,\n       203,  49,  89,  91, 372, 503, 526, 617, 626, 614, 468, 308, 158,\n       413, 284, 171, 408, 294, 195,  46,  95,  97, 510, 401, 505, 635,\n       599, 629, 445, 263, 139, 402, 271, 168, 407, 297, 198,  51,  80,\n        94, 511, 496, 493, 619, 621, 602, 456, 277, 154, 373, 240, 136,\n       385, 262, 165,  79, 101, 105, 353, 352, 358, 606, 598, 597, 426,\n       255, 138, 364, 226, 125, 365, 234, 131]), 'split0_train_score': array([-4.52280176e-01, -1.69818444e-01, -1.03817279e-01, -1.20483085e-03,\n       -6.17134054e-05, -1.56896748e-05, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.87732035e+00, -1.79399138e+00, -1.75607687e+00,\n       -1.79781850e+00, -1.63954511e+00, -1.56461353e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.43485220e-01, -1.32886251e-01,\n       -7.35341038e-02, -3.57683040e-04, -1.44042883e-05, -1.89868298e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.86193983e+00,\n       -1.76026591e+00, -1.71413667e+00, -1.79455530e+00, -1.63361291e+00,\n       -1.55784654e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.46478285e-01, -1.20454683e-01, -7.29007413e-02, -2.26370182e-04,\n       -3.04507261e-06, -3.38810452e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.86247590e+00, -1.76147700e+00, -1.71547744e+00,\n       -1.79348268e+00, -1.63115009e+00, -1.55509910e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.30445257e-01, -1.03526408e-01,\n       -6.19212188e-02, -3.94726464e-04, -1.90283986e-06, -3.86465416e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.86169384e+00,\n       -1.75985370e+00, -1.71354082e+00, -1.79321716e+00, -1.62935195e+00,\n       -1.55350139e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.15854190e-01, -1.13882759e-01, -7.11912511e-02, -4.51827900e-04,\n       -1.12411078e-05, -2.83762368e-06, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.86235856e+00, -1.75995977e+00, -1.71361694e+00,\n       -1.79292878e+00, -1.62979012e+00, -1.55442510e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.22946926e-01, -1.18963883e-01,\n       -6.41433195e-02, -3.41441729e-04, -5.76163997e-07, -6.75694132e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85742572e+00,\n       -1.75363741e+00, -1.70592032e+00, -1.79311669e+00, -1.62800271e+00,\n       -1.55159359e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.03345000e-01, -1.05119762e-01, -6.48678439e-02, -2.86285933e-04,\n       -5.23243608e-06, -4.76942313e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85702654e+00, -1.75338256e+00, -1.70569969e+00,\n       -1.79409842e+00, -1.63230386e+00, -1.55720537e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.93191895e-01, -9.81114258e-02,\n       -5.40551948e-02, -3.35814993e-04, -5.55306206e-06, -1.58048052e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85654113e+00,\n       -1.75244933e+00, -1.70467655e+00, -1.79314948e+00, -1.63053602e+00,\n       -1.55539981e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.52624132e-01, -8.99101146e-02, -4.89697155e-02, -1.67850160e-04,\n       -9.22350740e-07, -1.38555393e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85643039e+00, -1.75047775e+00, -1.70132768e+00,\n       -1.79349958e+00, -1.63101363e+00, -1.55547865e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.57917060e-01, -8.49560270e-02,\n       -5.67476745e-02, -2.41706393e-04, -5.50401766e-06, -4.28353862e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85642823e+00,\n       -1.75097793e+00, -1.70172649e+00, -1.79397697e+00, -1.63141400e+00,\n       -1.55581669e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.64099589e-01, -8.33590396e-02, -4.93257842e-02, -3.56737940e-04,\n       -2.13837129e-06, -1.45233193e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85575348e+00, -1.74889559e+00, -1.69878560e+00,\n       -1.79351117e+00, -1.63391511e+00, -1.55833725e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.50415259e-01, -7.12631898e-02,\n       -4.20887675e-02, -3.29281676e-04, -3.55946435e-06, -4.93673871e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85523319e+00,\n       -1.74721527e+00, -1.69630670e+00, -1.79351117e+00, -1.63404375e+00,\n       -1.55859281e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.77782192e-01, -8.16587545e-02, -4.62919297e-02, -3.63711883e-04,\n       -2.51597331e-06, -3.16223816e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85523319e+00, -1.74721527e+00, -1.69630670e+00,\n       -1.79276615e+00, -1.63243603e+00, -1.55706343e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.48455953e-01, -6.26380954e-02,\n       -3.86016851e-02, -2.76684276e-04, -1.56633716e-06, -5.28137927e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85466124e+00,\n       -1.74610983e+00, -1.69605834e+00, -1.79122218e+00, -1.62755992e+00,\n       -1.55196045e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.83862932e-01, -7.71797587e-02, -3.88151313e-02, -2.53884535e-04,\n       -1.39039809e-06, -1.72017890e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85421491e+00, -1.74542137e+00, -1.69512765e+00,\n       -1.79232240e+00, -1.62996958e+00, -1.55492005e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.58103655e-01, -7.78898768e-02,\n       -4.05962389e-02, -2.19810676e-04, -8.73102862e-07, -8.56734769e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85419174e+00,\n       -1.74459518e+00, -1.69461487e+00, -1.79093706e+00, -1.62586211e+00,\n       -1.54863664e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.48600839e-01, -5.95040261e-02, -3.53048894e-02, -1.84633324e-04,\n       -2.92607750e-07, -3.26720165e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85298468e+00, -1.74460130e+00, -1.69502598e+00,\n       -1.79343419e+00, -1.62868328e+00, -1.55227177e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.65107824e-01, -7.09181085e-02,\n       -3.60019000e-02, -9.19189936e-05, -1.54413027e-07, -1.32923077e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85298468e+00,\n       -1.74460130e+00, -1.69502598e+00, -1.79234056e+00, -1.62696696e+00,\n       -1.55043960e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.51325844e-01, -7.44447136e-02, -3.68298276e-02, -2.85799961e-04,\n       -6.59702966e-07, -2.61004461e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85298468e+00, -1.74460130e+00, -1.69502598e+00,\n       -1.79300124e+00, -1.62806865e+00, -1.55170493e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -4.16361751e-01, -1.60094168e-01,\n       -9.84811898e-02, -3.33013494e-04, -7.90500851e-06, -2.41435323e-06,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.86315528e+00,\n       -1.76693295e+00, -1.72233232e+00, -1.78928314e+00, -1.62198429e+00,\n       -1.54434793e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.30674301e-01, -1.22577465e-01, -6.59294416e-02, -1.85182820e-04,\n       -2.24496807e-06, -1.32268647e-06, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85998545e+00, -1.76055838e+00, -1.71454115e+00,\n       -1.79008422e+00, -1.62366271e+00, -1.54601264e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.22559716e-01, -1.08014448e-01,\n       -7.14624570e-02, -3.97859036e-04, -3.97868443e-06, -6.38348640e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85916077e+00,\n       -1.75790612e+00, -1.71163309e+00, -1.79194415e+00, -1.62804719e+00,\n       -1.55334409e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.25316205e-01, -1.09445850e-01, -5.53778129e-02, -1.16821904e-04,\n       -1.49926010e-06, -6.16181557e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85895192e+00, -1.75785286e+00, -1.71238164e+00,\n       -1.79797131e+00, -1.63892521e+00, -1.56463898e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.33925906e-01, -1.11673828e-01,\n       -6.72869327e-02, -1.37089750e-04, -8.69145544e-07, -6.13505618e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85668731e+00,\n       -1.75408720e+00, -1.70831528e+00, -1.79156863e+00, -1.62756849e+00,\n       -1.55150596e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.46787364e-01, -1.34025492e-01, -6.31976350e-02, -1.59195222e-04,\n       -5.85686309e-06, -5.19059511e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85679917e+00, -1.75488426e+00, -1.70931724e+00,\n       -1.79354014e+00, -1.63126052e+00, -1.55624400e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -3.40912554e-01, -1.03630817e-01,\n       -5.44991460e-02, -2.64555498e-04, -3.77376506e-06, -3.08399431e-07,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85369580e+00,\n       -1.74833807e+00, -1.70034237e+00, -1.78950697e+00, -1.62300069e+00,\n       -1.54595893e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.01285412e-01, -1.06055082e-01, -6.35556049e-02, -1.05312350e-04,\n       -6.80380064e-07, -2.48235613e-07, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85107997e+00, -1.74412473e+00, -1.69568525e+00,\n       -1.78827066e+00, -1.62297060e+00, -1.54759914e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.96132630e-01, -9.94946507e-02,\n       -5.23817817e-02, -9.82631466e-05, -4.50000205e-09, -9.84184768e-09,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85107997e+00,\n       -1.74412473e+00, -1.69568525e+00, -1.78801642e+00, -1.62077120e+00,\n       -1.54376442e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.04127354e-01, -8.48513768e-02, -4.29519304e-02, -8.26112392e-05,\n       -7.83413461e-08, -1.43922032e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85107997e+00, -1.74476380e+00, -1.69643646e+00,\n       -1.78752154e+00, -1.61957734e+00, -1.54147254e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.89312296e-01, -9.14417597e-02,\n       -4.92687631e-02, -7.86731188e-05, -7.31055258e-08, -2.85438518e-09,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85107997e+00,\n       -1.74466786e+00, -1.69646743e+00, -1.78737715e+00, -1.61929487e+00,\n       -1.54139237e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -3.04420885e-01, -1.12699649e-01, -6.50329689e-02, -8.07357507e-05,\n       -1.51000638e-08, -6.02346455e-09, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85054714e+00, -1.74374888e+00, -1.69543803e+00,\n       -1.78746004e+00, -1.61946126e+00, -1.54160099e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.82429876e-01, -1.06194644e-01,\n       -6.09744366e-02, -8.07807323e-05, -7.87028157e-07, -3.54487188e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85047719e+00,\n       -1.74458934e+00, -1.69657281e+00, -1.78730530e+00, -1.61915064e+00,\n       -1.54121485e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.98997843e-01, -9.81054476e-02, -4.25386400e-02, -1.18458071e-04,\n       -1.28179670e-07, -3.18690843e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85050868e+00, -1.74457480e+00, -1.69626778e+00,\n       -1.78710925e+00, -1.61878416e+00, -1.54076918e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.79864505e-01, -9.39040347e-02,\n       -5.38394018e-02, -9.21690686e-05, -1.07952982e-07, -1.64049209e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85037017e+00,\n       -1.74428412e+00, -1.69602644e+00, -1.78791530e+00, -1.62037372e+00,\n       -1.54273875e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.62050483e-01, -7.73022571e-02, -4.62720221e-02, -1.00418101e-04,\n       -6.66034535e-08, -7.35581082e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85023311e+00, -1.74417335e+00, -1.69562078e+00,\n       -1.78780480e+00, -1.62015198e+00, -1.54246079e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.94466033e-01, -9.37556925e-02,\n       -4.91634868e-02, -8.26266542e-05, -8.32096691e-07, -1.73234081e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85091042e+00,\n       -1.74451783e+00, -1.69533413e+00, -1.78778686e+00, -1.62009999e+00,\n       -1.54238858e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00,\n       -2.51445708e-01, -7.99375845e-02, -4.15060488e-02, -1.26285931e-04,\n       -1.26512750e-08, -8.19796408e-08, -5.24140808e-05, -1.39219118e-09,\n       -7.17511350e-12, -1.85091042e+00, -1.74309239e+00, -1.69345625e+00,\n       -1.78753682e+00, -1.61961413e+00, -1.54178937e+00, -1.78544244e+00,\n       -1.61545430e+00, -1.53662922e+00, -2.84835146e-01, -9.06484996e-02,\n       -5.24915838e-02, -1.53901718e-04, -5.21044947e-07, -4.43580638e-08,\n       -5.24140808e-05, -1.39219118e-09, -7.17511350e-12, -1.85049480e+00,\n       -1.74197283e+00, -1.69197383e+00, -1.78753682e+00, -1.61961413e+00,\n       -1.54178937e+00, -1.78544244e+00, -1.61545430e+00, -1.53662922e+00]), 'split1_train_score': array([-4.47833572e-01, -1.66327843e-01, -1.14676454e-01, -2.25397760e-03,\n       -9.45235391e-05, -1.50032568e-05, -5.25227942e-05, -1.39507893e-09,\n       -7.18972404e-12, -1.88239394e+00, -1.79635204e+00, -1.75457269e+00,\n       -1.79916909e+00, -1.63858408e+00, -1.56468878e+00, -1.78901739e+00,\n       -1.61868889e+00, -1.53970598e+00, -3.49625409e-01, -1.19136195e-01,\n       -6.87796525e-02, -3.20573465e-04, -6.88385695e-06, -2.32557442e-06,\n       -5.25294527e-05, -1.39525579e-09, -7.19065206e-12, -1.86719928e+00,\n       -1.77135679e+00, -1.72552780e+00, -1.79618637e+00, -1.63319508e+00,\n       -1.55763414e+00, -1.78893898e+00, -1.61864176e+00, -1.53966864e+00,\n       -3.11407608e-01, -1.05619108e-01, -6.36849330e-02, -3.79833489e-04,\n       -8.22678697e-06, -3.58841352e-07, -5.25514960e-05, -1.39584128e-09,\n       -7.19083687e-12, -1.86796557e+00, -1.77122965e+00, -1.72511568e+00,\n       -1.80225654e+00, -1.64458348e+00, -1.57128742e+00, -1.78905409e+00,\n       -1.61871640e+00, -1.53973215e+00, -3.32827972e-01, -1.03800131e-01,\n       -6.75470313e-02, -2.42350579e-04, -1.22527613e-06, -7.75005411e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86738772e+00,\n       -1.77039979e+00, -1.72483924e+00, -1.79689196e+00, -1.63346974e+00,\n       -1.55786995e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.68946258e-01, -1.21448177e-01, -7.18800003e-02, -3.14909239e-04,\n       -2.07008249e-06, -1.24623765e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86886295e+00, -1.77251916e+00, -1.72701694e+00,\n       -1.79730888e+00, -1.63421919e+00, -1.55879232e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -3.37715817e-01, -1.13034179e-01,\n       -6.97560063e-02, -1.90712359e-04, -5.95768275e-07, -3.27763958e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86656263e+00,\n       -1.76870925e+00, -1.72243708e+00, -1.79263883e+00, -1.62580039e+00,\n       -1.54849646e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.20923310e-01, -9.27121449e-02, -6.70266804e-02, -9.30073593e-05,\n       -6.53821328e-07, -4.14805030e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86542580e+00, -1.76669373e+00, -1.71930985e+00,\n       -1.79301415e+00, -1.62629459e+00, -1.54862967e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.71970274e-01, -9.37682120e-02,\n       -6.17793975e-02, -2.13894216e-04, -5.33514601e-07, -7.90421758e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86448951e+00,\n       -1.76468360e+00, -1.71724050e+00, -1.79224191e+00, -1.62490777e+00,\n       -1.54743436e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.89145438e-01, -1.02023215e-01, -5.74101205e-02, -1.88048676e-04,\n       -3.12639853e-07, -6.49131495e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86307406e+00, -1.76237954e+00, -1.71488198e+00,\n       -1.79270267e+00, -1.62573893e+00, -1.54845049e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.98592442e-01, -1.02609677e-01,\n       -6.07795128e-02, -2.22103919e-04, -2.14598487e-06, -2.03861863e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86307487e+00,\n       -1.76196794e+00, -1.71440786e+00, -1.79270267e+00, -1.62573893e+00,\n       -1.54845049e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.04351188e-01, -9.43949063e-02, -4.53163554e-02, -2.02585671e-04,\n       -1.37242933e-06, -1.08852606e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86666385e+00, -1.76785494e+00, -1.71796818e+00,\n       -1.79579111e+00, -1.63142459e+00, -1.55469174e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.49153688e-01, -7.19601452e-02,\n       -5.04543420e-02, -1.61650639e-04, -6.48154943e-07, -1.27278425e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86660528e+00,\n       -1.76694351e+00, -1.71500021e+00, -1.79587628e+00, -1.63157061e+00,\n       -1.55470745e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.47036340e-01, -7.16422019e-02, -5.08350186e-02, -1.63782023e-04,\n       -6.20580275e-07, -5.62580725e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86660551e+00, -1.76696247e+00, -1.71500021e+00,\n       -1.79587333e+00, -1.63157049e+00, -1.55503836e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.22251656e-01, -6.58262768e-02,\n       -3.81776901e-02, -1.23128338e-04, -3.99969560e-07, -2.57897645e-08,\n       -5.25309187e-05, -1.39545370e-09, -7.19079325e-12, -1.86552184e+00,\n       -1.76488771e+00, -1.71281622e+00, -1.79506872e+00, -1.63042646e+00,\n       -1.55377760e+00, -1.78893736e+00, -1.61861264e+00, -1.53963710e+00,\n       -2.30981878e-01, -6.13602814e-02, -3.96498643e-02, -1.83185326e-04,\n       -7.35792099e-07, -1.45716311e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86611897e+00, -1.76529048e+00, -1.71240370e+00,\n       -1.79496483e+00, -1.63028233e+00, -1.55390931e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.27821669e-01, -6.75444292e-02,\n       -4.12955015e-02, -2.21132672e-04, -2.23191845e-07, -4.61777504e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86649409e+00,\n       -1.76701450e+00, -1.71335783e+00, -1.79496483e+00, -1.63028406e+00,\n       -1.55390931e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.54348360e-01, -7.29405885e-02, -4.57198393e-02, -1.96968809e-04,\n       -6.92070269e-07, -2.16519609e-08, -5.25212262e-05, -1.39503735e-09,\n       -7.18947456e-12, -1.86179150e+00, -1.76138576e+00, -1.71554288e+00,\n       -1.79598856e+00, -1.63264157e+00, -1.55670208e+00, -1.78900590e+00,\n       -1.61873903e+00, -1.53976251e+00, -2.14969984e-01, -7.42267183e-02,\n       -4.28574655e-02, -1.48588931e-04, -1.16782544e-07, -8.26522373e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86072790e+00,\n       -1.76122595e+00, -1.71499574e+00, -1.79489640e+00, -1.63035540e+00,\n       -1.55385863e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.60023377e-01, -5.62529473e-02, -2.90975653e-02, -1.51904048e-04,\n       -2.97815983e-08, -2.46092001e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86072790e+00, -1.76123932e+00, -1.71509487e+00,\n       -1.79489355e+00, -1.63035713e+00, -1.55385695e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -4.18041550e-01, -1.66693918e-01,\n       -1.07069268e-01, -2.22230248e-04, -4.50065752e-06, -1.07135898e-06,\n       -5.25255224e-05, -1.39525613e-09, -7.19354207e-12, -1.86781216e+00,\n       -1.77221804e+00, -1.72898006e+00, -1.79583525e+00, -1.63138834e+00,\n       -1.55458573e+00, -1.78892790e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.92240163e-01, -1.38275200e-01, -7.71231553e-02, -3.34548957e-04,\n       -3.97012489e-06, -5.40018575e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.86737207e+00, -1.77136849e+00, -1.72775841e+00,\n       -1.79484530e+00, -1.63039609e+00, -1.55436764e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -3.79141558e-01, -1.21469562e-01,\n       -7.08247317e-02, -1.42825341e-04, -1.25902284e-06, -5.07823545e-08,\n       -5.25339726e-05, -1.39537585e-09, -7.19126249e-12, -1.86939911e+00,\n       -1.77495771e+00, -1.73143941e+00, -1.79568467e+00, -1.63035317e+00,\n       -1.55368743e+00, -1.78892715e+00, -1.61861187e+00, -1.53963375e+00,\n       -3.86690549e-01, -1.39921628e-01, -6.69561010e-02, -2.49666482e-04,\n       -4.08631241e-06, -1.27494507e-06, -5.25415981e-05, -1.39657337e-09,\n       -7.20486037e-12, -1.86881729e+00, -1.77398012e+00, -1.73021468e+00,\n       -1.79797017e+00, -1.63497036e+00, -1.55868663e+00, -1.78909773e+00,\n       -1.61895688e+00, -1.54008975e+00, -3.85829255e-01, -1.19449424e-01,\n       -6.00101799e-02, -3.00353562e-04, -1.87825524e-06, -1.19289351e-07,\n       -5.26315588e-05, -1.39796788e-09, -7.20462258e-12, -1.86843276e+00,\n       -1.77224964e+00, -1.72788421e+00, -1.80060024e+00, -1.63900629e+00,\n       -1.56324257e+00, -1.78938113e+00, -1.61951960e+00, -1.54077294e+00,\n       -3.79874670e-01, -1.34393249e-01, -7.29817178e-02, -1.57563073e-04,\n       -2.28204892e-06, -8.41861979e-08, -5.26315588e-05, -1.39796788e-09,\n       -7.20462258e-12, -1.86843276e+00, -1.77224964e+00, -1.72770923e+00,\n       -1.80057824e+00, -1.63854650e+00, -1.56118818e+00, -1.78937113e+00,\n       -1.61951408e+00, -1.54076713e+00, -3.92523841e-01, -1.30224164e-01,\n       -7.34586335e-02, -7.25441087e-04, -5.51673534e-07, -5.09072475e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.86186577e+00,\n       -1.75999840e+00, -1.71324182e+00, -1.79745882e+00, -1.63404091e+00,\n       -1.55756904e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.60724353e-01, -1.29869326e-01, -7.10447229e-02, -3.13876753e-04,\n       -2.87703657e-06, -2.43381021e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85804496e+00, -1.75376485e+00, -1.70588798e+00,\n       -1.79239655e+00, -1.62541111e+00, -1.54798582e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -3.30911042e-01, -9.99749060e-02,\n       -5.41618291e-02, -1.09620148e-04, -5.33179738e-07, -3.70335991e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85792905e+00,\n       -1.75378218e+00, -1.70667811e+00, -1.79193281e+00, -1.62392762e+00,\n       -1.54627198e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.26429711e-01, -9.49519151e-02, -5.58612198e-02, -1.25595419e-04,\n       -2.74447490e-07, -3.13878222e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85416040e+00, -1.74618504e+00, -1.69763711e+00,\n       -1.79142312e+00, -1.62368533e+00, -1.54601199e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.99675543e-01, -1.16753319e-01,\n       -5.76559199e-02, -1.77062071e-04, -1.18210217e-06, -1.05034678e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85389424e+00,\n       -1.74574813e+00, -1.69709142e+00, -1.79487109e+00, -1.63127975e+00,\n       -1.55578058e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.27839073e-01, -1.06582739e-01, -5.18784772e-02, -1.44114201e-04,\n       -2.10243306e-07, -3.63455847e-08, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.85164124e+00, -1.74054031e+00, -1.69056730e+00,\n       -1.79427790e+00, -1.62994300e+00, -1.55403112e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -3.41799438e-01, -1.03596849e-01,\n       -5.35199254e-02, -9.15846014e-05, -4.71721397e-07, -2.72715095e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85048501e+00,\n       -1.73849622e+00, -1.68818545e+00, -1.79458574e+00, -1.63052582e+00,\n       -1.55475704e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.93566550e-01, -7.46475003e-02, -4.09219743e-02, -1.59972992e-04,\n       -4.24679158e-07, -1.24358467e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.84992044e+00, -1.73747925e+00, -1.68700479e+00,\n       -1.79350851e+00, -1.63351610e+00, -1.55766777e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.63801102e-01, -8.59593114e-02,\n       -4.98509634e-02, -1.66186443e-04, -1.89357668e-07, -6.63909927e-08,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85000032e+00,\n       -1.73725653e+00, -1.68611078e+00, -1.79352609e+00, -1.62926840e+00,\n       -1.55350759e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -3.15973842e-01, -1.04085809e-01, -5.73137490e-02, -1.61639409e-04,\n       -1.32409555e-06, -1.71719261e-07, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.84997257e+00, -1.73717172e+00, -1.68598232e+00,\n       -1.79280009e+00, -1.62610362e+00, -1.54879639e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.94388656e-01, -1.07932856e-01,\n       -5.96404356e-02, -1.64460926e-04, -1.00604218e-06, -1.58287980e-07,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.84995803e+00,\n       -1.73709289e+00, -1.68588483e+00, -1.79476019e+00, -1.63054998e+00,\n       -1.55377749e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00,\n       -2.56257206e-01, -7.98848991e-02, -4.77822434e-02, -6.70762180e-05,\n       -1.09343410e-08, -1.44717371e-09, -5.25163793e-05, -1.39490855e-09,\n       -7.18884445e-12, -1.84995803e+00, -1.73709289e+00, -1.68585625e+00,\n       -1.79449891e+00, -1.62827335e+00, -1.55120719e+00, -1.78892715e+00,\n       -1.61860724e+00, -1.53962831e+00, -2.83238784e-01, -7.72254526e-02,\n       -4.64446718e-02, -8.74105508e-05, -4.12837634e-08, -1.86751969e-09,\n       -5.25163793e-05, -1.39490855e-09, -7.18884445e-12, -1.85065382e+00,\n       -1.73814663e+00, -1.68703286e+00, -1.79769763e+00, -1.63475566e+00,\n       -1.55961186e+00, -1.78892715e+00, -1.61860724e+00, -1.53962831e+00]), 'split2_train_score': array([-4.51153466e-01, -1.67276835e-01, -8.93177081e-02, -1.63676231e-03,\n       -5.10504516e-05, -1.07428664e-05, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.88158516e+00, -1.79701772e+00, -1.75946938e+00,\n       -1.81104929e+00, -1.65515176e+00, -1.58201691e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.26334530e-01, -9.96808093e-02,\n       -5.66833691e-02, -1.32796546e-04, -3.69776164e-07, -1.36402233e-07,\n       -5.30950267e-05, -1.40879114e-09, -7.26052123e-12, -1.86802232e+00,\n       -1.76328028e+00, -1.71449941e+00, -1.80176073e+00, -1.63677358e+00,\n       -1.56027801e+00, -1.79171529e+00, -1.62161570e+00, -1.54275803e+00,\n       -3.41291019e-01, -1.21512741e-01, -6.95443065e-02, -1.44194816e-04,\n       -1.09090002e-06, -2.09433737e-07, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86909202e+00, -1.76622506e+00, -1.71782290e+00,\n       -1.80237873e+00, -1.64141902e+00, -1.56633177e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.29505567e-01, -1.29125349e-01,\n       -8.16743115e-02, -2.05815496e-04, -1.04604201e-06, -3.25568106e-07,\n       -5.25947521e-05, -1.39698982e-09, -7.20014987e-12, -1.86900654e+00,\n       -1.76617132e+00, -1.71818653e+00, -1.80108105e+00, -1.63893401e+00,\n       -1.56427697e+00, -1.79141733e+00, -1.62099409e+00, -1.54189870e+00,\n       -3.08782759e-01, -8.98501365e-02, -4.98022103e-02, -1.70878372e-04,\n       -1.84871478e-06, -7.82254567e-07, -5.26959743e-05, -1.41775883e-09,\n       -7.22330850e-12, -1.86892332e+00, -1.76378362e+00, -1.71518132e+00,\n       -1.80392343e+00, -1.64448910e+00, -1.57029951e+00, -1.79151091e+00,\n       -1.62116406e+00, -1.54221515e+00, -2.70411325e-01, -8.18627422e-02,\n       -5.42507435e-02, -3.87971545e-04, -5.54503676e-06, -3.81638156e-07,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86821707e+00,\n       -1.76438328e+00, -1.71467473e+00, -1.79923536e+00, -1.63730733e+00,\n       -1.56273406e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.11446140e-01, -9.12784745e-02, -5.65336242e-02, -1.02359107e-04,\n       -8.92346117e-08, -2.12683994e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86216881e+00, -1.75575155e+00, -1.70614470e+00,\n       -1.80190699e+00, -1.63939395e+00, -1.56357742e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.70663443e-01, -7.99657498e-02,\n       -4.52810933e-02, -1.76324361e-04, -4.65352006e-07, -5.35062935e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86223188e+00,\n       -1.75368576e+00, -1.70352730e+00, -1.79833248e+00, -1.63452916e+00,\n       -1.55878710e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.66583085e-01, -8.75525919e-02, -4.87755280e-02, -1.33709725e-04,\n       -5.18230747e-07, -1.09745555e-07, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86173862e+00, -1.75413123e+00, -1.70376840e+00,\n       -1.79709728e+00, -1.63203753e+00, -1.55563520e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.56776932e-01, -8.88021844e-02,\n       -4.13349678e-02, -1.02186829e-04, -3.02980179e-08, -1.51949299e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86003522e+00,\n       -1.75407364e+00, -1.70578779e+00, -1.79321231e+00, -1.62442330e+00,\n       -1.54623151e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.91152997e-01, -8.60245704e-02, -5.43788840e-02, -1.38742162e-04,\n       -3.36955350e-07, -1.14056936e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86003521e+00, -1.75398067e+00, -1.70559799e+00,\n       -1.79318295e+00, -1.62439503e+00, -1.54614173e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.91876819e-01, -8.50951872e-02,\n       -3.95051431e-02, -6.48982529e-05, -1.68134896e-07, -4.47236154e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85980469e+00,\n       -1.75426435e+00, -1.70550418e+00, -1.79318939e+00, -1.62438573e+00,\n       -1.54610239e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.06667923e-01, -8.27390964e-02, -4.72008935e-02, -8.10632816e-05,\n       -4.33467696e-08, -5.08386565e-09, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85976841e+00, -1.75411798e+00, -1.70528252e+00,\n       -1.79409518e+00, -1.62639165e+00, -1.54876553e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.83756275e-01, -6.98170663e-02,\n       -4.64835663e-02, -9.72848883e-05, -7.80729125e-08, -1.29828862e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85989516e+00,\n       -1.75438884e+00, -1.70570795e+00, -1.79568527e+00, -1.62962494e+00,\n       -1.55346288e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.07571892e-01, -8.60347269e-02, -4.44985356e-02, -1.42547212e-04,\n       -5.19198246e-07, -4.88593499e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85982792e+00, -1.75428659e+00, -1.70563285e+00,\n       -1.79552497e+00, -1.62933070e+00, -1.55367109e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -2.87647332e-01, -8.10353389e-02,\n       -4.03123144e-02, -1.95996086e-04, -5.28361831e-08, -1.34530636e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85917015e+00,\n       -1.75230063e+00, -1.70334200e+00, -1.79552422e+00, -1.62934565e+00,\n       -1.55427313e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.86015462e-01, -8.38691623e-02, -5.06885253e-02, -9.06709314e-05,\n       -3.62162342e-08, -1.72762893e-08, -5.25996193e-05, -1.39711913e-09,\n       -7.20033090e-12, -1.85883781e+00, -1.75175203e+00, -1.70267257e+00,\n       -1.79605443e+00, -1.62960402e+00, -1.55381749e+00, -1.79173064e+00,\n       -1.62118021e+00, -1.54207666e+00, -2.56467816e-01, -6.94398003e-02,\n       -3.46213671e-02, -8.32086501e-05, -3.60043439e-07, -2.08492315e-09,\n       -5.26030353e-05, -1.39720987e-09, -7.20033090e-12, -1.85883781e+00,\n       -1.75175118e+00, -1.70270258e+00, -1.79605578e+00, -1.62915300e+00,\n       -1.55337369e+00, -1.79172714e+00, -1.62114212e+00, -1.54204184e+00,\n       -2.65210360e-01, -6.73058876e-02, -3.59638546e-02, -7.17176711e-05,\n       -2.13717064e-08, -1.36417970e-08, -5.26042118e-05, -1.39751074e-09,\n       -7.20033090e-12, -1.85856663e+00, -1.75141040e+00, -1.70234417e+00,\n       -1.79629535e+00, -1.62960804e+00, -1.55400117e+00, -1.79158776e+00,\n       -1.62114173e+00, -1.54203409e+00, -3.81044634e-01, -1.48022279e-01,\n       -8.75045663e-02, -5.26851387e-04, -8.53788300e-06, -1.34978415e-06,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86810384e+00,\n       -1.77029426e+00, -1.72197600e+00, -1.79999787e+00, -1.63773071e+00,\n       -1.56266952e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.37133685e-01, -9.65421169e-02, -7.04980934e-02, -1.33572452e-04,\n       -7.36496791e-08, -5.59935873e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86405389e+00, -1.75831070e+00, -1.70905812e+00,\n       -1.79454191e+00, -1.62715005e+00, -1.54957799e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.13079488e-01, -1.14638738e-01,\n       -7.11669240e-02, -7.85064843e-05, -9.82311225e-08, -1.23151926e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86251360e+00,\n       -1.75652131e+00, -1.70660831e+00, -1.79369734e+00, -1.62560305e+00,\n       -1.54771130e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.46091663e-01, -1.13563388e-01, -6.40739512e-02, -9.38270139e-05,\n       -2.82921580e-07, -1.52918579e-08, -5.26543130e-05, -1.39857185e-09,\n       -7.20784979e-12, -1.86135107e+00, -1.75549523e+00, -1.70557908e+00,\n       -1.79818131e+00, -1.63399741e+00, -1.55793793e+00, -1.79153669e+00,\n       -1.62125681e+00, -1.54230780e+00, -3.32235628e-01, -1.11293093e-01,\n       -6.75428039e-02, -8.93357117e-05, -1.93365974e-07, -3.62438718e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86133818e+00,\n       -1.75578441e+00, -1.70588801e+00, -1.79792370e+00, -1.63332152e+00,\n       -1.55696043e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.49602282e-01, -1.10137321e-01, -6.44130554e-02, -9.52273300e-05,\n       -1.78748039e-08, -6.42559324e-09, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86115999e+00, -1.75605011e+00, -1.70579954e+00,\n       -1.79792370e+00, -1.63332152e+00, -1.55694168e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.04897482e-01, -9.72775292e-02,\n       -5.70152656e-02, -9.14725429e-05, -6.30093792e-07, -1.28726839e-08,\n       -5.26111345e-05, -1.39742495e-09, -7.20192886e-12, -1.86227387e+00,\n       -1.75817024e+00, -1.70732323e+00, -1.80111320e+00, -1.63975914e+00,\n       -1.56432766e+00, -1.79129150e+00, -1.62074544e+00, -1.54166219e+00,\n       -3.04278772e-01, -1.17916159e-01, -6.58317212e-02, -1.06705782e-04,\n       -9.46623435e-08, -8.03059361e-09, -5.33740900e-05, -1.41703532e-09,\n       -7.30301556e-12, -1.86175765e+00, -1.75355934e+00, -1.70003571e+00,\n       -1.80207320e+00, -1.64426294e+00, -1.57130712e+00, -1.79190208e+00,\n       -1.62198148e+00, -1.54319323e+00, -3.52003725e-01, -1.22664867e-01,\n       -6.78832655e-02, -1.12070183e-04, -3.16267632e-07, -2.51065784e-08,\n       -5.33494364e-05, -1.42243793e-09, -7.33088565e-12, -1.86034385e+00,\n       -1.75424388e+00, -1.70055163e+00, -1.80444510e+00, -1.64694600e+00,\n       -1.57325634e+00, -1.79190208e+00, -1.62198148e+00, -1.54319323e+00,\n       -3.21142771e-01, -1.12574485e-01, -6.26394635e-02, -7.00052633e-05,\n       -2.46704016e-08, -2.68097551e-10, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86031372e+00, -1.75377999e+00, -1.69993810e+00,\n       -1.80285853e+00, -1.64273464e+00, -1.56805298e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.24535401e-01, -9.34496197e-02,\n       -6.94129934e-02, -1.26666738e-04, -1.26779825e-07, -2.88010240e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.86015969e+00,\n       -1.75349813e+00, -1.69815424e+00, -1.80151214e+00, -1.64041303e+00,\n       -1.56473961e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -3.18615198e-01, -1.04687366e-01, -6.19988855e-02, -2.74392943e-04,\n       -1.26220928e-06, -1.47104816e-07, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.86009749e+00, -1.75444968e+00, -1.69916886e+00,\n       -1.79999634e+00, -1.63391861e+00, -1.55687502e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.35234554e-01, -9.23013520e-02,\n       -5.40916075e-02, -2.24239280e-04, -3.48809095e-07, -4.35514669e-08,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85984152e+00,\n       -1.75398762e+00, -1.69878318e+00, -1.79987390e+00, -1.63376408e+00,\n       -1.55692703e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00,\n       -2.92283119e-01, -9.63742197e-02, -6.06075757e-02, -7.05285794e-05,\n       -1.81982950e-07, -2.34481541e-08, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85740953e+00, -1.74821080e+00, -1.69254315e+00,\n       -1.80247805e+00, -1.64202160e+00, -1.56821751e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.11946262e-01, -8.90796027e-02,\n       -4.35374179e-02, -6.66250110e-05, -1.02680241e-08, -3.45537475e-10,\n       -5.26576136e-05, -1.39865951e-09, -7.20829425e-12, -1.86017196e+00,\n       -1.75401431e+00, -1.69757582e+00, -1.80053934e+00, -1.63906618e+00,\n       -1.56444270e+00, -1.79150578e+00, -1.62117883e+00, -1.54220013e+00,\n       -3.13603549e-01, -8.79089028e-02, -5.07266667e-02, -8.56814690e-05,\n       -6.50880092e-08, -1.19538544e-09, -5.26601728e-05, -1.39872749e-09,\n       -7.20864817e-12, -1.86017196e+00, -1.75460457e+00, -1.69705634e+00,\n       -1.80019469e+00, -1.63847605e+00, -1.56324313e+00, -1.79150653e+00,\n       -1.62117951e+00, -1.54220077e+00, -3.08313933e-01, -8.33580356e-02,\n       -4.94975451e-02, -9.00758559e-05, -4.99201579e-08, -5.27744445e-09,\n       -5.26601728e-05, -1.39911361e-09, -7.21064007e-12, -1.85972936e+00,\n       -1.75242252e+00, -1.70179992e+00, -1.80018291e+00, -1.63844528e+00,\n       -1.56317384e+00, -1.79150653e+00, -1.62117951e+00, -1.54220077e+00,\n       -3.09230251e-01, -8.13301391e-02, -4.79615760e-02, -7.18835400e-05,\n       -1.42736188e-08, -1.95776366e-10, -5.25853224e-05, -1.39673935e-09,\n       -7.19839899e-12, -1.85810483e+00, -1.75085018e+00, -1.70163965e+00,\n       -1.79699411e+00, -1.63119694e+00, -1.55373901e+00, -1.79127564e+00,\n       -1.62073213e+00, -1.54164953e+00, -3.23766100e-01, -9.07956464e-02,\n       -4.89595082e-02, -1.79736640e-04, -1.44770084e-07, -3.26252611e-11,\n       -5.25853224e-05, -1.39673935e-09, -7.19839899e-12, -1.85709295e+00,\n       -1.74906462e+00, -1.69968884e+00, -1.79873009e+00, -1.63553920e+00,\n       -1.55979723e+00, -1.79127564e+00, -1.62073213e+00, -1.54164953e+00]), 'split3_train_score': array([-4.04254169e-01, -1.45531820e-01, -8.90816961e-02, -5.63515508e-04,\n       -2.40718465e-05, -2.59167549e-06, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.86786815e+00, -1.77317314e+00, -1.72992020e+00,\n       -1.79225353e+00, -1.62625056e+00, -1.54965122e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -3.13575974e-01, -9.70527876e-02,\n       -5.66199174e-02, -1.22187009e-04, -1.62499512e-06, -9.43804784e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.85016954e+00,\n       -1.74282403e+00, -1.69447877e+00, -1.79214531e+00, -1.62594055e+00,\n       -1.54884891e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -3.08244119e-01, -9.18491494e-02, -4.95475967e-02, -1.37674203e-04,\n       -5.05065878e-07, -5.49385317e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84859985e+00, -1.73940885e+00, -1.68990007e+00,\n       -1.79281998e+00, -1.62654384e+00, -1.54935569e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.92228348e-01, -8.84438994e-02,\n       -4.89101231e-02, -9.51358661e-05, -7.64841529e-08, -1.94409379e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84785117e+00,\n       -1.73771678e+00, -1.68807967e+00, -1.79304626e+00, -1.62572496e+00,\n       -1.54825803e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.83443690e-01, -8.16577882e-02, -5.09311620e-02, -8.89257973e-05,\n       -1.29079278e-08, -1.15646639e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84638890e+00, -1.73479257e+00, -1.68381679e+00,\n       -1.79249999e+00, -1.62591279e+00, -1.54877942e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -3.07732919e-01, -1.02494293e-01,\n       -4.15097512e-02, -1.11067841e-04, -2.38715723e-07, -3.15823838e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84619925e+00,\n       -1.73326686e+00, -1.68171331e+00, -1.79308349e+00, -1.62795308e+00,\n       -1.55140415e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -3.13865097e-01, -9.98242295e-02, -4.58959136e-02, -1.37523743e-04,\n       -2.07944474e-07, -3.08121489e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84916916e+00, -1.73790791e+00, -1.68588720e+00,\n       -1.79408796e+00, -1.62967220e+00, -1.55287082e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.65934935e-01, -8.30138799e-02,\n       -4.27364827e-02, -6.48460661e-05, -1.22068479e-08, -4.06809065e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84920188e+00,\n       -1.73645737e+00, -1.68396137e+00, -1.79306517e+00, -1.62825532e+00,\n       -1.55155205e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.88682176e-01, -8.64944389e-02, -4.83272857e-02, -1.01837581e-04,\n       -1.50635089e-07, -4.62590104e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84859819e+00, -1.73564684e+00, -1.68431415e+00,\n       -1.79237863e+00, -1.62684818e+00, -1.54973755e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -3.04159013e-01, -9.78292209e-02,\n       -5.26739547e-02, -8.06312253e-05, -2.60233611e-07, -5.45947389e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84859819e+00,\n       -1.73564684e+00, -1.68431415e+00, -1.79237950e+00, -1.62687191e+00,\n       -1.54976976e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.82627571e-01, -8.07183306e-02, -4.13117801e-02, -7.22882866e-05,\n       -7.00596653e-09, -3.03194883e-09, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84859516e+00, -1.73511012e+00, -1.68330286e+00,\n       -1.79237863e+00, -1.62686120e+00, -1.54973441e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.66719072e-01, -8.54319961e-02,\n       -4.34215615e-02, -7.43115124e-05, -1.18333296e-07, -1.23836206e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84859516e+00,\n       -1.73450230e+00, -1.68193586e+00, -1.79237863e+00, -1.62681160e+00,\n       -1.54960973e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.84928313e-01, -8.35606832e-02, -4.41758283e-02, -8.22412157e-05,\n       -6.12313899e-08, -4.90007590e-09, -5.29992222e-05, -1.39678207e-09,\n       -7.19923513e-12, -1.84859516e+00, -1.73450682e+00, -1.68204765e+00,\n       -1.79282428e+00, -1.62759996e+00, -1.55092784e+00, -1.78792917e+00,\n       -1.61800560e+00, -1.53922481e+00, -3.13914870e-01, -8.35489159e-02,\n       -4.48892700e-02, -7.74691688e-05, -3.29397501e-08, -4.13210004e-09,\n       -5.28590847e-05, -1.39698518e-09, -7.19866661e-12, -1.84859516e+00,\n       -1.73450682e+00, -1.68204765e+00, -1.79282465e+00, -1.62760030e+00,\n       -1.55092763e+00, -1.78792917e+00, -1.61800802e+00, -1.53922220e+00,\n       -3.00888829e-01, -9.19983539e-02, -4.80358350e-02, -8.41005506e-05,\n       -8.36528142e-08, -4.49268260e-09, -5.25878705e-05, -1.40833164e-09,\n       -7.31180394e-12, -1.84853642e+00, -1.73422481e+00, -1.68154987e+00,\n       -1.79282453e+00, -1.62760097e+00, -1.55092795e+00, -1.78793119e+00,\n       -1.61800318e+00, -1.53921959e+00, -2.71359627e-01, -8.70159160e-02,\n       -5.25954001e-02, -8.66355207e-05, -6.21536960e-09, -1.24475769e-08,\n       -5.30743993e-05, -1.41301216e-09, -7.28475469e-12, -1.85116983e+00,\n       -1.73718166e+00, -1.68526016e+00, -1.79366249e+00, -1.62953710e+00,\n       -1.55362658e+00, -1.78812765e+00, -1.61831402e+00, -1.53957322e+00,\n       -2.62683858e-01, -7.53560929e-02, -3.77547069e-02, -1.05267819e-04,\n       -4.81828061e-07, -8.13242952e-10, -5.32721819e-05, -1.41690395e-09,\n       -7.30330282e-12, -1.85199954e+00, -1.73858996e+00, -1.68693598e+00,\n       -1.79433568e+00, -1.63079637e+00, -1.55514356e+00, -1.78772804e+00,\n       -1.61752231e+00, -1.53859634e+00, -2.87142221e-01, -7.95958279e-02,\n       -4.22618770e-02, -1.10192054e-04, -2.97224421e-07, -5.28460925e-09,\n       -5.31373109e-05, -1.41216029e-09, -7.27793530e-12, -1.85199954e+00,\n       -1.73858996e+00, -1.68693598e+00, -1.79433568e+00, -1.63079637e+00,\n       -1.55514356e+00, -1.78772804e+00, -1.61752231e+00, -1.53859634e+00,\n       -2.72679232e-01, -7.91365412e-02, -4.14500799e-02, -8.39254665e-05,\n       -6.26585645e-08, -4.20456597e-09, -5.34000902e-05, -1.41109984e-09,\n       -7.33532015e-12, -1.85159659e+00, -1.73601896e+00, -1.68336190e+00,\n       -1.79441798e+00, -1.63096106e+00, -1.55534967e+00, -1.78777068e+00,\n       -1.61768243e+00, -1.53881572e+00, -3.65872234e-01, -1.20277623e-01,\n       -7.37485758e-02, -1.84347356e-04, -5.99659525e-07, -1.71682725e-07,\n       -5.27802967e-05, -1.40191847e-09, -7.22509180e-12, -1.85849287e+00,\n       -1.74912457e+00, -1.69992452e+00, -1.79663647e+00, -1.63317121e+00,\n       -1.55733026e+00, -1.78996578e+00, -1.62090222e+00, -1.54230509e+00,\n       -2.94377223e-01, -1.02104946e-01, -5.65913566e-02, -7.00171707e-05,\n       -3.48335412e-07, -2.93184366e-07, -5.25773339e-05, -1.39817675e-09,\n       -7.20581865e-12, -1.85915794e+00, -1.74841723e+00, -1.69830698e+00,\n       -1.79115639e+00, -1.62493070e+00, -1.54740283e+00, -1.78847870e+00,\n       -1.61820260e+00, -1.53924403e+00, -3.11812042e-01, -1.00339147e-01,\n       -5.99062654e-02, -7.58662751e-05, -3.01045076e-08, -1.00634866e-08,\n       -5.29855634e-05, -1.40737060e-09, -7.36489029e-12, -1.86077638e+00,\n       -1.74946977e+00, -1.69952137e+00, -1.79387359e+00, -1.62881143e+00,\n       -1.55237632e+00, -1.78809316e+00, -1.61864598e+00, -1.54013554e+00,\n       -3.00638477e-01, -9.86634015e-02, -6.19700458e-02, -7.56471393e-05,\n       -5.72209518e-08, -4.26662078e-08, -5.27955842e-05, -1.40561378e-09,\n       -7.24742829e-12, -1.85600734e+00, -1.74374067e+00, -1.69256971e+00,\n       -1.79629036e+00, -1.63366634e+00, -1.55832090e+00, -1.78809316e+00,\n       -1.61864598e+00, -1.54013554e+00, -3.15872066e-01, -1.01313586e-01,\n       -6.72168249e-02, -1.80492053e-04, -5.90659719e-08, -4.77450662e-09,\n       -5.31301272e-05, -1.41681930e-09, -7.25729721e-12, -1.85534843e+00,\n       -1.74077569e+00, -1.68884844e+00, -1.79697534e+00, -1.63412582e+00,\n       -1.55808922e+00, -1.78809316e+00, -1.61864598e+00, -1.54013554e+00,\n       -3.07796435e-01, -1.16675128e-01, -5.95620757e-02, -7.94961049e-05,\n       -3.19850386e-07, -8.20642907e-08, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.85256868e+00, -1.73780561e+00, -1.68574094e+00,\n       -1.79506840e+00, -1.63147351e+00, -1.55570317e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -3.03712641e-01, -8.96406259e-02,\n       -5.42748837e-02, -6.97041427e-05, -1.20016861e-08, -4.15358226e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84976253e+00,\n       -1.73331727e+00, -1.68045222e+00, -1.79100927e+00, -1.62300035e+00,\n       -1.54493978e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.55277363e-01, -8.24827770e-02, -5.58635891e-02, -7.48744443e-05,\n       -7.92553948e-07, -3.80102238e-09, -5.26361802e-05, -1.39809053e-09,\n       -7.20538294e-12, -1.85085214e+00, -1.73655783e+00, -1.68412896e+00,\n       -1.79394833e+00, -1.62896287e+00, -1.55226467e+00, -1.78789545e+00,\n       -1.61793456e+00, -1.53912956e+00, -2.75332998e-01, -8.65217040e-02,\n       -5.30803955e-02, -6.87389079e-05, -2.96603657e-08, -2.28826491e-08,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84831827e+00,\n       -1.73183552e+00, -1.67861107e+00, -1.79134020e+00, -1.62477158e+00,\n       -1.54766218e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.91080043e-01, -9.50093605e-02, -5.56446019e-02, -6.54410494e-05,\n       -3.57377235e-08, -6.56707670e-09, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84840644e+00, -1.73181301e+00, -1.67856460e+00,\n       -1.79103815e+00, -1.62422152e+00, -1.54700104e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.76443748e-01, -9.54106961e-02,\n       -5.34676170e-02, -7.10997753e-05, -6.75467378e-09, -6.47028891e-10,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84709936e+00,\n       -1.73071909e+00, -1.67775109e+00, -1.79057594e+00, -1.62328660e+00,\n       -1.54582438e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.70605724e-01, -7.85416432e-02, -4.58109656e-02, -8.50063897e-05,\n       -1.76761228e-07, -1.06987113e-11, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84699918e+00, -1.73067441e+00, -1.67769382e+00,\n       -1.79116257e+00, -1.62447902e+00, -1.54732361e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.63209898e-01, -7.75655584e-02,\n       -5.09236658e-02, -6.82889954e-05, -2.81708121e-08, -3.82709793e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84699769e+00,\n       -1.73026220e+00, -1.67724993e+00, -1.79116257e+00, -1.62447902e+00,\n       -1.54732361e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.73034481e-01, -7.40556458e-02, -4.06520001e-02, -6.29301712e-05,\n       -1.73020751e-09, -3.23938883e-09, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84617638e+00, -1.72647445e+00, -1.67163730e+00,\n       -1.79116257e+00, -1.62447902e+00, -1.54732361e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.61492382e-01, -6.84033093e-02,\n       -4.77187934e-02, -6.13409505e-05, -6.91700268e-09, -2.06125950e-10,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84566774e+00,\n       -1.72657506e+00, -1.67199867e+00, -1.79335252e+00, -1.62875147e+00,\n       -1.55229321e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.80284095e-01, -9.29245071e-02, -3.96382814e-02, -5.97588302e-05,\n       -1.13945001e-08, -2.60263759e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84566154e+00, -1.72655748e+00, -1.67197626e+00,\n       -1.79335252e+00, -1.62875147e+00, -1.55229321e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.51104819e-01, -7.53400456e-02,\n       -4.21030334e-02, -6.41620030e-05, -6.88803574e-09, -1.86040862e-09,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84684440e+00,\n       -1.72698359e+00, -1.67255996e+00, -1.79018760e+00, -1.62231236e+00,\n       -1.54417145e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00,\n       -2.70261194e-01, -7.89327485e-02, -5.72444609e-02, -7.17367314e-05,\n       -4.51918283e-09, -1.21339144e-10, -5.24791637e-05, -1.39391991e-09,\n       -7.18386628e-12, -1.84672605e+00, -1.72953212e+00, -1.67587009e+00,\n       -1.79138002e+00, -1.62395891e+00, -1.54581073e+00, -1.78765943e+00,\n       -1.61746022e+00, -1.53853726e+00, -2.90664797e-01, -9.01356361e-02,\n       -5.29267667e-02, -5.97186643e-05, -6.51992307e-09, -3.65370547e-10,\n       -5.24791637e-05, -1.39391991e-09, -7.18386628e-12, -1.84594364e+00,\n       -1.72932871e+00, -1.67567567e+00, -1.78811762e+00, -1.61826641e+00,\n       -1.53947989e+00, -1.78765943e+00, -1.61746022e+00, -1.53853726e+00]), 'split4_train_score': array([-4.04684556e-01, -1.48941458e-01, -1.01317628e-01, -8.54275033e-05,\n       -3.39427066e-07, -2.56701063e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.87927601e+00, -1.78906142e+00, -1.74682358e+00,\n       -1.79505915e+00, -1.62700505e+00, -1.54913420e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.14506253e-01, -9.62931430e-02,\n       -5.78827297e-02, -1.41772534e-04, -4.33614061e-07, -9.19280549e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86565753e+00,\n       -1.76519990e+00, -1.71978006e+00, -1.79710718e+00, -1.63105716e+00,\n       -1.55432836e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.91578515e-01, -9.72255698e-02, -5.55579335e-02, -2.42875974e-04,\n       -2.64519388e-06, -1.24477760e-07, -5.26279447e-05, -1.39800111e-09,\n       -7.20508108e-12, -1.86445448e+00, -1.76141084e+00, -1.71350793e+00,\n       -1.79764880e+00, -1.63098939e+00, -1.55355774e+00, -1.79243858e+00,\n       -1.62189410e+00, -1.54281245e+00, -3.19407186e-01, -9.30525249e-02,\n       -5.63795919e-02, -3.22104917e-04, -1.78474369e-06, -1.01862232e-06,\n       -5.26328188e-05, -1.39800111e-09, -7.20441568e-12, -1.86177800e+00,\n       -1.75628023e+00, -1.70746356e+00, -1.79860114e+00, -1.63400567e+00,\n       -1.55767284e+00, -1.79239334e+00, -1.62179572e+00, -1.54268844e+00,\n       -3.35508947e-01, -1.27050359e-01, -7.50093368e-02, -2.22669014e-04,\n       -5.11659593e-07, -1.29614013e-06, -5.27079806e-05, -1.39992267e-09,\n       -7.21853587e-12, -1.86124867e+00, -1.75641008e+00, -1.70839374e+00,\n       -1.79714516e+00, -1.63142336e+00, -1.55502471e+00, -1.79237429e+00,\n       -1.62176888e+00, -1.54265028e+00, -2.90694320e-01, -1.02126634e-01,\n       -6.63812916e-02, -2.42956803e-04, -7.51183502e-07, -8.03842153e-08,\n       -5.26217723e-05, -1.39770770e-09, -7.20356779e-12, -1.86294381e+00,\n       -1.75966698e+00, -1.71414044e+00, -1.79794288e+00, -1.63103935e+00,\n       -1.55343971e+00, -1.79234600e+00, -1.62172182e+00, -1.54258886e+00,\n       -2.99256061e-01, -1.04290602e-01, -6.32784150e-02, -2.86385809e-04,\n       -3.02079739e-07, -5.35065535e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86020312e+00, -1.75221589e+00, -1.70279249e+00,\n       -1.79533677e+00, -1.62731180e+00, -1.54940109e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.21332052e-01, -9.48905262e-02,\n       -5.74978969e-02, -1.49288830e-04, -6.45089913e-07, -7.09285126e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85594211e+00,\n       -1.74764594e+00, -1.69857589e+00, -1.79633793e+00, -1.62891777e+00,\n       -1.55130313e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.91344284e-01, -1.05668671e-01, -6.04985782e-02, -1.45429543e-04,\n       -8.44477865e-07, -9.73121708e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85570459e+00, -1.74646842e+00, -1.69698200e+00,\n       -1.79635256e+00, -1.62895523e+00, -1.55134691e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.94665779e-01, -9.94159101e-02,\n       -5.73633814e-02, -1.48726624e-04, -1.88686340e-06, -4.35378732e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85553126e+00,\n       -1.74624035e+00, -1.69669461e+00, -1.79646217e+00, -1.62917505e+00,\n       -1.55162238e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.92431213e-01, -9.90571165e-02, -5.83805657e-02, -1.38354097e-04,\n       -3.03304296e-07, -1.52577167e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85468411e+00, -1.74449032e+00, -1.69459265e+00,\n       -1.79661978e+00, -1.62938867e+00, -1.55182589e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.59920154e-01, -7.81876358e-02,\n       -5.15501434e-02, -9.15228331e-05, -1.82926463e-07, -1.72971096e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85465377e+00,\n       -1.74437751e+00, -1.69425928e+00, -1.79663290e+00, -1.62936759e+00,\n       -1.55181412e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.81554056e-01, -8.92016591e-02, -4.94229922e-02, -1.26384330e-04,\n       -6.19967929e-07, -2.82742734e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85465377e+00, -1.74436678e+00, -1.69422310e+00,\n       -1.79646461e+00, -1.62894269e+00, -1.55122712e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.21066098e-01, -8.50921333e-02,\n       -4.95521773e-02, -1.39573504e-04, -2.47515229e-07, -4.46504424e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85465377e+00,\n       -1.74436678e+00, -1.69422310e+00, -1.79650462e+00, -1.62900105e+00,\n       -1.55123941e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.68932698e-01, -7.98125782e-02, -4.61320044e-02, -1.22171217e-04,\n       -3.78913352e-07, -1.84881110e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85404587e+00, -1.74292124e+00, -1.69248298e+00,\n       -1.79613820e+00, -1.62947494e+00, -1.55141894e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.73508890e-01, -8.66998646e-02,\n       -4.99494592e-02, -1.39217743e-04, -5.03399373e-07, -4.76162811e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85283382e+00,\n       -1.74040426e+00, -1.68936437e+00, -1.79553614e+00, -1.62851633e+00,\n       -1.55059442e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.62796093e-01, -8.90618568e-02, -5.39821987e-02, -1.84628445e-04,\n       -3.05831706e-07, -5.33307098e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85633363e+00, -1.74640886e+00, -1.69590130e+00,\n       -1.79527108e+00, -1.62794845e+00, -1.54984912e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.77099576e-01, -9.44931221e-02,\n       -5.30135606e-02, -1.67489779e-04, -4.28357242e-07, -1.08699040e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85633363e+00,\n       -1.74642214e+00, -1.69589954e+00, -1.79526448e+00, -1.62794803e+00,\n       -1.54989239e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.80077521e-01, -9.02432636e-02, -4.97421407e-02, -2.03009766e-04,\n       -8.30397533e-08, -4.76405544e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85633363e+00, -1.74642214e+00, -1.69589954e+00,\n       -1.79648668e+00, -1.62987390e+00, -1.55257800e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.94304810e-01, -1.36215480e-01,\n       -8.77554884e-02, -9.55072526e-04, -1.67337363e-05, -6.43249344e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86577991e+00,\n       -1.76697287e+00, -1.72251177e+00, -1.79565107e+00, -1.62826308e+00,\n       -1.55072066e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.51119459e-01, -1.06539847e-01, -6.41339538e-02, -2.37124780e-04,\n       -8.88303875e-06, -1.32020787e-06, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86376368e+00, -1.76214381e+00, -1.71618816e+00,\n       -1.79821461e+00, -1.63229482e+00, -1.55505471e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.45412952e-01, -1.21252979e-01,\n       -7.52175285e-02, -3.74305048e-04, -8.60313307e-06, -1.38414481e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86614446e+00,\n       -1.76723513e+00, -1.72220986e+00, -1.79892626e+00, -1.63390257e+00,\n       -1.55650154e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.58305760e-01, -1.37842750e-01, -8.60473278e-02, -4.60897491e-04,\n       -1.81087941e-05, -8.94825056e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86597526e+00, -1.76703223e+00, -1.72187016e+00,\n       -1.79741967e+00, -1.63143226e+00, -1.55504221e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.84445036e-01, -1.51233919e-01,\n       -9.05738205e-02, -3.86796803e-04, -5.22783150e-06, -1.41151168e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86207019e+00,\n       -1.75807357e+00, -1.71135187e+00, -1.79776712e+00, -1.63230779e+00,\n       -1.55752304e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.87076070e-01, -1.13387012e-01, -7.22348565e-02, -3.29234812e-04,\n       -1.02384542e-06, -5.06491487e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86141298e+00, -1.75719501e+00, -1.71035906e+00,\n       -1.79799996e+00, -1.63248953e+00, -1.55528025e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.97880684e-01, -1.04043525e-01,\n       -6.26608415e-02, -1.45498023e-04, -1.13641676e-06, -1.80545604e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85717303e+00,\n       -1.74847121e+00, -1.69955738e+00, -1.79586107e+00, -1.63153330e+00,\n       -1.55342861e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.18789959e-01, -1.08936445e-01, -6.26285266e-02, -1.95738012e-04,\n       -3.47406344e-06, -3.35471365e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85495118e+00, -1.74429534e+00, -1.69388057e+00,\n       -1.79541361e+00, -1.62764104e+00, -1.54989883e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.99373086e-01, -1.02493431e-01,\n       -5.14774273e-02, -2.95786990e-04, -8.51160554e-07, -5.31759295e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85495118e+00,\n       -1.74429534e+00, -1.69509799e+00, -1.79541135e+00, -1.62764168e+00,\n       -1.54986572e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.42418429e-01, -9.98665401e-02, -5.61781200e-02, -1.59843002e-04,\n       -5.07928505e-07, -9.69520479e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85476696e+00, -1.74367611e+00, -1.69382842e+00,\n       -1.79514169e+00, -1.62722696e+00, -1.54925135e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.97561768e-01, -8.79808205e-02,\n       -4.73261900e-02, -1.31920903e-04, -8.21391774e-08, -2.58446235e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85473036e+00,\n       -1.74355688e+00, -1.69233539e+00, -1.79481015e+00, -1.62653293e+00,\n       -1.54838683e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.15704892e-01, -8.62685708e-02, -4.55894433e-02, -7.49596938e-05,\n       -1.24063152e-07, -4.76407017e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85526114e+00, -1.74415843e+00, -1.69393283e+00,\n       -1.79489656e+00, -1.62665744e+00, -1.54867667e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.03285982e-01, -8.38660666e-02,\n       -5.12642693e-02, -8.99454493e-05, -3.11167837e-08, -8.40354656e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85866721e+00,\n       -1.75071644e+00, -1.70109374e+00, -1.79467472e+00, -1.62607730e+00,\n       -1.54790757e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.97356555e-01, -9.20295282e-02, -5.38343853e-02, -1.17677842e-04,\n       -4.00898847e-07, -2.40689200e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85937990e+00, -1.75288518e+00, -1.70283025e+00,\n       -1.79451191e+00, -1.62583569e+00, -1.54760695e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.88649043e-01, -9.06972869e-02,\n       -5.14454378e-02, -8.80743262e-05, -6.16053778e-08, -6.19233209e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85891145e+00,\n       -1.75122906e+00, -1.70165037e+00, -1.79451191e+00, -1.62581647e+00,\n       -1.54760234e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.66844099e-01, -7.45963338e-02, -4.22054559e-02, -9.89250062e-05,\n       -6.90404603e-08, -2.62035219e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85888388e+00, -1.75115765e+00, -1.70185733e+00,\n       -1.79443146e+00, -1.62566340e+00, -1.54740449e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.67097716e-01, -6.66293648e-02,\n       -4.07224397e-02, -1.08239886e-04, -2.56321714e-08, -2.57624274e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85888388e+00,\n       -1.75098528e+00, -1.70201450e+00, -1.79433652e+00, -1.62556912e+00,\n       -1.54735086e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.73343551e-01, -7.02966569e-02, -3.72755374e-02, -1.15205035e-04,\n       -3.30642746e-07, -4.85782176e-09, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85888388e+00, -1.75098528e+00, -1.70201450e+00,\n       -1.79433533e+00, -1.62557347e+00, -1.54737175e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.53379467e-01, -7.61449954e-02,\n       -3.92085445e-02, -1.04021545e-04, -5.84798641e-08, -3.77326825e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85888388e+00,\n       -1.75098523e+00, -1.70200858e+00, -1.79423940e+00, -1.62551119e+00,\n       -1.54703769e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00]), 'split5_train_score': array([-4.05953617e-01, -1.41076146e-01, -8.67749652e-02, -5.38187744e-04,\n       -3.21544187e-06, -1.07558139e-06, -5.27144707e-05, -1.40016990e-09,\n       -7.21485481e-12, -1.87931783e+00, -1.79033460e+00, -1.74960447e+00,\n       -1.80291651e+00, -1.64267484e+00, -1.56822376e+00, -1.79266154e+00,\n       -1.62234975e+00, -1.54338880e+00, -3.38939690e-01, -1.12894007e-01,\n       -5.96218065e-02, -4.35907698e-04, -2.82168432e-06, -4.79160177e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86925399e+00,\n       -1.77267155e+00, -1.72737589e+00, -1.80484925e+00, -1.64602160e+00,\n       -1.57162923e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.72746503e-01, -7.95884539e-02, -4.77168201e-02, -1.76036734e-04,\n       -1.31062245e-06, -2.82892169e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86810502e+00, -1.77079323e+00, -1.72526646e+00,\n       -1.80562954e+00, -1.64726247e+00, -1.57367133e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.19593610e-01, -9.38782951e-02,\n       -5.36782085e-02, -2.33646643e-04, -1.95781533e-06, -4.62452599e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86621573e+00,\n       -1.76784316e+00, -1.72184089e+00, -1.80248987e+00, -1.64095863e+00,\n       -1.56621985e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.20191469e-01, -9.01282367e-02, -5.34036941e-02, -1.02474898e-04,\n       -4.65309166e-07, -3.44245003e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86616636e+00, -1.76722408e+00, -1.72123393e+00,\n       -1.79940072e+00, -1.63559824e+00, -1.55972778e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.74217856e-01, -8.70980021e-02,\n       -4.87407849e-02, -1.46593602e-04, -1.39170997e-06, -1.12721764e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86393609e+00,\n       -1.76154200e+00, -1.71441903e+00, -1.80255991e+00, -1.64202607e+00,\n       -1.56687879e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.05862060e-01, -1.07805077e-01, -5.95418712e-02, -1.78921054e-04,\n       -7.65787812e-07, -2.29103749e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86175624e+00, -1.75691428e+00, -1.70800352e+00,\n       -1.80319487e+00, -1.64065947e+00, -1.56537476e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.80550897e-01, -8.73634014e-02,\n       -5.10216852e-02, -1.75681730e-04, -3.29791910e-07, -7.57016133e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86144419e+00,\n       -1.75581934e+00, -1.70782798e+00, -1.80233182e+00, -1.63889141e+00,\n       -1.56297875e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.90551527e-01, -8.54179936e-02, -5.20144325e-02, -1.17306928e-04,\n       -1.78465231e-07, -7.39685330e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86145856e+00, -1.75626644e+00, -1.70829782e+00,\n       -1.80029635e+00, -1.63676722e+00, -1.56114539e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.95192572e-01, -9.06227558e-02,\n       -4.93709578e-02, -1.13834381e-04, -9.72684351e-07, -5.10429358e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85914217e+00,\n       -1.75287172e+00, -1.70437098e+00, -1.80134267e+00, -1.63909826e+00,\n       -1.56290565e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.75428037e-01, -9.24977303e-02, -5.01405789e-02, -1.06491730e-04,\n       -9.94546858e-07, -1.89421623e-07, -5.29849272e-05, -1.40735361e-09,\n       -7.25327473e-12, -1.85910010e+00, -1.75197258e+00, -1.70220995e+00,\n       -1.80416417e+00, -1.64054896e+00, -1.56408971e+00, -1.79245601e+00,\n       -1.62193671e+00, -1.54287070e+00, -2.40950470e-01, -9.15288752e-02,\n       -4.63670455e-02, -1.37258486e-04, -4.63586221e-07, -4.20953772e-08,\n       -5.29849272e-05, -1.40735361e-09, -7.25327473e-12, -1.85912828e+00,\n       -1.75167050e+00, -1.70168085e+00, -1.80416811e+00, -1.64064815e+00,\n       -1.56346988e+00, -1.79245601e+00, -1.62193671e+00, -1.54287070e+00,\n       -2.42999158e-01, -8.68726875e-02, -4.14950627e-02, -1.29455591e-04,\n       -1.54263477e-07, -2.40189400e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85922599e+00, -1.75171095e+00, -1.70126025e+00,\n       -1.80572162e+00, -1.64034119e+00, -1.56284789e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.53643417e-01, -8.48874454e-02,\n       -4.73115771e-02, -8.17868154e-05, -1.51825978e-07, -1.41076995e-09,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85922599e+00,\n       -1.75171095e+00, -1.70126025e+00, -1.80556773e+00, -1.64023978e+00,\n       -1.56271007e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.45611916e-01, -7.61805752e-02, -4.24911369e-02, -1.09660287e-04,\n       -1.41426648e-06, -4.67971863e-08, -5.29457977e-05, -1.40631428e-09,\n       -7.24790920e-12, -1.86247553e+00, -1.75425423e+00, -1.70473670e+00,\n       -1.80639326e+00, -1.64156221e+00, -1.56472376e+00, -1.79250695e+00,\n       -1.62201533e+00, -1.54295495e+00, -2.80705461e-01, -8.22354753e-02,\n       -5.45892175e-02, -1.14670394e-04, -2.72845328e-07, -2.75666880e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86208607e+00,\n       -1.75376679e+00, -1.70421373e+00, -1.80310559e+00, -1.63764289e+00,\n       -1.56062889e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.79679742e-01, -8.69758983e-02, -4.34614197e-02, -8.86438526e-05,\n       -8.57704334e-08, -1.47701755e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86208607e+00, -1.75400872e+00, -1.70491095e+00,\n       -1.80200671e+00, -1.63655298e+00, -1.55957886e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.75644665e-01, -7.07803445e-02,\n       -4.91666947e-02, -8.17171514e-05, -1.64248902e-08, -8.25361551e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86321220e+00,\n       -1.75665923e+00, -1.70604221e+00, -1.80201577e+00, -1.63664006e+00,\n       -1.55974487e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.69091469e-01, -8.63677448e-02, -4.80401438e-02, -1.03843843e-04,\n       -4.53065922e-08, -1.23036670e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86279137e+00, -1.75365532e+00, -1.70286196e+00,\n       -1.80313297e+00, -1.64234825e+00, -1.56614709e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -4.04109505e-01, -1.63013424e-01,\n       -1.06203952e-01, -2.02285882e-03, -5.26765724e-05, -1.17989969e-05,\n       -5.36057953e-05, -1.46883742e-09, -7.88531885e-12, -1.86431550e+00,\n       -1.76554464e+00, -1.72100917e+00, -1.80885849e+00, -1.65327379e+00,\n       -1.58146531e+00, -1.79302314e+00, -1.62335994e+00, -1.54551199e+00,\n       -3.65205997e-01, -1.22723539e-01, -6.89851730e-02, -9.77275982e-04,\n       -8.96452248e-06, -2.43545688e-06, -5.27360871e-05, -1.39983574e-09,\n       -7.20388048e-12, -1.86254753e+00, -1.76166200e+00, -1.71542254e+00,\n       -1.80023080e+00, -1.63725653e+00, -1.56124546e+00, -1.79233342e+00,\n       -1.62168920e+00, -1.54255990e+00, -3.54208070e-01, -1.17284158e-01,\n       -6.74255280e-02, -2.67542520e-04, -5.67862991e-06, -3.16113385e-07,\n       -5.26638738e-05, -1.39921621e-09, -7.21133377e-12, -1.86330809e+00,\n       -1.76177137e+00, -1.71475190e+00, -1.79995313e+00, -1.63678299e+00,\n       -1.56093875e+00, -1.79242322e+00, -1.62185323e+00, -1.54275664e+00,\n       -3.32515478e-01, -9.81490795e-02, -6.21403017e-02, -2.93731227e-04,\n       -3.92977108e-06, -3.65624344e-07, -5.26233887e-05, -1.39763160e-09,\n       -7.20546658e-12, -1.86278640e+00, -1.76073379e+00, -1.71319719e+00,\n       -1.79922744e+00, -1.63428621e+00, -1.55788176e+00, -1.79239386e+00,\n       -1.62180770e+00, -1.54271311e+00, -3.50556467e-01, -1.30831479e-01,\n       -6.73936733e-02, -1.94146169e-04, -2.39427886e-06, -3.76427781e-07,\n       -5.26289213e-05, -1.39782675e-09, -7.22388250e-12, -1.86051749e+00,\n       -1.75717910e+00, -1.70953480e+00, -1.79954115e+00, -1.63553125e+00,\n       -1.55965773e+00, -1.79239655e+00, -1.62181965e+00, -1.54270073e+00,\n       -3.48235597e-01, -1.39105610e-01, -8.29620915e-02, -6.49704114e-04,\n       -3.14739510e-06, -2.41957400e-07, -5.26189070e-05, -1.39787299e-09,\n       -7.20519714e-12, -1.85806599e+00, -1.75319536e+00, -1.70482454e+00,\n       -1.80023916e+00, -1.63732619e+00, -1.56167491e+00, -1.79239828e+00,\n       -1.62180434e+00, -1.54269512e+00, -3.36196008e-01, -1.18657717e-01,\n       -7.03240044e-02, -3.18149275e-04, -2.01885224e-06, -8.18577024e-07,\n       -5.26447381e-05, -1.39775181e-09, -7.20742943e-12, -1.85871046e+00,\n       -1.75340436e+00, -1.70519620e+00, -1.80426937e+00, -1.64226840e+00,\n       -1.56657740e+00, -1.79243738e+00, -1.62188939e+00, -1.54280475e+00,\n       -3.47539957e-01, -1.19715020e-01, -6.93157007e-02, -6.04662123e-04,\n       -7.81887684e-06, -8.21151315e-07, -5.26640623e-05, -1.39883101e-09,\n       -7.20935064e-12, -1.86212294e+00, -1.75682236e+00, -1.70654801e+00,\n       -1.80026743e+00, -1.63615497e+00, -1.55969865e+00, -1.79245601e+00,\n       -1.62193671e+00, -1.54287070e+00, -3.49859388e-01, -1.06763007e-01,\n       -5.64651719e-02, -6.57114233e-04, -5.84331967e-06, -2.49756292e-06,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86193604e+00,\n       -1.75607223e+00, -1.70545260e+00, -1.79820612e+00, -1.63328539e+00,\n       -1.55695872e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.01721802e-01, -7.89875797e-02, -4.48880680e-02, -1.40743867e-04,\n       -1.74345592e-06, -1.85738726e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86149649e+00, -1.75543535e+00, -1.70491857e+00,\n       -1.79710407e+00, -1.63113146e+00, -1.55463354e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.76275876e-01, -9.34765847e-02,\n       -5.66305840e-02, -3.99655407e-04, -3.28013970e-06, -1.44734454e-07,\n       -5.26292332e-05, -1.39790587e-09, -7.20459051e-12, -1.86119151e+00,\n       -1.75519902e+00, -1.70451569e+00, -1.79760433e+00, -1.63277119e+00,\n       -1.55658008e+00, -1.79241276e+00, -1.62177724e+00, -1.54264388e+00,\n       -2.90237156e-01, -8.69751328e-02, -5.09014383e-02, -1.01351779e-04,\n       -3.72772173e-06, -1.32440953e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86047864e+00, -1.75367371e+00, -1.70379655e+00,\n       -1.79640221e+00, -1.63019495e+00, -1.55322722e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.56444582e-01, -8.48802676e-02,\n       -5.08922859e-02, -2.06983395e-04, -7.98689745e-07, -4.35391716e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86152453e+00,\n       -1.75550394e+00, -1.70599646e+00, -1.79589046e+00, -1.62917846e+00,\n       -1.55193713e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.71474656e-01, -6.65521783e-02, -4.62940260e-02, -2.07245495e-04,\n       -1.27256673e-06, -4.67619424e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86162079e+00, -1.75566037e+00, -1.70614389e+00,\n       -1.79583724e+00, -1.62912691e+00, -1.55191743e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.52551912e-01, -7.21367657e-02,\n       -3.83122602e-02, -3.29195494e-04, -6.43712849e-07, -1.98666929e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86008686e+00,\n       -1.75302316e+00, -1.70309472e+00, -1.79644593e+00, -1.63392426e+00,\n       -1.55882569e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.49013695e-01, -7.61461892e-02, -4.18072382e-02, -1.21428175e-04,\n       -3.94350976e-07, -1.77427715e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85995031e+00, -1.75250207e+00, -1.70081737e+00,\n       -1.79829566e+00, -1.63683388e+00, -1.56192318e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.72223408e-01, -8.20574236e-02,\n       -4.55796402e-02, -1.27453484e-04, -9.00643757e-07, -5.01174504e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85995031e+00,\n       -1.75377182e+00, -1.70134071e+00, -1.79821340e+00, -1.63652055e+00,\n       -1.56154848e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.23279264e-01, -7.36791556e-02, -4.15366220e-02, -3.56791644e-04,\n       -1.68728021e-06, -2.16472813e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85995016e+00, -1.75408669e+00, -1.70241183e+00,\n       -1.79821296e+00, -1.63662868e+00, -1.56160112e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.97915018e-01, -8.64544032e-02,\n       -4.49096084e-02, -1.90136963e-04, -5.21465280e-08, -8.09868469e-10,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85970135e+00,\n       -1.75010155e+00, -1.69942583e+00, -1.80027365e+00, -1.63982826e+00,\n       -1.56483845e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00]), 'split6_train_score': array([-4.92658805e-01, -1.86488121e-01, -1.09485855e-01, -7.69841555e-04,\n       -3.12950881e-05, -4.97030530e-06, -5.26259719e-05, -1.39781925e-09,\n       -7.20414560e-12, -1.89032529e+00, -1.80755682e+00, -1.76738907e+00,\n       -1.80448504e+00, -1.64580053e+00, -1.57225018e+00, -1.79233994e+00,\n       -1.62174045e+00, -1.54257614e+00, -3.18711293e-01, -1.11342124e-01,\n       -6.88133871e-02, -2.29082997e-04, -7.67507744e-06, -2.01213833e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86325333e+00,\n       -1.75787049e+00, -1.70835822e+00, -1.79999679e+00, -1.63640237e+00,\n       -1.56019150e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.39911595e-01, -1.20506510e-01, -7.02191961e-02, -2.38202040e-04,\n       -7.78773564e-06, -3.91538251e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86128338e+00, -1.75423937e+00, -1.70509316e+00,\n       -1.79925776e+00, -1.63454661e+00, -1.55821179e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.36209425e-01, -1.05982159e-01,\n       -6.92501359e-02, -2.12380575e-04, -1.29079206e-08, -2.60810253e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85892497e+00,\n       -1.74946505e+00, -1.69912273e+00, -1.79838603e+00, -1.63362160e+00,\n       -1.55756619e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.21750389e-01, -9.87507576e-02, -6.98096290e-02, -1.76338067e-04,\n       -5.09634530e-07, -5.30205030e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85846698e+00, -1.74758414e+00, -1.69717804e+00,\n       -1.79751365e+00, -1.63202873e+00, -1.55542981e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.21087304e-01, -9.53581399e-02,\n       -4.87678670e-02, -1.63291244e-04, -3.10569206e-07, -1.76040890e-07,\n       -5.26908537e-05, -1.39939635e-09, -7.21223567e-12, -1.85830843e+00,\n       -1.75009847e+00, -1.70002644e+00, -1.80302536e+00, -1.64301816e+00,\n       -1.56938426e+00, -1.79238875e+00, -1.62178956e+00, -1.54268554e+00,\n       -3.17046085e-01, -1.15975603e-01, -6.05904389e-02, -2.73871204e-04,\n       -2.16665530e-06, -5.42809158e-07, -5.28041549e-05, -1.40243637e-09,\n       -7.22182369e-12, -1.86039392e+00, -1.75441229e+00, -1.70583824e+00,\n       -1.80585281e+00, -1.64769515e+00, -1.57457574e+00, -1.79251638e+00,\n       -1.62203790e+00, -1.54294429e+00, -3.40245521e-01, -1.11985788e-01,\n       -6.35283306e-02, -3.36260311e-04, -1.03447816e-07, -4.96882451e-07,\n       -5.27168825e-05, -1.40012691e-09, -7.22361561e-12, -1.86129781e+00,\n       -1.75555682e+00, -1.70637919e+00, -1.80543804e+00, -1.64729611e+00,\n       -1.57443217e+00, -1.79252706e+00, -1.62205741e+00, -1.54300861e+00,\n       -3.37460460e-01, -1.16918461e-01, -6.33559929e-02, -2.22331195e-04,\n       -1.92771634e-06, -9.00254846e-08, -5.27105048e-05, -1.40142523e-09,\n       -7.21603259e-12, -1.86129781e+00, -1.75555682e+00, -1.70637661e+00,\n       -1.80545795e+00, -1.64732278e+00, -1.57442593e+00, -1.79252706e+00,\n       -1.62205741e+00, -1.54300861e+00, -3.12235695e-01, -1.07826002e-01,\n       -6.57163403e-02, -3.22117668e-04, -2.01381309e-06, -6.50148762e-08,\n       -5.27286067e-05, -1.39918926e-09, -7.21263482e-12, -1.86101153e+00,\n       -1.75507405e+00, -1.70580478e+00, -1.80552832e+00, -1.64729595e+00,\n       -1.57392651e+00, -1.79252706e+00, -1.62205805e+00, -1.54300933e+00,\n       -2.93065472e-01, -1.04278902e-01, -6.10951950e-02, -3.34101212e-04,\n       -2.58664945e-06, -8.19678265e-07, -5.26880373e-05, -1.39946734e-09,\n       -7.21263457e-12, -1.86101153e+00, -1.75507802e+00, -1.70413735e+00,\n       -1.80550078e+00, -1.64761399e+00, -1.57404437e+00, -1.79252776e+00,\n       -1.62205741e+00, -1.54300925e+00, -3.01745701e-01, -1.00456926e-01,\n       -6.05746180e-02, -9.97535832e-05, -6.00712137e-09, -3.41782335e-10,\n       -5.26833922e-05, -1.40221034e-09, -7.20758262e-12, -1.85901258e+00,\n       -1.74920917e+00, -1.69780121e+00, -1.80307743e+00, -1.64073822e+00,\n       -1.56482837e+00, -1.79245593e+00, -1.62191244e+00, -1.54283611e+00,\n       -2.51826561e-01, -7.83262172e-02, -5.24707351e-02, -1.02686355e-04,\n       -5.36204821e-08, -4.43965095e-09, -5.26652002e-05, -1.39870590e-09,\n       -7.20743941e-12, -1.85799644e+00, -1.74734251e+00, -1.69583127e+00,\n       -1.80314934e+00, -1.64326740e+00, -1.56867044e+00, -1.79245593e+00,\n       -1.62191937e+00, -1.54285082e+00, -2.78562474e-01, -8.31393369e-02,\n       -5.50326672e-02, -1.44508240e-04, -9.48913291e-07, -1.81820943e-08,\n       -5.26219062e-05, -1.39763160e-09, -7.20317841e-12, -1.85817532e+00,\n       -1.74828178e+00, -1.69698598e+00, -1.80224049e+00, -1.64208360e+00,\n       -1.56748261e+00, -1.79234220e+00, -1.62169990e+00, -1.54256810e+00,\n       -2.66342259e-01, -7.38078094e-02, -4.41450367e-02, -1.92154435e-04,\n       -7.10510118e-07, -6.53417354e-08, -5.26189070e-05, -1.39763160e-09,\n       -7.20317841e-12, -1.85805942e+00, -1.74749087e+00, -1.69595694e+00,\n       -1.80059994e+00, -1.63847768e+00, -1.56379528e+00, -1.79234524e+00,\n       -1.62170476e+00, -1.54257736e+00, -3.10147098e-01, -9.10733436e-02,\n       -5.38921314e-02, -2.48036336e-04, -8.84518352e-08, -3.40708617e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85805805e+00,\n       -1.74722349e+00, -1.69562898e+00, -1.80076746e+00, -1.63731585e+00,\n       -1.56213401e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.56108372e-01, -7.80928249e-02, -3.97579376e-02, -1.60734562e-04,\n       -8.01275416e-07, -2.10714744e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85805805e+00, -1.74722349e+00, -1.69562898e+00,\n       -1.80077412e+00, -1.63741274e+00, -1.56248937e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -2.62187268e-01, -9.69537683e-02,\n       -4.18780467e-02, -2.32868180e-04, -9.75935475e-07, -8.00384591e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.85805805e+00,\n       -1.74721591e+00, -1.69561255e+00, -1.80077278e+00, -1.63738822e+00,\n       -1.56248534e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -2.56322876e-01, -7.15916674e-02, -5.22350270e-02, -1.83334720e-04,\n       -1.84236272e-06, -2.12331896e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85805805e+00, -1.74737378e+00, -1.69603253e+00,\n       -1.80075825e+00, -1.63741274e+00, -1.56252875e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.59809929e-01, -1.38301183e-01,\n       -7.99132267e-02, -1.72110708e-04, -2.17667709e-06, -4.14307833e-07,\n       -5.26370451e-05, -1.39994225e-09, -7.21119080e-12, -1.86864173e+00,\n       -1.76957175e+00, -1.72476845e+00, -1.79733158e+00, -1.63015844e+00,\n       -1.55256376e+00, -1.79259636e+00, -1.62220759e+00, -1.54320426e+00,\n       -3.50974225e-01, -1.27333420e-01, -7.18909859e-02, -2.01233310e-04,\n       -2.46350365e-07, -3.37944217e-08, -5.29544538e-05, -1.40653044e-09,\n       -7.25948901e-12, -1.86538824e+00, -1.76394163e+00, -1.71815589e+00,\n       -1.80082557e+00, -1.63864540e+00, -1.56246824e+00, -1.79338166e+00,\n       -1.62349768e+00, -1.54457445e+00, -3.36105266e-01, -1.05347511e-01,\n       -6.94054384e-02, -1.01611816e-04, -1.44408780e-07, -7.44223832e-09,\n       -5.26197607e-05, -1.39765427e-09, -7.20360427e-12, -1.86424358e+00,\n       -1.76279844e+00, -1.71690566e+00, -1.79834253e+00, -1.63328178e+00,\n       -1.55691726e+00, -1.79238907e+00, -1.62178750e+00, -1.54268141e+00,\n       -3.39899730e-01, -1.14153786e-01, -7.98774571e-02, -3.75155477e-04,\n       -7.08243682e-06, -8.42002605e-08, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86348031e+00, -1.75996541e+00, -1.71297069e+00,\n       -1.79892327e+00, -1.63423997e+00, -1.55800791e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.54288973e-01, -1.13144678e-01,\n       -5.74400808e-02, -1.75492630e-04, -6.75594584e-06, -3.25334872e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86345431e+00,\n       -1.75901195e+00, -1.71114839e+00, -1.79940193e+00, -1.63624318e+00,\n       -1.56083350e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.35815824e-01, -1.09236411e-01, -5.99080559e-02, -3.03240735e-04,\n       -3.89336344e-06, -1.94718754e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86317482e+00, -1.75848136e+00, -1.71020572e+00,\n       -1.80014951e+00, -1.63711223e+00, -1.56171236e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.62934461e-01, -1.30647917e-01,\n       -6.40151626e-02, -2.41616669e-04, -4.84712813e-07, -1.56110019e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86272640e+00,\n       -1.75781522e+00, -1.70944838e+00, -1.79651090e+00, -1.63010740e+00,\n       -1.55308299e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.77238331e-01, -1.12556819e-01, -6.54600886e-02, -4.69969395e-04,\n       -4.58741723e-06, -2.73829182e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86385303e+00, -1.75819821e+00, -1.71002518e+00,\n       -1.79897681e+00, -1.63458169e+00, -1.55830392e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.57098951e-01, -1.20910128e-01,\n       -6.78972884e-02, -1.09778213e-04, -3.38819930e-06, -2.41012131e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86383470e+00,\n       -1.75812378e+00, -1.70991658e+00, -1.79817620e+00, -1.63356052e+00,\n       -1.55734376e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.84682621e-01, -1.25520637e-01, -8.89636698e-02, -2.16610822e-04,\n       -1.20023267e-06, -3.85115677e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86392527e+00, -1.75853173e+00, -1.71065253e+00,\n       -1.79843885e+00, -1.63242097e+00, -1.55574789e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.51642528e-01, -1.26901621e-01,\n       -8.03153015e-02, -2.77888294e-04, -2.71282439e-06, -1.20805069e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86400482e+00,\n       -1.75847751e+00, -1.71024508e+00, -1.79880868e+00, -1.63288997e+00,\n       -1.55541350e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.93630028e-01, -1.21036008e-01, -7.31924986e-02, -2.37343479e-04,\n       -9.49760876e-07, -1.94608795e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86367268e+00, -1.75714666e+00, -1.70845481e+00,\n       -1.79888030e+00, -1.63444749e+00, -1.55765475e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.69306341e-01, -1.18689420e-01,\n       -7.02324293e-02, -3.52094614e-04, -9.66732721e-07, -3.41840092e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86201689e+00,\n       -1.75515767e+00, -1.70591199e+00, -1.80113679e+00, -1.63793518e+00,\n       -1.56219374e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.60104498e-01, -1.14178892e-01, -6.80916610e-02, -3.23828089e-04,\n       -4.26552003e-07, -2.06288598e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86178212e+00, -1.75559749e+00, -1.70671785e+00,\n       -1.80012649e+00, -1.63732020e+00, -1.56176962e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.57403926e-01, -1.05740924e-01,\n       -5.57808027e-02, -1.24205940e-04, -2.04990074e-07, -1.33279548e-08,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86136497e+00,\n       -1.75476856e+00, -1.70568017e+00, -1.80098306e+00, -1.63842195e+00,\n       -1.56335671e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.64029644e-01, -1.04451691e-01, -5.96239366e-02, -2.24943140e-04,\n       -6.09419632e-07, -1.40049863e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.86132504e+00, -1.75467690e+00, -1.70556353e+00,\n       -1.79985864e+00, -1.63703769e+00, -1.56184389e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.15832114e-01, -1.06846879e-01,\n       -6.29356387e-02, -1.45249677e-04, -3.65055967e-08, -1.66703550e-07,\n       -5.26163458e-05, -1.39756357e-09, -7.20282512e-12, -1.86130371e+00,\n       -1.75435374e+00, -1.70523899e+00, -1.79985864e+00, -1.63703769e+00,\n       -1.56184389e+00, -1.79233242e+00, -1.62168830e+00, -1.54255904e+00,\n       -3.37584702e-01, -9.68572463e-02, -6.09080897e-02, -3.01683367e-04,\n       -9.27547175e-07, -1.39789152e-07, -5.26163458e-05, -1.39756357e-09,\n       -7.20282512e-12, -1.85884810e+00, -1.75015204e+00, -1.70040223e+00,\n       -1.79820199e+00, -1.63422139e+00, -1.55831265e+00, -1.79233242e+00,\n       -1.62168830e+00, -1.54255904e+00, -3.39570898e-01, -1.09518284e-01,\n       -6.26941109e-02, -1.60893778e-04, -3.30858816e-06, -9.71924360e-08,\n       -5.26197607e-05, -1.39765427e-09, -7.20329392e-12, -1.85868153e+00,\n       -1.75028614e+00, -1.70052580e+00, -1.79978388e+00, -1.63740974e+00,\n       -1.56229037e+00, -1.79233342e+00, -1.62168920e+00, -1.54255990e+00]), 'split7_train_score': array([-3.90080698e-01, -1.41642805e-01, -8.85174462e-02, -1.41052214e-03,\n       -3.67071336e-05, -6.32928990e-06, -5.28267616e-05, -1.40339038e-09,\n       -7.24873949e-12, -1.87749426e+00, -1.78626741e+00, -1.74460437e+00,\n       -1.80302309e+00, -1.64380399e+00, -1.57090075e+00, -1.79193057e+00,\n       -1.62143272e+00, -1.54240295e+00, -3.35997214e-01, -9.75331217e-02,\n       -6.88093705e-02, -4.62157297e-04, -6.05443781e-06, -8.95223497e-07,\n       -5.26149226e-05, -1.39752569e-09, -7.20237285e-12, -1.86090137e+00,\n       -1.75691290e+00, -1.70903134e+00, -1.79815525e+00, -1.63545384e+00,\n       -1.56033012e+00, -1.79173047e+00, -1.62121059e+00, -1.54213498e+00,\n       -3.33645786e-01, -1.25815670e-01, -6.81943736e-02, -3.98071416e-04,\n       -2.78590408e-06, -4.62036043e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86064577e+00, -1.75734229e+00, -1.70995126e+00,\n       -1.79912616e+00, -1.63663686e+00, -1.56165311e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.39718036e-01, -1.03049531e-01,\n       -6.09353845e-02, -4.08809213e-04, -7.11450177e-06, -9.88507463e-07,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.85931351e+00,\n       -1.75528625e+00, -1.70686570e+00, -1.79945690e+00, -1.63592697e+00,\n       -1.55970825e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.11186055e-01, -1.11113934e-01, -6.37320917e-02, -5.81238204e-04,\n       -2.56837776e-06, -2.70578070e-07, -5.26006947e-05, -1.39758441e-09,\n       -7.20226995e-12, -1.85989767e+00, -1.75566519e+00, -1.70720278e+00,\n       -1.79863419e+00, -1.63370688e+00, -1.55815014e+00, -1.79168391e+00,\n       -1.62110153e+00, -1.54200090e+00, -3.29656645e-01, -1.06468963e-01,\n       -7.35391527e-02, -9.98980349e-05, -3.55738946e-06, -4.55044391e-07,\n       -5.26056618e-05, -1.39727971e-09, -7.20111117e-12, -1.85842028e+00,\n       -1.75147494e+00, -1.70229882e+00, -1.79724105e+00, -1.63110426e+00,\n       -1.55358989e+00, -1.79174887e+00, -1.62120323e+00, -1.54212441e+00,\n       -3.10527963e-01, -9.65325928e-02, -5.82136692e-02, -5.31959991e-04,\n       -1.83683370e-06, -4.96240462e-08, -5.26066059e-05, -1.39721789e-09,\n       -7.20075882e-12, -1.85760544e+00, -1.74588568e+00, -1.69505799e+00,\n       -1.79679215e+00, -1.63045905e+00, -1.55325545e+00, -1.79176260e+00,\n       -1.62125537e+00, -1.54219082e+00, -3.50666879e-01, -1.08369733e-01,\n       -6.22425594e-02, -4.49394441e-04, -1.78443943e-06, -1.41417887e-06,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85739788e+00,\n       -1.74490484e+00, -1.69405314e+00, -1.79828381e+00, -1.63282126e+00,\n       -1.55615930e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.94214247e-01, -8.82324159e-02, -5.07420606e-02, -1.38603941e-04,\n       -1.20751631e-06, -4.58488117e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85674919e+00, -1.74255103e+00, -1.69053689e+00,\n       -1.79817279e+00, -1.63159031e+00, -1.55398630e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.23022823e-01, -9.26500805e-02,\n       -5.53804733e-02, -1.02411620e-04, -3.68924202e-07, -7.95607078e-08,\n       -5.26240976e-05, -1.39776943e-09, -7.20361437e-12, -1.85806929e+00,\n       -1.74477250e+00, -1.69137951e+00, -1.79944860e+00, -1.63550206e+00,\n       -1.55941729e+00, -1.79182681e+00, -1.62126986e+00, -1.54217998e+00,\n       -2.91408816e-01, -1.00721387e-01, -5.74204956e-02, -1.33537710e-04,\n       -4.26496080e-07, -9.33027553e-08, -5.26133408e-05, -1.39748368e-09,\n       -7.20216058e-12, -1.85784781e+00, -1.74423565e+00, -1.69119093e+00,\n       -1.79914572e+00, -1.63517908e+00, -1.55912644e+00, -1.79171999e+00,\n       -1.62115572e+00, -1.54208069e+00, -2.98818336e-01, -9.73063580e-02,\n       -4.06602591e-02, -1.41520990e-04, -1.66453759e-07, -1.74452102e-07,\n       -5.26133408e-05, -1.39748369e-09, -7.20216058e-12, -1.85783696e+00,\n       -1.74413934e+00, -1.69107622e+00, -1.79887614e+00, -1.63476399e+00,\n       -1.55873733e+00, -1.79171839e+00, -1.62116877e+00, -1.54207387e+00,\n       -2.90226543e-01, -8.19137826e-02, -4.22171117e-02, -1.92180280e-04,\n       -2.55540872e-07, -1.57521330e-08, -5.26176334e-05, -1.39759770e-09,\n       -7.20276077e-12, -1.85783696e+00, -1.74405446e+00, -1.69091998e+00,\n       -1.79876925e+00, -1.63438114e+00, -1.55826668e+00, -1.79171779e+00,\n       -1.62116966e+00, -1.54208003e+00, -2.72554262e-01, -8.37770640e-02,\n       -4.73555124e-02, -1.30953259e-04, -4.85140320e-07, -3.81125910e-08,\n       -5.26237561e-05, -1.39776034e-09, -7.20358809e-12, -1.85783696e+00,\n       -1.74408070e+00, -1.69121506e+00, -1.79926325e+00, -1.63537118e+00,\n       -1.55940338e+00, -1.79192167e+00, -1.62135424e+00, -1.54226335e+00,\n       -2.47982999e-01, -7.88219964e-02, -4.09736802e-02, -1.06054082e-04,\n       -9.24832367e-08, -2.95208358e-08, -5.26237561e-05, -1.39776033e-09,\n       -7.20358809e-12, -1.85778710e+00, -1.74464893e+00, -1.69163206e+00,\n       -1.79926208e+00, -1.63536437e+00, -1.55939268e+00, -1.79191690e+00,\n       -1.62134421e+00, -1.54225034e+00, -2.51903934e-01, -8.47090651e-02,\n       -4.02751342e-02, -1.62337198e-04, -5.33715133e-07, -1.49526687e-07,\n       -5.26237561e-05, -1.39776032e-09, -7.20358809e-12, -1.85773904e+00,\n       -1.74314114e+00, -1.68934211e+00, -1.79921228e+00, -1.63522779e+00,\n       -1.55917589e+00, -1.79192407e+00, -1.62134268e+00, -1.54225033e+00,\n       -2.57813515e-01, -8.08749903e-02, -3.92521700e-02, -1.40155384e-04,\n       -1.27744883e-06, -4.45353300e-08, -5.26237561e-05, -1.39776032e-09,\n       -7.20358809e-12, -1.85773902e+00, -1.74314076e+00, -1.69005536e+00,\n       -1.79966026e+00, -1.63572949e+00, -1.55963670e+00, -1.79192087e+00,\n       -1.62134267e+00, -1.54225720e+00, -2.35362771e-01, -8.66876586e-02,\n       -4.59538409e-02, -2.03353944e-04, -1.18258987e-06, -1.22049428e-07,\n       -5.26237561e-05, -1.39776032e-09, -7.20358809e-12, -1.85767011e+00,\n       -1.74412823e+00, -1.68990133e+00, -1.79948700e+00, -1.63556516e+00,\n       -1.55946810e+00, -1.79192648e+00, -1.62135347e+00, -1.54224955e+00,\n       -2.46222134e-01, -7.91162171e-02, -3.49930029e-02, -3.04235992e-04,\n       -4.15522977e-07, -6.72899360e-08, -5.26237561e-05, -1.39776032e-09,\n       -7.20358809e-12, -1.85737343e+00, -1.74426510e+00, -1.68992221e+00,\n       -1.79932439e+00, -1.63533500e+00, -1.55927332e+00, -1.79192567e+00,\n       -1.62134882e+00, -1.54225413e+00, -3.87817744e-01, -1.43788754e-01,\n       -8.59586243e-02, -9.81065478e-04, -2.09611151e-05, -1.25805915e-06,\n       -5.26322816e-05, -1.39798675e-09, -7.20474984e-12, -1.86075448e+00,\n       -1.75525131e+00, -1.70579803e+00, -1.79924099e+00, -1.63547804e+00,\n       -1.55935881e+00, -1.79217629e+00, -1.62154707e+00, -1.54242473e+00,\n       -3.27946646e-01, -1.17943715e-01, -7.86958983e-02, -1.32859763e-04,\n       -1.06085349e-06, -8.18365155e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85591908e+00, -1.74565219e+00, -1.69391530e+00,\n       -1.79414453e+00, -1.62593837e+00, -1.54787155e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.13099108e-01, -1.11234654e-01,\n       -6.82181078e-02, -1.19556369e-04, -1.15461689e-06, -1.93139668e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85500651e+00,\n       -1.74262543e+00, -1.69162740e+00, -1.79548997e+00, -1.62813662e+00,\n       -1.55035537e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.02537019e-01, -1.17766906e-01, -5.69583110e-02, -8.90593506e-05,\n       -1.14117540e-07, -1.18759569e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85500638e+00, -1.74133056e+00, -1.68876447e+00,\n       -1.79470170e+00, -1.62677925e+00, -1.54875311e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.00866787e-01, -9.92991545e-02,\n       -6.10034630e-02, -9.76341967e-05, -1.51802678e-06, -2.42964774e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84981104e+00,\n       -1.73388036e+00, -1.68063274e+00, -1.79394559e+00, -1.62611886e+00,\n       -1.54882506e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.20429920e-01, -9.77301229e-02, -6.27673017e-02, -1.94754649e-04,\n       -8.46680696e-07, -4.30402957e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84933961e+00, -1.73345695e+00, -1.67985957e+00,\n       -1.79465268e+00, -1.62630328e+00, -1.54844149e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.15228954e-01, -8.12015922e-02,\n       -5.05553267e-02, -9.42096125e-05, -1.96172294e-06, -8.27254553e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84910450e+00,\n       -1.73414858e+00, -1.68045995e+00, -1.79422873e+00, -1.62537216e+00,\n       -1.54730384e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.12559992e-01, -8.88346062e-02, -4.97827769e-02, -1.10916281e-04,\n       -7.65787871e-07, -4.55687708e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84925127e+00, -1.73405780e+00, -1.68031337e+00,\n       -1.79402432e+00, -1.62524920e+00, -1.54695091e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.11638200e-01, -8.96773924e-02,\n       -4.96755680e-02, -8.41411319e-05, -8.39019385e-08, -2.25285566e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84885193e+00,\n       -1.73379722e+00, -1.67998526e+00, -1.79467544e+00, -1.62636680e+00,\n       -1.54838170e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.16194074e-01, -9.05722890e-02, -5.36249209e-02, -1.08641510e-04,\n       -1.10996125e-07, -4.12313020e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84885194e+00, -1.73379722e+00, -1.67998526e+00,\n       -1.79317284e+00, -1.62399717e+00, -1.54555926e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.95450394e-01, -9.35654369e-02,\n       -4.86445149e-02, -1.19761548e-04, -1.35663613e-07, -1.42412009e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84865608e+00,\n       -1.73332323e+00, -1.68040761e+00, -1.79334930e+00, -1.62432381e+00,\n       -1.54579261e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.30157354e-01, -9.79903660e-02, -5.42876397e-02, -1.03085444e-04,\n       -2.43880814e-07, -7.70795949e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85054366e+00, -1.73649751e+00, -1.68408689e+00,\n       -1.79462118e+00, -1.62555113e+00, -1.54703550e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.09512666e-01, -8.54609982e-02,\n       -4.65898955e-02, -8.34660412e-05, -3.31896522e-08, -1.89758656e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85016221e+00,\n       -1.73550071e+00, -1.68239715e+00, -1.79363804e+00, -1.62453128e+00,\n       -1.54599665e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.94836672e-01, -9.64954049e-02, -5.48020015e-02, -7.72156994e-05,\n       -8.54453444e-08, -3.69904578e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85010855e+00, -1.73526986e+00, -1.68209483e+00,\n       -1.79319935e+00, -1.62363385e+00, -1.54512511e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.95126015e-01, -8.11376234e-02,\n       -5.09653200e-02, -1.01782932e-04, -7.59838088e-08, -3.34396187e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85084976e+00,\n       -1.73567004e+00, -1.68289959e+00, -1.79309981e+00, -1.62346599e+00,\n       -1.54483819e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.79459029e-01, -7.12939739e-02, -4.57783878e-02, -9.18439975e-05,\n       -1.70078311e-08, -2.40726541e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85084976e+00, -1.73567004e+00, -1.68289911e+00,\n       -1.79309307e+00, -1.62346821e+00, -1.54483730e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.94794099e-01, -8.44860189e-02,\n       -4.63492073e-02, -7.87203980e-05, -3.61272932e-08, -2.75022781e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85084413e+00,\n       -1.73580824e+00, -1.68303686e+00, -1.79308666e+00, -1.62346821e+00,\n       -1.54484096e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.93584033e-01, -8.98186979e-02, -4.70934963e-02, -9.85793822e-05,\n       -1.01817301e-07, -1.35808718e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85084749e+00, -1.73581856e+00, -1.68296001e+00,\n       -1.79549328e+00, -1.62571325e+00, -1.54701971e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.60646284e-01, -7.27424957e-02,\n       -3.53935152e-02, -9.36512147e-05, -4.05297696e-08, -1.89197009e-09,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.85046326e+00,\n       -1.73529432e+00, -1.68214793e+00, -1.79547915e+00, -1.62615979e+00,\n       -1.54762098e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'split8_train_score': array([-4.79999611e-01, -1.83448718e-01, -1.10860134e-01, -1.14081376e-03,\n       -6.45849614e-05, -2.30056726e-05, -5.26170612e-05, -1.39985627e-09,\n       -7.20353150e-12, -1.88175187e+00, -1.79354498e+00, -1.75434215e+00,\n       -1.80379733e+00, -1.64396081e+00, -1.56940566e+00, -1.79178907e+00,\n       -1.62130310e+00, -1.54224778e+00, -3.37576315e-01, -1.07846408e-01,\n       -5.75988103e-02, -1.85880297e-04, -3.05843444e-06, -4.91516633e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86707241e+00,\n       -1.76660783e+00, -1.72105641e+00, -1.79747467e+00, -1.63281996e+00,\n       -1.55625955e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.57856273e-01, -1.14186887e-01, -5.98805350e-02, -1.09069391e-03,\n       -3.84468784e-06, -9.28644674e-07, -5.26172775e-05, -1.39745488e-09,\n       -7.20201516e-12, -1.86737599e+00, -1.76634720e+00, -1.71883516e+00,\n       -1.80477878e+00, -1.64708367e+00, -1.57438521e+00, -1.79168366e+00,\n       -1.62110131e+00, -1.54200069e+00, -3.45475490e-01, -9.78538377e-02,\n       -5.60352140e-02, -2.95817634e-04, -1.06391697e-05, -6.63700423e-07,\n       -5.29130986e-05, -1.40544568e-09, -7.24322760e-12, -1.86386540e+00,\n       -1.76165513e+00, -1.71444011e+00, -1.80497820e+00, -1.64739934e+00,\n       -1.57433447e+00, -1.79201259e+00, -1.62176320e+00, -1.54283131e+00,\n       -3.25157651e-01, -1.17487021e-01, -6.66964226e-02, -2.04518931e-04,\n       -8.45257296e-06, -1.43354043e-06, -5.28588876e-05, -1.40400575e-09,\n       -7.23578407e-12, -1.86022941e+00, -1.75610489e+00, -1.70839209e+00,\n       -1.80501382e+00, -1.64739349e+00, -1.57428493e+00, -1.79201259e+00,\n       -1.62176320e+00, -1.54283131e+00, -3.15366815e-01, -1.04287938e-01,\n       -6.33042063e-02, -1.72337304e-04, -8.26756158e-07, -1.26873130e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85928142e+00,\n       -1.75428299e+00, -1.70708255e+00, -1.79888603e+00, -1.63531667e+00,\n       -1.55964293e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.12501713e-01, -1.03028032e-01, -5.24987940e-02, -2.96903037e-04,\n       -1.58866372e-06, -8.86576983e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86144531e+00, -1.75741697e+00, -1.70951911e+00,\n       -1.80039724e+00, -1.63811458e+00, -1.56276609e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.48807599e-01, -1.08983250e-01,\n       -7.02060337e-02, -1.99600906e-04, -1.46216731e-06, -5.38542278e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86011054e+00,\n       -1.75561998e+00, -1.70806920e+00, -1.80038295e+00, -1.63808053e+00,\n       -1.56271505e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.14923682e-01, -1.10046784e-01, -7.03671688e-02, -2.35031153e-04,\n       -1.98583461e-06, -4.04674310e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86011054e+00, -1.75561998e+00, -1.70807429e+00,\n       -1.80054722e+00, -1.63840421e+00, -1.56288313e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.11184466e-01, -1.04108373e-01,\n       -6.13260277e-02, -2.71452033e-04, -1.80109844e-06, -3.45355473e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85968164e+00,\n       -1.75504624e+00, -1.70751832e+00, -1.80047043e+00, -1.63773709e+00,\n       -1.56228619e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.23345329e-01, -9.93817835e-02, -6.29293755e-02, -1.56214649e-04,\n       -1.53854524e-06, -4.71911981e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85886002e+00, -1.75343300e+00, -1.70560465e+00,\n       -1.80008951e+00, -1.63786200e+00, -1.56275898e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.98963197e-01, -7.98267925e-02,\n       -4.48214075e-02, -3.02278974e-04, -3.80187513e-07, -6.31221404e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86092762e+00,\n       -1.75700072e+00, -1.70812576e+00, -1.80025183e+00, -1.63803145e+00,\n       -1.56320839e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.74661477e-01, -1.00143533e-01, -4.68568950e-02, -1.04118504e-04,\n       -5.11629168e-07, -2.54021792e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86092022e+00, -1.75696639e+00, -1.70786968e+00,\n       -1.80025028e+00, -1.63810991e+00, -1.56320411e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.64210697e-01, -7.79429273e-02,\n       -4.38057181e-02, -1.88435966e-04, -2.41874515e-07, -6.67404206e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86088752e+00,\n       -1.75661519e+00, -1.70746450e+00, -1.79987269e+00, -1.63731703e+00,\n       -1.56219176e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.87802854e-01, -9.38993231e-02, -5.07973564e-02, -2.07704399e-04,\n       -7.07850247e-07, -1.55185521e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85932509e+00, -1.75411029e+00, -1.70487478e+00,\n       -1.79988506e+00, -1.63731776e+00, -1.56222003e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.63811617e-01, -7.84773981e-02,\n       -3.94849603e-02, -2.79488612e-04, -9.76634882e-07, -8.68780976e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85929652e+00,\n       -1.75390855e+00, -1.70428490e+00, -1.80347026e+00, -1.64422938e+00,\n       -1.56835614e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.43410054e-01, -7.41359199e-02, -4.04076785e-02, -2.70106022e-04,\n       -3.33620685e-06, -1.01143272e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85929652e+00, -1.75390855e+00, -1.70428490e+00,\n       -1.80439706e+00, -1.64613913e+00, -1.57079895e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.13407731e-01, -5.13575585e-02,\n       -2.62511057e-02, -2.21402049e-04, -6.07136023e-07, -1.25907733e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85929629e+00,\n       -1.75392907e+00, -1.70428712e+00, -1.80440170e+00, -1.64614278e+00,\n       -1.57072696e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.20027506e-01, -6.91835826e-02, -3.97014079e-02, -3.00915817e-04,\n       -6.73839361e-07, -3.96526743e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85929629e+00, -1.75392649e+00, -1.70356299e+00,\n       -1.80438273e+00, -1.64609701e+00, -1.57076962e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.99659686e-01, -1.46322196e-01,\n       -9.49223839e-02, -2.63602606e-04, -1.99497113e-06, -5.43812719e-07,\n       -5.27903558e-05, -1.40365202e-09, -7.22517558e-12, -1.87026601e+00,\n       -1.77010713e+00, -1.72469927e+00, -1.80647956e+00, -1.64809843e+00,\n       -1.57242242e+00, -1.79198040e+00, -1.62167912e+00, -1.54272878e+00,\n       -3.31551058e-01, -1.14944978e-01, -6.42645457e-02, -9.64700539e-05,\n       -2.14746565e-06, -8.71229346e-08, -5.27390454e-05, -1.40080621e-09,\n       -7.21936202e-12, -1.86639744e+00, -1.76350345e+00, -1.71545390e+00,\n       -1.80678893e+00, -1.64907240e+00, -1.57419346e+00, -1.79179252e+00,\n       -1.62132093e+00, -1.54227645e+00, -2.87956421e-01, -1.09124635e-01,\n       -6.08236035e-02, -1.24801765e-04, -1.44167490e-07, -2.59788989e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86360591e+00,\n       -1.75995610e+00, -1.71222940e+00, -1.80077083e+00, -1.63566879e+00,\n       -1.55911481e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.04907498e-01, -9.51246164e-02, -5.62655566e-02, -1.59496178e-04,\n       -3.46253344e-06, -1.65809272e-07, -5.26026226e-05, -1.39719898e-09,\n       -7.20050493e-12, -1.86333103e+00, -1.75828551e+00, -1.71027656e+00,\n       -1.80044273e+00, -1.63622649e+00, -1.55896418e+00, -1.79168366e+00,\n       -1.62110131e+00, -1.54200069e+00, -3.14679711e-01, -9.53293845e-02,\n       -6.31006428e-02, -7.95768954e-05, -1.13361642e-07, -2.48268175e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86092719e+00,\n       -1.75491656e+00, -1.70642948e+00, -1.79750314e+00, -1.63059553e+00,\n       -1.55249877e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.03101152e-01, -1.00955305e-01, -5.89670859e-02, -8.47459926e-05,\n       -9.13460909e-09, -1.68388285e-08, -5.26013779e-05, -1.39716592e-09,\n       -7.20051777e-12, -1.85903021e+00, -1.75253620e+00, -1.70341950e+00,\n       -1.79562410e+00, -1.62877203e+00, -1.55126155e+00, -1.79174368e+00,\n       -1.62121518e+00, -1.54212579e+00, -2.99061072e-01, -9.98460601e-02,\n       -5.95276219e-02, -9.62337671e-05, -4.80112818e-07, -1.11774109e-08,\n       -5.25972785e-05, -1.39705707e-09, -7.19995617e-12, -1.85587164e+00,\n       -1.74718834e+00, -1.69781185e+00, -1.79914720e+00, -1.63599223e+00,\n       -1.56096346e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.94853668e-01, -1.04116485e-01, -6.33650302e-02, -9.17555580e-05,\n       -1.88050034e-07, -3.44971763e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85458039e+00, -1.74452234e+00, -1.69443167e+00,\n       -1.79596101e+00, -1.62900974e+00, -1.55166645e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.74512913e-01, -9.48801522e-02,\n       -5.44653518e-02, -7.80208990e-05, -7.29055392e-08, -5.93565118e-09,\n       -5.25972785e-05, -1.39705706e-09, -7.19995617e-12, -1.85458039e+00,\n       -1.74450961e+00, -1.69441790e+00, -1.79590287e+00, -1.62932915e+00,\n       -1.55201429e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.08209312e-01, -1.02039848e-01, -5.27395333e-02, -7.81705663e-05,\n       -2.45200378e-07, -2.77630199e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85442193e+00, -1.74492784e+00, -1.69494955e+00,\n       -1.79598000e+00, -1.62944993e+00, -1.55233063e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.09501398e-01, -8.56781868e-02,\n       -4.23445936e-02, -7.23657496e-05, -4.18470866e-08, -2.87743664e-10,\n       -5.25972785e-05, -1.39705705e-09, -7.19995617e-12, -1.85442193e+00,\n       -1.74485793e+00, -1.69484077e+00, -1.79597148e+00, -1.62942895e+00,\n       -1.55230400e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.69189198e-01, -8.91169985e-02, -3.28725037e-02, -9.56049100e-05,\n       -4.26197436e-08, -2.99623202e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85441568e+00, -1.74467214e+00, -1.69447630e+00,\n       -1.79745928e+00, -1.63230052e+00, -1.55578630e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.80214645e-01, -6.49262732e-02,\n       -3.84117382e-02, -7.70110983e-05, -7.64622058e-08, -5.15879402e-10,\n       -5.26075262e-05, -1.39732924e-09, -7.20048766e-12, -1.85441568e+00,\n       -1.74467011e+00, -1.69445648e+00, -1.79877390e+00, -1.63292864e+00,\n       -1.55613373e+00, -1.79176359e+00, -1.62117530e+00, -1.54207112e+00,\n       -2.43920675e-01, -6.49805765e-02, -4.01476747e-02, -8.95781748e-05,\n       -1.99328140e-08, -8.92849289e-10, -5.26153171e-05, -1.39760818e-09,\n       -7.20244319e-12, -1.85298504e+00, -1.74127878e+00, -1.69020430e+00,\n       -1.79936258e+00, -1.63361971e+00, -1.55691473e+00, -1.79172319e+00,\n       -1.62116791e+00, -1.54208516e+00, -2.67517806e-01, -8.24407545e-02,\n       -4.20412820e-02, -1.20029113e-04, -1.92406912e-08, -2.43614366e-09,\n       -5.26065336e-05, -1.39730291e-09, -7.20186304e-12, -1.85298504e+00,\n       -1.74127878e+00, -1.69020430e+00, -1.79784500e+00, -1.63211145e+00,\n       -1.55545117e+00, -1.79170107e+00, -1.62111706e+00, -1.54201567e+00,\n       -2.97358610e-01, -8.53968141e-02, -4.03202176e-02, -1.49006133e-04,\n       -4.25985501e-09, -2.50261309e-10, -5.26065336e-05, -1.39730289e-09,\n       -7.20121610e-12, -1.85298106e+00, -1.74074346e+00, -1.68916946e+00,\n       -1.79784221e+00, -1.63144297e+00, -1.55432504e+00, -1.79170031e+00,\n       -1.62111637e+00, -1.54201435e+00, -2.38168893e-01, -6.41821347e-02,\n       -3.84332366e-02, -9.90769882e-05, -5.39057285e-08, -4.85717352e-10,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85319800e+00,\n       -1.74113301e+00, -1.69004110e+00, -1.79629043e+00, -1.63010711e+00,\n       -1.55312204e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.39928695e-01, -6.41157505e-02, -4.14074199e-02, -8.43379511e-05,\n       -2.36104209e-08, -1.47743186e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85300786e+00, -1.74059101e+00, -1.68941137e+00,\n       -1.79595960e+00, -1.62959768e+00, -1.55257132e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.44581804e-01, -8.97402536e-02,\n       -4.21594701e-02, -7.74827511e-05, -7.10223924e-09, -4.98462248e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85212397e+00,\n       -1.73945033e+00, -1.68823993e+00, -1.79519254e+00, -1.62808600e+00,\n       -1.55069535e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'split9_train_score': array([-4.52645159e-01, -1.49976345e-01, -9.54104061e-02, -5.27496149e-04,\n       -2.19334545e-05, -3.95075983e-06, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.87467003e+00, -1.78025699e+00, -1.73713714e+00,\n       -1.79839214e+00, -1.63385075e+00, -1.55760935e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.49358075e-01, -1.15433371e-01,\n       -7.06201412e-02, -2.69610864e-04, -3.85000016e-06, -8.21002717e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86616293e+00,\n       -1.76611827e+00, -1.72017384e+00, -1.79364962e+00, -1.62501086e+00,\n       -1.54685124e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.35256177e-01, -1.08838908e-01, -6.31697274e-02, -2.21105994e-04,\n       -1.14463526e-06, -3.20711895e-07, -5.26396412e-05, -1.39825992e-09,\n       -7.20612634e-12, -1.86530275e+00, -1.76514669e+00, -1.71920400e+00,\n       -1.79686451e+00, -1.63112898e+00, -1.55431750e+00, -1.79209159e+00,\n       -1.62191269e+00, -1.54286917e+00, -3.20701396e-01, -1.19313908e-01,\n       -6.84372813e-02, -3.49340523e-04, -8.50161754e-06, -8.06463673e-07,\n       -5.27146264e-05, -1.40724736e-09, -7.23267964e-12, -1.86326262e+00,\n       -1.76180744e+00, -1.71532369e+00, -1.79650413e+00, -1.63118353e+00,\n       -1.55495642e+00, -1.79213759e+00, -1.62195174e+00, -1.54310578e+00,\n       -2.85740639e-01, -1.14908783e-01, -6.42601911e-02, -1.14806004e-04,\n       -1.55101703e-06, -1.91852144e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86115258e+00, -1.75706933e+00, -1.71022023e+00,\n       -1.79417807e+00, -1.62604131e+00, -1.54810362e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.06353099e-01, -9.99574684e-02,\n       -6.46077808e-02, -2.45982522e-04, -4.70273017e-07, -1.07180714e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85702276e+00,\n       -1.74954798e+00, -1.70060890e+00, -1.79478300e+00, -1.62731788e+00,\n       -1.54972654e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.96825383e-01, -1.21346912e-01, -7.38730718e-02, -1.46508070e-04,\n       -7.39368205e-07, -4.48705102e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85664462e+00, -1.74686946e+00, -1.69621542e+00,\n       -1.79512851e+00, -1.62785896e+00, -1.55037533e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.57600312e-01, -8.46431026e-02,\n       -5.76887465e-02, -3.54122272e-04, -1.58069556e-06, -1.23388206e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85336427e+00,\n       -1.74201320e+00, -1.69105388e+00, -1.79574799e+00, -1.62817082e+00,\n       -1.55046040e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.54692338e-01, -8.25118859e-02, -5.18117701e-02, -1.72008234e-04,\n       -2.34837123e-07, -1.62875600e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85171360e+00, -1.73904958e+00, -1.68756467e+00,\n       -1.79574799e+00, -1.62817082e+00, -1.55027019e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.24329306e-01, -9.67034959e-02,\n       -5.51616084e-02, -1.05669732e-04, -1.63265668e-07, -5.20005717e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85124037e+00,\n       -1.73847349e+00, -1.68667183e+00, -1.79569596e+00, -1.62817479e+00,\n       -1.55034976e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.83996966e-01, -8.86524998e-02, -4.95402433e-02, -1.85324932e-04,\n       -4.01097953e-07, -4.74698752e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85117293e+00, -1.73819593e+00, -1.68625840e+00,\n       -1.79569513e+00, -1.62814854e+00, -1.55029778e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.67644073e-01, -8.24867039e-02,\n       -4.97693072e-02, -2.20843699e-04, -1.13769311e-06, -1.06192430e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85070378e+00,\n       -1.73689969e+00, -1.68479481e+00, -1.79543878e+00, -1.62862807e+00,\n       -1.55114778e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.50002439e-01, -7.43037179e-02, -5.46405712e-02, -2.12611283e-04,\n       -7.59240531e-07, -8.77246829e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85108497e+00, -1.73738595e+00, -1.68545659e+00,\n       -1.79481485e+00, -1.62729771e+00, -1.54950247e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.44078492e-01, -8.07022717e-02,\n       -4.77116432e-02, -2.72693202e-04, -8.32212580e-07, -1.12838016e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85113343e+00,\n       -1.73734124e+00, -1.68537962e+00, -1.79484790e+00, -1.62728288e+00,\n       -1.54948831e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.33346979e-01, -8.29032305e-02, -4.88143715e-02, -1.97663342e-04,\n       -1.11813961e-07, -7.14427976e-09, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85069091e+00, -1.73665112e+00, -1.68430900e+00,\n       -1.79508164e+00, -1.62780801e+00, -1.55006082e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.62620075e-01, -7.99840610e-02,\n       -4.75234208e-02, -2.65493319e-04, -1.26033318e-07, -1.42419392e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85018568e+00,\n       -1.73575840e+00, -1.68315060e+00, -1.79477496e+00, -1.62701433e+00,\n       -1.54892502e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.42856450e-01, -8.15002279e-02, -5.16509458e-02, -1.41255489e-04,\n       -1.40449926e-07, -1.68603061e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85002119e+00, -1.73537247e+00, -1.68318894e+00,\n       -1.79480553e+00, -1.62700258e+00, -1.54885278e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.31490531e-01, -8.93063153e-02,\n       -5.33178826e-02, -1.83744936e-04, -8.42265901e-08, -1.16696464e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.84991165e+00,\n       -1.73524186e+00, -1.68286721e+00, -1.79459549e+00, -1.62667404e+00,\n       -1.54875973e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.40398664e-01, -8.60475296e-02, -4.52742478e-02, -1.33563522e-04,\n       -5.97214936e-08, -4.15845515e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.84990356e+00, -1.73521882e+00, -1.68279669e+00,\n       -1.79458797e+00, -1.62666800e+00, -1.54875707e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.92490803e-01, -1.64137471e-01,\n       -9.20842457e-02, -6.86715948e-04, -1.34005060e-05, -3.01750156e-06,\n       -5.29019354e-05, -1.40514916e-09, -7.24167211e-12, -1.86565744e+00,\n       -1.76326658e+00, -1.71697503e+00, -1.79894668e+00, -1.63544700e+00,\n       -1.55924436e+00, -1.79199872e+00, -1.62164420e+00, -1.54263191e+00,\n       -3.81320530e-01, -1.36662415e-01, -8.07306986e-02, -6.28835397e-04,\n       -1.03870378e-05, -1.73790709e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86435493e+00, -1.76037179e+00, -1.71362914e+00,\n       -1.79864226e+00, -1.63517613e+00, -1.55960277e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.81162734e-01, -1.26683164e-01,\n       -7.94334937e-02, -4.86654128e-04, -5.59240067e-07, -4.62489018e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86374666e+00,\n       -1.75935147e+00, -1.71237624e+00, -1.79849129e+00, -1.63493700e+00,\n       -1.55911061e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.52618475e-01, -1.16145237e-01, -7.79254135e-02, -1.18791639e-04,\n       -4.36652515e-06, -8.42103830e-08, -5.26178981e-05, -1.39760472e-09,\n       -7.20277581e-12, -1.86328777e+00, -1.75897250e+00, -1.71213675e+00,\n       -1.80247999e+00, -1.63691403e+00, -1.55920861e+00, -1.79198706e+00,\n       -1.62158073e+00, -1.54245672e+00, -3.40292739e-01, -1.35449774e-01,\n       -7.76691641e-02, -1.82825453e-04, -3.05728689e-07, -1.31818946e-06,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86292716e+00,\n       -1.75838899e+00, -1.71151791e+00, -1.80203860e+00, -1.63824712e+00,\n       -1.56137789e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.81587893e-01, -1.21545701e-01, -6.39981608e-02, -1.40351817e-04,\n       -1.45683305e-06, -6.44474359e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86247094e+00, -1.75379776e+00, -1.70465565e+00,\n       -1.80198139e+00, -1.63858618e+00, -1.56182863e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.56830506e-01, -1.38898563e-01,\n       -8.45049966e-02, -1.30573730e-04, -6.37445509e-07, -7.95505988e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86122446e+00,\n       -1.75524007e+00, -1.70566129e+00, -1.80018175e+00, -1.63784165e+00,\n       -1.56202753e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.25253500e-01, -1.23382005e-01, -6.18124591e-02, -2.57469079e-04,\n       -2.12463657e-06, -1.99998816e-07, -5.26933706e-05, -1.39928285e-09,\n       -7.21144460e-12, -1.86059290e+00, -1.75359629e+00, -1.70239535e+00,\n       -1.80284757e+00, -1.64027637e+00, -1.56394667e+00, -1.79193138e+00,\n       -1.62154246e+00, -1.54252764e+00, -3.58152553e-01, -1.31535348e-01,\n       -6.53552378e-02, -1.74084348e-04, -5.90907740e-07, -2.71755642e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85959501e+00,\n       -1.75166186e+00, -1.70023773e+00, -1.79922174e+00, -1.63589772e+00,\n       -1.55957604e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.30329835e-01, -1.15582997e-01, -7.14446474e-02, -1.52715239e-04,\n       -2.06460859e-06, -1.21693778e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85881011e+00, -1.74816624e+00, -1.69647723e+00,\n       -1.79894251e+00, -1.63545928e+00, -1.56015063e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.26010958e-01, -1.01237787e-01,\n       -7.41148128e-02, -2.73759284e-04, -3.25572929e-07, -1.24685753e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85879544e+00,\n       -1.74810829e+00, -1.69632347e+00, -1.79894056e+00, -1.63546159e+00,\n       -1.56014844e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.99451573e-01, -1.18471829e-01, -5.48203436e-02, -1.35167414e-04,\n       -7.63194266e-07, -4.14968752e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85884484e+00, -1.74831506e+00, -1.69649000e+00,\n       -1.79894056e+00, -1.63545928e+00, -1.56015063e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.17094702e-01, -1.04451956e-01,\n       -5.76911969e-02, -1.00605190e-04, -3.80393639e-07, -7.62314398e-08,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85879403e+00,\n       -1.74772950e+00, -1.69551006e+00, -1.79893553e+00, -1.63540115e+00,\n       -1.56026094e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.07449713e-01, -1.04989953e-01, -5.99207312e-02, -9.48368129e-05,\n       -2.96854107e-07, -2.07695883e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85869045e+00, -1.74734102e+00, -1.69490707e+00,\n       -1.79879871e+00, -1.63512743e+00, -1.55991847e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.97606209e-01, -7.93323977e-02,\n       -4.79841476e-02, -1.29892836e-04, -1.36457585e-07, -1.13559726e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85854892e+00,\n       -1.74713603e+00, -1.69462794e+00, -1.79796026e+00, -1.63341475e+00,\n       -1.55748447e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.09872397e-01, -1.06757467e-01, -6.31976709e-02, -9.87275366e-05,\n       -4.96046132e-07, -2.03819914e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85853914e+00, -1.74691728e+00, -1.69475507e+00,\n       -1.79794491e+00, -1.63404459e+00, -1.55805914e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.78421473e-01, -9.39476799e-02,\n       -4.71550221e-02, -8.89619721e-05, -1.12635750e-07, -6.02627224e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85840210e+00,\n       -1.74673805e+00, -1.69455066e+00, -1.79793728e+00, -1.63404459e+00,\n       -1.55805913e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -2.70666048e-01, -9.19448025e-02, -6.03652067e-02, -1.17637904e-04,\n       -1.56644657e-07, -9.19368438e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85761747e+00, -1.74686715e+00, -1.69463720e+00,\n       -1.79350090e+00, -1.62425228e+00, -1.54589728e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -2.99844936e-01, -9.36896911e-02,\n       -6.08972487e-02, -8.65985273e-05, -7.54759978e-09, -2.69971382e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85761747e+00,\n       -1.74682885e+00, -1.69460298e+00, -1.79453329e+00, -1.62573114e+00,\n       -1.54763834e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'mean_train_score': array([-4.38154383e-01, -1.60052853e-01, -9.89259573e-02, -1.01313751e-03,\n       -3.89434749e-05, -8.33847527e-06, -5.25999251e-05, -1.39737858e-09,\n       -7.20211555e-12, -1.87920029e+00, -1.79075565e+00, -1.74999399e+00,\n       -1.80079637e+00, -1.63966275e+00, -1.56484943e+00, -1.79061314e+00,\n       -1.62019505e+00, -1.54116967e+00, -3.32810997e-01, -1.09009822e-01,\n       -6.38963288e-02, -2.65765175e-04, -4.71761648e-06, -4.54500293e-07,\n       -5.26176241e-05, -1.39744885e-09, -7.20209136e-12, -1.86396325e+00,\n       -1.76231080e+00, -1.71544184e+00, -1.79758805e+00, -1.63362879e+00,\n       -1.55741976e+00, -1.79058497e+00, -1.62016487e+00, -1.54114053e+00,\n       -3.23841588e-01, -1.08559768e-01, -6.20416163e-02, -3.25505876e-04,\n       -3.23866046e-06, -3.47232486e-07, -5.25744896e-05, -1.39645918e-09,\n       -7.19670446e-12, -1.86353007e+00, -1.76136202e+00, -1.71401741e+00,\n       -1.79942435e+00, -1.63713444e+00, -1.56178707e+00, -1.79059932e+00,\n       -1.62017484e+00, -1.54113486e+00, -3.26611229e-01, -1.03802604e-01,\n       -6.24768501e-02, -2.76012791e-04, -3.42613981e-06, -5.70703660e-07,\n       -5.26094890e-05, -1.39808878e-09, -7.20339034e-12, -1.86192995e+00,\n       -1.75864788e+00, -1.71097029e+00, -1.79846527e+00, -1.63505764e+00,\n       -1.55943644e+00, -1.79063376e+00, -1.62025037e+00, -1.54124371e+00,\n       -3.17656205e-01, -1.06627795e-01, -6.36715989e-02, -2.42858643e-04,\n       -2.92313840e-06, -7.51280698e-07, -5.26103131e-05, -1.39924755e-09,\n       -7.20333290e-12, -1.86136954e+00, -1.75711128e+00, -1.70922528e+00,\n       -1.79785467e+00, -1.63406032e+00, -1.55830173e+00, -1.79059585e+00,\n       -1.62017967e+00, -1.54116105e+00, -3.07618302e-01, -1.01165224e-01,\n       -5.95000904e-02, -2.10225298e-04, -1.42635661e-06, -2.47492373e-07,\n       -5.25724137e-05, -1.39638204e-09, -7.19658753e-12, -1.85983175e+00,\n       -1.75466102e+00, -1.70633216e+00, -1.79725126e+00, -1.63288859e+00,\n       -1.55668904e+00, -1.79054865e+00, -1.62008581e+00, -1.54104023e+00,\n       -3.09159881e-01, -1.03791343e-01, -6.02320322e-02, -2.33372531e-04,\n       -1.35828250e-06, -2.85855335e-07, -5.25832956e-05, -1.39666544e-09,\n       -7.19743683e-12, -1.85918389e+00, -1.75274503e+00, -1.70344682e+00,\n       -1.79798099e+00, -1.63397636e+00, -1.55780317e+00, -1.79056143e+00,\n       -1.62011250e+00, -1.54106976e+00, -3.00096381e-01, -9.51095069e-02,\n       -5.66037421e-02, -2.45522813e-04, -1.24697675e-06, -3.01428655e-07,\n       -5.25736356e-05, -1.39641841e-09, -7.19753576e-12, -1.85820212e+00,\n       -1.75088362e+00, -1.70153650e+00, -1.79753116e+00, -1.63324062e+00,\n       -1.55712221e+00, -1.79055453e+00, -1.62009898e+00, -1.54105711e+00,\n       -2.88022137e-01, -9.54776571e-02, -5.52272653e-02, -1.62215714e-04,\n       -8.28270390e-07, -1.08758998e-07, -5.25729978e-05, -1.39654825e-09,\n       -7.19677745e-12, -1.85768756e+00, -1.74981476e+00, -1.70021245e+00,\n       -1.79722530e+00, -1.63268488e+00, -1.55633597e+00, -1.79055453e+00,\n       -1.62009898e+00, -1.54105711e+00, -2.87807609e-01, -9.65523726e-02,\n       -5.55854899e-02, -1.71084042e-04, -1.51471833e-06, -1.73035869e-07,\n       -5.25774899e-05, -1.39639589e-09, -7.19680350e-12, -1.85728128e+00,\n       -1.74951447e+00, -1.69986763e+00, -1.79712196e+00, -1.63254313e+00,\n       -1.55607762e+00, -1.79056892e+00, -1.62011597e+00, -1.54107518e+00,\n       -2.90190718e-01, -9.29086266e-02, -5.29839258e-02, -1.82437839e-04,\n       -1.01054018e-06, -2.04288511e-07, -5.26092154e-05, -1.39737412e-09,\n       -7.20170305e-12, -1.85737242e+00, -1.74932468e+00, -1.69896486e+00,\n       -1.79760790e+00, -1.63353372e+00, -1.55710483e+00, -1.79057067e+00,\n       -1.62012933e+00, -1.54109641e+00, -2.72620677e-01, -8.43543809e-02,\n       -4.69212595e-02, -1.62332064e-04, -6.83094167e-07, -1.08156047e-07,\n       -5.26087509e-05, -1.39764843e-09, -7.20119786e-12, -1.85725013e+00,\n       -1.74862224e+00, -1.69764851e+00, -1.79734007e+00, -1.63289892e+00,\n       -1.55622183e+00, -1.79056332e+00, -1.62011614e+00, -1.54107841e+00,\n       -2.70768500e-01, -8.30362334e-02, -4.75607038e-02, -1.55823475e-04,\n       -5.59539421e-07, -7.96697302e-08, -5.26225087e-05, -1.39661659e-09,\n       -7.19773548e-12, -1.85719206e+00, -1.74846296e+00, -1.69741980e+00,\n       -1.79747289e+00, -1.63303382e+00, -1.55655139e+00, -1.79057788e+00,\n       -1.62014662e+00, -1.54111809e+00, -2.60249419e-01, -7.77371533e-02,\n       -4.58921507e-02, -1.53251766e-04, -4.98480129e-07, -3.77652878e-08,\n       -5.26062318e-05, -1.39660025e-09, -7.19753014e-12, -1.85705864e+00,\n       -1.74822898e+00, -1.69731587e+00, -1.79730975e+00, -1.63265071e+00,\n       -1.55626441e+00, -1.79058791e+00, -1.62014391e+00, -1.54110877e+00,\n       -2.67332524e-01, -8.01998634e-02, -4.44352952e-02, -1.59912538e-04,\n       -6.14487865e-07, -4.34329152e-08, -5.26103017e-05, -1.39855546e-09,\n       -7.21315740e-12, -1.85710821e+00, -1.74792999e+00, -1.69687065e+00,\n       -1.79729969e+00, -1.63271886e+00, -1.55650399e+00, -1.79060438e+00,\n       -1.62017507e+00, -1.54114684e+00, -2.68762936e-01, -8.16664769e-02,\n       -4.60513778e-02, -1.93281856e-04, -3.65642613e-07, -9.52467630e-08,\n       -5.26257532e-05, -1.39814163e-09, -7.20590874e-12, -1.85712250e+00,\n       -1.74752946e+00, -1.69625596e+00, -1.79719553e+00, -1.63249755e+00,\n       -1.55602600e+00, -1.79060600e+00, -1.62017165e+00, -1.54114078e+00,\n       -2.59431275e-01, -7.82311588e-02, -4.37980311e-02, -1.56306464e-04,\n       -7.44970547e-07, -5.13768047e-08, -5.26474459e-05, -1.39858167e-09,\n       -7.20801976e-12, -1.85691480e+00, -1.74763919e+00, -1.69741478e+00,\n       -1.79767276e+00, -1.63325106e+00, -1.55691407e+00, -1.79061910e+00,\n       -1.62015047e+00, -1.54109991e+00, -2.51888039e-01, -7.83759222e-02,\n       -4.25323741e-02, -1.52448467e-04, -4.22313352e-07, -4.99918365e-08,\n       -5.26338157e-05, -1.39810350e-09, -7.20541999e-12, -1.85690319e+00,\n       -1.74797648e+00, -1.69742703e+00, -1.79741656e+00, -1.63276300e+00,\n       -1.55638929e+00, -1.79061144e+00, -1.62013456e+00, -1.54108225e+00,\n       -2.56137898e-01, -7.59690095e-02, -4.13327298e-02, -1.82225081e-04,\n       -3.89330773e-07, -2.33235803e-08, -5.26602113e-05, -1.39802754e-09,\n       -7.21115848e-12, -1.85676321e+00, -1.74741316e+00, -1.69669028e+00,\n       -1.79772811e+00, -1.63367298e+00, -1.55749666e+00, -1.79060168e+00,\n       -1.62015007e+00, -1.54110387e+00, -3.91951265e-01, -1.48686650e-01,\n       -9.13641521e-02, -6.34786857e-04, -1.29486787e-05, -2.84723508e-06,\n       -5.27488981e-05, -1.40592363e-09, -7.27630787e-12, -1.86529792e+00,\n       -1.76492841e+00, -1.71889746e+00, -1.79882611e+00, -1.63549933e+00,\n       -1.55947087e+00, -1.79097191e+00, -1.62078221e+00, -1.54192728e+00,\n       -3.46254329e-01, -1.18564764e-01, -6.98843302e-02, -2.99712069e-04,\n       -3.83263466e-06, -6.34409232e-07, -5.26333606e-05, -1.39808658e-09,\n       -7.20536445e-12, -1.86289402e+00, -1.75959297e+00, -1.71224296e+00,\n       -1.79694745e+00, -1.63245232e+00, -1.55577973e+00, -1.79073298e+00,\n       -1.62033936e+00, -1.54131210e+00, -3.34453736e-01, -1.13538900e-01,\n       -6.93884078e-02, -2.16952878e-04, -2.16502391e-06, -3.33462778e-07,\n       -5.26210755e-05, -1.39772821e-09, -7.21472969e-12, -1.86279051e+00,\n       -1.75925928e+00, -1.71193027e+00, -1.79671738e+00, -1.63155246e+00,\n       -1.55500575e+00, -1.79059318e+00, -1.62020752e+00, -1.54120453e+00,\n       -3.34952085e-01, -1.14077664e-01, -6.67592278e-02, -2.03309390e-04,\n       -4.29898932e-06, -3.55562996e-07, -5.26079456e-05, -1.39775696e-09,\n       -7.20496057e-12, -1.86189948e+00, -1.75773889e+00, -1.70999609e+00,\n       -1.79836079e+00, -1.63414375e+00, -1.55774422e+00, -1.79065824e+00,\n       -1.62032809e+00, -1.54134509e+00, -3.41299257e-01, -1.16901832e-01,\n       -6.79237586e-02, -1.82374322e-04, -1.93150060e-06, -4.45072460e-07,\n       -5.26414538e-05, -1.39878427e-09, -7.20648335e-12, -1.86015141e+00,\n       -1.75443475e+00, -1.70615511e+00, -1.79772654e+00, -1.63330658e+00,\n       -1.55705142e+00, -1.79063025e+00, -1.62028502e+00, -1.54130062e+00,\n       -3.36030721e-01, -1.17719135e-01, -6.60992036e-02, -2.19351385e-04,\n       -1.88538895e-06, -2.72661938e-07, -5.25757659e-05, -1.39650984e-09,\n       -7.19732788e-12, -1.85924551e+00, -1.75296523e+00, -1.70418910e+00,\n       -1.79777573e+00, -1.63351915e+00, -1.55702762e+00, -1.79059213e+00,\n       -1.62017581e+00, -1.54115222e+00, -3.31017820e-01, -1.09406851e-01,\n       -6.30835882e-02, -2.17745435e-04, -1.16867971e-06, -2.16318428e-07,\n       -5.25690024e-05, -1.39624947e-09, -7.19627013e-12, -1.85724085e+00,\n       -1.74960918e+00, -1.69994947e+00, -1.79692873e+00, -1.63229162e+00,\n       -1.55561793e+00, -1.79054715e+00, -1.62008351e+00, -1.54103799e+00,\n       -3.19780131e-01, -1.09386472e-01, -6.28660220e-02, -2.33127978e-04,\n       -2.34034649e-06, -2.21396488e-07, -5.26725412e-05, -1.39895806e-09,\n       -7.20987143e-12, -1.85670864e+00, -1.74794991e+00, -1.69733320e+00,\n       -1.79641795e+00, -1.63145205e+00, -1.55496222e+00, -1.79065852e+00,\n       -1.62030346e+00, -1.54130968e+00, -3.20501548e-01, -1.05491559e-01,\n       -5.72843317e-02, -1.78761820e-04, -1.17140025e-06, -3.18683550e-07,\n       -5.26399933e-05, -1.39873194e-09, -7.20870537e-12, -1.85614204e+00,\n       -1.74724463e+00, -1.69666341e+00, -1.79573282e+00, -1.63024977e+00,\n       -1.55350952e+00, -1.79059771e+00, -1.62018700e+00, -1.54116653e+00,\n       -3.22633595e-01, -9.99957028e-02, -5.84936175e-02, -1.20037798e-04,\n       -6.28561915e-07, -8.49014861e-08, -5.25635819e-05, -1.39616208e-09,\n       -7.19545671e-12, -1.85562332e+00, -1.74610764e+00, -1.69533878e+00,\n       -1.79516213e+00, -1.62899046e+00, -1.55202119e+00, -1.79053507e+00,\n       -1.62006207e+00, -1.54101216e+00, -3.04640991e-01, -9.85895832e-02,\n       -5.79181290e-02, -1.72885289e-04, -7.96692909e-07, -5.67935960e-08,\n       -5.25648707e-05, -1.39619631e-09, -7.19563325e-12, -1.85540334e+00,\n       -1.74581561e+00, -1.69481322e+00, -1.79538208e+00, -1.62956827e+00,\n       -1.55263624e+00, -1.79054310e+00, -1.62007096e+00, -1.54102064e+00,\n       -3.11985108e-01, -1.00237030e-01, -5.36385164e-02, -1.33176201e-04,\n       -7.51555445e-07, -4.54302591e-08, -5.25635819e-05, -1.39616208e-09,\n       -7.19545671e-12, -1.85525017e+00, -1.74538768e+00, -1.69441054e+00,\n       -1.79540969e+00, -1.62924127e+00, -1.55223618e+00, -1.79053507e+00,\n       -1.62006207e+00, -1.54101216e+00, -3.05853269e-01, -9.21933385e-02,\n       -5.34591451e-02, -1.37499940e-04, -3.92231421e-07, -5.99604788e-08,\n       -5.25646067e-05, -1.39618930e-09, -7.19550986e-12, -1.85533820e+00,\n       -1.74566138e+00, -1.69461572e+00, -1.79559770e+00, -1.62939716e+00,\n       -1.55246523e+00, -1.79054313e+00, -1.62006954e+00, -1.54101926e+00,\n       -2.93302476e-01, -8.82409346e-02, -5.07810670e-02, -1.32227193e-04,\n       -3.23882183e-07, -9.06253519e-08, -5.25653858e-05, -1.39621719e-09,\n       -7.19570541e-12, -1.85485819e+00, -1.74447720e+00, -1.69303512e+00,\n       -1.79560947e+00, -1.63034647e+00, -1.55372304e+00, -1.79053910e+00,\n       -1.62006880e+00, -1.54102067e+00, -2.87595916e-01, -8.48832010e-02,\n       -4.81475827e-02, -1.27950211e-04, -1.45648606e-07, -2.72170046e-08,\n       -5.25717366e-05, -1.39637868e-09, -7.19663692e-12, -1.85489572e+00,\n       -1.74452357e+00, -1.69298688e+00, -1.79561792e+00, -1.63046146e+00,\n       -1.55405408e+00, -1.79055990e+00, -1.62010838e+00, -1.54106878e+00,\n       -2.93848944e-01, -8.80863945e-02, -4.86883626e-02, -1.19237180e-04,\n       -3.05730640e-07, -4.75434082e-08, -5.25719925e-05, -1.39638548e-09,\n       -7.19660762e-12, -1.85485684e+00, -1.74441745e+00, -1.69256976e+00,\n       -1.79556181e+00, -1.63019739e+00, -1.55351866e+00, -1.79055990e+00,\n       -1.62010838e+00, -1.54106871e+00, -2.81481114e-01, -8.58536130e-02,\n       -4.81579685e-02, -1.04902785e-04, -3.06039736e-07, -4.34594886e-08,\n       -5.25710670e-05, -1.39639950e-09, -7.19668082e-12, -1.85500243e+00,\n       -1.74438070e+00, -1.69318017e+00, -1.79526405e+00, -1.62981549e+00,\n       -1.55302767e+00, -1.79055816e+00, -1.62010681e+00, -1.54106728e+00,\n       -2.82558065e-01, -8.06797681e-02, -4.83080701e-02, -1.41121770e-04,\n       -3.26992092e-07, -5.51858865e-08, -5.25635819e-05, -1.39616208e-09,\n       -7.19545671e-12, -1.85448543e+00, -1.74390683e+00, -1.69286594e+00,\n       -1.79461139e+00, -1.62790301e+00, -1.55053201e+00, -1.79053507e+00,\n       -1.62006207e+00, -1.54101216e+00, -2.87844323e-01, -8.77095357e-02,\n       -4.86085028e-02, -1.19355235e-04, -4.18801288e-07, -1.57975458e-08,\n       -5.25639234e-05, -1.39617115e-09, -7.19550359e-12, -1.85416567e+00,\n       -1.74314592e+00, -1.69213222e+00, -1.79515841e+00, -1.62909015e+00,\n       -1.55207995e+00, -1.79053517e+00, -1.62006216e+00, -1.54101224e+00]), 'std_train_score': array([3.31833706e-02, 1.60250518e-02, 9.94600434e-03, 6.10162081e-04,\n       2.78432182e-05, 7.13357364e-06, 1.10049096e-07, 3.08176032e-12,\n       1.89126446e-14, 5.49152116e-03, 9.02009644e-03, 1.03766608e-02,\n       5.10274055e-03, 8.35068080e-03, 9.74018342e-03, 2.29874869e-03,\n       2.12959059e-03, 2.05240842e-03, 1.29872494e-02, 1.12214039e-02,\n       6.39785321e-03, 1.18483194e-04, 4.03706299e-06, 6.70467609e-07,\n       1.72374198e-07, 4.17020504e-12, 2.14841287e-14, 5.25885530e-03,\n       8.14980190e-03, 9.22061604e-03, 3.64418724e-03, 5.61541156e-03,\n       6.50011976e-03, 2.27761415e-03, 2.09133460e-03, 2.01034111e-03,\n       2.55109004e-02, 1.42730342e-02, 8.31217204e-03, 2.68216763e-04,\n       2.58312047e-06, 2.26335066e-07, 6.95846512e-08, 1.85829108e-12,\n       9.70015558e-15, 5.72465485e-03, 8.93302987e-03, 9.97255874e-03,\n       4.15532410e-03, 7.10038794e-03, 8.63970351e-03, 2.28141515e-03,\n       2.10624980e-03, 2.01637627e-03, 1.41412615e-02, 1.17156713e-02,\n       9.04699759e-03, 9.17838298e-05, 3.63238077e-06, 3.14140018e-07,\n       1.29643995e-07, 4.50677636e-12, 1.96499520e-14, 5.63845531e-03,\n       9.16015834e-03, 1.04579210e-02, 3.60132868e-03, 5.85895921e-03,\n       6.93386431e-03, 2.31199918e-03, 2.15568952e-03, 2.09198890e-03,\n       2.31123327e-02, 1.46125171e-02, 8.71636929e-03, 1.53181024e-04,\n       3.60283945e-06, 8.46333732e-07, 1.19804879e-07, 6.89929642e-12,\n       1.75541456e-14, 6.11204491e-03, 9.92367934e-03, 1.14573341e-02,\n       3.98061702e-03, 6.70112207e-03, 7.93975831e-03, 2.28842914e-03,\n       2.10829969e-03, 2.02996920e-03, 2.15776577e-02, 1.05066146e-02,\n       9.96945639e-03, 9.01297786e-05, 1.65238251e-06, 1.95683484e-07,\n       7.60313277e-08, 1.99701728e-12, 1.03046365e-14, 5.88463130e-03,\n       9.38240222e-03, 1.07281873e-02, 3.61166544e-03, 5.89603614e-03,\n       7.07049309e-03, 2.26695244e-03, 2.05922864e-03, 1.96256614e-03,\n       7.32045048e-03, 9.07253444e-03, 7.39391955e-03, 1.25301740e-04,\n       1.45685669e-06, 2.89375829e-07, 9.79065104e-08, 2.57250782e-12,\n       1.19739772e-14, 4.19515940e-03, 7.40266443e-03, 8.71079033e-03,\n       4.26430808e-03, 6.73711818e-03, 8.07408662e-03, 2.27727040e-03,\n       2.08124205e-03, 1.98704008e-03, 3.47175159e-02, 1.09962135e-02,\n       8.07273431e-03, 1.11545468e-04, 1.55385612e-06, 4.10891965e-07,\n       7.97762368e-08, 2.09985608e-12, 1.23271426e-14, 4.38667286e-03,\n       7.76147826e-03, 9.21784159e-03, 4.08203735e-03, 6.33042982e-03,\n       7.58288724e-03, 2.27411308e-03, 2.07508141e-03, 1.98332071e-03,\n       2.45943942e-02, 1.14672255e-02, 7.05932725e-03, 4.12615345e-05,\n       6.55536146e-07, 1.04155838e-07, 7.86459941e-08, 2.35033462e-12,\n       1.08434695e-14, 4.50831077e-03, 8.15978037e-03, 9.54482390e-03,\n       3.87203669e-03, 6.20205674e-03, 7.53255481e-03, 2.27411308e-03,\n       2.07508141e-03, 1.98332071e-03, 2.95878627e-02, 6.89681602e-03,\n       6.46122189e-03, 8.13488066e-05, 1.54896458e-06, 1.59227939e-07,\n       8.30528109e-08, 1.98572320e-12, 1.04553183e-14, 4.24957817e-03,\n       7.73445351e-03, 9.28515406e-03, 4.18058356e-03, 6.87343227e-03,\n       8.13964505e-03, 2.28165004e-03, 2.08391189e-03, 1.99265827e-03,\n       1.51976591e-02, 7.60071517e-03, 6.66193387e-03, 8.86729250e-05,\n       8.27021142e-07, 2.40922272e-07, 1.45569712e-07, 3.86648767e-12,\n       1.99702848e-14, 4.87247337e-03, 8.92970240e-03, 9.86322283e-03,\n       4.30638874e-03, 6.69120607e-03, 7.92370158e-03, 2.28595360e-03,\n       2.09797797e-03, 2.01282336e-03, 2.20612617e-02, 9.31257997e-03,\n       6.02454246e-03, 8.83822096e-05, 1.00900904e-06, 1.38872618e-07,\n       1.45324659e-07, 4.09575734e-12, 1.97500427e-14, 4.93070724e-03,\n       9.07866787e-03, 9.78486728e-03, 3.91330273e-03, 5.42809222e-03,\n       6.17218095e-03, 2.27981683e-03, 2.08572025e-03, 1.99663667e-03,\n       2.04277699e-02, 7.59721186e-03, 4.09218943e-03, 8.11726077e-05,\n       7.00326389e-07, 1.06586371e-07, 1.41843911e-07, 1.73359313e-12,\n       8.80105032e-15, 4.85626240e-03, 9.01980399e-03, 9.64620450e-03,\n       4.18891701e-03, 5.58112997e-03, 6.37611687e-03, 2.23664313e-03,\n       2.00193733e-03, 1.89400070e-03, 2.71263865e-02, 8.03788329e-03,\n       4.72000129e-03, 6.81105646e-05, 4.59013866e-07, 3.21611267e-08,\n       1.03866997e-07, 1.60014837e-12, 8.28483127e-15, 4.68136352e-03,\n       8.61027781e-03, 9.23747114e-03, 4.17655411e-03, 5.32360758e-03,\n       5.87013967e-03, 2.23792876e-03, 1.99329418e-03, 1.87994163e-03,\n       2.60069952e-02, 8.89576202e-03, 3.81879839e-03, 5.19812710e-05,\n       4.63234847e-07, 5.08481689e-08, 1.27137527e-07, 4.68866263e-12,\n       3.72042315e-14, 5.06048746e-03, 8.81685350e-03, 9.41850119e-03,\n       4.04710127e-03, 4.74683782e-03, 5.26760034e-03, 2.25257657e-03,\n       2.02157945e-03, 1.91482128e-03, 2.09223420e-02, 6.15723767e-03,\n       5.96954669e-03, 6.21004585e-05, 3.26839327e-07, 9.40147376e-08,\n       1.61733380e-07, 5.21977306e-12, 2.75996287e-14, 4.82881130e-03,\n       8.97993417e-03, 9.28178766e-03, 3.98948512e-03, 5.55269158e-03,\n       6.06866794e-03, 2.21517474e-03, 1.96121864e-03, 1.84661784e-03,\n       1.35159841e-02, 8.04356876e-03, 6.11398418e-03, 5.31097956e-05,\n       9.36645557e-07, 5.94981446e-08, 2.17133487e-07, 6.32201704e-12,\n       3.28562974e-14, 3.86453644e-03, 7.41128483e-03, 9.14981105e-03,\n       3.55125478e-03, 5.55149459e-03, 6.22579277e-03, 2.27504829e-03,\n       2.05755997e-03, 1.95817860e-03, 2.50549141e-02, 1.31731585e-02,\n       8.07973347e-03, 5.50276233e-05, 3.71807252e-07, 5.49429585e-08,\n       1.78945868e-07, 4.96726930e-12, 2.56141812e-14, 3.92975967e-03,\n       7.61638259e-03, 9.20787865e-03, 3.76226491e-03, 5.82961993e-03,\n       6.45242930e-03, 2.28089927e-03, 2.06570328e-03, 1.96555376e-03,\n       1.66886763e-02, 9.82192536e-03, 7.01263548e-03, 8.45226455e-05,\n       5.43895895e-07, 1.97626977e-08, 2.54331912e-07, 4.66416440e-12,\n       4.22458770e-14, 3.89853595e-03, 7.65414273e-03, 9.36125682e-03,\n       3.74186839e-03, 6.13310022e-03, 6.66087889e-03, 2.26905981e-03,\n       2.04562659e-03, 1.93862421e-03, 1.82725738e-02, 1.41381036e-02,\n       1.01453088e-02, 5.45856674e-04, 1.47031162e-05, 3.45701520e-06,\n       3.15092798e-07, 2.12963264e-11, 2.03777423e-13, 3.50609007e-03,\n       6.96461092e-03, 8.62467273e-03, 5.27168105e-03, 8.74937625e-03,\n       1.02138032e-02, 2.19264507e-03, 2.11575054e-03, 2.23250799e-03,\n       2.70517339e-02, 1.31921284e-02, 7.14067911e-03, 2.72923055e-04,\n       3.83401817e-06, 7.63249178e-07, 1.39617711e-07, 3.61700192e-12,\n       2.10459103e-14, 3.37596937e-03, 7.11391935e-03, 9.26896596e-03,\n       4.75242433e-03, 7.44117924e-03, 8.35093043e-03, 2.27353572e-03,\n       2.17539427e-03, 2.11628397e-03, 2.90185982e-02, 7.79139181e-03,\n       5.59374573e-03, 1.44441688e-04, 2.80179590e-06, 4.04088577e-07,\n       1.37156150e-07, 3.65710230e-12, 5.08594599e-14, 3.69837836e-03,\n       8.43345903e-03, 1.05540499e-02, 2.83076053e-03, 3.64106017e-03,\n       4.01340250e-03, 2.21773416e-03, 1.94018657e-03, 1.81838030e-03,\n       2.62917443e-02, 1.45699569e-02, 1.02763533e-02, 1.28096776e-04,\n       5.08740695e-06, 4.14629511e-07, 8.94228673e-08, 3.09333718e-12,\n       1.66185403e-14, 4.03672495e-03, 9.14396836e-03, 1.16327220e-02,\n       2.03144122e-03, 3.12129521e-03, 3.75043943e-03, 2.22433021e-03,\n       1.94883298e-03, 1.81984819e-03, 2.68818961e-02, 1.67760781e-02,\n       9.23588014e-03, 9.18435667e-05, 2.19393514e-06, 4.94735076e-07,\n       1.73499587e-07, 6.21632060e-12, 2.02292950e-14, 4.84780797e-03,\n       9.92953760e-03, 1.23288284e-02, 2.92953669e-03, 4.05063195e-03,\n       4.45651548e-03, 2.18096198e-03, 1.87342689e-03, 1.73708698e-03,\n       2.99468194e-02, 1.35861385e-02, 7.26692388e-03, 1.64827984e-04,\n       1.81709245e-06, 2.22195963e-07, 6.73901865e-08, 1.80680095e-12,\n       9.35632849e-15, 5.18402188e-03, 1.02211720e-02, 1.26088472e-02,\n       2.77434548e-03, 4.04155963e-03, 4.43060066e-03, 2.23837477e-03,\n       2.01079046e-03, 1.90828357e-03, 3.06416603e-02, 1.82394635e-02,\n       9.88787728e-03, 1.87430699e-04, 1.06639776e-06, 2.50368420e-07,\n       7.01664355e-08, 1.80952254e-12, 9.69456905e-15, 4.81054490e-03,\n       8.98835178e-03, 1.07065544e-02, 4.31168846e-03, 6.54775645e-03,\n       7.46388620e-03, 2.26699705e-03, 2.06020352e-03, 1.96451001e-03,\n       3.34601748e-02, 1.41073360e-02, 5.88311447e-03, 1.71734618e-04,\n       2.32356118e-06, 2.31484161e-07, 2.45526299e-07, 6.33220254e-12,\n       3.26265148e-14, 5.01929879e-03, 8.02131506e-03, 9.16075543e-03,\n       4.36215590e-03, 6.68945242e-03, 7.69623034e-03, 2.27903517e-03,\n       2.10067177e-03, 2.02557748e-03, 3.16125972e-02, 1.41791419e-02,\n       6.64681101e-03, 1.71526024e-04, 1.82684703e-06, 7.32131082e-07,\n       2.45488035e-07, 8.09345706e-12, 4.17148029e-14, 5.18996726e-03,\n       8.67011705e-03, 9.96785748e-03, 4.41239264e-03, 7.16512355e-03,\n       8.22609205e-03, 2.28611419e-03, 2.11696889e-03, 2.04634761e-03,\n       2.51839720e-02, 1.36627339e-02, 1.27169884e-02, 4.60497493e-05,\n       7.21504273e-07, 1.16704605e-07, 6.62843858e-08, 1.76054918e-12,\n       9.07842878e-15, 5.08395409e-03, 8.18208991e-03, 9.35284321e-03,\n       4.26645615e-03, 6.44087240e-03, 7.52282842e-03, 2.25792294e-03,\n       2.04295095e-03, 1.94326644e-03, 2.25368641e-02, 1.24770048e-02,\n       1.19714954e-02, 1.04220965e-04, 1.15426452e-06, 5.61912149e-08,\n       6.74133886e-08, 1.79053881e-12, 9.23579922e-15, 5.27715810e-03,\n       8.39020066e-03, 9.26513948e-03, 3.98956196e-03, 5.98582455e-03,\n       6.88409557e-03, 2.26443697e-03, 2.05019229e-03, 1.95017392e-03,\n       3.39651149e-02, 1.39674047e-02, 1.07321031e-02, 6.53497801e-05,\n       1.07133550e-06, 6.49762206e-08, 6.62843858e-08, 1.76054896e-12,\n       9.07842878e-15, 5.10649660e-03, 7.88252650e-03, 8.45215552e-03,\n       3.66246347e-03, 4.86854901e-03, 5.54331374e-03, 2.25792294e-03,\n       2.04295095e-03, 1.94326644e-03, 3.43419584e-02, 1.51789920e-02,\n       8.04725159e-03, 8.87238376e-05, 3.39268914e-07, 9.64114326e-08,\n       6.68740141e-08, 1.77621028e-12, 9.10612877e-15, 5.20162857e-03,\n       8.24656329e-03, 9.01846550e-03, 4.05503311e-03, 5.52888914e-03,\n       6.40262525e-03, 2.26214974e-03, 2.04686606e-03, 1.94699295e-03,\n       2.83563000e-02, 1.61142986e-02, 9.51935367e-03, 7.63948890e-05,\n       3.51968704e-07, 1.40413501e-07, 6.74127053e-08, 1.79597389e-12,\n       9.23106671e-15, 5.29203465e-03, 8.99802218e-03, 1.04457322e-02,\n       4.41979271e-03, 6.80858101e-03, 8.13827057e-03, 2.26000173e-03,\n       2.04646774e-03, 1.94775610e-03, 2.92620745e-02, 1.02657499e-02,\n       5.17556293e-03, 7.33449978e-05, 1.79018179e-07, 3.44963956e-08,\n       7.23532386e-08, 1.92173372e-12, 9.93574919e-15, 5.25101362e-03,\n       8.84870146e-03, 9.84183138e-03, 3.74885882e-03, 5.80920366e-03,\n       6.99244998e-03, 2.26741828e-03, 2.06270727e-03, 1.96893211e-03,\n       3.19622169e-02, 1.27511532e-02, 8.15029575e-03, 4.52372899e-05,\n       4.00669418e-07, 5.82292158e-08, 7.26604122e-08, 1.92989277e-12,\n       9.94593264e-15, 5.24568242e-03, 8.87484417e-03, 9.64315213e-03,\n       3.71929065e-03, 6.01099144e-03, 7.17359163e-03, 2.26741073e-03,\n       2.06270830e-03, 1.96890547e-03, 2.34798980e-02, 1.42423173e-02,\n       7.41941476e-03, 3.00735035e-05, 4.00061083e-07, 6.12444910e-08,\n       7.22724585e-08, 1.97002272e-12, 1.01541699e-14, 4.92388628e-03,\n       8.61004270e-03, 9.80830460e-03, 3.86959543e-03, 6.31750529e-03,\n       7.55005073e-03, 2.26654190e-03, 2.06194463e-03, 1.96822289e-03,\n       3.06164038e-02, 9.52876594e-03, 8.04562994e-03, 9.68824075e-05,\n       5.27570861e-07, 7.16464086e-08, 6.62843858e-08, 1.76054896e-12,\n       9.07842878e-15, 4.47276602e-03, 7.61479063e-03, 8.71857636e-03,\n       3.09757591e-03, 4.87574911e-03, 5.83516643e-03, 2.25792294e-03,\n       2.04295095e-03, 1.94326644e-03, 2.83705352e-02, 1.00438904e-02,\n       8.40366394e-03, 4.45802492e-05, 9.74417402e-07, 2.99543202e-08,\n       6.65635473e-08, 1.76796444e-12, 9.11748415e-15, 4.52845047e-03,\n       7.08521527e-03, 8.34314872e-03, 4.19244431e-03, 7.06290460e-03,\n       8.45533902e-03, 2.25800203e-03, 2.04302251e-03, 1.94333451e-03])}"}, {"dataset_variant": "only_totals", "experiment_setup": {"dataset_variants": ["complete", "only_binary", "only_totals"], "only_BMI": "True", "use_special_mask": "False", "reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "scaler": "[MinMaxScaler(), StandardScaler(), RobustScaler()]", "regressor": "[GradientBoostingRegressor(criterion = 'mse')]", "floor_labels": "True", "params": [{"reduce_dim": "[MaskedPCA(mask=mask), MaskedSVD(mask=mask)]", "reduce_dim__n_components": "np.arange(1, X[:, mask].shape[1])", "scaler": "[MinMaxScaler()]", "regressor__learning_rate": "[0.1, 1e-3]", "regressor__n_estimators": "[100, 200, 250]", "regressor__max_depth": "[5, 10, 15]"}], "metrics": "['neg_root_mean_squared_error']", "binarize": "False", "n_split_outer_kcv": 10}, "best_params": "{'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}", "mean_test_score": -1.4749011227976871, "cv_results": "{'mean_fit_time': array([0.07559974, 0.15779953, 0.22060051, 0.11959946, 0.25399771,\n       0.29580119, 0.12889946, 0.24599383, 0.31260056, 0.11309981,\n       0.15670085, 0.2187994 , 0.11760042, 0.23609941, 0.29050779,\n       0.12599804, 0.24859815, 0.33320029, 0.09059751, 0.18499997,\n       0.21630042, 0.13910048, 0.27120118, 0.34360335, 0.17739782,\n       0.28610017, 0.34699981, 0.08689868, 0.17670028, 0.21379986,\n       0.13140044, 0.2893954 , 0.34560206, 0.13909731, 0.27659991,\n       0.34990187, 0.10259833, 0.22709758, 0.25289969, 0.16570008,\n       0.30520182, 0.37899737, 0.15709932, 0.32680168, 0.3974005 ,\n       0.09899788, 0.18999963, 0.23840027, 0.14760022, 0.28730245,\n       0.37409763, 0.17430117, 0.30550125, 0.38469958, 0.07769809,\n       0.1556004 , 0.21480145, 0.13309851, 0.24909923, 0.29610009,\n       0.12110014, 0.24429936, 0.30350204, 0.07989812, 0.17610016,\n       0.20030928, 0.1291995 , 0.23149912, 0.2864022 , 0.12319725,\n       0.24629574, 0.32930028, 0.08639791, 0.18360057, 0.21720009,\n       0.13550043, 0.26950159, 0.33860018, 0.13959806, 0.2961019 ,\n       0.35679724, 0.08689888, 0.17669983, 0.21390038, 0.13110018,\n       0.26030209, 0.34840024, 0.16629984, 0.27840316, 0.34389811,\n       0.0976006 , 0.20629659, 0.26959984, 0.1493959 , 0.31810238,\n       0.37969911, 0.15289824, 0.29589975, 0.40149984, 0.11530046,\n       0.20609939, 0.2347997 , 0.14550023, 0.29280236, 0.37359786,\n       0.15429904, 0.31940188, 0.37749939]), 'std_fit_time': array([0.00080056, 0.00752002, 0.02662102, 0.00352579, 0.02965779,\n       0.00981543, 0.00776544, 0.00514593, 0.0123107 , 0.0206111 ,\n       0.00920975, 0.02806746, 0.00335234, 0.00747638, 0.00654256,\n       0.00417202, 0.00463739, 0.03451683, 0.01315491, 0.02147119,\n       0.00500192, 0.00953416, 0.00410196, 0.01373546, 0.03988951,\n       0.02778885, 0.01402837, 0.00446248, 0.01077919, 0.00545488,\n       0.00502399, 0.03697202, 0.02598493, 0.00401236, 0.0176653 ,\n       0.01615307, 0.01053841, 0.03277634, 0.02032421, 0.01783739,\n       0.00817804, 0.00799919, 0.01412349, 0.03631438, 0.03202192,\n       0.0107544 , 0.00530716, 0.01087078, 0.00889005, 0.01050558,\n       0.02824311, 0.02525949, 0.00822553, 0.01510018, 0.00148067,\n       0.00936171, 0.02896536, 0.02469517, 0.02753405, 0.01308327,\n       0.00137507, 0.01007144, 0.00657438, 0.0057366 , 0.02796603,\n       0.01827992, 0.01993144, 0.00352829, 0.00316359, 0.00222602,\n       0.00567587, 0.03450374, 0.00091743, 0.01778951, 0.00577994,\n       0.00206051, 0.00207032, 0.0079401 , 0.0054092 , 0.03325294,\n       0.02895736, 0.00104568, 0.00715552, 0.00304661, 0.0030466 ,\n       0.00605114, 0.03467048, 0.03536595, 0.00650934, 0.0072835 ,\n       0.00228936, 0.01666191, 0.02975662, 0.00290626, 0.0286115 ,\n       0.00697005, 0.00568325, 0.00493154, 0.038145  , 0.0254608 ,\n       0.02244706, 0.0021355 , 0.00410406, 0.0051753 , 0.02274326,\n       0.00616528, 0.01772898, 0.00543819]), 'mean_score_time': array([0.00110061, 0.00120022, 0.00179942, 0.00100036, 0.00190012,\n       0.00210047, 0.00110049, 0.00160224, 0.00209901, 0.00159948,\n       0.0010999 , 0.00130014, 0.0012001 , 0.00180054, 0.00200045,\n       0.00140033, 0.00200019, 0.0023005 , 0.00109982, 0.00110064,\n       0.00110025, 0.00130076, 0.00180008, 0.00199978, 0.00120087,\n       0.00190251, 0.00200098, 0.00089989, 0.00109961, 0.00130036,\n       0.00130007, 0.00180316, 0.0018003 , 0.00130048, 0.00190029,\n       0.0020004 , 0.0013001 , 0.00140042, 0.0011003 , 0.00159981,\n       0.00190017, 0.00210021, 0.0014009 , 0.00190048, 0.00220139,\n       0.00100038, 0.0010005 , 0.00140042, 0.00120025, 0.00170043,\n       0.00180244, 0.00150039, 0.00200009, 0.00210056, 0.00100048,\n       0.00120184, 0.00110049, 0.0015002 , 0.00190048, 0.00190089,\n       0.00129993, 0.00190034, 0.00200009, 0.0009001 , 0.00150039,\n       0.00129979, 0.00140073, 0.00160038, 0.00200009, 0.00140083,\n       0.00190086, 0.00210021, 0.00090001, 0.00110002, 0.00120022,\n       0.0015003 , 0.00170021, 0.00230007, 0.0013001 , 0.00180061,\n       0.00190067, 0.00100024, 0.00100017, 0.00110002, 0.00140007,\n       0.00140009, 0.00200062, 0.00139859, 0.00170178, 0.00200119,\n       0.00109992, 0.00110021, 0.00140028, 0.00150027, 0.00190043,\n       0.00210056, 0.0013001 , 0.00170035, 0.00190074, 0.00129998,\n       0.00100031, 0.00120082, 0.00119987, 0.00170081, 0.00199993,\n       0.00110185, 0.00190043, 0.00199888]), 'std_score_time': array([3.00065899e-04, 4.00233723e-04, 3.99149645e-04, 5.91739352e-07,\n       2.99986705e-04, 2.99862962e-04, 2.99867774e-04, 4.87394408e-04,\n       3.00433776e-04, 4.89826280e-04, 3.00067453e-04, 4.58172548e-04,\n       3.99995131e-04, 4.00126118e-04, 3.57627869e-07, 4.89416774e-04,\n       5.35248383e-07, 4.57683844e-04, 3.00091168e-04, 2.99979848e-04,\n       3.00105617e-04, 4.58079006e-04, 4.00317510e-04, 4.32064199e-06,\n       3.99793235e-04, 3.00507208e-04, 2.86509304e-06, 2.99963002e-04,\n       2.99924497e-04, 4.58708814e-04, 4.58636724e-04, 4.01002969e-04,\n       4.00067115e-04, 4.58266474e-04, 3.00201111e-04, 5.74682750e-07,\n       4.58047786e-04, 4.89969761e-04, 2.99773133e-04, 6.62730924e-04,\n       2.99764059e-04, 3.00098166e-04, 4.89338493e-04, 2.99471518e-04,\n       3.99496010e-04, 8.08165133e-07, 4.54873658e-07, 4.89629710e-04,\n       4.00102731e-04, 4.58323457e-04, 4.00917951e-04, 4.99987720e-04,\n       8.39558452e-07, 2.99978540e-04, 2.39607707e-07, 4.02821189e-04,\n       3.01456885e-04, 5.00608179e-04, 3.00027853e-04, 3.00249472e-04,\n       4.58417082e-04, 2.99819704e-04, 4.52367448e-07, 3.00034054e-04,\n       6.70363121e-04, 4.58354929e-04, 4.89183537e-04, 4.89930773e-04,\n       6.03156597e-07, 4.89347524e-04, 3.00160257e-04, 3.00098507e-04,\n       3.00002212e-04, 3.00188927e-04, 3.99935429e-04, 5.00369181e-04,\n       4.58391038e-04, 4.58380869e-04, 4.58932504e-04, 4.00162045e-04,\n       3.00089804e-04, 1.54163009e-06, 6.65866854e-07, 2.99946772e-04,\n       4.90068100e-04, 4.90047605e-04, 7.96475081e-07, 4.87707829e-04,\n       4.58388632e-04, 2.74792281e-06, 2.99978559e-04, 2.99883116e-04,\n       4.89794525e-04, 4.99916236e-04, 2.99614188e-04, 2.99581862e-04,\n       4.57995711e-04, 4.58589963e-04, 2.99796931e-04, 4.58490015e-04,\n       4.29153442e-07, 3.99646397e-04, 6.00926442e-04, 4.58892360e-04,\n       5.47434187e-06, 2.99574463e-04, 2.99692552e-04, 4.65551578e-06]), 'param_reduce_dim': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1)],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_reduce_dim__n_components': masked_array(data=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n                   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n                   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n                   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__learning_rate': masked_array(data=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n                   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.001,\n                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__max_depth': masked_array(data=[5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10,\n                   15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5,\n                   10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5,\n                   5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10, 10, 15, 15,\n                   15, 5, 5, 5, 10, 10, 10, 15, 15, 15, 5, 5, 5, 10, 10,\n                   10, 15, 15, 15],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_regressor__n_estimators': masked_array(data=[100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250, 100, 200,\n                   250, 100, 200, 250, 100, 200, 250, 100, 200, 250, 100,\n                   200, 250, 100, 200, 250, 100, 200, 250, 100, 200, 250,\n                   100, 200, 250, 100, 200, 250, 100, 200, 250],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_scaler': masked_array(data=[MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler(),\n                   MinMaxScaler(), MinMaxScaler(), MinMaxScaler()],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 1, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 2, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.1, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 5, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 10, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 100, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 200, 'scaler': MinMaxScaler()}, {'reduce_dim': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True]),\n          n_components=1), 'reduce_dim__n_components': 3, 'regressor__learning_rate': 0.001, 'regressor__max_depth': 15, 'regressor__n_estimators': 250, 'scaler': MinMaxScaler()}], 'split0_test_score': array([-1.83666411, -1.86921772, -1.91193661, -1.73185192, -1.77119474,\n       -1.67232634, -2.12829244, -2.10756619, -2.10886173, -1.94981163,\n       -1.90283437, -1.88552428, -1.96358526, -1.89923039, -1.87779751,\n       -1.98647881, -1.9565666 , -1.94532247, -1.63621563, -1.73365783,\n       -1.66630839, -1.79497548, -1.75748743, -1.77745912, -2.14483397,\n       -2.11274612, -2.08401921, -1.94172072, -1.86476242, -1.83378524,\n       -1.94444231, -1.87902899, -1.85196358, -1.94192693, -1.88242746,\n       -1.86062616, -1.50723469, -1.59300433, -1.62001988, -1.81624038,\n       -1.7749216 , -1.78704172, -2.11044458, -2.06531636, -2.0863919 ,\n       -1.93695612, -1.85755654, -1.82928354, -1.94193166, -1.87409261,\n       -1.84438526, -1.94193153, -1.87682704, -1.85298873, -1.52809249,\n       -1.55933606, -1.56502758, -1.85385521, -1.71019941, -1.710105  ,\n       -2.22273176, -2.26389125, -2.21804579, -1.94199585, -1.8620418 ,\n       -1.82725127, -1.97759551, -1.95996889, -1.9569673 , -1.97444755,\n       -1.93866128, -1.92396847, -1.50035719, -1.51688215, -1.53162886,\n       -1.30394679, -1.35938961, -1.37714257, -1.6791118 , -1.74324256,\n       -1.6663457 , -1.92386726, -1.83041849, -1.78976536, -1.91263709,\n       -1.79750548, -1.75242804, -1.92143639, -1.83480453, -1.79845253,\n       -1.57088971, -1.61446769, -1.63527892, -1.84521787, -1.70709818,\n       -1.60274429, -1.84072477, -1.8097818 , -1.8433596 , -1.94228466,\n       -1.86715878, -1.83180481, -1.93972825, -1.87003484, -1.8380692 ,\n       -1.94693402, -1.87908345, -1.85187533]), 'split1_test_score': array([-1.60100576, -1.65445799, -1.67675755, -1.73495833, -1.69732893,\n       -1.70366229, -1.95129667, -1.90797065, -1.92589397, -1.94026432,\n       -1.8974664 , -1.8783309 , -1.90915527, -1.84803598, -1.82243614,\n       -1.92293966, -1.86691078, -1.84613361, -1.52384871, -1.58590703,\n       -1.51390982, -1.82766565, -1.8272584 , -1.85015526, -1.76642606,\n       -1.78527432, -1.76955328, -1.90547307, -1.82625793, -1.79392415,\n       -1.8966662 , -1.82161766, -1.78769767, -1.89762598, -1.82162853,\n       -1.78556031, -1.55192178, -1.57775568, -1.59550649, -1.6206147 ,\n       -1.67184501, -1.69736838, -1.73222407, -1.75716527, -1.79889874,\n       -1.89635908, -1.80701944, -1.76646532, -1.89731611, -1.81773517,\n       -1.78680572, -1.90143453, -1.82708256, -1.79984739, -1.37117645,\n       -1.41648054, -1.42107986, -1.3032156 , -1.38196353, -1.29557656,\n       -1.53954763, -1.53272147, -1.53722193, -1.89500064, -1.80486487,\n       -1.76442352, -1.86949715, -1.76612047, -1.72068511, -1.87225785,\n       -1.77011314, -1.72719699, -1.40884855, -1.49867407, -1.51996079,\n       -1.45111892, -1.43991903, -1.43167524, -1.56693379, -1.55930646,\n       -1.59312473, -1.89644522, -1.80450517, -1.76431941, -1.87831841,\n       -1.78481693, -1.73697852, -1.8759269 , -1.77679031, -1.73608891,\n       -1.64113545, -1.6831227 , -1.71048023, -1.48945727, -1.58311718,\n       -1.53628251, -1.36785796, -1.4174896 , -1.35787225, -1.8946259 ,\n       -1.80372578, -1.7660148 , -1.87038945, -1.77227938, -1.73394565,\n       -1.85910462, -1.74607886, -1.69469357]), 'split2_test_score': array([-1.59947775, -1.64026178, -1.64063094, -1.71210195, -1.713517  ,\n       -1.77205078, -1.93676297, -1.95383097, -1.95674824, -1.91185505,\n       -1.87092624, -1.84945186, -1.88722356, -1.82871789, -1.80587289,\n       -1.88722001, -1.82479197, -1.79729776, -1.53722616, -1.54496048,\n       -1.57479922, -1.83797312, -1.86389007, -1.86517998, -1.77437893,\n       -1.7288737 , -1.84171797, -1.87475576, -1.78940883, -1.75210221,\n       -1.88202166, -1.80669362, -1.77951234, -1.88014822, -1.80458978,\n       -1.77704129, -1.51359171, -1.51023341, -1.54368551, -1.85086695,\n       -1.84372363, -1.86609031, -1.68080392, -1.68984477, -1.70092007,\n       -1.8723882 , -1.78551629, -1.74666117, -1.87175429, -1.79323931,\n       -1.7604148 , -1.86128818, -1.77502526, -1.73861823, -1.47042261,\n       -1.47830273, -1.48294306, -1.67554173, -1.67752563, -1.67976586,\n       -1.77122576, -1.78328601, -1.7738295 , -1.86910764, -1.78407157,\n       -1.74769814, -1.85935969, -1.76946824, -1.73352024, -1.85971073,\n       -1.77154715, -1.73299814, -1.51236369, -1.53752504, -1.51463085,\n       -1.69280554, -1.69602377, -1.70733581, -1.72245506, -1.74961156,\n       -1.72596448, -1.87723065, -1.7948745 , -1.75901011, -1.85834627,\n       -1.76505001, -1.72854594, -1.85791127, -1.76794092, -1.73132722,\n       -1.52614532, -1.5870449 , -1.57279527, -1.66558937, -1.65414519,\n       -1.65529338, -1.7318249 , -1.72393665, -1.71009584, -1.8776292 ,\n       -1.79666453, -1.76018657, -1.85779257, -1.76540235, -1.72643363,\n       -1.85951399, -1.76735442, -1.72845415]), 'split3_test_score': array([-1.93395962, -1.9487982 , -1.96232547, -2.37676859, -2.39631833,\n       -2.3836812 , -2.50641457, -2.49501065, -2.47350218, -1.98062215,\n       -1.95825993, -1.94473579, -1.98039047, -1.96965182, -1.97020632,\n       -1.97879234, -1.9665638 , -1.96769074, -1.91869477, -1.93252503,\n       -1.92887002, -2.22058495, -2.23748151, -2.2481007 , -2.35043214,\n       -2.34933166, -2.33454907, -1.96522637, -1.9341938 , -1.91969288,\n       -1.9549445 , -1.92210261, -1.91293172, -1.95423534, -1.92236254,\n       -1.91191401, -2.01654084, -2.01120579, -2.03700121, -2.19855554,\n       -2.26928922, -2.21188117, -2.40589672, -2.37032987, -2.397937  ,\n       -1.95984434, -1.92784573, -1.91773816, -1.95656761, -1.92288787,\n       -1.90569733, -1.95769597, -1.9299191 , -1.91661256, -1.70995608,\n       -1.77594282, -1.76082663, -2.0087731 , -2.02037927, -1.98738654,\n       -2.3161249 , -2.27572497, -2.31299768, -1.93924439, -1.87449294,\n       -1.85055066, -1.94614668, -1.90608424, -1.88995241, -1.95275295,\n       -1.9197472 , -1.90758408, -1.81648777, -1.83135672, -1.83188069,\n       -2.22241321, -2.19311816, -2.17574384, -2.17417962, -2.18279624,\n       -2.18552421, -1.94112323, -1.88245086, -1.86182275, -1.92729414,\n       -1.87307218, -1.85244507, -1.92998846, -1.87301823, -1.85253621,\n       -1.93635086, -1.97612268, -1.97023827, -2.45078177, -2.5039244 ,\n       -2.47099028, -2.55294269, -2.53150284, -2.54602356, -1.9528851 ,\n       -1.9105494 , -1.89360684, -1.96217547, -1.94237078, -1.93772757,\n       -1.95947615, -1.9345942 , -1.93107096]), 'split4_test_score': array([-1.39619819, -1.38532054, -1.36591721, -1.76207817, -1.76055522,\n       -1.75197827, -1.73792463, -1.71828133, -1.72146418, -1.8760097 ,\n       -1.80438573, -1.77273757, -1.87363085, -1.80603986, -1.7724773 ,\n       -1.8611191 , -1.78242692, -1.7514739 , -1.39864386, -1.39241906,\n       -1.38817131, -1.48908074, -1.55702982, -1.49578432, -1.77033045,\n       -1.8080848 , -1.79281833, -1.87175654, -1.79635987, -1.76324841,\n       -1.85053529, -1.76434253, -1.72460383, -1.85499178, -1.77018134,\n       -1.73639708, -1.47237633, -1.48787332, -1.4836924 , -1.43103632,\n       -1.48942214, -1.43100344, -1.61936959, -1.71234154, -1.6954544 ,\n       -1.86853112, -1.79072513, -1.75567785, -1.83456744, -1.72666446,\n       -1.69190474, -1.83842816, -1.74327586, -1.70376947, -1.10246614,\n       -1.11870785, -1.10646351, -1.50295366, -1.49777531, -1.50844204,\n       -1.82209431, -1.90846562, -1.82121223, -1.86869679, -1.78408386,\n       -1.74675873, -1.87970718, -1.81742495, -1.791632  , -1.87324792,\n       -1.80704152, -1.78083076, -1.0862921 , -1.10666114, -1.07245218,\n       -1.15251674, -1.14679471, -1.13010774, -1.64137483, -1.68546306,\n       -1.68090058, -1.86495058, -1.77991727, -1.73930526, -1.86581976,\n       -1.77344609, -1.73239454, -1.85461162, -1.76854956, -1.72683039,\n       -1.26013327, -1.22083275, -1.19319279, -1.61770115, -1.61849833,\n       -1.56788129, -1.82287563, -1.75638112, -1.74406321, -1.87954188,\n       -1.80159319, -1.76489037, -1.87334612, -1.79810065, -1.76744739,\n       -1.87364953, -1.80719545, -1.77876504]), 'split5_test_score': array([-1.67311546, -1.74749657, -1.76519623, -1.87529331, -1.89222266,\n       -1.88828839, -2.17821186, -2.25570098, -2.21509704, -1.90545774,\n       -1.85792958, -1.83421013, -1.90174054, -1.84245009, -1.8214285 ,\n       -1.899384  , -1.85565296, -1.83684051, -1.74130476, -1.80027815,\n       -1.6982642 , -2.04272684, -2.01874669, -2.02610033, -2.21515697,\n       -2.24323699, -2.2332995 , -1.88420289, -1.82335271, -1.79613068,\n       -1.91363455, -1.88521149, -1.87432732, -1.91484903, -1.88505207,\n       -1.87583024, -1.74714876, -1.72566636, -1.73258997, -2.03945272,\n       -2.05629846, -1.98703553, -2.17740364, -2.1584846 , -2.18269407,\n       -1.88178298, -1.81685756, -1.7891299 , -1.91278887, -1.88150442,\n       -1.87285897, -1.91140075, -1.8791912 , -1.86755726, -1.43848832,\n       -1.41249759, -1.40898354, -1.56061167, -1.5142389 , -1.55205359,\n       -1.67965188, -1.64536279, -1.66531726, -1.87585722, -1.80515155,\n       -1.7718037 , -1.85838427, -1.78256368, -1.74926625, -1.85334344,\n       -1.76867565, -1.73359341, -1.50481784, -1.50257664, -1.47734151,\n       -1.97483073, -1.98681921, -1.96765736, -2.0454764 , -2.01722089,\n       -2.04012335, -1.88642592, -1.82903235, -1.80680569, -1.87493791,\n       -1.80596885, -1.77685011, -1.87409664, -1.80798886, -1.78296441,\n       -1.52259619, -1.52099966, -1.50636043, -1.85350737, -1.83627215,\n       -1.84272404, -2.05659612, -2.02893226, -2.05836231, -1.88805997,\n       -1.82832199, -1.79969908, -1.87344645, -1.80672049, -1.77965215,\n       -1.87669936, -1.81490462, -1.7906481 ]), 'split6_test_score': array([-1.25431138, -1.22205686, -1.23254384, -1.64689645, -1.6472011 ,\n       -1.63173563, -1.89627612, -1.89567167, -1.87315065, -1.89771029,\n       -1.83477485, -1.80182428, -1.86653062, -1.79305733, -1.76691452,\n       -1.86182891, -1.78560897, -1.75466849, -1.26058524, -1.19122902,\n       -1.21923939, -1.64495021, -1.63455431, -1.68233071, -1.79476328,\n       -1.77840665, -1.78502139, -1.88438886, -1.82788689, -1.79922292,\n       -1.86303301, -1.7743204 , -1.74211365, -1.85880179, -1.77937433,\n       -1.74514857, -1.30554066, -1.31026132, -1.30199979, -1.75056651,\n       -1.75434463, -1.71775394, -1.77127339, -1.75432255, -1.76491623,\n       -1.88490925, -1.82704284, -1.79800129, -1.86062112, -1.78320707,\n       -1.74798111, -1.85778417, -1.77461806, -1.73946896, -1.15300994,\n       -1.11567803, -1.1305339 , -1.3238209 , -1.31314779, -1.25900901,\n       -1.29413381, -1.33529748, -1.32625313, -1.86282163, -1.77686964,\n       -1.73703428, -1.82502121, -1.71503775, -1.66679126, -1.81811385,\n       -1.69841967, -1.64502808, -1.15617313, -1.19743756, -1.20795221,\n       -1.69571478, -1.67514106, -1.70481832, -1.94573   , -1.94066585,\n       -1.91659751, -1.86332384, -1.78010714, -1.742487  , -1.87037713,\n       -1.80477636, -1.779435  , -1.87521395, -1.81475436, -1.79264871,\n       -1.32165489, -1.34395588, -1.33414017, -1.61251328, -1.65499333,\n       -1.60143595, -1.79465473, -1.79032789, -1.82862853, -1.86127891,\n       -1.77511655, -1.73810217, -1.84935224, -1.76083502, -1.72959201,\n       -1.8549752 , -1.77319935, -1.73749412]), 'split7_test_score': array([-2.1232342 , -2.17323922, -2.1565214 , -2.33555422, -2.34146359,\n       -2.35908002, -2.51093089, -2.49664109, -2.49627648, -1.95420844,\n       -1.9390149 , -1.93092662, -1.94724761, -1.94451557, -1.94656905,\n       -1.93766275, -1.92766322, -1.92718574, -2.04370865, -2.11949467,\n       -2.11484643, -2.15381542, -2.17806149, -2.16538464, -2.41836995,\n       -2.41791392, -2.39976218, -1.93381582, -1.90957052, -1.90074042,\n       -1.93830871, -1.91704882, -1.90113341, -1.93352225, -1.91844694,\n       -1.91419524, -1.89544218, -1.90739136, -1.9314513 , -1.74352846,\n       -1.74037663, -1.69665427, -2.06256313, -2.04284689, -2.08504252,\n       -1.92217425, -1.87771778, -1.86013236, -1.9015837 , -1.85968341,\n       -1.8449439 , -1.90036823, -1.84772446, -1.83070795, -2.07445748,\n       -2.0671041 , -2.09897878, -2.23030955, -2.26356345, -2.25511421,\n       -2.25064868, -2.29341067, -2.24888978, -1.92021132, -1.89195539,\n       -1.88148058, -1.9157025 , -1.88291374, -1.87552869, -1.91591106,\n       -1.88600729, -1.87519501, -2.1543695 , -2.13191579, -2.18733038,\n       -2.393655  , -2.38115638, -2.40229795, -2.55484415, -2.58186144,\n       -2.58229776, -1.93618258, -1.91181294, -1.90277811, -1.95029889,\n       -1.94721757, -1.95033153, -1.95006482, -1.94955489, -1.95360003,\n       -2.15512034, -2.18898925, -2.20708984, -2.44400258, -2.40750437,\n       -2.40529576, -2.58151335, -2.55542806, -2.58459182, -1.9328848 ,\n       -1.90533944, -1.89837719, -1.95501593, -1.95632063, -1.96045736,\n       -1.95576614, -1.95822888, -1.9654612 ]), 'split8_test_score': array([-1.80771095, -1.82997977, -1.836765  , -1.86360184, -1.90543813,\n       -1.86019521, -2.01028556, -2.03012516, -2.06891714, -1.91499299,\n       -1.87647602, -1.8686889 , -1.90488996, -1.86926734, -1.85478174,\n       -1.90332959, -1.85577636, -1.83974456, -1.71933215, -1.68901725,\n       -1.68205216, -1.87310872, -1.87518217, -1.87408854, -1.86212713,\n       -1.84640078, -1.86697191, -1.89364713, -1.83532219, -1.81295847,\n       -1.88157839, -1.81469858, -1.79054163, -1.87643857, -1.80894039,\n       -1.78051416, -1.71417233, -1.78484324, -1.76791872, -1.92853691,\n       -1.91072937, -1.90557857, -2.08909021, -2.0925585 , -2.09895203,\n       -1.89882202, -1.84796641, -1.82422854, -1.91005451, -1.86848472,\n       -1.85244054, -1.90502576, -1.8619559 , -1.84784836, -1.59555781,\n       -1.60717539, -1.61099812, -1.95688145, -1.97817615, -1.97911608,\n       -2.06548077, -2.06634808, -2.06328906, -1.88562488, -1.81568571,\n       -1.78040805, -1.91307395, -1.8747097 , -1.85971833, -1.92103012,\n       -1.88938215, -1.87728079, -1.57782591, -1.57366606, -1.55226159,\n       -1.60161744, -1.60757072, -1.57375655, -1.65234067, -1.6330131 ,\n       -1.64193175, -1.86563406, -1.77981568, -1.74385345, -1.87649322,\n       -1.79851048, -1.76290481, -1.87543752, -1.80020856, -1.770049  ,\n       -1.63708788, -1.65398926, -1.65150661, -1.52095863, -1.53930652,\n       -1.56065592, -1.78955892, -1.79609276, -1.8181956 , -1.86115835,\n       -1.77168132, -1.73191851, -1.86625257, -1.78672476, -1.75502791,\n       -1.86598621, -1.7850416 , -1.75188592]), 'split9_test_score': array([-1.63025462, -1.59511935, -1.60438855, -1.87317359, -1.85427746,\n       -1.85501479, -1.99471004, -1.97517353, -1.98907013, -1.92021802,\n       -1.88761765, -1.86772286, -1.89389751, -1.83759806, -1.81377514,\n       -1.8898396 , -1.82783426, -1.80262082, -1.47282307, -1.50725524,\n       -1.4787695 , -1.64414339, -1.68350297, -1.67342042, -1.61567348,\n       -1.58445551, -1.647574  , -1.87099028, -1.79901099, -1.76935625,\n       -1.87087576, -1.79772876, -1.76964507, -1.87064945, -1.79445722,\n       -1.76139469, -1.51620655, -1.54706434, -1.52276485, -1.9610084 ,\n       -1.94424032, -1.92293603, -2.05087905, -2.04385274, -2.07876428,\n       -1.88320541, -1.81819176, -1.79118166, -1.90494001, -1.86026514,\n       -1.8471418 , -1.89802336, -1.84668311, -1.83097361, -1.30538392,\n       -1.35877971, -1.35003552, -1.47093857, -1.50160828, -1.49200557,\n       -1.58706106, -1.60370522, -1.62985033, -1.8929313 , -1.82828082,\n       -1.79803907, -1.87238124, -1.79399775, -1.75991312, -1.86782833,\n       -1.78419848, -1.74540234, -1.3607419 , -1.40499398, -1.37760674,\n       -1.41459486, -1.4336734 , -1.49089739, -1.57409143, -1.58368594,\n       -1.58726859, -1.88397318, -1.81452475, -1.78620905, -1.87234763,\n       -1.79324724, -1.75697344, -1.86754744, -1.7816281 , -1.74389014,\n       -1.38032451, -1.39630084, -1.41849791, -1.57004074, -1.52548172,\n       -1.52868636, -1.64971877, -1.65443646, -1.65005861, -1.89223066,\n       -1.82503063, -1.79496008, -1.86402189, -1.78861174, -1.75584326,\n       -1.87101961, -1.79477659, -1.76017047]), 'mean_test_score': array([-1.6855932 , -1.7065948 , -1.71529828, -1.89122784, -1.89795172,\n       -1.88780129, -2.08511057, -2.08359722, -2.08289818, -1.92511503,\n       -1.88296857, -1.86341532, -1.91282916, -1.86385643, -1.84522591,\n       -1.91285948, -1.86497958, -1.84689786, -1.6252383 , -1.64967438,\n       -1.62652304, -1.85290245, -1.86331949, -1.8658004 , -1.97124924,\n       -1.96547244, -1.97552869, -1.90259774, -1.84061261, -1.81411616,\n       -1.89960404, -1.83827934, -1.81344702, -1.89831894, -1.83874606,\n       -1.81486217, -1.62401758, -1.64552992, -1.65366301, -1.83404069,\n       -1.8455191 , -1.82233433, -1.96999483, -1.96870631, -1.98899712,\n       -1.90049728, -1.83564395, -1.80784998, -1.89921253, -1.83877642,\n       -1.81545742, -1.89733806, -1.83623025, -1.81283925, -1.47490112,\n       -1.49100048, -1.49358705, -1.68869014, -1.68585777, -1.67185745,\n       -1.85487006, -1.87082136, -1.85969067, -1.89514917, -1.82274982,\n       -1.7905448 , -1.89168694, -1.82682894, -1.80039747, -1.89086438,\n       -1.82337935, -1.79490781, -1.50782776, -1.53016891, -1.52730458,\n       -1.6903214 , -1.6919606 , -1.69614328, -1.85565378, -1.86768671,\n       -1.86200786, -1.89391565, -1.82074592, -1.78963562, -1.88868704,\n       -1.81436112, -1.7829287 , -1.8882235 , -1.81752383, -1.78883875,\n       -1.59514384, -1.61858256, -1.61995804, -1.806977  , -1.80303414,\n       -1.77719898, -1.91882678, -1.90643094, -1.91412513, -1.89825794,\n       -1.82851816, -1.79795604, -1.89115209, -1.82474006, -1.79841961,\n       -1.89231248, -1.82604574, -1.79905189]), 'std_test_score': array([0.24051884, 0.26025022, 0.26193347, 0.2434755 , 0.24882826,\n       0.25447792, 0.24067265, 0.24517975, 0.23786459, 0.02935629,\n       0.04329948, 0.04999227, 0.03635787, 0.05474227, 0.0648778 ,\n       0.04150259, 0.06238721, 0.07273925, 0.22566635, 0.2537095 ,\n       0.24486043, 0.22036031, 0.21315255, 0.21847229, 0.2690515 ,\n       0.27540164, 0.252276  , 0.03148209, 0.04593535, 0.05331804,\n       0.03461378, 0.05488825, 0.06325778, 0.03399216, 0.05471007,\n       0.06514745, 0.20447756, 0.20018338, 0.20729177, 0.20587352,\n       0.20477549, 0.19863851, 0.24179422, 0.21617831, 0.22340868,\n       0.02836427, 0.04121251, 0.04943731, 0.03446833, 0.05486575,\n       0.06259795, 0.03499918, 0.05425942, 0.06340796, 0.26744506,\n       0.2720445 , 0.2777792 , 0.29584146, 0.29356444, 0.30349889,\n       0.32763134, 0.32674497, 0.31856489, 0.02767292, 0.03849252,\n       0.04585443, 0.04357447, 0.07214187, 0.08643224, 0.04605634,\n       0.07535825, 0.08937217, 0.29172878, 0.27612082, 0.29377528,\n       0.37926392, 0.36858634, 0.36766791, 0.3054946 , 0.30503869,\n       0.30724423, 0.02815416, 0.04269484, 0.05172016, 0.02889823,\n       0.05217256, 0.06521726, 0.03135498, 0.0538642 , 0.06607094,\n       0.26031871, 0.27426003, 0.28220199, 0.34004553, 0.33764307,\n       0.34159004, 0.36312914, 0.34932766, 0.36617521, 0.03129645,\n       0.04751038, 0.05645776, 0.04093935, 0.06880681, 0.081436  ,\n       0.04102676, 0.06916561, 0.08473137]), 'rank_test_score': array([ 17,  23,  24,  81,  87,  76, 108, 107, 106,  99,  75,  69,  95,\n        70,  60,  96,  71,  62,  11,  14,  12,  63,  68,  72, 103, 100,\n       104,  93,  59,  40,  91,  56,  39,  89,  57,  42,  10,  13,  15,\n        53,  61,  46, 102, 101, 105,  92,  54,  37,  90,  58,  43,  86,\n        55,  38,   1,   2,   3,  19,  18,  16,  64,  74,  66,  85,  47,\n        29,  82,  51,  34,  79,  48,  30,   4,   6,   5,  20,  21,  22,\n        65,  73,  67,  84,  45,  28,  78,  41,  26,  77,  44,  27,   7,\n         8,   9,  36,  35,  25,  98,  94,  97,  88,  52,  31,  80,  49,\n        32,  83,  50,  33]), 'split0_train_score': array([-0.44815564, -0.18189841, -0.12098213, -0.04042438, -0.04042261,\n       -0.0404226 , -0.04042264, -0.0404226 , -0.0404226 , -1.88144698,\n       -1.79520473, -1.75532754, -1.79744937, -1.63917263, -1.56588792,\n       -1.78552617, -1.61562176, -1.53683913, -0.33764797, -0.13403478,\n       -0.08081579, -0.04042322, -0.0404226 , -0.0404226 , -0.04042264,\n       -0.0404226 , -0.0404226 , -1.86164581, -1.76060641, -1.71441752,\n       -1.78746363, -1.61920251, -1.54112442, -1.78552542, -1.61562109,\n       -1.53683848, -0.34827557, -0.13722061, -0.08848307, -0.04042327,\n       -0.0404226 , -0.0404226 , -0.04042264, -0.0404226 , -0.0404226 ,\n       -1.86057246, -1.75834342, -1.71282542, -1.7873398 , -1.6189505 ,\n       -1.5408112 , -1.78552542, -1.61562109, -1.53683848, -0.39128347,\n       -0.1502339 , -0.10268617, -0.04043694, -0.04042263, -0.0404226 ,\n       -0.04042264, -0.0404226 , -0.0404226 , -1.85680385, -1.75394347,\n       -1.70715158, -1.79650701, -1.63510175, -1.56003403, -1.78552542,\n       -1.61562109, -1.53683848, -0.34422623, -0.12042683, -0.0906379 ,\n       -0.0404308 , -0.04042261, -0.0404226 , -0.04042264, -0.0404226 ,\n       -0.0404226 , -1.85261317, -1.74674463, -1.69876476, -1.79612673,\n       -1.63513208, -1.56003257, -1.78562951, -1.61581521, -1.53707309,\n       -0.34002312, -0.13993959, -0.08912406, -0.04042281, -0.0404226 ,\n       -0.0404226 , -0.04042264, -0.0404226 , -0.0404226 , -1.85057308,\n       -1.74176847, -1.69228034, -1.79056279, -1.62244034, -1.54465128,\n       -1.78552542, -1.61562109, -1.53683848]), 'split1_train_score': array([-0.45148971, -0.17677422, -0.11680181, -0.04038832, -0.04035677,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.8893324 ,\n       -1.80963207, -1.77291849, -1.80953913, -1.65856103, -1.58931636,\n       -1.79041172, -1.62020983, -1.54128907, -0.35263323, -0.12808814,\n       -0.08548219, -0.0403609 , -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.86811014, -1.7735075 , -1.73021785,\n       -1.79610887, -1.63347262, -1.55674659, -1.7890097 , -1.61877316,\n       -1.53983649, -0.33815235, -0.1304305 , -0.08965806, -0.04035737,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.86600892, -1.76957418, -1.72478863, -1.80112694, -1.64102639,\n       -1.56590038, -1.7890097 , -1.61877316, -1.53983649, -0.35687433,\n       -0.12669284, -0.08501318, -0.04037002, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.86128406, -1.75712187,\n       -1.71002026, -1.7957109 , -1.63343122, -1.55743372, -1.7890097 ,\n       -1.61877316, -1.53983649, -0.33345729, -0.12422204, -0.08036295,\n       -0.04035777, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.85764878, -1.75242973, -1.70441833, -1.8006972 ,\n       -1.64101308, -1.56397093, -1.78929536, -1.61934388, -1.54054984,\n       -0.32696195, -0.11701932, -0.07275744, -0.0403568 , -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.85630704,\n       -1.74876407, -1.69975635, -1.80398361, -1.64120888, -1.56419365,\n       -1.79204051, -1.62327464, -1.54474558]), 'split2_train_score': array([-0.47971259, -0.17206776, -0.11984809, -0.04038116, -0.04035677,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.88358379,\n       -1.79909735, -1.76027042, -1.80059838, -1.63878417, -1.56300797,\n       -1.79135808, -1.62089784, -1.54185743, -0.35301983, -0.12527795,\n       -0.08640029, -0.04035695, -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.86510391, -1.76543038, -1.71953751,\n       -1.80267364, -1.64382249, -1.56835947, -1.79135808, -1.62089784,\n       -1.54185743, -0.29571627, -0.10741167, -0.07538382, -0.0403575 ,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.86325458, -1.75980304, -1.71192442, -1.80889171, -1.65298355,\n       -1.57988155, -1.79192062, -1.6219615 , -1.54315983, -0.36268022,\n       -0.14940148, -0.09107393, -0.04035833, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.86394498, -1.75888114,\n       -1.71060407, -1.79534973, -1.62817795, -1.55069409, -1.79135808,\n       -1.62089784, -1.54185743, -0.33835751, -0.126699  , -0.07674116,\n       -0.04035683, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.85760806, -1.74722192, -1.69683986, -1.79477844,\n       -1.6272637 , -1.54957935, -1.79135808, -1.62089784, -1.54185743,\n       -0.33597005, -0.12472196, -0.08136112, -0.04035683, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.85699757,\n       -1.74549876, -1.6945142 , -1.79377421, -1.62551984, -1.54752368,\n       -1.79135808, -1.62089784, -1.54185743]), 'split3_train_score': array([-0.44486236, -0.14884165, -0.10158762, -0.04035849, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.87610431,\n       -1.78618319, -1.74435546, -1.79672421, -1.63470986, -1.55959914,\n       -1.78774204, -1.61762626, -1.53874559, -0.33297541, -0.1286665 ,\n       -0.08276129, -0.04035678, -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.85880768, -1.75606591, -1.70828153,\n       -1.7920487 , -1.62602813, -1.54871808, -1.78788016, -1.61790708,\n       -1.53909666, -0.30155401, -0.11120802, -0.06782106, -0.04035676,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.85815174, -1.75442249, -1.70623912, -1.79059228, -1.62324609,\n       -1.54566166, -1.78774204, -1.61762626, -1.53874559, -0.37450465,\n       -0.12374766, -0.08523668, -0.04035839, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.85092716, -1.74140629,\n       -1.69190671, -1.79714044, -1.63636217, -1.56175876, -1.78778376,\n       -1.61769935, -1.53883186, -0.3457369 , -0.10609981, -0.07459791,\n       -0.04035698, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.85284934, -1.74412506, -1.69199691, -1.79819354,\n       -1.63679865, -1.56165292, -1.78807514, -1.61827948, -1.53955334,\n       -0.32295864, -0.10567403, -0.07200778, -0.04035683, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.84796799,\n       -1.73564446, -1.68417835, -1.79654938, -1.63562303, -1.56078974,\n       -1.7879692 , -1.61808278, -1.5393153 ]), 'split4_train_score': array([-0.41428909, -0.1672995 , -0.10634836, -0.04035744, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.88443038,\n       -1.79925696, -1.76047066, -1.80005096, -1.63689357, -1.56207018,\n       -1.79254203, -1.62210675, -1.54308334, -0.35738993, -0.13723835,\n       -0.08919972, -0.04036019, -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.86825754, -1.76847004, -1.72273603,\n       -1.79557924, -1.62801329, -1.55020765, -1.79241482, -1.62185391,\n       -1.54276682, -0.32953913, -0.12346539, -0.08569844, -0.04035745,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.8654925 , -1.76244493, -1.71526073, -1.79436297, -1.62571125,\n       -1.54754401, -1.79241482, -1.62185391, -1.54276682, -0.39050123,\n       -0.14234953, -0.0925066 , -0.04036676, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.8637021 , -1.76206267,\n       -1.71662818, -1.79635966, -1.62964463, -1.55260448, -1.79241482,\n       -1.62185391, -1.54276682, -0.35170252, -0.13918479, -0.08308271,\n       -0.04035699, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.86004835, -1.75495149, -1.70747705, -1.79862729,\n       -1.63423047, -1.55808901, -1.79241482, -1.62185391, -1.54276682,\n       -0.33706261, -0.12705502, -0.07915135, -0.04035682, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.85852478,\n       -1.75230485, -1.70383563, -1.79709999, -1.63054669, -1.55332598,\n       -1.79241631, -1.62185459, -1.54276746]), 'split5_train_score': array([-0.45372202, -0.16891962, -0.11596454, -0.04035818, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.88255755,\n       -1.7966946 , -1.75751788, -1.80533649, -1.63918673, -1.56196608,\n       -1.79298324, -1.62296391, -1.54403106, -0.30224921, -0.11725875,\n       -0.08814139, -0.04035992, -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.86473069, -1.76227339, -1.71559576,\n       -1.7979955 , -1.63309868, -1.5572826 , -1.79241482, -1.62185391,\n       -1.54276682, -0.31179076, -0.10691917, -0.07205109, -0.04035747,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.86412657, -1.76025533, -1.71194271, -1.79670443, -1.63038949,\n       -1.55332211, -1.79241482, -1.62185391, -1.54276682, -0.40325019,\n       -0.1401898 , -0.09075743, -0.04036782, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.86442346, -1.75933365,\n       -1.71149271, -1.79854779, -1.63328608, -1.55694482, -1.79241482,\n       -1.62185391, -1.54276682, -0.3382745 , -0.12202473, -0.0810806 ,\n       -0.04035678, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.85593211, -1.74472863, -1.69328667, -1.7946297 ,\n       -1.62606548, -1.54774991, -1.79241482, -1.62185391, -1.54276682,\n       -0.33654792, -0.1054042 , -0.07232339, -0.04035682, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.85499727,\n       -1.74309539, -1.692077  , -1.79431485, -1.62556046, -1.54719098,\n       -1.79241482, -1.62185391, -1.54276682]), 'split6_train_score': array([-0.43460013, -0.16651893, -0.10223108, -0.04036498, -0.04035673,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.89215054,\n       -1.8146171 , -1.77804409, -1.81273928, -1.66221255, -1.59256522,\n       -1.79284115, -1.62269029, -1.54379019, -0.33895935, -0.12201726,\n       -0.07955498, -0.04036412, -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.86963263, -1.76996253, -1.72350869,\n       -1.80339799, -1.64176497, -1.56681424, -1.79241482, -1.62185391,\n       -1.54276682, -0.3523121 , -0.12129867, -0.08250212, -0.04036091,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.86908757, -1.77035585, -1.72467979, -1.8027113 , -1.63970182,\n       -1.56440447, -1.79241482, -1.62185391, -1.54276682, -0.40739975,\n       -0.14222762, -0.094849  , -0.04035727, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.8640049 , -1.7600041 ,\n       -1.71305647, -1.80002291, -1.63666151, -1.56117271, -1.79241482,\n       -1.62185391, -1.54276682, -0.34167011, -0.12461399, -0.08531283,\n       -0.04035703, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.85771271, -1.74982714, -1.70114065, -1.7971014 ,\n       -1.63090653, -1.55369482, -1.79241482, -1.62185391, -1.54276682,\n       -0.32823448, -0.12557852, -0.08515305, -0.04035692, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.85852882,\n       -1.75055253, -1.70126306, -1.79572833, -1.62804697, -1.54978781,\n       -1.79241482, -1.62185391, -1.54276682]), 'split7_train_score': array([-0.38454568, -0.13340886, -0.0886839 , -0.04037356, -0.04035677,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.88136238,\n       -1.78905331, -1.74617161, -1.80489067, -1.64611043, -1.57237268,\n       -1.7920066 , -1.62148458, -1.54241553, -0.3019657 , -0.11546475,\n       -0.07718201, -0.04035854, -0.04035672, -0.04035672, -0.04035675,\n       -0.04035672, -0.04035672, -1.86283437, -1.75990958, -1.71258155,\n       -1.79990262, -1.63557663, -1.55738975, -1.79176534, -1.6212663 ,\n       -1.5422079 , -0.32234934, -0.11317209, -0.0768045 , -0.04035678,\n       -0.04035672, -0.04035672, -0.04035675, -0.04035672, -0.04035672,\n       -1.8603004 , -1.75628547, -1.70918974, -1.79631028, -1.630018  ,\n       -1.55294513, -1.79188971, -1.62151544, -1.54252028, -0.36099334,\n       -0.13219101, -0.08715477, -0.04036393, -0.04035672, -0.04035672,\n       -0.04035675, -0.04035672, -0.04035672, -1.86183539, -1.75563184,\n       -1.70734029, -1.80062723, -1.63798673, -1.56224806, -1.79281219,\n       -1.62321808, -1.54461082, -0.32115199, -0.13149368, -0.0891211 ,\n       -0.04035701, -0.04035672, -0.04035672, -0.04035675, -0.04035672,\n       -0.04035672, -1.85429325, -1.74499125, -1.69475643, -1.79527282,\n       -1.62728798, -1.54930411, -1.79176534, -1.6212663 , -1.5422079 ,\n       -0.32661997, -0.12815026, -0.080187  , -0.04035686, -0.04035672,\n       -0.04035672, -0.04035675, -0.04035672, -0.04035672, -1.85181198,\n       -1.74001117, -1.68782291, -1.7934747 , -1.62465063, -1.54637087,\n       -1.79176534, -1.6212663 , -1.5422079 ]), 'split8_train_score': array([-4.86609117e-01, -1.84777966e-01, -1.19042605e-01, -8.31308529e-04,\n       -4.98101483e-05, -9.07766118e-06, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.88192600e+00, -1.79875526e+00, -1.75709567e+00,\n       -1.80278317e+00, -1.64275822e+00, -1.56810177e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.47649829e-01, -1.30957939e-01,\n       -8.62080233e-02, -5.28166660e-04, -7.49538628e-06, -1.07101519e-07,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.86630230e+00,\n       -1.76291172e+00, -1.71598492e+00, -1.79828715e+00, -1.63319706e+00,\n       -1.55676044e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00,\n       -3.32297987e-01, -1.16134412e-01, -7.58352179e-02, -1.73164960e-04,\n       -3.00256617e-06, -1.24305388e-07, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.86163283e+00, -1.75541798e+00, -1.70711353e+00,\n       -1.80163490e+00, -1.63997963e+00, -1.56525501e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.89833792e-01, -1.24328475e-01,\n       -7.28863674e-02, -9.89391869e-05, -1.71564284e-06, -1.45811300e-07,\n       -5.26366206e-05, -1.39807502e-09, -7.20524703e-12, -1.86282153e+00,\n       -1.75751360e+00, -1.71012916e+00, -1.79553594e+00, -1.62843634e+00,\n       -1.55078604e+00, -1.79178917e+00, -1.62130113e+00, -1.54221811e+00,\n       -3.66447335e-01, -1.21521985e-01, -7.01454893e-02, -1.10044610e-04,\n       -4.78849823e-07, -3.30177733e-08, -5.25972785e-05, -1.39705704e-09,\n       -7.19995617e-12, -1.85872245e+00, -1.75195063e+00, -1.70383215e+00,\n       -1.79542877e+00, -1.62882633e+00, -1.55183971e+00, -1.79168291e+00,\n       -1.62110063e+00, -1.54200004e+00, -3.16246231e-01, -9.42489359e-02,\n       -5.12632513e-02, -8.15585769e-05, -1.70202046e-08, -1.39102961e-09,\n       -5.25972785e-05, -1.39705704e-09, -7.19995617e-12, -1.85745997e+00,\n       -1.74913182e+00, -1.69980980e+00, -1.79689467e+00, -1.63079999e+00,\n       -1.55424050e+00, -1.79168291e+00, -1.62110063e+00, -1.54200004e+00]), 'split9_train_score': array([-4.53850043e-01, -1.73617126e-01, -1.10999729e-01, -6.41221575e-04,\n       -2.42497508e-05, -3.09758006e-06, -5.39495097e-05, -1.55894042e-09,\n       -7.78485130e-12, -1.88454112e+00, -1.80088090e+00, -1.76136059e+00,\n       -1.81145308e+00, -1.65988324e+00, -1.59024471e+00, -1.79326736e+00,\n       -1.62360405e+00, -1.54507655e+00, -3.41745974e-01, -1.28166180e-01,\n       -7.05411042e-02, -5.21016902e-04, -6.62374875e-06, -1.72989973e-06,\n       -5.25998407e-05, -1.39712509e-09, -7.20030849e-12, -1.87179509e+00,\n       -1.77644141e+00, -1.73285291e+00, -1.80114252e+00, -1.63899290e+00,\n       -1.56381116e+00, -1.79168366e+00, -1.62110131e+00, -1.54200069e+00,\n       -3.18191622e-01, -1.10580580e-01, -6.09240524e-02, -5.31373378e-04,\n       -6.64310466e-06, -7.82749589e-07, -5.32131359e-05, -1.45722161e-09,\n       -7.30497258e-12, -1.86683717e+00, -1.76624006e+00, -1.72026352e+00,\n       -1.79977490e+00, -1.63644409e+00, -1.56060798e+00, -1.79185842e+00,\n       -1.62144437e+00, -1.54239640e+00, -3.88472405e-01, -1.51296704e-01,\n       -9.07923080e-02, -2.81755467e-04, -1.91579075e-05, -7.50669513e-07,\n       -5.32960999e-05, -1.44232821e-09, -7.47931345e-12, -1.86247452e+00,\n       -1.76012136e+00, -1.71337134e+00, -1.80287284e+00, -1.64288482e+00,\n       -1.56836855e+00, -1.79241278e+00, -1.62265272e+00, -1.54371701e+00,\n       -3.18249938e-01, -1.20693897e-01, -7.65200370e-02, -1.25757903e-04,\n       -4.84466020e-07, -9.89663855e-08, -5.34306154e-05, -1.42519431e-09,\n       -7.34499295e-12, -1.85443361e+00, -1.74404228e+00, -1.69491655e+00,\n       -1.79979357e+00, -1.63611979e+00, -1.56006611e+00, -1.79185820e+00,\n       -1.62150651e+00, -1.54243410e+00, -3.60246863e-01, -1.20846880e-01,\n       -7.66347683e-02, -1.19644841e-04, -3.04967569e-07, -3.62469066e-08,\n       -5.26034274e-05, -1.39722036e-09, -7.20080075e-12, -1.85440410e+00,\n       -1.74410800e+00, -1.69491529e+00, -1.79940754e+00, -1.63484371e+00,\n       -1.55831892e+00, -1.79169732e+00, -1.62111367e+00, -1.54201245e+00]), 'mean_train_score': array([-0.44518364, -0.1674124 , -0.11024899, -0.0324479 , -0.03229939,\n       -0.03229318, -0.03230264, -0.03229196, -0.03229196, -1.88374354,\n       -1.79893755, -1.75935324, -1.80415647, -1.64582724, -1.5725132 ,\n       -1.79103613, -1.62083059, -1.54191279, -0.33662364, -0.12671706,\n       -0.08262868, -0.03239898, -0.03229337, -0.03229215, -0.03230251,\n       -0.03229196, -0.03229196, -1.86572201, -1.76555789, -1.71957143,\n       -1.79745999, -1.63331693, -1.55672144, -1.79061497, -1.62022291,\n       -1.54121382, -0.32501791, -0.11778411, -0.07751614, -0.03236321,\n       -0.03229293, -0.03229205, -0.03230257, -0.03229196, -0.03229196,\n       -1.86354647, -1.76131428, -1.71442276, -1.79794495, -1.63384508,\n       -1.55763335, -1.79068733, -1.62036042, -1.54137976, -0.38257934,\n       -0.1382659 , -0.08929564, -0.03233602, -0.03229405, -0.03229205,\n       -0.03230258, -0.03229196, -0.03229196, -1.8612222 , -1.756602  ,\n       -1.70917008, -1.79786744, -1.63419732, -1.55820453, -1.79079356,\n       -1.62057251, -1.54162107, -0.33992743, -0.12369808, -0.08076027,\n       -0.0323166 , -0.03229206, -0.03229197, -0.03230259, -0.03229196,\n       -0.03229196, -1.85618618, -1.74810127, -1.69874294, -1.79706495,\n       -1.63236441, -1.55559794, -1.7906909 , -1.62037716, -1.54139762,\n       -0.33308718, -0.11886387, -0.07599632, -0.03231219, -0.03229199,\n       -0.03229197, -0.03230251, -0.03229196, -0.03229196, -1.85475726,\n       -1.74508795, -1.69504529, -1.79617901, -1.62992405, -1.55263934,\n       -1.79092847, -1.62069194, -1.54172783]), 'std_train_score': array([0.02801513, 0.01470856, 0.00990159, 0.01585589, 0.01613119,\n       0.01614356, 0.0161247 , 0.01614599, 0.01614599, 0.00420783,\n       0.00802181, 0.00981246, 0.00537991, 0.0098949 , 0.01240819,\n       0.00239499, 0.0023584 , 0.00236256, 0.01872641, 0.00655931,\n       0.0054523 , 0.01593721, 0.01614317, 0.01614563, 0.01612497,\n       0.01614599, 0.01614599, 0.00372519, 0.00611435, 0.00739469,\n       0.00466382, 0.00706836, 0.00798803, 0.0022324 , 0.00199269,\n       0.00188144, 0.01780355, 0.0096286 , 0.00875527, 0.01600568,\n       0.01614406, 0.01614581, 0.01612484, 0.01614599, 0.01614599,\n       0.00322416, 0.00543416, 0.00640468, 0.00594316, 0.00960976,\n       0.01115697, 0.00228947, 0.00211585, 0.00203969, 0.01690292,\n       0.01024197, 0.00732569, 0.0160729 , 0.01614182, 0.01614581,\n       0.01612482, 0.01614599, 0.01614599, 0.00401958, 0.00553584,\n       0.00634758, 0.00242606, 0.00439289, 0.00537986, 0.00236403,\n       0.00229996, 0.0022698 , 0.01329178, 0.00804792, 0.00615331,\n       0.01609936, 0.0161458 , 0.01614597, 0.0161248 , 0.01614599,\n       0.01614599, 0.00241786, 0.00373368, 0.00499579, 0.00205626,\n       0.00475199, 0.00554778, 0.00217415, 0.00188897, 0.0017536 ,\n       0.01144965, 0.01282687, 0.00982091, 0.01610581, 0.01614593,\n       0.01614598, 0.01612497, 0.01614599, 0.01614599, 0.00340004,\n       0.00492832, 0.00589774, 0.00348065, 0.00557638, 0.00634281,\n       0.00218779, 0.00209669, 0.00206095])}"}]