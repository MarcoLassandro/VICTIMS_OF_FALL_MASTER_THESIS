[{"experiment_name": "Experiment_22_11_21", "dataset_variant": "complete", "estimator": "GradientBoostingRegressor()", "task": "Regression", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"neg_root_mean_squared_error": -1.5436749848549036, "r2": 0.3794680817676391, "neg_mean_absolute_error": -1.2386660283317947}, "mean_train_score": {"neg_root_mean_squared_error": -0.9560979234861963, "r2": 0.7348102256091488, "neg_mean_absolute_error": -0.7660825174181431}, "best_params": "[{'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 1.0, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 200, 'estimator__max_depth': 15, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 3, 'estimator__subsample': 0.2, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 100, 'estimator__max_depth': 10, 'estimator__learning_rate': 0.1, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 3, 'estimator__subsample': 0.2, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 15, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}]", "cv_results": "{'fit_time': array([372.02300024, 495.84699678, 367.10999489, 450.21999645,\n       453.13701749, 409.64899802, 405.38201213, 329.99699903,\n       261.16099811, 249.66101074]), 'score_time': array([0.00400019, 0.00200176, 0.00300074, 0.00400352, 0.0030005 ,\n       0.00299954, 0.00899696, 0.00199771, 0.00200081, 0.00300002]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRe...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_neg_root_mean_squared_error': array([-1.53810277, -1.51838399, -1.37799955, -1.41507118, -1.64445583,\n       -1.6047329 , -1.35572826, -1.84127477, -1.58055308, -1.56044752]), 'train_neg_root_mean_squared_error': array([-1.15674075, -0.88913812, -1.24461324, -1.03578979, -0.59253338,\n       -1.21817115, -1.09305113, -0.12342535, -1.22784515, -0.97967116]), 'test_r2': array([0.40820792, 0.40468071, 0.50967405, 0.47240143, 0.31186512,\n       0.32576202, 0.51876966, 0.12154357, 0.35270658, 0.36906975]), 'train_r2': array([0.65291023, 0.79568435, 0.59965722, 0.72335531, 0.90910517,\n       0.61706762, 0.69169084, 0.9960644 , 0.61051631, 0.75205079]), 'test_neg_mean_absolute_error': array([-1.22053772, -1.19561071, -1.09165942, -1.16353405, -1.21659029,\n       -1.31710901, -1.14599839, -1.47870883, -1.30657732, -1.25033454]), 'train_neg_mean_absolute_error': array([-0.94312197, -0.71023583, -1.01382239, -0.79932397, -0.48703864,\n       -0.98224207, -0.86203476, -0.08522545, -0.98715199, -0.7906281 ])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete", "only_totals", "only_binary"], "type_of_labels": "floors", "only_BMI": 1}, "task": "Regression", "pipe": {"feature_extraction": "GroupedSVD(mask=mask)", "scaler": "MinMaxScaler()", "estimator": "GradientBoostingRegressor()"}, "hp_optimizer": {"type": "RandomizeSearchCV", "n_iter": 50, "params": [{"feature_extraction__n_components": "[1, 2, 3]", "estimator__n_estimators": "[100, 200, 250]", "estimator__max_depth": "[5, 10, 15]", "estimator__learning_rate": "[1e-1, 1e-2, 1e-5]", "estimator__subsample": "[1.0, 0.5, 0.2]", "estimator__criterion": "['squared_error', 'absolute_error', 'mse', 'absolute_error']"}], "metrics": ["neg_root_mean_squared_error", "r2", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}, {"experiment_name": "Experiment_22_11_21", "dataset_variant": "only_totals", "estimator": "GradientBoostingRegressor()", "task": "Regression", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"neg_root_mean_squared_error": -1.5517202791222118, "r2": 0.374313643730833, "neg_mean_absolute_error": -1.2532027025650823}, "mean_train_score": {"neg_root_mean_squared_error": -1.0385787931795216, "r2": 0.719680179747738, "neg_mean_absolute_error": -0.8399552519922707}, "best_params": "[{'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 1.0, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}, {'feature_extraction__n_components': 3, 'estimator__subsample': 0.2, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 200, 'estimator__max_depth': 15, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 10, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 15, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 3, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 10, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}]", "cv_results": "{'fit_time': array([309.62200332, 374.76199818, 452.55801821, 407.02499557,\n       363.62900257, 380.29599214, 352.36699963, 257.96099544,\n       316.24101353, 267.29701829]), 'score_time': array([0.00299978, 0.00299644, 0.00198531, 0.00400019, 0.00399971,\n       0.00400352, 0.00400066, 0.00199986, 0.0019877 , 0.00200033]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=50,\n                   param_distributions={'estimator__criterion': ['squared_error',\n                                                                 'absolute_error'...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_neg_root_mean_squared_error': array([-1.48661761, -1.51501563, -1.45788663, -1.43485893, -1.66253612,\n       -1.49781154, -1.41292864, -1.78230508, -1.66665597, -1.60058663]), 'train_neg_root_mean_squared_error': array([-1.06990074, -0.99754796, -1.24815199, -1.09059026, -1.01180902,\n       -0.99788949, -0.99014439, -1.01408075, -0.98514252, -0.98053081]), 'test_r2': array([0.44716315, 0.40731907, 0.45117456, 0.45754284, 0.29665027,\n       0.41261609, 0.47730523, 0.17691041, 0.28026115, 0.33619367]), 'train_r2': array([0.7030682 , 0.74282382, 0.59737743, 0.69330809, 0.7349605 ,\n       0.74303713, 0.74701047, 0.73432716, 0.74927352, 0.75161546]), 'test_neg_mean_absolute_error': array([-1.19785419, -1.22469729, -1.14198968, -1.20437456, -1.25675151,\n       -1.22109417, -1.20102583, -1.4336028 , -1.40233507, -1.24830193]), 'train_neg_mean_absolute_error': array([-0.88308888, -0.80712106, -1.02887839, -0.87890787, -0.81850882,\n       -0.79900742, -0.80999206, -0.78026387, -0.79161197, -0.8021722 ])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete", "only_totals", "only_binary"], "type_of_labels": "floors", "only_BMI": 1}, "task": "Regression", "pipe": {"feature_extraction": "GroupedSVD(mask=mask)", "scaler": "MinMaxScaler()", "estimator": "GradientBoostingRegressor()"}, "hp_optimizer": {"type": "RandomizeSearchCV", "n_iter": 50, "params": [{"feature_extraction__n_components": "[1, 2, 3]", "estimator__n_estimators": "[100, 200, 250]", "estimator__max_depth": "[5, 10, 15]", "estimator__learning_rate": "[1e-1, 1e-2, 1e-5]", "estimator__subsample": "[1.0, 0.5, 0.2]", "estimator__criterion": "['squared_error', 'absolute_error', 'mse', 'absolute_error']"}], "metrics": ["neg_root_mean_squared_error", "r2", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}, {"experiment_name": "Experiment_22_11_21", "dataset_variant": "only_binary", "estimator": "GradientBoostingRegressor()", "task": "Regression", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"neg_root_mean_squared_error": -1.5714510173064378, "r2": 0.35886004822321504, "neg_mean_absolute_error": -1.2716767170658525}, "mean_train_score": {"neg_root_mean_squared_error": -1.0217876935613266, "r2": 0.7236618646742426, "neg_mean_absolute_error": -0.825781104500375}, "best_params": "[{'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 15, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 10, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 3, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 10, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'mse'}, {'feature_extraction__n_components': 1, 'estimator__subsample': 0.5, 'estimator__n_estimators': 200, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 10, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 1, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}, {'feature_extraction__n_components': 1, 'estimator__subsample': 0.5, 'estimator__n_estimators': 250, 'estimator__max_depth': 5, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'absolute_error'}, {'feature_extraction__n_components': 2, 'estimator__subsample': 0.2, 'estimator__n_estimators': 250, 'estimator__max_depth': 15, 'estimator__learning_rate': 0.01, 'estimator__criterion': 'squared_error'}]", "cv_results": "{'fit_time': array([410.72800136, 364.09299803, 357.79299593, 264.54799724,\n       328.10700059, 488.42799854, 424.94299483, 251.86202121,\n       298.31200624, 290.1000154 ]), 'score_time': array([0.00399518, 0.00400209, 0.00400019, 0.00399971, 0.00299668,\n       0.0019958 , 0.00300336, 0.00200033, 0.00200081, 0.00299978]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              GroupedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]))),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              GradientBoostingRegressor())]),\n                   n_iter=...\n                                                                 'absolute_error'],\n                                        'estimator__learning_rate': [0.1, 0.01,\n                                                                     1e-05],\n                                        'estimator__max_depth': [5, 10, 15],\n                                        'estimator__n_estimators': [100, 200,\n                                                                    250],\n                                        'estimator__subsample': [1.0, 0.5, 0.2],\n                                        'feature_extraction__n_components': [1,\n                                                                             2,\n                                                                             3]},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_neg_root_mean_squared_error': array([-1.56414137, -1.71786387, -1.42761542, -1.46506522, -1.67829612,\n       -1.52355739, -1.46760659, -1.76952838, -1.53496378, -1.56587202]), 'train_neg_root_mean_squared_error': array([-1.015426  , -0.58382937, -1.03558928, -1.16674685, -1.12766892,\n       -0.98011383, -1.03421293, -1.17249717, -1.08871975, -1.01307281]), 'test_r2': array([0.38800137, 0.23798378, 0.47372931, 0.43446309, 0.28325227,\n       0.39224948, 0.43606765, 0.18866897, 0.38950897, 0.36467558]), 'train_r2': array([0.73253541, 0.91190829, 0.72283508, 0.6489796 , 0.67078718,\n       0.75211028, 0.72398963, 0.64483867, 0.69377949, 0.73485503]), 'test_neg_mean_absolute_error': array([-1.19216723, -1.37448775, -1.1441598 , -1.17812   , -1.30226149,\n       -1.26493359, -1.28795396, -1.44336548, -1.28573729, -1.24358058]), 'train_neg_mean_absolute_error': array([-0.82448652, -0.46556411, -0.83988619, -0.96264957, -0.90314868,\n       -0.80045405, -0.83193067, -0.96517701, -0.84796327, -0.81655097])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete", "only_totals", "only_binary"], "type_of_labels": "floors", "only_BMI": 1}, "task": "Regression", "pipe": {"feature_extraction": "GroupedSVD(mask=mask)", "scaler": "MinMaxScaler()", "estimator": "GradientBoostingRegressor()"}, "hp_optimizer": {"type": "RandomizeSearchCV", "n_iter": 50, "params": [{"feature_extraction__n_components": "[1, 2, 3]", "estimator__n_estimators": "[100, 200, 250]", "estimator__max_depth": "[5, 10, 15]", "estimator__learning_rate": "[1e-1, 1e-2, 1e-5]", "estimator__subsample": "[1.0, 0.5, 0.2]", "estimator__criterion": "['squared_error', 'absolute_error', 'mse', 'absolute_error']"}], "metrics": ["neg_root_mean_squared_error", "r2", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]