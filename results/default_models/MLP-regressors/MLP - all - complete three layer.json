[{"experiment_name": "MLP - all - complete three layer", "dataset_variant": "complete", "estimator": "KerasRegressor(model=create_regression_model, epochs=150, batch_size=10, verbose=0)", "task": "Regression", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"neg_root_mean_squared_error": -1.821140911147771, "r2": 0.13824745325952917, "neg_mean_absolute_error": -1.472809176505113}, "mean_train_score": {"neg_root_mean_squared_error": -1.313158952533375, "r2": 0.5198182603224166, "neg_mean_absolute_error": -1.0240694995130986}, "best_params": "[{'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'sgd', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'sgd', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 3, 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}]", "cv_results": "{'fit_time': array([292.82650018, 293.95193911, 298.1029613 , 292.57322645,\n       292.58121133, 293.20262957, 292.93894911, 294.60588908,\n       294.05707979, 295.21836925]), 'score_time': array([0.07411981, 0.07512474, 0.31952906, 0.07262921, 0.37283039,\n       0.0731709 , 0.07203436, 0.07266068, 0.0756371 , 0.07471228]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [3],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_neg_root_mean_squared_error': array([-1.42684141, -1.69532217, -2.05337935, -2.08066391, -1.72419691,\n       -1.75476719, -1.80905574, -2.03063826, -2.08730374, -1.54924043]), 'train_neg_root_mean_squared_error': array([-1.27450394, -1.08885508, -2.08463234, -1.20147251, -1.05873679,\n       -0.98275098, -1.24917141, -1.03421827, -2.08270804, -1.07454017]), 'test_r2': array([ 0.50477589,  0.27599051, -0.08603386, -0.07462135,  0.22685706,\n        0.19919813,  0.14888163, -0.06591155, -0.12623065,  0.37956872]), 'train_r2': array([ 0.58285379,  0.6967139 , -0.10874519,  0.6302095 ,  0.71434848,\n        0.75387967,  0.60234669,  0.72722802, -0.10619611,  0.70554384]), 'test_neg_mean_absolute_error': array([-1.18116918, -1.33310557, -1.77387521, -1.5327106 , -1.34198162,\n       -1.37951347, -1.44954409, -1.65411429, -1.80818005, -1.27389769]), 'train_neg_mean_absolute_error': array([-0.96918797, -0.79590666, -1.8023421 , -0.91475523, -0.77714518,\n       -0.72748329, -0.93782869, -0.74382498, -1.79941581, -0.7728051 ])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete"], "type_of_labels": "floors", "only_BMI": 1, "total_dmg": 1}, "task": "Regression", "pipe": {"scaler": "MinMaxScaler()", "estimator": "KerasRegressor(model=create_regression_model, epochs=150, batch_size=10, verbose=0)"}, "hp_optimizer": {"type": "RandomizeSearchCV", "params": [{"estimator__model__dim": "[28]", "estimator__model__optimizer": "[\"adam\", \"sgd\"]", "estimator__model__hidden_layer_sizes": "[(8,4,2), (16,8,4), (32,16,8), (64,32,16), (128,64,32)]", "estimator__model__num_layers": "[3]"}], "metrics": ["neg_root_mean_squared_error", "r2", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]