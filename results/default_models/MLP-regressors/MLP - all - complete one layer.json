[{"experiment_name": "MLP - all - complete one layer", "dataset_variant": "complete", "estimator": "KerasRegressor(model=create_regression_model, epochs=150, batch_size=10, verbose=0)", "task": "Regression", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"neg_root_mean_squared_error": -1.6561799928710232, "r2": 0.28321825376372767, "neg_mean_absolute_error": -1.3309138074742646}, "mean_train_score": {"neg_root_mean_squared_error": -1.3115344074628699, "r2": 0.5557494141543036, "neg_mean_absolute_error": -1.0133559798976581}, "best_params": "[{'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (32,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (32,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 1, 'estimator__model__hidden_layer_sizes': (8,), 'estimator__model__dim': 28}]", "cv_results": "{'fit_time': array([205.66969109, 206.72372794, 203.20676589, 196.59104609,\n       196.66016746, 196.72477174, 196.41247797, 197.11582851,\n       196.60056329, 194.92651558]), 'score_time': array([0.06601143, 0.06401086, 0.06201077, 0.06051087, 0.06051087,\n       0.062011  , 0.06151056, 0.06351256, 0.0650115 , 0.06101036]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001DC21CE6798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,),\n                                                                                 (32,),\n                                                                                 (64,),\n                                                                                 (128,)],\n                                        'estimator__model__num_layers': [1],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_neg_root_mean_squared_error': array([-1.25758113, -1.33338712, -1.78030956, -2.00339269, -1.43439464,\n       -1.72176164, -1.72919627, -1.91394641, -1.82238345, -1.56544703]), 'train_neg_root_mean_squared_error': array([-1.38649201, -1.41559789, -1.35876576, -1.02644095, -1.43545528,\n       -1.05581137, -1.38120198, -1.29958474, -1.34009438, -1.41589971]), 'test_r2': array([0.61529982, 0.55212968, 0.18361309, 0.0037146 , 0.46491426,\n       0.2290395 , 0.22236706, 0.05307499, 0.14150936, 0.36652017]), 'train_r2': array([0.50632551, 0.48738401, 0.52895544, 0.73010427, 0.47490262,\n       0.71592488, 0.51384483, 0.5692904 , 0.54202042, 0.48874175]), 'test_neg_mean_absolute_error': array([-0.99605497, -1.0634133 , -1.36527937, -1.56169924, -1.16906048,\n       -1.37457519, -1.40566695, -1.54492116, -1.51850602, -1.30996139]), 'train_neg_mean_absolute_error': array([-1.08708418, -1.09262644, -1.06194999, -0.75850012, -1.13860912,\n       -0.77047045, -1.06479156, -1.00535946, -1.0445216 , -1.10964687])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete"], "type_of_labels": "floors", "only_BMI": 1, "total_dmg": 1}, "task": "Regression", "pipe": {"scaler": "MinMaxScaler()", "estimator": "KerasRegressor(model=create_regression_model, epochs=150, batch_size=10, verbose=0)"}, "hp_optimizer": {"type": "RandomizeSearchCV", "params": [{"estimator__model__dim": "[28]", "estimator__model__optimizer": "[\"adam\", \"sgd\"]", "estimator__model__hidden_layer_sizes": "[(8,), (32,), (64,), (128,)]", "estimator__model__num_layers": "[1]"}], "metrics": ["neg_root_mean_squared_error", "r2", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]