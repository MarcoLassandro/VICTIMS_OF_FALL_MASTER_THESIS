[{"experiment_name": "MLP - all - complete two layer", "dataset_variant": "complete", "estimator": "KerasRegressor(model=create_regression_model, epochs=150, batch_size=10, verbose=0 )", "task": "Regression", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"neg_root_mean_squared_error": -1.7066480319587818, "r2": 0.24198662932543308, "neg_mean_absolute_error": -1.3792231929853185}, "mean_train_score": {"neg_root_mean_squared_error": -1.3534522651736585, "r2": 0.5147028505745708, "neg_mean_absolute_error": -1.0551588805813878}, "best_params": "[{'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__num_layers': 2, 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 28}]", "cv_results": "{'fit_time': array([273.95433497, 273.65597653, 277.05372214, 274.5860312 ,\n       275.83312535, 277.02159977, 274.86953187, 271.20672202,\n       268.22101927, 268.88361454]), 'score_time': array([0.0706296 , 0.06808257, 0.07314277, 0.06907296, 0.06963778,\n       0.06918812, 0.06701326, 0.06752157, 0.06851459, 0.0685215 ]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasRegressor(batch_size=10, epochs=150, model=<function create_regression_model at 0x000001D182A57798>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__num_layers': [2],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='neg_root_mean_squared_error', return_train_score=True,\n                   scoring=['neg_root_mean_squared_error', 'r2',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_neg_root_mean_squared_error': array([-1.46426569, -1.36206269, -1.82789342, -2.09889778, -1.63982723,\n       -1.7064804 , -1.62836559, -2.07436068, -1.68205911, -1.58226773]), 'train_neg_root_mean_squared_error': array([-1.30156621, -1.37889934, -1.30375605, -2.08206049, -1.16682827,\n       -1.04468328, -1.34283359, -1.27817049, -1.29256016, -1.34316476]), 'test_r2': array([ 0.47845697,  0.53265891,  0.13938933, -0.09353874,  0.30066984,\n        0.24266387,  0.31041167, -0.11230677,  0.26862763,  0.35283357]), 'train_r2': array([ 0.5649507 ,  0.51361804,  0.56632391, -0.11049029,  0.653044  ,\n        0.72188154,  0.54047948,  0.58336772,  0.57393401,  0.5399194 ]), 'test_neg_mean_absolute_error': array([-1.18808257, -1.07361421, -1.34268855, -1.80396565, -1.30165549,\n       -1.30466437, -1.35346384, -1.78099176, -1.35258143, -1.29052405]), 'train_neg_mean_absolute_error': array([-1.01211001, -1.08127173, -1.01112328, -1.80022539, -0.86111867,\n       -0.74407869, -1.03145489, -0.98311471, -1.00995023, -1.01714119])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete"], "type_of_labels": "floors", "only_BMI": 1, "total_dmg": 1}, "task": "Regression", "pipe": {"scaler": "MinMaxScaler()", "estimator": "KerasRegressor(model=create_regression_model, epochs=150, batch_size=10, verbose=0 )"}, "hp_optimizer": {"type": "RandomizeSearchCV", "params": [{"estimator__model__dim": "[28]", "estimator__model__optimizer": "[\"adam\", \"sgd\"]", "estimator__model__hidden_layer_sizes": "[(8,4,2), (16,8,4), (32,16,8), (64,32,16), (128,64,32)]", "estimator__model__num_layers": "[2]"}], "metrics": ["neg_root_mean_squared_error", "r2", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]