[{"experiment_name": "MLP - totals", "dataset_variant": "only_totals", "estimator": "KerasClassifier(model=create_classifier_model, epochs=150, batch_size=10, verbose=0)", "task": "Classification", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"balanced_accuracy": 0.3257142857142857, "f1_micro": 0.32243697478991595, "f1_macro": 0.2950075717932861, "neg_root_mean_squared_error": -1.8875708399438609, "neg_mean_absolute_error": -1.3349579831932774}, "mean_train_score": {"balanced_accuracy": 0.3870141392874888, "f1_micro": 0.3877637265546826, "f1_macro": 0.36395955796256796, "neg_root_mean_squared_error": -1.7841262144904704, "neg_mean_absolute_error": -1.194823401673373}, "best_params": "[{'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (32, 16, 8), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (32, 16, 8), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (32, 16, 8), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 8}]", "cv_results": "{'fit_time': array([258.75404835, 259.47909403, 258.663064  , 259.24806738,\n       259.52891564, 259.07867908, 259.01390672, 259.10497475,\n       259.66260028, 260.37533045]), 'score_time': array([0.06651235, 0.06451488, 0.06401467, 0.07651663, 0.064013  ,\n       0.06401253, 0.06651163, 0.06551433, 0.06401563, 0.06401205]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_balanced_accuracy': array([0.35714286, 0.33571429, 0.40952381, 0.21428571, 0.37142857,\n       0.30714286, 0.21428571, 0.36666667, 0.29761905, 0.38333333]), 'train_balanced_accuracy': array([0.43710386, 0.40373598, 0.38346113, 0.39106413, 0.38701476,\n       0.35464769, 0.33686971, 0.37757606, 0.38971928, 0.40894878]), 'test_f1_micro': array([0.37142857, 0.35294118, 0.41176471, 0.20588235, 0.35294118,\n       0.29411765, 0.20588235, 0.35294118, 0.29411765, 0.38235294]), 'train_f1_micro': array([0.43464052, 0.40065147, 0.38436482, 0.39087948, 0.38762215,\n       0.35830619, 0.34527687, 0.37785016, 0.38762215, 0.41042345]), 'test_f1_macro': array([0.35005273, 0.27863248, 0.40793651, 0.20113379, 0.34002268,\n       0.27949907, 0.17832723, 0.31326531, 0.26307978, 0.33812616]), 'train_f1_macro': array([0.4225973 , 0.38277381, 0.36055326, 0.37070244, 0.37246589,\n       0.32331478, 0.28995332, 0.35083982, 0.37903373, 0.38736123]), 'test_neg_root_mean_squared_error': array([-1.66476082, -1.74052054, -1.87082869, -2.35147013, -1.53392998,\n       -1.74894926, -2.06511643, -2.0436415 , -1.87867287, -1.97781817]), 'train_neg_root_mean_squared_error': array([-1.72353945, -1.83700649, -1.74703099, -1.72639973, -1.81918835,\n       -1.81380878, -1.92446955, -1.73111024, -1.69594266, -1.82276591]), 'test_neg_mean_absolute_error': array([-1.11428571, -1.20588235, -1.20588235, -1.76470588, -1.11764706,\n       -1.23529412, -1.55882353, -1.47058824, -1.35294118, -1.32352941]), 'train_neg_mean_absolute_error': array([-1.10784314, -1.19869707, -1.17589577, -1.15635179, -1.21824104,\n       -1.25732899, -1.33224756, -1.15960912, -1.14332248, -1.19869707])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["only_totals"], "type_of_labels": "floors", "only_BMI": 1, "total_dmg": 1}, "task": "Classification", "pipe": {"scaler": "MinMaxScaler()", "estimator": "KerasClassifier(model=create_classifier_model, epochs=150, batch_size=10, verbose=0)"}, "hp_optimizer": {"type": "RandomizeSearchCV", "params": [{"estimator__model__dim": "[8]", "estimator__model__optimizer": "[\"adam\", \"sgd\"]", "estimator__model__hidden_layer_sizes": "[(8,4,2), (16,8,4), (32,16,8), (64,32,16), (128,64,32)]"}], "metrics": ["balanced_accuracy", "f1_micro", "f1_macro", "neg_root_mean_squared_error", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]