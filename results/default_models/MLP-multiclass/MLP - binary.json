[{"experiment_name": "MLP - binary", "dataset_variant": "only_binary", "estimator": "KerasClassifier(model=create_classifier_model, epochs=150, batch_size=10, verbose=0)", "task": "Classification", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"balanced_accuracy": 0.31738095238095243, "f1_micro": 0.31647058823529417, "f1_macro": 0.2837591314283044, "neg_root_mean_squared_error": -1.936187800069828, "neg_mean_absolute_error": -1.3847899159663866}, "mean_train_score": {"balanced_accuracy": 0.4253584496483698, "f1_micro": 0.4265387153775734, "f1_macro": 0.40829697183247166, "neg_root_mean_squared_error": -1.7823782012585396, "neg_mean_absolute_error": -1.173305869579102}, "best_params": "[{'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (8, 4, 2), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (32, 16, 8), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 8}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 8}]", "cv_results": "{'fit_time': array([257.92249298, 257.8471849 , 257.58701372, 258.08066559,\n       257.87070203, 257.2359767 , 255.02972031, 254.87439156,\n       255.24344683, 255.02203465]), 'score_time': array([0.06451154, 0.0640111 , 0.06651449, 0.06551147, 0.06601405,\n       0.0635128 , 0.06651568, 0.0645113 , 0.0645113 , 0.06401062]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('feature_extraction',\n                                              MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n                                                        n_components=5)),\n                                             ('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_si...\n                   param_distributions={'estimator__model__dim': [8],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_balanced_accuracy': array([0.37619048, 0.33571429, 0.30952381, 0.24285714, 0.4       ,\n       0.24285714, 0.27142857, 0.2952381 , 0.36904762, 0.33095238]), 'train_balanced_accuracy': array([0.47443884, 0.51251043, 0.46429877, 0.37256582, 0.48001329,\n       0.49210402, 0.32256403, 0.33903772, 0.43728588, 0.3587657 ]), 'test_f1_micro': array([0.4       , 0.35294118, 0.32352941, 0.23529412, 0.38235294,\n       0.23529412, 0.26470588, 0.29411765, 0.35294118, 0.32352941]), 'train_f1_micro': array([0.47385621, 0.50814332, 0.46254072, 0.37459283, 0.48208469,\n       0.49511401, 0.3257329 , 0.34527687, 0.43648208, 0.36156352]), 'test_f1_macro': array([0.3053467 , 0.30184227, 0.2956599 , 0.22496392, 0.37987013,\n       0.23088023, 0.24078144, 0.25142022, 0.33246753, 0.27435897]), 'train_f1_macro': array([0.47039356, 0.50673786, 0.46105205, 0.33738116, 0.47285795,\n       0.4873508 , 0.28820305, 0.31106622, 0.42861506, 0.31931201]), 'test_neg_root_mean_squared_error': array([-1.76473389, -1.83911744, -2.12132034, -2.43141208, -1.42457424,\n       -2.02919862, -2.00733947, -1.91741247, -1.940285  , -1.88648444]), 'train_neg_root_mean_squared_error': array([-1.65189533, -1.68534592, -1.69209698, -1.85903901, -1.69209698,\n       -1.69113419, -1.9679848 , -1.84496851, -1.80209794, -1.93712235]), 'test_neg_mean_absolute_error': array([-1.17142857, -1.26470588, -1.5       , -1.73529412, -0.97058824,\n       -1.47058824, -1.5       , -1.44117647, -1.41176471, -1.38235294]), 'train_neg_mean_absolute_error': array([-1.04901961, -1.0228013 , -1.08469055, -1.29315961, -1.04560261,\n       -1.04234528, -1.40390879, -1.28013029, -1.16938111, -1.34201954])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["only_binary"], "type_of_labels": "floors", "only_BMI": 1, "total_dmg": 1}, "task": "Classification", "pipe": {"feature_extraction": "MaskedSVD(mask=mask, n_components = 5)", "scaler": "MinMaxScaler()", "estimator": "KerasClassifier(model=create_classifier_model, epochs=150, batch_size=10, verbose=0)"}, "hp_optimizer": {"type": "RandomizeSearchCV", "params": [{"estimator__model__dim": "[8]", "estimator__model__optimizer": "[\"adam\", \"sgd\"]", "estimator__model__hidden_layer_sizes": "[(8,4,2), (16,8,4), (32,16,8), (64,32,16), (128,64,32)]"}], "metrics": ["balanced_accuracy", "f1_micro", "f1_macro", "neg_root_mean_squared_error", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]