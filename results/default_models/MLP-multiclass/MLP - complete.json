[{"experiment_name": "MLP - complete", "dataset_variant": "complete", "estimator": "KerasClassifier(model=create_classifier_model, epochs=150, batch_size=10, verbose=0)", "task": "Classification", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_inner_cv", "mean_test_score": {"balanced_accuracy": 0.32976190476190476, "f1_micro": 0.32563025210084034, "f1_macro": 0.31462783248497533, "neg_root_mean_squared_error": -1.9197660996205315, "neg_mean_absolute_error": -1.3903361344537815}, "mean_train_score": {"balanced_accuracy": 0.7599487620131203, "f1_micro": 0.7608609567605543, "f1_macro": 0.7594400274683385, "neg_root_mean_squared_error": -1.1879275676959544, "neg_mean_absolute_error": -0.5157501437056908}, "best_params": "[{'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (32, 16, 8), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'sgd', 'estimator__model__hidden_layer_sizes': (32, 16, 8), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (128, 64, 32), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (16, 8, 4), 'estimator__model__dim': 28}, {'estimator__model__optimizer': 'adam', 'estimator__model__hidden_layer_sizes': (64, 32, 16), 'estimator__model__dim': 28}]", "cv_results": "{'fit_time': array([263.85698962, 262.03137589, 261.61163521, 267.38903666,\n       266.91239762, 264.41522694, 264.55139613, 263.60074806,\n       264.44683695, 266.71678042]), 'score_time': array([0.06401277, 0.06601524, 0.06501174, 0.06501365, 0.06451344,\n       0.06451511, 0.06451511, 0.06351137, 0.06651187, 0.07151628]), 'estimator': [RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1), RandomizedSearchCV(cv=StratifiedKFold(n_splits=10, random_state=42, shuffle=True),\n                   estimator=Pipeline(steps=[('scaler', MinMaxScaler()),\n                                             ('estimator',\n                                              KerasClassifier(batch_size=10, epochs=150, model=<function create_classifier_model at 0x000001F84C7843A8>, verbose=0))]),\n                   n_iter=100,\n                   param_distributions={'estimator__model__dim': [28],\n                                        'estimator__model__hidden_layer_sizes': [(8,\n                                                                                  4,\n                                                                                  2),\n                                                                                 (16,\n                                                                                  8,\n                                                                                  4),\n                                                                                 (32,\n                                                                                  16,\n                                                                                  8),\n                                                                                 (64,\n                                                                                  32,\n                                                                                  16),\n                                                                                 (128,\n                                                                                  64,\n                                                                                  32)],\n                                        'estimator__model__optimizer': ['adam',\n                                                                        'sgd']},\n                   refit='balanced_accuracy', return_train_score=True,\n                   scoring=['balanced_accuracy', 'f1_micro', 'f1_macro',\n                            'neg_root_mean_squared_error',\n                            'neg_mean_absolute_error'],\n                   verbose=1)], 'test_balanced_accuracy': array([0.27142857, 0.34047619, 0.4452381 , 0.15714286, 0.48571429,\n       0.28571429, 0.35714286, 0.42380952, 0.1452381 , 0.38571429]), 'train_balanced_accuracy': array([0.84428462, 0.53248979, 0.73881569, 0.88960648, 0.5006252 ,\n       0.89571799, 0.82465686, 0.88911469, 0.62182022, 0.86235609]), 'test_f1_micro': array([0.28571429, 0.35294118, 0.44117647, 0.14705882, 0.47058824,\n       0.29411765, 0.35294118, 0.41176471, 0.14705882, 0.35294118]), 'train_f1_micro': array([0.84313725, 0.53420195, 0.73941368, 0.88925081, 0.50488599,\n       0.89576547, 0.82410423, 0.88925081, 0.62540717, 0.86319218]), 'test_f1_macro': array([0.27307692, 0.30858189, 0.42297702, 0.15122972, 0.44741925,\n       0.28605442, 0.34936334, 0.41341991, 0.14264069, 0.35151515]), 'train_f1_macro': array([0.8433604 , 0.53245052, 0.74109563, 0.8895079 , 0.49455603,\n       0.89557398, 0.82555471, 0.88892961, 0.61919811, 0.86417338]), 'test_neg_root_mean_squared_error': array([-1.68183573, -1.74052054, -1.87082869, -2.21625015, -1.47528661,\n       -2.22287572, -2.01465221, -1.71498585, -2.27518584, -1.98523965]), 'train_neg_root_mean_squared_error': array([-1.04475034, -1.68244432, -1.32748446, -0.88417134, -1.72073009,\n       -0.72192288, -1.15140475, -0.88784774, -1.46178241, -0.99673735]), 'test_neg_mean_absolute_error': array([-1.28571429, -1.26470588, -1.20588235, -1.73529412, -0.94117647,\n       -1.58823529, -1.47058824, -1.17647059, -1.82352941, -1.41176471]), 'train_neg_mean_absolute_error': array([-0.35294118, -0.98045603, -0.58306189, -0.247557  , -1.03908795,\n       -0.2019544 , -0.40065147, -0.247557  , -0.79478827, -0.30944625])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete"], "type_of_labels": "floors", "only_BMI": 1, "total_dmg": 1}, "task": "Classification", "pipe": {"scaler": "MinMaxScaler()", "estimator": "KerasClassifier(model=create_classifier_model, epochs=150, batch_size=10, verbose=0)"}, "hp_optimizer": {"type": "RandomizeSearchCV", "params": [{"estimator__model__dim": "[28]", "estimator__model__optimizer": "[\"adam\", \"sgd\"]", "estimator__model__hidden_layer_sizes": "[(8,4,2), (16,8,4), (32,16,8), (64,32,16), (128,64,32)]"}], "metrics": ["balanced_accuracy", "f1_micro", "f1_macro", "neg_root_mean_squared_error", "neg_mean_absolute_error"], "n_split_outer_cv": 10, "n_split_inner_cv": 10}}}]