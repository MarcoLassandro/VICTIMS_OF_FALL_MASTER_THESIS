[{"experiment_name": "Experiment_5_24_11_21", "dataset_variant": "complete", "estimator": "OrdinalBinaryClassifier(estimator = DecisionTreeClassifier())", "task": "Classification", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_outer_cv", "mean_test_score": {"accuracy": 0.1730252100840336, "f1_micro": 0.1730252100840336, "f1_macro": 0.07712881130686934, "neg_root_mean_squared_error": -3.476675777621613, "neg_mean_absolute_error": -2.8735294117647063}, "mean_train_score": {"accuracy": 0.1736688595090588, "f1_micro": 0.1736688595090588, "f1_macro": 0.08021880792880456, "neg_root_mean_squared_error": -3.451771177659115, "neg_mean_absolute_error": -2.832853249877584}, "best_params": "[{'feature_extraction__n_components': 8, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 2}]", "cv_results": "{'mean_fit_time': array([0.03940122, 0.02000048, 0.01880009, 0.02430034, 0.02600102,\n       0.01860013, 0.01629994, 0.01480014, 0.02880096, 0.01509981,\n       0.03230004, 0.01910009, 0.02010303, 0.01990056, 0.02070038,\n       0.01560044, 0.01829991, 0.01500015, 0.01869998, 0.01790004]), 'std_fit_time': array([0.0110912 , 0.00431241, 0.0104283 , 0.00498104, 0.0016736 ,\n       0.00179987, 0.00155301, 0.00132708, 0.00444483, 0.00254783,\n       0.00722592, 0.00704877, 0.00807976, 0.0019208 , 0.0033775 ,\n       0.00101944, 0.0028997 , 0.00126529, 0.0039    , 0.00221141]), 'mean_score_time': array([0.10339909, 0.08119926, 0.07719989, 0.09000022, 0.07889946,\n       0.07480004, 0.0767997 , 0.07509987, 0.07610078, 0.0948004 ,\n       0.08030014, 0.10660071, 0.07629769, 0.09219987, 0.08469994,\n       0.06860001, 0.09190021, 0.0777    , 0.07350094, 0.09159987]), 'std_score_time': array([0.01938146, 0.01196545, 0.01653397, 0.01316835, 0.01175118,\n       0.00807179, 0.00695372, 0.00882558, 0.00858365, 0.01234276,\n       0.01628503, 0.03372832, 0.01022909, 0.01212303, 0.01752769,\n       0.00588651, 0.01308799, 0.00507984, 0.00698893, 0.01031691]), 'param_feature_extraction__n_components': masked_array(data=[13, 2, 15, 12, 14, 19, 1, 4, 22, 5, 16, 1, 1, 21, 14,\n                   8, 9, 5, 23, 13],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_feature_extraction': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]))             ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True]),\n                             n_components=8)                                                           ],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__estimator__splitter': masked_array(data=['best', 'best', 'random', 'best', 'best', 'random',\n                   'best', 'random', 'best', 'random', 'best', 'random',\n                   'best', 'random', 'random', 'random', 'random',\n                   'random', 'random', 'random'],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__estimator__max_depth': masked_array(data=[5, 6, 5, 6, 5, 4, 3, 5, 4, 4, 6, 5, 5, 6, 6, 3, 6, 6,\n                   5, 4],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__binary_threshold': masked_array(data=[3, 4, 2, 3, 4, 4, 4, 4, 4, 5, 2, 5, 2, 3, 4, 2, 5, 4,\n                   2, 5],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'feature_extraction__n_components': 13, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 15, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 12, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 14, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 19, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 4, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 22, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 5, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 16, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 21, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 14, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 8, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 9, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 5, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 23, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 13, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True]),\n          n_components=8), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 5}], 'split0_test_accuracy': array([0.14285714, 0.17142857, 0.14285714, 0.11428571, 0.08571429,\n       0.14285714, 0.17142857, 0.11428571, 0.11428571, 0.17142857,\n       0.2       , 0.2       , 0.11428571, 0.17142857, 0.17142857,\n       0.17142857, 0.08571429, 0.2       , 0.2       , 0.08571429]), 'split1_test_accuracy': array([0.11764706, 0.14705882, 0.14705882, 0.20588235, 0.20588235,\n       0.05882353, 0.17647059, 0.14705882, 0.20588235, 0.20588235,\n       0.14705882, 0.20588235, 0.05882353, 0.11764706, 0.17647059,\n       0.17647059, 0.14705882, 0.11764706, 0.14705882, 0.11764706]), 'split2_test_accuracy': array([0.11764706, 0.17647059, 0.14705882, 0.14705882, 0.17647059,\n       0.08823529, 0.17647059, 0.17647059, 0.14705882, 0.11764706,\n       0.11764706, 0.20588235, 0.05882353, 0.11764706, 0.14705882,\n       0.20588235, 0.08823529, 0.14705882, 0.08823529, 0.11764706]), 'split3_test_accuracy': array([0.20588235, 0.17647059, 0.08823529, 0.11764706, 0.17647059,\n       0.08823529, 0.14705882, 0.20588235, 0.08823529, 0.11764706,\n       0.23529412, 0.05882353, 0.08823529, 0.14705882, 0.11764706,\n       0.11764706, 0.14705882, 0.17647059, 0.08823529, 0.08823529]), 'split4_test_accuracy': array([0.20588235, 0.11764706, 0.14705882, 0.17647059, 0.14705882,\n       0.11764706, 0.20588235, 0.11764706, 0.11764706, 0.17647059,\n       0.08823529, 0.08823529, 0.17647059, 0.02941176, 0.20588235,\n       0.17647059, 0.23529412, 0.11764706, 0.08823529, 0.08823529]), 'split5_test_accuracy': array([0.20588235, 0.11764706, 0.20588235, 0.20588235, 0.14705882,\n       0.05882353, 0.08823529, 0.05882353, 0.11764706, 0.20588235,\n       0.17647059, 0.17647059, 0.14705882, 0.14705882, 0.05882353,\n       0.23529412, 0.14705882, 0.11764706, 0.11764706, 0.20588235]), 'split6_test_accuracy': array([0.17647059, 0.14705882, 0.17647059, 0.20588235, 0.17647059,\n       0.14705882, 0.17647059, 0.11764706, 0.11764706, 0.17647059,\n       0.08823529, 0.17647059, 0.14705882, 0.14705882, 0.20588235,\n       0.11764706, 0.14705882, 0.08823529, 0.17647059, 0.17647059]), 'split7_test_accuracy': array([0.11764706, 0.11764706, 0.17647059, 0.14705882, 0.14705882,\n       0.17647059, 0.14705882, 0.11764706, 0.14705882, 0.20588235,\n       0.14705882, 0.20588235, 0.05882353, 0.05882353, 0.14705882,\n       0.20588235, 0.08823529, 0.20588235, 0.11764706, 0.14705882]), 'split8_test_accuracy': array([0.11764706, 0.17647059, 0.11764706, 0.14705882, 0.08823529,\n       0.08823529, 0.17647059, 0.20588235, 0.11764706, 0.17647059,\n       0.17647059, 0.14705882, 0.11764706, 0.14705882, 0.11764706,\n       0.17647059, 0.11764706, 0.17647059, 0.14705882, 0.14705882]), 'split9_test_accuracy': array([0.08823529, 0.17647059, 0.14705882, 0.17647059, 0.20588235,\n       0.20588235, 0.20588235, 0.11764706, 0.23529412, 0.14705882,\n       0.08823529, 0.17647059, 0.17647059, 0.17647059, 0.17647059,\n       0.14705882, 0.05882353, 0.14705882, 0.11764706, 0.17647059]), 'mean_test_accuracy': array([0.14957983, 0.15243697, 0.14957983, 0.16436975, 0.15563025,\n       0.11722689, 0.16714286, 0.13789916, 0.14084034, 0.17008403,\n       0.14647059, 0.16411765, 0.11436975, 0.12596639, 0.15243697,\n       0.17302521, 0.12621849, 0.14941176, 0.12882353, 0.13504202]), 'std_test_accuracy': array([0.04256782, 0.02521905, 0.03077283, 0.03324631, 0.0400053 ,\n       0.04718059, 0.03225063, 0.04389331, 0.04342058, 0.03161987,\n       0.04853921, 0.0491062 , 0.04449729, 0.04512918, 0.04297759,\n       0.03589219, 0.04772458, 0.03740732, 0.0364943 , 0.04019944]), 'rank_test_accuracy': array([ 9,  7,  9,  4,  6, 19,  3, 14, 13,  2, 12,  5, 20, 18,  7,  1, 17,\n       11, 16, 15]), 'split0_train_accuracy': array([0.20261438, 0.15359477, 0.16666667, 0.19607843, 0.13071895,\n       0.14705882, 0.09150327, 0.09803922, 0.16013072, 0.14705882,\n       0.20915033, 0.20261438, 0.17647059, 0.18954248, 0.11437908,\n       0.16339869, 0.19934641, 0.13398693, 0.19281046, 0.17647059]), 'split1_train_accuracy': array([0.17915309, 0.13029316, 0.19543974, 0.20521173, 0.1465798 ,\n       0.10749186, 0.16938111, 0.17915309, 0.17589577, 0.17915309,\n       0.18241042, 0.21172638, 0.17589577, 0.21498371, 0.17589577,\n       0.16612378, 0.2019544 , 0.16612378, 0.21172638, 0.20846906]), 'split2_train_accuracy': array([0.21498371, 0.17589577, 0.19218241, 0.21172638, 0.12703583,\n       0.15960912, 0.15309446, 0.11726384, 0.14332248, 0.18566775,\n       0.20521173, 0.17915309, 0.1465798 , 0.20521173, 0.14006515,\n       0.17915309, 0.16286645, 0.16938111, 0.14983713, 0.14983713]), 'split3_train_accuracy': array([0.21172638, 0.15960912, 0.2019544 , 0.2247557 , 0.13029316,\n       0.1465798 , 0.17263844, 0.1009772 , 0.12703583, 0.17915309,\n       0.19543974, 0.17589577, 0.21498371, 0.2019544 , 0.16286645,\n       0.18566775, 0.2019544 , 0.14983713, 0.18241042, 0.18241042]), 'split4_train_accuracy': array([0.20521173, 0.1237785 , 0.17263844, 0.21498371, 0.17589577,\n       0.15635179, 0.17263844, 0.11726384, 0.17263844, 0.16938111,\n       0.21172638, 0.14006515, 0.18241042, 0.18241042, 0.11400651,\n       0.17915309, 0.19869707, 0.17915309, 0.18566775, 0.17589577]), 'split5_train_accuracy': array([0.19543974, 0.13029316, 0.19218241, 0.2019544 , 0.15309446,\n       0.15960912, 0.18241042, 0.1009772 , 0.15309446, 0.19218241,\n       0.15309446, 0.18241042, 0.16612378, 0.17263844, 0.12703583,\n       0.16612378, 0.21498371, 0.14983713, 0.17589577, 0.17263844]), 'split6_train_accuracy': array([0.21172638, 0.16938111, 0.21498371, 0.22801303, 0.15960912,\n       0.1237785 , 0.15309446, 0.15960912, 0.15635179, 0.18241042,\n       0.21498371, 0.17589577, 0.14983713, 0.18892508, 0.14983713,\n       0.16612378, 0.22149837, 0.17589577, 0.17589577, 0.19218241]), 'split7_train_accuracy': array([0.20521173, 0.16286645, 0.18566775, 0.21824104, 0.17589577,\n       0.13029316, 0.17915309, 0.14006515, 0.19218241, 0.17263844,\n       0.2247557 , 0.17263844, 0.17915309, 0.19218241, 0.17263844,\n       0.18892508, 0.19869707, 0.18566775, 0.16938111, 0.15635179]), 'split8_train_accuracy': array([0.19543974, 0.1465798 , 0.2019544 , 0.19218241, 0.10749186,\n       0.12052117, 0.16938111, 0.16938111, 0.13680782, 0.16938111,\n       0.21172638, 0.17589577, 0.17263844, 0.19218241, 0.12703583,\n       0.16286645, 0.16612378, 0.17589577, 0.21498371, 0.17263844]), 'split9_train_accuracy': array([0.21172638, 0.15309446, 0.23127036, 0.23127036, 0.16286645,\n       0.15309446, 0.16612378, 0.13029316, 0.15635179, 0.16938111,\n       0.19218241, 0.19218241, 0.18892508, 0.21172638, 0.13355049,\n       0.17915309, 0.19218241, 0.15635179, 0.17915309, 0.19869707]), 'mean_train_accuracy': array([0.20332333, 0.15053863, 0.19549403, 0.21244172, 0.14694812,\n       0.14043878, 0.16094186, 0.13130229, 0.15738115, 0.17464074,\n       0.20006813, 0.18084776, 0.17530178, 0.19517575, 0.14173107,\n       0.17366886, 0.19583041, 0.16421303, 0.18377616, 0.17855911]), 'std_train_accuracy': array([0.01031472, 0.01673224, 0.01793085, 0.01276588, 0.02149793,\n       0.01758591, 0.0248603 , 0.02821097, 0.01832077, 0.0117395 ,\n       0.01953113, 0.0183446 , 0.01841756, 0.01254017, 0.02157147,\n       0.00927313, 0.01764061, 0.01541296, 0.01829436, 0.01703012]), 'split0_test_f1_micro': array([0.14285714, 0.17142857, 0.14285714, 0.11428571, 0.08571429,\n       0.14285714, 0.17142857, 0.11428571, 0.11428571, 0.17142857,\n       0.2       , 0.2       , 0.11428571, 0.17142857, 0.17142857,\n       0.17142857, 0.08571429, 0.2       , 0.2       , 0.08571429]), 'split1_test_f1_micro': array([0.11764706, 0.14705882, 0.14705882, 0.20588235, 0.20588235,\n       0.05882353, 0.17647059, 0.14705882, 0.20588235, 0.20588235,\n       0.14705882, 0.20588235, 0.05882353, 0.11764706, 0.17647059,\n       0.17647059, 0.14705882, 0.11764706, 0.14705882, 0.11764706]), 'split2_test_f1_micro': array([0.11764706, 0.17647059, 0.14705882, 0.14705882, 0.17647059,\n       0.08823529, 0.17647059, 0.17647059, 0.14705882, 0.11764706,\n       0.11764706, 0.20588235, 0.05882353, 0.11764706, 0.14705882,\n       0.20588235, 0.08823529, 0.14705882, 0.08823529, 0.11764706]), 'split3_test_f1_micro': array([0.20588235, 0.17647059, 0.08823529, 0.11764706, 0.17647059,\n       0.08823529, 0.14705882, 0.20588235, 0.08823529, 0.11764706,\n       0.23529412, 0.05882353, 0.08823529, 0.14705882, 0.11764706,\n       0.11764706, 0.14705882, 0.17647059, 0.08823529, 0.08823529]), 'split4_test_f1_micro': array([0.20588235, 0.11764706, 0.14705882, 0.17647059, 0.14705882,\n       0.11764706, 0.20588235, 0.11764706, 0.11764706, 0.17647059,\n       0.08823529, 0.08823529, 0.17647059, 0.02941176, 0.20588235,\n       0.17647059, 0.23529412, 0.11764706, 0.08823529, 0.08823529]), 'split5_test_f1_micro': array([0.20588235, 0.11764706, 0.20588235, 0.20588235, 0.14705882,\n       0.05882353, 0.08823529, 0.05882353, 0.11764706, 0.20588235,\n       0.17647059, 0.17647059, 0.14705882, 0.14705882, 0.05882353,\n       0.23529412, 0.14705882, 0.11764706, 0.11764706, 0.20588235]), 'split6_test_f1_micro': array([0.17647059, 0.14705882, 0.17647059, 0.20588235, 0.17647059,\n       0.14705882, 0.17647059, 0.11764706, 0.11764706, 0.17647059,\n       0.08823529, 0.17647059, 0.14705882, 0.14705882, 0.20588235,\n       0.11764706, 0.14705882, 0.08823529, 0.17647059, 0.17647059]), 'split7_test_f1_micro': array([0.11764706, 0.11764706, 0.17647059, 0.14705882, 0.14705882,\n       0.17647059, 0.14705882, 0.11764706, 0.14705882, 0.20588235,\n       0.14705882, 0.20588235, 0.05882353, 0.05882353, 0.14705882,\n       0.20588235, 0.08823529, 0.20588235, 0.11764706, 0.14705882]), 'split8_test_f1_micro': array([0.11764706, 0.17647059, 0.11764706, 0.14705882, 0.08823529,\n       0.08823529, 0.17647059, 0.20588235, 0.11764706, 0.17647059,\n       0.17647059, 0.14705882, 0.11764706, 0.14705882, 0.11764706,\n       0.17647059, 0.11764706, 0.17647059, 0.14705882, 0.14705882]), 'split9_test_f1_micro': array([0.08823529, 0.17647059, 0.14705882, 0.17647059, 0.20588235,\n       0.20588235, 0.20588235, 0.11764706, 0.23529412, 0.14705882,\n       0.08823529, 0.17647059, 0.17647059, 0.17647059, 0.17647059,\n       0.14705882, 0.05882353, 0.14705882, 0.11764706, 0.17647059]), 'mean_test_f1_micro': array([0.14957983, 0.15243697, 0.14957983, 0.16436975, 0.15563025,\n       0.11722689, 0.16714286, 0.13789916, 0.14084034, 0.17008403,\n       0.14647059, 0.16411765, 0.11436975, 0.12596639, 0.15243697,\n       0.17302521, 0.12621849, 0.14941176, 0.12882353, 0.13504202]), 'std_test_f1_micro': array([0.04256782, 0.02521905, 0.03077283, 0.03324631, 0.0400053 ,\n       0.04718059, 0.03225063, 0.04389331, 0.04342058, 0.03161987,\n       0.04853921, 0.0491062 , 0.04449729, 0.04512918, 0.04297759,\n       0.03589219, 0.04772458, 0.03740732, 0.0364943 , 0.04019944]), 'rank_test_f1_micro': array([ 9,  7,  9,  4,  6, 19,  3, 14, 13,  2, 12,  5, 20, 18,  7,  1, 17,\n       11, 16, 15]), 'split0_train_f1_micro': array([0.20261438, 0.15359477, 0.16666667, 0.19607843, 0.13071895,\n       0.14705882, 0.09150327, 0.09803922, 0.16013072, 0.14705882,\n       0.20915033, 0.20261438, 0.17647059, 0.18954248, 0.11437908,\n       0.16339869, 0.19934641, 0.13398693, 0.19281046, 0.17647059]), 'split1_train_f1_micro': array([0.17915309, 0.13029316, 0.19543974, 0.20521173, 0.1465798 ,\n       0.10749186, 0.16938111, 0.17915309, 0.17589577, 0.17915309,\n       0.18241042, 0.21172638, 0.17589577, 0.21498371, 0.17589577,\n       0.16612378, 0.2019544 , 0.16612378, 0.21172638, 0.20846906]), 'split2_train_f1_micro': array([0.21498371, 0.17589577, 0.19218241, 0.21172638, 0.12703583,\n       0.15960912, 0.15309446, 0.11726384, 0.14332248, 0.18566775,\n       0.20521173, 0.17915309, 0.1465798 , 0.20521173, 0.14006515,\n       0.17915309, 0.16286645, 0.16938111, 0.14983713, 0.14983713]), 'split3_train_f1_micro': array([0.21172638, 0.15960912, 0.2019544 , 0.2247557 , 0.13029316,\n       0.1465798 , 0.17263844, 0.1009772 , 0.12703583, 0.17915309,\n       0.19543974, 0.17589577, 0.21498371, 0.2019544 , 0.16286645,\n       0.18566775, 0.2019544 , 0.14983713, 0.18241042, 0.18241042]), 'split4_train_f1_micro': array([0.20521173, 0.1237785 , 0.17263844, 0.21498371, 0.17589577,\n       0.15635179, 0.17263844, 0.11726384, 0.17263844, 0.16938111,\n       0.21172638, 0.14006515, 0.18241042, 0.18241042, 0.11400651,\n       0.17915309, 0.19869707, 0.17915309, 0.18566775, 0.17589577]), 'split5_train_f1_micro': array([0.19543974, 0.13029316, 0.19218241, 0.2019544 , 0.15309446,\n       0.15960912, 0.18241042, 0.1009772 , 0.15309446, 0.19218241,\n       0.15309446, 0.18241042, 0.16612378, 0.17263844, 0.12703583,\n       0.16612378, 0.21498371, 0.14983713, 0.17589577, 0.17263844]), 'split6_train_f1_micro': array([0.21172638, 0.16938111, 0.21498371, 0.22801303, 0.15960912,\n       0.1237785 , 0.15309446, 0.15960912, 0.15635179, 0.18241042,\n       0.21498371, 0.17589577, 0.14983713, 0.18892508, 0.14983713,\n       0.16612378, 0.22149837, 0.17589577, 0.17589577, 0.19218241]), 'split7_train_f1_micro': array([0.20521173, 0.16286645, 0.18566775, 0.21824104, 0.17589577,\n       0.13029316, 0.17915309, 0.14006515, 0.19218241, 0.17263844,\n       0.2247557 , 0.17263844, 0.17915309, 0.19218241, 0.17263844,\n       0.18892508, 0.19869707, 0.18566775, 0.16938111, 0.15635179]), 'split8_train_f1_micro': array([0.19543974, 0.1465798 , 0.2019544 , 0.19218241, 0.10749186,\n       0.12052117, 0.16938111, 0.16938111, 0.13680782, 0.16938111,\n       0.21172638, 0.17589577, 0.17263844, 0.19218241, 0.12703583,\n       0.16286645, 0.16612378, 0.17589577, 0.21498371, 0.17263844]), 'split9_train_f1_micro': array([0.21172638, 0.15309446, 0.23127036, 0.23127036, 0.16286645,\n       0.15309446, 0.16612378, 0.13029316, 0.15635179, 0.16938111,\n       0.19218241, 0.19218241, 0.18892508, 0.21172638, 0.13355049,\n       0.17915309, 0.19218241, 0.15635179, 0.17915309, 0.19869707]), 'mean_train_f1_micro': array([0.20332333, 0.15053863, 0.19549403, 0.21244172, 0.14694812,\n       0.14043878, 0.16094186, 0.13130229, 0.15738115, 0.17464074,\n       0.20006813, 0.18084776, 0.17530178, 0.19517575, 0.14173107,\n       0.17366886, 0.19583041, 0.16421303, 0.18377616, 0.17855911]), 'std_train_f1_micro': array([0.01031472, 0.01673224, 0.01793085, 0.01276588, 0.02149793,\n       0.01758591, 0.0248603 , 0.02821097, 0.01832077, 0.0117395 ,\n       0.01953113, 0.0183446 , 0.01841756, 0.01254017, 0.02157147,\n       0.00927313, 0.01764061, 0.01541296, 0.01829436, 0.01703012]), 'split0_test_f1_macro': array([0.06304222, 0.07403123, 0.05844156, 0.04761905, 0.03701562,\n       0.05762305, 0.07428571, 0.03571429, 0.04741379, 0.06878307,\n       0.0929803 , 0.09795918, 0.04741379, 0.07714286, 0.07428571,\n       0.0855615 , 0.03756158, 0.08921513, 0.09142857, 0.02764977]), 'split1_test_f1_macro': array([0.05341615, 0.06658048, 0.06583851, 0.09276438, 0.09273183,\n       0.01785714, 0.06959707, 0.07252747, 0.09338281, 0.10550887,\n       0.06603175, 0.09254658, 0.02730159, 0.03940887, 0.07006803,\n       0.07006803, 0.06603175, 0.05145929, 0.06617192, 0.05015873]), 'split2_test_f1_macro': array([0.05318491, 0.06989247, 0.06617192, 0.06603175, 0.08531746,\n       0.03061224, 0.06959707, 0.07977737, 0.07252747, 0.04977376,\n       0.05388471, 0.09157509, 0.02597403, 0.05559147, 0.07526882,\n       0.08911565, 0.03873016, 0.06007326, 0.0401126 , 0.05687831]), 'split3_test_f1_macro': array([0.09047619, 0.07594149, 0.02955665, 0.05323869, 0.0683087 ,\n       0.03571429, 0.05845649, 0.09438776, 0.03845016, 0.04932331,\n       0.10238095, 0.02646617, 0.03809524, 0.06471306, 0.05      ,\n       0.05087252, 0.0643609 , 0.08058608, 0.02678571, 0.04150376]), 'split4_test_f1_macro': array([0.09589947, 0.05256648, 0.06746032, 0.08082707, 0.06679035,\n       0.05341615, 0.09214595, 0.05341615, 0.05388471, 0.08190476,\n       0.03873016, 0.03913043, 0.07769424, 0.01098901, 0.09254658,\n       0.0833872 , 0.13210445, 0.04977376, 0.04081633, 0.02764977]), 'split5_test_f1_macro': array([0.09440994, 0.04965986, 0.09777778, 0.09440994, 0.06555349,\n       0.0292517 , 0.03896104, 0.02694236, 0.05194805, 0.09276438,\n       0.0839599 , 0.0833872 , 0.06397516, 0.06265664, 0.01843318,\n       0.1170068 , 0.06397516, 0.05318491, 0.05460317, 0.09440994]), 'split6_test_f1_macro': array([0.07746032, 0.06870748, 0.07977737, 0.09589947, 0.07826087,\n       0.06603175, 0.08448541, 0.05145929, 0.04968944, 0.08531746,\n       0.03957947, 0.08082707, 0.06658048, 0.05981703, 0.09333333,\n       0.03571429, 0.06679035, 0.02857143, 0.07977737, 0.07977737]), 'split7_test_f1_macro': array([0.05318491, 0.05341615, 0.07769424, 0.06617192, 0.0615873 ,\n       0.07769424, 0.06617192, 0.05341615, 0.06555349, 0.09254658,\n       0.06679035, 0.09273183, 0.02285714, 0.02197802, 0.06578947,\n       0.09254658, 0.0401126 , 0.09254658, 0.05559147, 0.05986395]), 'split8_test_f1_macro': array([0.04965986, 0.08012422, 0.04960317, 0.07037298, 0.03902116,\n       0.0401979 , 0.07891156, 0.09589947, 0.0515528 , 0.07977737,\n       0.07891156, 0.06578947, 0.05256648, 0.06617192, 0.05015873,\n       0.08022519, 0.05015873, 0.08022519, 0.06583851, 0.06583851]), 'split9_test_f1_macro': array([0.03428571, 0.07826087, 0.06617192, 0.0833872 , 0.09273183,\n       0.09437621, 0.09333333, 0.04960317, 0.1068323 , 0.06870748,\n       0.03957947, 0.08448541, 0.08039579, 0.08012422, 0.0833872 ,\n       0.06679035, 0.02597403, 0.06583851, 0.05380334, 0.07977737]), 'mean_test_f1_macro': array([0.06650197, 0.06691807, 0.06584934, 0.07507224, 0.06873186,\n       0.05027747, 0.07259456, 0.06131435, 0.0631235 , 0.0774407 ,\n       0.06628286, 0.07548984, 0.05028539, 0.05385931, 0.06732711,\n       0.07712881, 0.05857997, 0.06514741, 0.0574929 , 0.05835075]), 'std_test_f1_macro': array([0.02048745, 0.01064594, 0.01729882, 0.01623699, 0.01863229,\n       0.02280778, 0.01544937, 0.02225406, 0.02073787, 0.01745144,\n       0.0219707 , 0.02311498, 0.02035799, 0.02163413, 0.02162693,\n       0.02157036, 0.02811088, 0.01930416, 0.01828085, 0.02124858]), 'rank_test_f1_macro': array([ 9,  8, 11,  4,  6, 20,  5, 14, 13,  1, 10,  3, 19, 18,  7,  2, 15,\n       12, 17, 16]), 'split0_train_f1_macro': array([0.08954165, 0.06848371, 0.08049926, 0.09199393, 0.0586264 ,\n       0.0660521 , 0.04076819, 0.04402738, 0.07143619, 0.06571763,\n       0.10221675, 0.10144673, 0.07952872, 0.08434853, 0.05130313,\n       0.07924391, 0.09369202, 0.05828991, 0.09077157, 0.08208477]), 'split1_train_f1_macro': array([0.080746  , 0.05893435, 0.08768087, 0.09057688, 0.06498058,\n       0.04758911, 0.07517189, 0.08248051, 0.07931934, 0.08707959,\n       0.0818731 , 0.09503637, 0.07436561, 0.09598267, 0.07820375,\n       0.0771837 , 0.08862213, 0.07407407, 0.09322393, 0.09393038]), 'split2_train_f1_macro': array([0.09953741, 0.07927613, 0.08846448, 0.09906951, 0.05613341,\n       0.07212476, 0.06653727, 0.05210927, 0.06228062, 0.09043666,\n       0.09026688, 0.08605308, 0.06281758, 0.09024943, 0.06163927,\n       0.08373111, 0.07383214, 0.07663855, 0.05997662, 0.06457989]), 'split3_train_f1_macro': array([0.09554775, 0.07226935, 0.09155201, 0.10214664, 0.05874401,\n       0.06640824, 0.07667682, 0.04545111, 0.05722898, 0.08217026,\n       0.08603887, 0.08302127, 0.09719484, 0.10027944, 0.07275239,\n       0.08435461, 0.09288532, 0.06759442, 0.08016947, 0.08727175]), 'split4_train_f1_macro': array([0.09587091, 0.05577369, 0.07449959, 0.09929534, 0.07814056,\n       0.07032967, 0.07507497, 0.05171195, 0.07767888, 0.07625259,\n       0.09713878, 0.06064052, 0.08087106, 0.08480726, 0.05200157,\n       0.08103504, 0.09641206, 0.07805081, 0.08676989, 0.08599687]), 'split5_train_f1_macro': array([0.09085019, 0.05864428, 0.08794016, 0.09262498, 0.06887218,\n       0.07170205, 0.0812331 , 0.04485671, 0.0688846 , 0.08575353,\n       0.06742604, 0.08382785, 0.07221687, 0.07369492, 0.05452362,\n       0.07650987, 0.09767071, 0.06583851, 0.08471432, 0.07968997]), 'split6_train_f1_macro': array([0.09341243, 0.07643868, 0.09895467, 0.11052316, 0.07161485,\n       0.05378766, 0.06464885, 0.06813851, 0.07033707, 0.08117301,\n       0.1005212 , 0.08120703, 0.06379347, 0.08398744, 0.06417537,\n       0.07967033, 0.10580435, 0.07778225, 0.08197195, 0.08848159]), 'split7_train_f1_macro': array([0.09291784, 0.07338359, 0.08561415, 0.10110845, 0.07859901,\n       0.05629838, 0.07907898, 0.06308271, 0.08472807, 0.07815455,\n       0.10515407, 0.07938311, 0.08734489, 0.09526531, 0.07800454,\n       0.08630004, 0.09786957, 0.08248206, 0.07792825, 0.07669118]), 'split8_train_f1_macro': array([0.08861059, 0.06594695, 0.09403137, 0.08573157, 0.04849624,\n       0.0537505 , 0.07318378, 0.07309671, 0.06150653, 0.07644318,\n       0.09539839, 0.07903391, 0.07687188, 0.09154401, 0.05690738,\n       0.07403892, 0.07538272, 0.0782684 , 0.10095107, 0.08124907]), 'split9_train_f1_macro': array([0.0949325 , 0.06892036, 0.10582375, 0.10612245, 0.0731105 ,\n       0.06979814, 0.07307359, 0.05829388, 0.06984127, 0.08045459,\n       0.08948195, 0.0968923 , 0.08458647, 0.09442487, 0.0600061 ,\n       0.08012054, 0.08831416, 0.06945076, 0.08028925, 0.09242689]), 'mean_train_f1_macro': array([0.09219673, 0.06780711, 0.08950603, 0.09791929, 0.06573177,\n       0.06278406, 0.07054474, 0.05832487, 0.07032416, 0.08036356,\n       0.0915516 , 0.08465422, 0.07795914, 0.08945839, 0.06295171,\n       0.08021881, 0.09104852, 0.07284697, 0.08367663, 0.08324023]), 'std_train_f1_macro': array([0.00490856, 0.00754781, 0.00841748, 0.00723186, 0.00952646,\n       0.00855698, 0.01103374, 0.01246818, 0.00812375, 0.00656661,\n       0.01066434, 0.01092139, 0.00994973, 0.0074107 , 0.00964533,\n       0.00359873, 0.00949963, 0.00699783, 0.01035353, 0.00811789]), 'split0_test_neg_root_mean_squared_error': array([-3.52541791, -3.27326835, -3.66839786, -3.66839786, -3.57371355,\n       -3.3763886 , -3.42678525, -3.57371355, -3.3763886 , -3.71483512,\n       -3.42678525, -3.27326835, -3.66839786, -3.57371355, -3.27326835,\n       -3.62136517, -3.98210282, -3.22047024, -3.27326835, -3.98210282]), 'split1_test_neg_root_mean_squared_error': array([-3.86157542, -3.62588732, -3.32105582, -3.32105582, -3.37377429,\n       -3.81560264, -2.9852579 , -3.37377429, -3.04379794, -2.9852579 ,\n       -3.42568156, -2.86459113, -4.08368346, -3.57688659, -3.15762383,\n       -3.62588732, -3.32105582, -3.67423461, -3.52720519, -3.42568156]), 'split2_test_neg_root_mean_squared_error': array([-3.78075623, -3.22672662, -3.43853594, -3.73378849, -3.43853594,\n       -3.82714761, -3.28096112, -3.11542651, -3.48947999, -3.63803438,\n       -3.91828294, -2.94058818, -4.0073462 , -3.82714761, -3.58919948,\n       -3.43853594, -4.2217922 , -3.33431358, -4.13734783, -3.78075623]), 'split3_test_neg_root_mean_squared_error': array([-3.22216588, -3.38248082, -4.09087938, -3.68223078, -3.16692465,\n       -3.48526309, -3.32990019, -3.27647587, -3.58509988, -3.82330316,\n       -2.87484015, -4.21830744, -4.17626346, -3.63398987, -3.72984781,\n       -4.09087938, -3.63398987, -3.22216588, -3.91452799, -3.95935229]), 'split4_test_neg_root_mean_squared_error': array([-3.02441049, -3.89192225, -3.7534298 , -3.082207  , -3.30329604,\n       -3.51048849, -2.71704857, -3.51048849, -3.51048849, -3.35629347,\n       -3.56040315, -4.15508193, -3.51048849, -3.8001548 , -3.30329604,\n       -3.51048849, -2.65130379, -3.19466467, -3.8001548 , -3.84631221]), 'split5_test_neg_root_mean_squared_error': array([-3.1389395 , -3.56040315, -3.35629347, -3.1389395 , -3.40846697,\n       -3.8001548 , -3.45985379, -3.84631221, -3.51048849, -2.84398229,\n       -3.35629347, -3.35629347, -3.89192225, -3.51048849, -3.70611577,\n       -3.082207  , -3.45985379, -3.56040315, -3.89192225, -3.30329604]), 'split6_test_neg_root_mean_squared_error': array([-3.30329604, -3.19466467, -3.24943434, -3.02441049, -3.56040315,\n       -3.56040315, -3.30329604, -3.65818984, -3.84631221, -3.40846697,\n       -3.70611577, -3.24943434, -3.7534298 , -3.7534298 , -2.90537028,\n       -3.60962765, -3.60962765, -3.56040315, -3.51048849, -3.51048849]), 'split7_test_neg_root_mean_squared_error': array([-3.78075623, -3.53969091, -3.33431358, -3.33431358, -3.58919948,\n       -3.33431358, -3.48947999, -3.48947999, -3.53969091, -3.11542651,\n       -3.38682569, -3.22672662, -4.05114363, -3.87298335, -3.68622236,\n       -3.22672662, -4.0073462 , -3.28096112, -3.63803438, -3.48947999]), 'split8_test_neg_root_mean_squared_error': array([-3.48947999, -3.28096112, -3.63803438, -3.28096112, -3.73378849,\n       -3.73378849, -3.58919948, -3.17156484, -3.78075623, -3.38682569,\n       -3.28096112, -3.17156484, -3.63803438, -3.48947999, -3.63803438,\n       -3.22672662, -3.68622236, -3.33431358, -3.48947999, -3.38682569]), 'split9_test_neg_root_mean_squared_error': array([-4.05114363, -3.11542651, -3.53969091, -3.43853594, -3.11542651,\n       -3.17156484, -3.05825787, -3.48947999, -3.05825787, -3.78075623,\n       -4.13734783, -3.43853594, -3.53969091, -3.48947999, -3.11542651,\n       -3.33431358, -4.0944726 , -3.33431358, -3.73378849, -3.28096112]), 'mean_test_neg_root_mean_squared_error': array([-3.51779413, -3.40914317, -3.53900655, -3.37048406, -3.42635291,\n       -3.56151153, -3.26400402, -3.45049056, -3.47407606, -3.40531817,\n       -3.50735369, -3.38943923, -3.83204004, -3.6527754 , -3.41044048,\n       -3.47667578, -3.66677671, -3.37162436, -3.69162178, -3.59652564]), 'std_test_neg_root_mean_squared_error': array([0.32590933, 0.22828179, 0.24368468, 0.24306565, 0.18522266,\n       0.21636104, 0.25432484, 0.21162981, 0.24894175, 0.32310429,\n       0.33315324, 0.43136004, 0.22882278, 0.14024562, 0.28028483,\n       0.27231252, 0.4364205 , 0.15866445, 0.2409629 , 0.25578012]), 'rank_test_neg_root_mean_squared_error': array([13,  6, 14,  2,  8, 15,  1,  9, 10,  5, 12,  4, 20, 17,  7, 11, 18,\n        3, 19, 16]), 'split0_train_neg_root_mean_squared_error': array([-3.47211111, -3.14621881, -3.51699887, -3.54476508, -3.4323528 ,\n       -3.49462706, -3.79585257, -3.63758521, -3.3396998 , -3.84206167,\n       -3.27448045, -3.28046306, -3.55029226, -3.53368478, -3.54476508,\n       -3.47211111, -3.37474279, -3.42090841, -3.42663539, -3.51699887]), 'split1_train_neg_root_mean_squared_error': array([-3.58834523, -3.48893084, -3.43814585, -3.44382561, -3.40960513,\n       -3.6956705 , -3.15970147, -3.05913488, -3.26315928, -3.30481832,\n       -3.53346035, -3.43814585, -3.5279249 , -3.45515712, -3.09723003,\n       -3.55551597, -3.56649263, -3.17204812, -3.26914307, -3.51682786]), 'split2_train_neg_root_mean_squared_error': array([-3.44240655, -3.08299951, -3.64642523, -3.39092485, -3.39668357,\n       -3.3735897 , -3.23760478, -3.55963619, -3.29148541, -3.44807929,\n       -3.47630415, -3.3735897 , -3.82942491, -3.50430168, -3.3210414 ,\n       -3.41962148, -3.68905415, -3.27958844, -3.76249276, -3.819204  ]), 'split3_train_neg_root_mean_squared_error': array([-3.45421425, -3.18945739, -3.48238939, -3.32741059, -3.42009772,\n       -3.37407244, -3.1213252 , -3.61457419, -3.57652498, -3.52145587,\n       -3.53253837, -3.51033838, -3.26216091, -3.4258074 , -3.27412121,\n       -3.4258074 , -3.37985987, -3.35082274, -3.61457419, -3.45421425]), 'split4_train_neg_root_mean_squared_error': array([-3.46269086, -3.52977101, -3.67090861, -3.36537262, -3.12445435,\n       -3.40003832, -3.11819291, -3.51312105, -3.24714859, -3.5463428 ,\n       -3.38852249, -3.84258667, -3.64955042, -3.43435413, -3.62806649,\n       -3.4570421 , -3.40578163, -3.07400576, -3.5463428 , -3.59016028]), 'split5_train_neg_root_mean_squared_error': array([-3.44571679, -3.49079758, -3.45138409, -3.46833043, -3.31269397,\n       -3.26515509, -3.07400576, -3.5792562 , -3.3769674 , -3.4172393 ,\n       -3.62806649, -3.35373777, -3.75512679, -3.72901293, -3.47396084,\n       -3.49639181, -3.36537262, -3.24714859, -3.45138409, -3.61727668]), 'split6_train_neg_root_mean_squared_error': array([-3.40578163, -3.07400576, -3.28901043, -3.24112419, -3.22904167,\n       -3.57379168, -3.30087344, -3.1986357 , -3.24714859, -3.42865868,\n       -3.3420624 , -3.46269086, -3.81194762, -3.57379168, -3.24714859,\n       -3.47958214, -3.16176259, -3.06764135, -3.62806649, -3.46833043]), 'split7_train_neg_root_mean_squared_error': array([-3.44240655, -3.18281215, -3.45374272, -3.35033665, -3.07665371,\n       -3.60871186, -3.09565209, -3.35033665, -2.99945706, -3.52099335,\n       -3.31515128, -3.48753014, -3.5651224 , -3.52099335, -3.23156259,\n       -3.3327904 , -3.41390145, -3.03830057, -3.57060018, -3.61952721]), 'split8_train_neg_root_mean_squared_error': array([-3.52653968, -3.29148541, -3.4987201 , -3.57060018, -3.53760625,\n       -3.50430168, -3.16433711, -3.12080337, -3.37937797, -3.59242779,\n       -3.44240655, -3.50987439, -3.67844323, -3.4987201 , -3.57606958,\n       -3.40817182, -3.79353127, -3.14575356, -3.32692109, -3.5320773 ]), 'split9_train_neg_root_mean_squared_error': array([-3.44807929, -3.47630415, -3.07665371, -3.24965546, -3.30333954,\n       -3.2974178 , -3.15196025, -3.50430168, -3.40243255, -3.51543826,\n       -3.48192167, -3.35033665, -3.52653968, -3.47067754, -3.52099335,\n       -3.47067754, -3.50430168, -3.24965546, -3.55963619, -3.21336784]), 'mean_train_neg_root_mean_squared_error': array([-3.46882919, -3.29527826, -3.4524379 , -3.39523457, -3.32425287,\n       -3.45873762, -3.22195056, -3.41373851, -3.31234016, -3.51375153,\n       -3.44149142, -3.46092935, -3.61565331, -3.51465007, -3.39149591,\n       -3.45177118, -3.46548007, -3.2045873 , -3.51557962, -3.53479847]), 'std_train_neg_root_mean_squared_error': array([0.04920638, 0.17423832, 0.16146119, 0.10643593, 0.13776199,\n       0.13288841, 0.20165822, 0.20470634, 0.14020662, 0.13404316,\n       0.10533365, 0.14684892, 0.16006062, 0.08368156, 0.16995366,\n       0.0566493 , 0.17127982, 0.12067503, 0.14060195, 0.14587998]), 'split0_test_neg_mean_absolute_error': array([-2.88571429, -2.6       , -3.05714286, -3.05714286, -2.94285714,\n       -2.71428571, -2.77142857, -2.94285714, -2.71428571, -3.11428571,\n       -2.77142857, -2.6       , -3.05714286, -2.94285714, -2.6       ,\n       -3.        , -3.45714286, -2.54285714, -2.6       , -3.45714286]), 'split1_test_neg_mean_absolute_error': array([-3.32352941, -3.02941176, -2.67647059, -2.67647059, -2.73529412,\n       -3.26470588, -2.32352941, -2.73529412, -2.38235294, -2.32352941,\n       -2.79411765, -2.20588235, -3.61764706, -2.97058824, -2.5       ,\n       -3.02941176, -2.67647059, -3.08823529, -2.91176471, -2.79411765]), 'split2_test_neg_mean_absolute_error': array([-3.23529412, -2.58823529, -2.82352941, -3.17647059, -2.82352941,\n       -3.29411765, -2.64705882, -2.47058824, -2.88235294, -3.05882353,\n       -3.41176471, -2.29411765, -3.52941176, -3.29411765, -3.        ,\n       -2.82352941, -3.82352941, -2.70588235, -3.70588235, -3.23529412]), 'split3_test_neg_mean_absolute_error': array([-2.55882353, -2.73529412, -3.61764706, -3.08823529, -2.5       ,\n       -2.85294118, -2.67647059, -2.61764706, -2.97058824, -3.26470588,\n       -2.20588235, -3.79411765, -3.73529412, -3.02941176, -3.14705882,\n       -3.61764706, -3.02941176, -2.55882353, -3.38235294, -3.44117647]), 'split4_test_neg_mean_absolute_error': array([-2.38235294, -3.38235294, -3.20588235, -2.44117647, -2.67647059,\n       -2.91176471, -2.08823529, -2.91176471, -2.91176471, -2.73529412,\n       -2.97058824, -3.73529412, -2.91176471, -3.26470588, -2.67647059,\n       -2.91176471, -2.02941176, -2.55882353, -3.26470588, -3.32352941]), 'split5_test_neg_mean_absolute_error': array([-2.5       , -2.97058824, -2.73529412, -2.5       , -2.79411765,\n       -3.26470588, -2.85294118, -3.32352941, -2.91176471, -2.20588235,\n       -2.73529412, -2.73529412, -3.38235294, -2.91176471, -3.14705882,\n       -2.44117647, -2.85294118, -2.97058824, -3.38235294, -2.67647059]), 'split6_test_neg_mean_absolute_error': array([-2.67647059, -2.55882353, -2.61764706, -2.38235294, -2.97058824,\n       -2.97058824, -2.67647059, -3.08823529, -3.32352941, -2.79411765,\n       -3.14705882, -2.61764706, -3.20588235, -3.20588235, -2.26470588,\n       -3.02941176, -3.02941176, -2.97058824, -2.91176471, -2.91176471]), 'split7_test_neg_mean_absolute_error': array([-3.23529412, -2.94117647, -2.70588235, -2.70588235, -3.        ,\n       -2.70588235, -2.88235294, -2.88235294, -2.94117647, -2.47058824,\n       -2.76470588, -2.58823529, -3.58823529, -3.35294118, -3.11764706,\n       -2.58823529, -3.52941176, -2.64705882, -3.05882353, -2.88235294]), 'split8_test_neg_mean_absolute_error': array([-2.88235294, -2.64705882, -3.05882353, -2.64705882, -3.17647059,\n       -3.17647059, -3.        , -2.52941176, -3.23529412, -2.76470588,\n       -2.64705882, -2.52941176, -3.05882353, -2.88235294, -3.05882353,\n       -2.58823529, -3.11764706, -2.70588235, -2.88235294, -2.76470588]), 'split9_test_neg_mean_absolute_error': array([-3.58823529, -2.47058824, -2.94117647, -2.82352941, -2.47058824,\n       -2.52941176, -2.41176471, -2.88235294, -2.41176471, -3.23529412,\n       -3.70588235, -2.82352941, -2.94117647, -2.88235294, -2.47058824,\n       -2.70588235, -3.64705882, -2.70588235, -3.17647059, -2.64705882]), 'mean_test_neg_mean_absolute_error': array([-2.92680672, -2.79235294, -2.94394958, -2.74983193, -2.8089916 ,\n       -2.96848739, -2.63302521, -2.83840336, -2.86848739, -2.79672269,\n       -2.91537815, -2.79235294, -3.30277311, -3.07369748, -2.79823529,\n       -2.87352941, -3.1192437 , -2.74546218, -3.12764706, -3.01336134]), 'std_test_neg_mean_absolute_error': array([0.38282425, 0.26819982, 0.29003896, 0.2658965 , 0.21189074,\n       0.25840336, 0.26643295, 0.2465862 , 0.28808979, 0.35567815,\n       0.39924405, 0.51646958, 0.28953063, 0.17597692, 0.31449471,\n       0.31624144, 0.50277845, 0.18546066, 0.30361205, 0.30174187]), 'rank_test_neg_mean_absolute_error': array([13,  4, 14,  3,  8, 15,  1,  9, 10,  6, 12,  5, 20, 17,  7, 11, 18,\n        2, 19, 16]), 'split0_train_neg_mean_absolute_error': array([-2.85947712, -2.5       , -2.91176471, -2.94444444, -2.81372549,\n       -2.88562092, -3.25163399, -3.05555556, -2.70915033, -3.31045752,\n       -2.6372549 , -2.64379085, -2.95098039, -2.93137255, -2.94444444,\n       -2.85947712, -2.74836601, -2.80065359, -2.80718954, -2.91176471]), 'split1_train_neg_mean_absolute_error': array([-2.99348534, -2.8762215 , -2.81758958, -2.82410423, -2.78501629,\n       -3.1237785 , -2.51140065, -2.40716612, -2.62214984, -2.66775244,\n       -2.92833876, -2.81758958, -2.9218241 , -2.83713355, -2.44625407,\n       -2.95439739, -2.96742671, -2.52442997, -2.6286645 , -2.90879479]), 'split2_train_neg_mean_absolute_error': array([-2.82084691, -2.42996743, -3.06188925, -2.76221498, -2.76872964,\n       -2.74267101, -2.59283388, -2.95765472, -2.6514658 , -2.82736156,\n       -2.85993485, -2.74267101, -3.28990228, -2.89250814, -2.68403909,\n       -2.79478827, -3.11400651, -2.63843648, -3.20521173, -3.27687296]), 'split3_train_neg_mean_absolute_error': array([-2.83713355, -2.54397394, -2.86970684, -2.69381107, -2.7980456 ,\n       -2.74592834, -2.4723127 , -3.02605863, -2.98045603, -2.91530945,\n       -2.92833876, -2.90228013, -2.62214984, -2.80456026, -2.63517915,\n       -2.80456026, -2.752443  , -2.71986971, -3.02605863, -2.83713355]), 'split4_train_neg_mean_absolute_error': array([-2.84364821, -2.9218241 , -3.09120521, -2.73289902, -2.4723127 ,\n       -2.77198697, -2.46579805, -2.90228013, -2.60260586, -2.94136808,\n       -2.75895765, -3.30618893, -3.06514658, -2.81107492, -3.03908795,\n       -2.83713355, -2.77850163, -2.42019544, -2.94136808, -2.99348534]), 'split5_train_neg_mean_absolute_error': array([-2.82410423, -2.8762215 , -2.83061889, -2.85016287, -2.6742671 ,\n       -2.62214984, -2.42019544, -2.98045603, -2.74592834, -2.79153094,\n       -3.03908795, -2.71986971, -3.19543974, -3.16286645, -2.85667752,\n       -2.88273616, -2.73289902, -2.60260586, -2.83061889, -3.02605863]), 'split6_train_neg_mean_absolute_error': array([-2.77850163, -2.42019544, -2.64820847, -2.59609121, -2.58306189,\n       -2.97394137, -2.66123779, -2.5504886 , -2.60260586, -2.80456026,\n       -2.70684039, -2.84364821, -3.26710098, -2.97394137, -2.60260586,\n       -2.86319218, -2.51140065, -2.41368078, -3.03908795, -2.85016287]), 'split7_train_neg_mean_absolute_error': array([-2.82084691, -2.53420195, -2.83387622, -2.71661238, -2.42345277,\n       -3.01628664, -2.44299674, -2.71661238, -2.34527687, -2.91205212,\n       -2.67752443, -2.87296417, -2.96416938, -2.91205212, -2.58631922,\n       -2.6970684 , -2.78827362, -2.38436482, -2.97068404, -3.02931596]), 'split8_train_neg_mean_absolute_error': array([-2.91856678, -2.6514658 , -2.88599349, -2.97068404, -2.93159609,\n       -2.89250814, -2.51465798, -2.46905537, -2.74918567, -2.99674267,\n       -2.82084691, -2.8990228 , -3.1009772 , -2.88599349, -2.9771987 ,\n       -2.78175896, -3.24429967, -2.49511401, -2.69055375, -2.92508143]), 'split9_train_neg_mean_absolute_error': array([-2.82736156, -2.85993485, -2.42345277, -2.60586319, -2.66449511,\n       -2.65798046, -2.50162866, -2.89250814, -2.7752443 , -2.90553746,\n       -2.86644951, -2.71661238, -2.91856678, -2.8534202 , -2.91205212,\n       -2.8534202 , -2.89250814, -2.60586319, -2.95765472, -2.56677524]), 'mean_train_neg_mean_absolute_error': array([-2.85239722, -2.66140065, -2.83743054, -2.76968874, -2.69147027,\n       -2.84328522, -2.58346959, -2.79578357, -2.67840689, -2.90726725,\n       -2.82235741, -2.84646378, -3.02962573, -2.9064923 , -2.76838581,\n       -2.83285325, -2.8530125 , -2.56052139, -2.90970918, -2.93254455]), 'std_train_neg_mean_absolute_error': array([0.0578987 , 0.19167444, 0.18202864, 0.12138145, 0.1520935 ,\n       0.15421282, 0.2327659 , 0.22928671, 0.15410483, 0.16109548,\n       0.12058106, 0.17421416, 0.18932695, 0.0993301 , 0.19119964,\n       0.06529125, 0.19945126, 0.13069755, 0.16382844, 0.17062068])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete", "only_totals", "only_binary"], "type_of_labels": "floors", "only_BMI": 1}, "task": "Classification", "pipe": {"feature_extraction": "MaskedSVD(mask=mask)", "scaler": "MinMaxScaler()", "estimator": "OrdinalBinaryClassifier(estimator = DecisionTreeClassifier())"}, "hp_optimizer": {"type": "RandomizeSearchCV", "n_iter": 20, "params": [{"feature_extraction": "[MaskedSVD(mask=mask), MaskedPCA(mask=mask)]", "feature_extraction__n_components": "np.arange(1, X[:, mask].shape[1])", "estimator__estimator__max_depth": "[3, 4, 5, 6]", "estimator__binary_threshold": "[2, 3, 4, 5]", "estimator__estimator__splitter": "['best', 'random']"}], "metrics": ["accuracy", "f1_micro", "f1_macro", "neg_root_mean_squared_error", "neg_mean_absolute_error"], "n_split_outer_cv": 10}}}, {"experiment_name": "Experiment_5_24_11_21", "dataset_variant": "only_totals", "estimator": "OrdinalBinaryClassifier(estimator = DecisionTreeClassifier())", "task": "Classification", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_outer_cv", "mean_test_score": {"accuracy": 0.1703361344537815, "f1_micro": 0.1703361344537815, "f1_macro": 0.0808658044637219, "neg_root_mean_squared_error": -3.4979320734016666, "neg_mean_absolute_error": -2.901260504201681}, "mean_train_score": {"accuracy": 0.15639011304847675, "f1_micro": 0.15639011304847675, "f1_macro": 0.07228560230599487, "neg_root_mean_squared_error": -3.5999833007469064, "neg_mean_absolute_error": -3.0095558961912667}, "best_params": "[{'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 2}]", "cv_results": "{'mean_fit_time': array([0.0147999 , 0.01319952, 0.01480107, 0.01370027, 0.01409993,\n       0.01450055, 0.01780074, 0.01509976, 0.01360028, 0.01740055,\n       0.01429994, 0.01259978, 0.01630027, 0.01430011, 0.01530068,\n       0.01410089, 0.01329989, 0.01289976, 0.01680014, 0.01499965]), 'std_fit_time': array([0.0016016 , 0.00087213, 0.00132762, 0.0010056 , 0.00472081,\n       0.00092115, 0.00582844, 0.00129986, 0.00290538, 0.0047581 ,\n       0.00118772, 0.00091761, 0.00173617, 0.00064029, 0.00382246,\n       0.00053848, 0.00296763, 0.00070005, 0.00515366, 0.00148305]), 'mean_score_time': array([0.09690151, 0.06880031, 0.07239952, 0.09700084, 0.07565312,\n       0.08040078, 0.07899966, 0.07869983, 0.09659979, 0.10600047,\n       0.09290023, 0.07330029, 0.0718013 , 0.07210026, 0.08599982,\n       0.0682992 , 0.06990068, 0.07380109, 0.09230037, 0.07251372]), 'std_score_time': array([0.01623747, 0.01023566, 0.00440896, 0.01181493, 0.01095893,\n       0.01886059, 0.01134907, 0.01397167, 0.0112626 , 0.02512408,\n       0.00918139, 0.00970618, 0.00437841, 0.00656404, 0.00583032,\n       0.0093813 , 0.00810479, 0.00677886, 0.00747055, 0.00455242]), 'param_feature_extraction__n_components': masked_array(data=[3, 2, 3, 1, 2, 2, 3, 2, 2, 2, 2, 1, 2, 2, 2, 3, 3, 1,\n                   2, 1],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_feature_extraction': masked_array(data=[MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])),\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True]))],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__estimator__splitter': masked_array(data=['best', 'random', 'random', 'random', 'random', 'best',\n                   'random', 'best', 'random', 'best', 'random', 'random',\n                   'best', 'random', 'random', 'random', 'random',\n                   'random', 'random', 'best'],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__estimator__max_depth': masked_array(data=[4, 5, 6, 3, 3, 4, 5, 6, 3, 4, 5, 4, 4, 6, 4, 4, 3, 6,\n                   5, 5],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__binary_threshold': masked_array(data=[3, 2, 4, 5, 2, 4, 4, 4, 5, 5, 5, 4, 4, 4, 3, 2, 2, 4,\n                   5, 4],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'feature_extraction__n_components': 3, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 1, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 4}], 'split0_test_accuracy': array([0.11428571, 0.11428571, 0.17142857, 0.14285714, 0.08571429,\n       0.11428571, 0.14285714, 0.17142857, 0.14285714, 0.11428571,\n       0.14285714, 0.25714286, 0.11428571, 0.25714286, 0.14285714,\n       0.14285714, 0.14285714, 0.17142857, 0.11428571, 0.17142857]), 'split1_test_accuracy': array([0.14705882, 0.14705882, 0.17647059, 0.02941176, 0.20588235,\n       0.14705882, 0.11764706, 0.08823529, 0.08823529, 0.14705882,\n       0.14705882, 0.08823529, 0.17647059, 0.11764706, 0.17647059,\n       0.17647059, 0.20588235, 0.05882353, 0.14705882, 0.17647059]), 'split2_test_accuracy': array([0.14705882, 0.20588235, 0.14705882, 0.17647059, 0.17647059,\n       0.20588235, 0.17647059, 0.17647059, 0.17647059, 0.17647059,\n       0.17647059, 0.14705882, 0.20588235, 0.20588235, 0.14705882,\n       0.08823529, 0.08823529, 0.17647059, 0.14705882, 0.17647059]), 'split3_test_accuracy': array([0.14705882, 0.11764706, 0.23529412, 0.11764706, 0.11764706,\n       0.23529412, 0.17647059, 0.20588235, 0.08823529, 0.08823529,\n       0.11764706, 0.26470588, 0.08823529, 0.14705882, 0.11764706,\n       0.05882353, 0.17647059, 0.11764706, 0.08823529, 0.26470588]), 'split4_test_accuracy': array([0.17647059, 0.17647059, 0.08823529, 0.11764706, 0.17647059,\n       0.17647059, 0.14705882, 0.14705882, 0.17647059, 0.17647059,\n       0.23529412, 0.08823529, 0.14705882, 0.17647059, 0.14705882,\n       0.14705882, 0.20588235, 0.17647059, 0.14705882, 0.11764706]), 'split5_test_accuracy': array([0.20588235, 0.11764706, 0.        , 0.20588235, 0.20588235,\n       0.08823529, 0.08823529, 0.11764706, 0.17647059, 0.17647059,\n       0.14705882, 0.08823529, 0.08823529, 0.11764706, 0.14705882,\n       0.17647059, 0.17647059, 0.08823529, 0.17647059, 0.11764706]), 'split6_test_accuracy': array([0.17647059, 0.17647059, 0.17647059, 0.14705882, 0.17647059,\n       0.14705882, 0.14705882, 0.17647059, 0.11764706, 0.14705882,\n       0.20588235, 0.14705882, 0.11764706, 0.17647059, 0.14705882,\n       0.11764706, 0.17647059, 0.17647059, 0.14705882, 0.14705882]), 'split7_test_accuracy': array([0.05882353, 0.11764706, 0.14705882, 0.14705882, 0.17647059,\n       0.05882353, 0.08823529, 0.        , 0.11764706, 0.05882353,\n       0.17647059, 0.11764706, 0.05882353, 0.05882353, 0.05882353,\n       0.08823529, 0.11764706, 0.05882353, 0.20588235, 0.14705882]), 'split8_test_accuracy': array([0.14705882, 0.11764706, 0.17647059, 0.11764706, 0.17647059,\n       0.08823529, 0.11764706, 0.14705882, 0.08823529, 0.11764706,\n       0.08823529, 0.14705882, 0.17647059, 0.17647059, 0.14705882,\n       0.08823529, 0.11764706, 0.23529412, 0.11764706, 0.17647059]), 'split9_test_accuracy': array([0.11764706, 0.17647059, 0.20588235, 0.17647059, 0.20588235,\n       0.05882353, 0.11764706, 0.08823529, 0.14705882, 0.14705882,\n       0.17647059, 0.11764706, 0.05882353, 0.02941176, 0.11764706,\n       0.11764706, 0.20588235, 0.14705882, 0.14705882, 0.05882353]), 'mean_test_accuracy': array([0.14378151, 0.14672269, 0.15243697, 0.13781513, 0.17033613,\n       0.13201681, 0.13193277, 0.13184874, 0.13193277, 0.13495798,\n       0.16134454, 0.14630252, 0.12319328, 0.14630252, 0.13487395,\n       0.12016807, 0.16134454, 0.14067227, 0.14378151, 0.15537815]), 'std_test_accuracy': array([0.03848051, 0.03254   , 0.06263543, 0.0455955 , 0.03730383,\n       0.05780444, 0.0299589 , 0.05734326, 0.03526409, 0.03783604,\n       0.04017826, 0.0616963 , 0.04891334, 0.06443954, 0.02985559,\n       0.03796423, 0.04017826, 0.05519313, 0.03101159, 0.05084617]), 'rank_test_accuracy': array([ 9,  6,  5, 12,  1, 15, 16, 18, 17, 13,  3,  7, 19,  7, 14, 20,  2,\n       11,  9,  4]), 'split0_train_accuracy': array([0.16339869, 0.17320261, 0.14705882, 0.16993464, 0.11764706,\n       0.11111111, 0.1372549 , 0.14052288, 0.17320261, 0.16339869,\n       0.16666667, 0.17320261, 0.11437908, 0.18627451, 0.18300654,\n       0.14052288, 0.14379085, 0.09803922, 0.10784314, 0.12091503]), 'split1_train_accuracy': array([0.19869707, 0.14332248, 0.16286645, 0.16286645, 0.15960912,\n       0.15635179, 0.15309446, 0.15960912, 0.11400651, 0.19869707,\n       0.15309446, 0.11726384, 0.17263844, 0.13680782, 0.16938111,\n       0.16286645, 0.15960912, 0.13355049, 0.15635179, 0.14983713]), 'split2_train_accuracy': array([0.19543974, 0.16286645, 0.1009772 , 0.16938111, 0.16286645,\n       0.1465798 , 0.13029316, 0.13355049, 0.18566775, 0.17589577,\n       0.15960912, 0.14983713, 0.16612378, 0.15309446, 0.16938111,\n       0.09771987, 0.07166124, 0.14332248, 0.15309446, 0.15309446]), 'split3_train_accuracy': array([0.19218241, 0.16938111, 0.1237785 , 0.19543974, 0.16612378,\n       0.09771987, 0.12052117, 0.1237785 , 0.18241042, 0.21498371,\n       0.17589577, 0.12703583, 0.15635179, 0.15960912, 0.16612378,\n       0.16612378, 0.16286645, 0.1465798 , 0.17263844, 0.1237785 ]), 'split4_train_accuracy': array([0.17589577, 0.12703583, 0.1465798 , 0.12052117, 0.16938111,\n       0.13355049, 0.17263844, 0.14983713, 0.14332248, 0.20521173,\n       0.18241042, 0.10749186, 0.16286645, 0.17589577, 0.16938111,\n       0.18566775, 0.16938111, 0.15635179, 0.16938111, 0.16286645]), 'split5_train_accuracy': array([0.17589577, 0.14332248, 0.11726384, 0.16612378, 0.1465798 ,\n       0.1009772 , 0.12052117, 0.1237785 , 0.1465798 , 0.19218241,\n       0.18241042, 0.09771987, 0.14332248, 0.17589577, 0.15309446,\n       0.14332248, 0.17589577, 0.14332248, 0.16938111, 0.1237785 ]), 'split6_train_accuracy': array([0.19218241, 0.18892508, 0.15960912, 0.16612378, 0.14332248,\n       0.1237785 , 0.16938111, 0.14006515, 0.14006515, 0.17263844,\n       0.18566775, 0.13355049, 0.11726384, 0.13029316, 0.18566775,\n       0.15960912, 0.17915309, 0.1237785 , 0.16612378, 0.13680782]), 'split7_train_accuracy': array([0.17915309, 0.14332248, 0.16286645, 0.18892508, 0.16286645,\n       0.10749186, 0.11726384, 0.11400651, 0.17589577, 0.16612378,\n       0.2019544 , 0.14332248, 0.14332248, 0.10749186, 0.18892508,\n       0.16938111, 0.17263844, 0.14332248, 0.15309446, 0.16286645]), 'split8_train_accuracy': array([0.19869707, 0.17589577, 0.16938111, 0.14006515, 0.15635179,\n       0.10423453, 0.12052117, 0.09446254, 0.15309446, 0.14983713,\n       0.17589577, 0.1237785 , 0.16286645, 0.14006515, 0.18892508,\n       0.17589577, 0.17589577, 0.16938111, 0.15635179, 0.13029316]), 'split9_train_accuracy': array([0.18892508, 0.1465798 , 0.14332248, 0.18241042, 0.17915309,\n       0.10749186, 0.16612378, 0.12052117, 0.1465798 , 0.15960912,\n       0.16612378, 0.12052117, 0.11726384, 0.13029316, 0.16612378,\n       0.1237785 , 0.19869707, 0.14983713, 0.14332248, 0.13355049]), 'mean_train_accuracy': array([0.18604671, 0.15738541, 0.14337038, 0.16617913, 0.15639011,\n       0.1189287 , 0.14076132, 0.1300132 , 0.15608248, 0.17985778,\n       0.17497286, 0.12937238, 0.14563986, 0.14957208, 0.17400098,\n       0.15248877, 0.16095889, 0.14074855, 0.15475826, 0.1397788 ]), 'std_train_accuracy': array([0.01121788, 0.01841918, 0.02141712, 0.0210688 , 0.0162602 ,\n       0.01926939, 0.02129226, 0.01783485, 0.02152534, 0.02054765,\n       0.01347861, 0.02072271, 0.02110721, 0.02369282, 0.0113485 ,\n       0.02515851, 0.03268492, 0.01834025, 0.01794144, 0.01532975]), 'split0_test_f1_micro': array([0.11428571, 0.11428571, 0.17142857, 0.14285714, 0.08571429,\n       0.11428571, 0.14285714, 0.17142857, 0.14285714, 0.11428571,\n       0.14285714, 0.25714286, 0.11428571, 0.25714286, 0.14285714,\n       0.14285714, 0.14285714, 0.17142857, 0.11428571, 0.17142857]), 'split1_test_f1_micro': array([0.14705882, 0.14705882, 0.17647059, 0.02941176, 0.20588235,\n       0.14705882, 0.11764706, 0.08823529, 0.08823529, 0.14705882,\n       0.14705882, 0.08823529, 0.17647059, 0.11764706, 0.17647059,\n       0.17647059, 0.20588235, 0.05882353, 0.14705882, 0.17647059]), 'split2_test_f1_micro': array([0.14705882, 0.20588235, 0.14705882, 0.17647059, 0.17647059,\n       0.20588235, 0.17647059, 0.17647059, 0.17647059, 0.17647059,\n       0.17647059, 0.14705882, 0.20588235, 0.20588235, 0.14705882,\n       0.08823529, 0.08823529, 0.17647059, 0.14705882, 0.17647059]), 'split3_test_f1_micro': array([0.14705882, 0.11764706, 0.23529412, 0.11764706, 0.11764706,\n       0.23529412, 0.17647059, 0.20588235, 0.08823529, 0.08823529,\n       0.11764706, 0.26470588, 0.08823529, 0.14705882, 0.11764706,\n       0.05882353, 0.17647059, 0.11764706, 0.08823529, 0.26470588]), 'split4_test_f1_micro': array([0.17647059, 0.17647059, 0.08823529, 0.11764706, 0.17647059,\n       0.17647059, 0.14705882, 0.14705882, 0.17647059, 0.17647059,\n       0.23529412, 0.08823529, 0.14705882, 0.17647059, 0.14705882,\n       0.14705882, 0.20588235, 0.17647059, 0.14705882, 0.11764706]), 'split5_test_f1_micro': array([0.20588235, 0.11764706, 0.        , 0.20588235, 0.20588235,\n       0.08823529, 0.08823529, 0.11764706, 0.17647059, 0.17647059,\n       0.14705882, 0.08823529, 0.08823529, 0.11764706, 0.14705882,\n       0.17647059, 0.17647059, 0.08823529, 0.17647059, 0.11764706]), 'split6_test_f1_micro': array([0.17647059, 0.17647059, 0.17647059, 0.14705882, 0.17647059,\n       0.14705882, 0.14705882, 0.17647059, 0.11764706, 0.14705882,\n       0.20588235, 0.14705882, 0.11764706, 0.17647059, 0.14705882,\n       0.11764706, 0.17647059, 0.17647059, 0.14705882, 0.14705882]), 'split7_test_f1_micro': array([0.05882353, 0.11764706, 0.14705882, 0.14705882, 0.17647059,\n       0.05882353, 0.08823529, 0.        , 0.11764706, 0.05882353,\n       0.17647059, 0.11764706, 0.05882353, 0.05882353, 0.05882353,\n       0.08823529, 0.11764706, 0.05882353, 0.20588235, 0.14705882]), 'split8_test_f1_micro': array([0.14705882, 0.11764706, 0.17647059, 0.11764706, 0.17647059,\n       0.08823529, 0.11764706, 0.14705882, 0.08823529, 0.11764706,\n       0.08823529, 0.14705882, 0.17647059, 0.17647059, 0.14705882,\n       0.08823529, 0.11764706, 0.23529412, 0.11764706, 0.17647059]), 'split9_test_f1_micro': array([0.11764706, 0.17647059, 0.20588235, 0.17647059, 0.20588235,\n       0.05882353, 0.11764706, 0.08823529, 0.14705882, 0.14705882,\n       0.17647059, 0.11764706, 0.05882353, 0.02941176, 0.11764706,\n       0.11764706, 0.20588235, 0.14705882, 0.14705882, 0.05882353]), 'mean_test_f1_micro': array([0.14378151, 0.14672269, 0.15243697, 0.13781513, 0.17033613,\n       0.13201681, 0.13193277, 0.13184874, 0.13193277, 0.13495798,\n       0.16134454, 0.14630252, 0.12319328, 0.14630252, 0.13487395,\n       0.12016807, 0.16134454, 0.14067227, 0.14378151, 0.15537815]), 'std_test_f1_micro': array([0.03848051, 0.03254   , 0.06263543, 0.0455955 , 0.03730383,\n       0.05780444, 0.0299589 , 0.05734326, 0.03526409, 0.03783604,\n       0.04017826, 0.0616963 , 0.04891334, 0.06443954, 0.02985559,\n       0.03796423, 0.04017826, 0.05519313, 0.03101159, 0.05084617]), 'rank_test_f1_micro': array([ 9,  6,  5, 12,  1, 15, 16, 18, 17, 13,  3,  7, 19,  7, 14, 20,  2,\n       11,  9,  4]), 'split0_train_f1_micro': array([0.16339869, 0.17320261, 0.14705882, 0.16993464, 0.11764706,\n       0.11111111, 0.1372549 , 0.14052288, 0.17320261, 0.16339869,\n       0.16666667, 0.17320261, 0.11437908, 0.18627451, 0.18300654,\n       0.14052288, 0.14379085, 0.09803922, 0.10784314, 0.12091503]), 'split1_train_f1_micro': array([0.19869707, 0.14332248, 0.16286645, 0.16286645, 0.15960912,\n       0.15635179, 0.15309446, 0.15960912, 0.11400651, 0.19869707,\n       0.15309446, 0.11726384, 0.17263844, 0.13680782, 0.16938111,\n       0.16286645, 0.15960912, 0.13355049, 0.15635179, 0.14983713]), 'split2_train_f1_micro': array([0.19543974, 0.16286645, 0.1009772 , 0.16938111, 0.16286645,\n       0.1465798 , 0.13029316, 0.13355049, 0.18566775, 0.17589577,\n       0.15960912, 0.14983713, 0.16612378, 0.15309446, 0.16938111,\n       0.09771987, 0.07166124, 0.14332248, 0.15309446, 0.15309446]), 'split3_train_f1_micro': array([0.19218241, 0.16938111, 0.1237785 , 0.19543974, 0.16612378,\n       0.09771987, 0.12052117, 0.1237785 , 0.18241042, 0.21498371,\n       0.17589577, 0.12703583, 0.15635179, 0.15960912, 0.16612378,\n       0.16612378, 0.16286645, 0.1465798 , 0.17263844, 0.1237785 ]), 'split4_train_f1_micro': array([0.17589577, 0.12703583, 0.1465798 , 0.12052117, 0.16938111,\n       0.13355049, 0.17263844, 0.14983713, 0.14332248, 0.20521173,\n       0.18241042, 0.10749186, 0.16286645, 0.17589577, 0.16938111,\n       0.18566775, 0.16938111, 0.15635179, 0.16938111, 0.16286645]), 'split5_train_f1_micro': array([0.17589577, 0.14332248, 0.11726384, 0.16612378, 0.1465798 ,\n       0.1009772 , 0.12052117, 0.1237785 , 0.1465798 , 0.19218241,\n       0.18241042, 0.09771987, 0.14332248, 0.17589577, 0.15309446,\n       0.14332248, 0.17589577, 0.14332248, 0.16938111, 0.1237785 ]), 'split6_train_f1_micro': array([0.19218241, 0.18892508, 0.15960912, 0.16612378, 0.14332248,\n       0.1237785 , 0.16938111, 0.14006515, 0.14006515, 0.17263844,\n       0.18566775, 0.13355049, 0.11726384, 0.13029316, 0.18566775,\n       0.15960912, 0.17915309, 0.1237785 , 0.16612378, 0.13680782]), 'split7_train_f1_micro': array([0.17915309, 0.14332248, 0.16286645, 0.18892508, 0.16286645,\n       0.10749186, 0.11726384, 0.11400651, 0.17589577, 0.16612378,\n       0.2019544 , 0.14332248, 0.14332248, 0.10749186, 0.18892508,\n       0.16938111, 0.17263844, 0.14332248, 0.15309446, 0.16286645]), 'split8_train_f1_micro': array([0.19869707, 0.17589577, 0.16938111, 0.14006515, 0.15635179,\n       0.10423453, 0.12052117, 0.09446254, 0.15309446, 0.14983713,\n       0.17589577, 0.1237785 , 0.16286645, 0.14006515, 0.18892508,\n       0.17589577, 0.17589577, 0.16938111, 0.15635179, 0.13029316]), 'split9_train_f1_micro': array([0.18892508, 0.1465798 , 0.14332248, 0.18241042, 0.17915309,\n       0.10749186, 0.16612378, 0.12052117, 0.1465798 , 0.15960912,\n       0.16612378, 0.12052117, 0.11726384, 0.13029316, 0.16612378,\n       0.1237785 , 0.19869707, 0.14983713, 0.14332248, 0.13355049]), 'mean_train_f1_micro': array([0.18604671, 0.15738541, 0.14337038, 0.16617913, 0.15639011,\n       0.1189287 , 0.14076132, 0.1300132 , 0.15608248, 0.17985778,\n       0.17497286, 0.12937238, 0.14563986, 0.14957208, 0.17400098,\n       0.15248877, 0.16095889, 0.14074855, 0.15475826, 0.1397788 ]), 'std_train_f1_micro': array([0.01121788, 0.01841918, 0.02141712, 0.0210688 , 0.0162602 ,\n       0.01926939, 0.02129226, 0.01783485, 0.02152534, 0.02054765,\n       0.01347861, 0.02072271, 0.02110721, 0.02369282, 0.0113485 ,\n       0.02515851, 0.03268492, 0.01834025, 0.01794144, 0.01532975]), 'split0_test_f1_macro': array([0.04800463, 0.04741897, 0.07653061, 0.05714286, 0.03809524,\n       0.04761905, 0.04464286, 0.07622812, 0.05726601, 0.04931973,\n       0.05769231, 0.11394558, 0.05102041, 0.11394558, 0.05714286,\n       0.05958747, 0.03759398, 0.07407407, 0.04081633, 0.07442977]), 'split1_test_f1_macro': array([0.06617192, 0.07037298, 0.07756949, 0.01503759, 0.13384813,\n       0.06870748, 0.05015873, 0.03878474, 0.02678571, 0.06583851,\n       0.06603175, 0.0422427 , 0.07186147, 0.05341615, 0.08082707,\n       0.08448541, 0.10063336, 0.02730159, 0.06603175, 0.07915894]), 'split2_test_f1_macro': array([0.07037298, 0.09440994, 0.06578947, 0.07826087, 0.07376284,\n       0.089599  , 0.08082707, 0.0707672 , 0.07826087, 0.0877551 ,\n       0.0707672 , 0.05986395, 0.09007741, 0.08911565, 0.06746032,\n       0.0431746 , 0.0401979 , 0.07006803, 0.06617192, 0.07891156]), 'split3_test_f1_macro': array([0.06535948, 0.05      , 0.10459184, 0.0520556 , 0.0520556 ,\n       0.1038961 , 0.07578947, 0.09931973, 0.03845016, 0.03428571,\n       0.04846939, 0.12244898, 0.02857143, 0.05952381, 0.05378151,\n       0.02686203, 0.07256236, 0.05      , 0.03789474, 0.11688312]), 'split4_test_f1_macro': array([0.08190476, 0.09259259, 0.03957947, 0.06020408, 0.07977737,\n       0.07977737, 0.05986395, 0.06870748, 0.08531746, 0.07977737,\n       0.10776942, 0.03913043, 0.06658048, 0.08190476, 0.06617192,\n       0.06603175, 0.09276438, 0.08190476, 0.06770186, 0.04996481]), 'split5_test_f1_macro': array([0.089599  , 0.03088803, 0.        , 0.09440994, 0.09338281,\n       0.03902116, 0.03878474, 0.05559147, 0.0877551 , 0.09710551,\n       0.06658048, 0.03902116, 0.03902116, 0.0515528 , 0.06892231,\n       0.07915894, 0.08190476, 0.0244898 , 0.09450549, 0.05015873]), 'split6_test_f1_macro': array([0.08190476, 0.08012422, 0.07746032, 0.06658048, 0.08531746,\n       0.06578947, 0.05981703, 0.08082707, 0.03007519, 0.06076277,\n       0.09777778, 0.06679035, 0.05318491, 0.08205128, 0.06617192,\n       0.05256648, 0.08022519, 0.07977737, 0.06658048, 0.06870748]), 'split7_test_f1_macro': array([0.02197802, 0.03463203, 0.06617192, 0.06168831, 0.07891156,\n       0.02721088, 0.03913043, 0.        , 0.03361345, 0.02040816,\n       0.07769424, 0.05341615, 0.02597403, 0.02285714, 0.01970443,\n       0.02764977, 0.03571429, 0.02659246, 0.09795918, 0.06583851]), 'split8_test_f1_macro': array([0.06583851, 0.04977376, 0.08190476, 0.05075188, 0.08012422,\n       0.04099379, 0.05460317, 0.06617192, 0.03061224, 0.05318491,\n       0.03957947, 0.06617192, 0.08082707, 0.08012422, 0.06617192,\n       0.03913043, 0.04977376, 0.11090226, 0.05341615, 0.08198758]), 'split9_test_f1_macro': array([0.03686636, 0.07061688, 0.1040293 , 0.08012422, 0.09338281,\n       0.02779573, 0.04960317, 0.04197995, 0.06870748, 0.06007326,\n       0.0833872 , 0.04960317, 0.02670807, 0.01587302, 0.03174603,\n       0.04996481, 0.09440994, 0.06603175, 0.06578947, 0.02694236]), 'mean_test_f1_macro': array([0.06280004, 0.06208294, 0.06936272, 0.06162558, 0.0808658 ,\n       0.059041  , 0.05532206, 0.05983777, 0.05368437, 0.0608511 ,\n       0.07157492, 0.06526344, 0.05338264, 0.06503644, 0.05781003,\n       0.05286117, 0.06857799, 0.06111421, 0.06568674, 0.06929829]), 'std_test_f1_macro': array([0.02022514, 0.02163824, 0.02916444, 0.02029946, 0.02419845,\n       0.02522128, 0.01349012, 0.02620494, 0.02334988, 0.02225981,\n       0.01995052, 0.02821275, 0.02214856, 0.02883914, 0.01761874,\n       0.01874241, 0.02409982, 0.027077  , 0.01848988, 0.02277666]), 'rank_test_f1_macro': array([ 9, 10,  3, 11,  1, 15, 17, 14, 18, 13,  2,  7, 19,  8, 16, 20,  5,\n       12,  6,  4]), 'split0_train_f1_macro': array([0.07172942, 0.07823409, 0.0672851 , 0.07752613, 0.05778711,\n       0.04942068, 0.06202046, 0.06076428, 0.07808142, 0.06897445,\n       0.07794736, 0.07625275, 0.05149038, 0.08314536, 0.08356424,\n       0.06830201, 0.06464021, 0.04421769, 0.04890865, 0.05372458]), 'split1_train_f1_macro': array([0.08707353, 0.06855574, 0.07278799, 0.07368421, 0.07830052,\n       0.06808943, 0.06855501, 0.07176235, 0.03671329, 0.08678066,\n       0.06982429, 0.04500729, 0.07801007, 0.061678  , 0.0761474 ,\n       0.07558928, 0.07450599, 0.06006733, 0.0706015 , 0.06725607]), 'split2_train_f1_macro': array([0.08546648, 0.07496075, 0.04545044, 0.07650302, 0.08034621,\n       0.06681598, 0.05847724, 0.05972477, 0.08351648, 0.08724016,\n       0.07492267, 0.06414638, 0.07349212, 0.06864662, 0.08351648,\n       0.04746219, 0.03194732, 0.06311314, 0.06886447, 0.06468924]), 'split3_train_f1_macro': array([0.09539871, 0.07974605, 0.05327245, 0.08850193, 0.07669529,\n       0.04292076, 0.05326721, 0.05402019, 0.08252517, 0.09719484,\n       0.08636927, 0.0553768 , 0.07060099, 0.07208604, 0.08098174,\n       0.07815351, 0.08045788, 0.06607757, 0.08208264, 0.05586546]), 'split4_train_f1_macro': array([0.07617722, 0.06142857, 0.06493645, 0.05894493, 0.07605595,\n       0.05966065, 0.0752381 , 0.06691297, 0.06434504, 0.09067688,\n       0.08549151, 0.04744079, 0.07351345, 0.07909141, 0.07719863,\n       0.08689599, 0.07669977, 0.07114809, 0.07831881, 0.07172098]), 'split5_train_f1_macro': array([0.07847655, 0.05961829, 0.05237856, 0.07439656, 0.06592829,\n       0.04512472, 0.05248447, 0.0553317 , 0.06624755, 0.10348597,\n       0.08282773, 0.04270605, 0.06453292, 0.07795031, 0.07176173,\n       0.06425546, 0.07911764, 0.05334068, 0.08045459, 0.05585539]), 'split6_train_f1_macro': array([0.08690084, 0.08954054, 0.07158097, 0.07584416, 0.06337589,\n       0.05570109, 0.07121071, 0.06351511, 0.05127402, 0.07754501,\n       0.08412698, 0.06112311, 0.05172749, 0.05473422, 0.08519361,\n       0.07452308, 0.07911622, 0.05556391, 0.07877752, 0.05782618]), 'split7_train_f1_macro': array([0.0865696 , 0.06676011, 0.07220997, 0.09491525, 0.073451  ,\n       0.04810631, 0.05358892, 0.05141287, 0.08356861, 0.07458447,\n       0.09423408, 0.06325211, 0.06497337, 0.04667685, 0.08726708,\n       0.08103337, 0.08011315, 0.06503565, 0.07134744, 0.07189441]), 'split8_train_f1_macro': array([0.08941721, 0.08268845, 0.07419405, 0.06240188, 0.07032967,\n       0.04619809, 0.05373265, 0.04249947, 0.06898752, 0.06508374,\n       0.08006112, 0.05564017, 0.07186835, 0.06301824, 0.08498168,\n       0.08081635, 0.07992727, 0.07385567, 0.07374196, 0.05941043]), 'split9_train_f1_macro': array([0.08629812, 0.0583878 , 0.06453292, 0.08205991, 0.08058608,\n       0.04748221, 0.07437642, 0.05417612, 0.06635543, 0.08204082,\n       0.07707225, 0.05420521, 0.05260465, 0.05876323, 0.08009184,\n       0.06003671, 0.08954887, 0.06623377, 0.06976965, 0.05736978]), 'mean_train_f1_macro': array([0.08435077, 0.07199204, 0.06386289, 0.0764778 , 0.0722856 ,\n       0.05295199, 0.06229512, 0.05801198, 0.06816145, 0.0833607 ,\n       0.08128773, 0.05651507, 0.06528138, 0.06657903, 0.08107044,\n       0.0717068 , 0.07360743, 0.06186535, 0.07228672, 0.06156125]), 'std_train_f1_macro': array([0.0065743 , 0.01009563, 0.00954993, 0.01017275, 0.00734098,\n       0.00864461, 0.00879585, 0.00794425, 0.01440217, 0.01153378,\n       0.0065107 , 0.0096296 , 0.00950864, 0.01108645, 0.00457978,\n       0.01120871, 0.01506777, 0.00839894, 0.00900895, 0.00644024]), 'split0_test_neg_root_mean_squared_error': array([-4.23252711, -4.02492236, -3.16679198, -3.80601028, -4.06729113,\n       -3.76069902, -3.16679198, -3.11218802, -3.71483512, -3.93881781,\n       -3.71483512, -2.50142816, -3.71483512, -2.6349302 , -3.71483512,\n       -3.89505181, -3.66839786, -3.32522824, -4.10922308, -3.27326835]), 'split1_test_neg_root_mean_squared_error': array([-3.32105582, -3.95191688, -3.32105582, -4.21132926, -3.26748689,\n       -3.37377429, -3.76906916, -4.12667078, -3.99632184, -3.47681396,\n       -3.21302496, -3.81560264, -3.04379794, -3.67423461, -3.26748689,\n       -3.26748689, -3.42568156, -4.21132926, -3.47681396, -3.32105582]), 'split2_test_neg_root_mean_squared_error': array([-3.53969091, -3.17156484, -3.33431358, -3.48947999, -3.11542651,\n       -3.17156484, -3.05825787, -3.        , -3.38682569, -3.43853594,\n       -3.28096112, -3.43853594, -3.11542651, -3.11542651, -3.38682569,\n       -3.91828294, -4.05114363, -3.22672662, -3.58919948, -3.28096112]), 'split3_test_neg_root_mean_squared_error': array([-3.43425649, -4.04751194, -2.74933147, -4.04751194, -3.95935229,\n       -2.81278593, -3.11070259, -3.27647587, -4.09087938, -4.21830744,\n       -4.04751194, -2.61781229, -3.68223078, -3.43425649, -3.77686456,\n       -4.25993648, -3.48526309, -3.53553391, -4.17626346, -2.61781229]), 'split4_test_neg_root_mean_squared_error': array([-3.56040315, -3.60962765, -3.93700394, -3.70611577, -3.56040315,\n       -3.02441049, -3.082207  , -3.30329604, -3.56040315, -3.35629347,\n       -3.02441049, -3.60962765, -3.45985379, -3.24943434, -3.70611577,\n       -3.30329604, -3.35629347, -3.082207  , -3.60962765, -3.60962765]), 'split5_test_neg_root_mean_squared_error': array([-3.24943434, -3.65818984, -4.23917306, -3.24943434, -3.24943434,\n       -3.56040315, -3.89192225, -3.51048849, -3.51048849, -3.30329604,\n       -3.60962765, -3.60962765, -3.60962765, -3.35629347, -3.60962765,\n       -3.65818984, -3.45985379, -3.70611577, -3.45985379, -3.89192225]), 'split6_test_neg_root_mean_squared_error': array([-3.24943434, -3.60962765, -3.082207  , -3.30329604, -3.70611577,\n       -2.90537028, -3.35629347, -2.84398229, -3.65818984, -3.65818984,\n       -3.02441049, -3.1389395 , -3.30329604, -3.02441049, -3.30329604,\n       -3.60962765, -3.30329604, -2.96548776, -3.51048849, -3.56040315]), 'split7_test_neg_root_mean_squared_error': array([-4.0073462 , -3.58919948, -3.58919948, -3.38682569, -3.43853594,\n       -3.63803438, -3.68622236, -4.26338722, -3.73378849, -4.05114363,\n       -3.05825787, -3.43853594, -3.68622236, -3.91828294, -3.82714761,\n       -4.0073462 , -3.63803438, -3.87298335, -3.22672662, -3.43853594]), 'split8_test_neg_root_mean_squared_error': array([-3.33431358, -3.48947999, -3.43853594, -3.22672662, -3.28096112,\n       -3.78075623, -3.58919948, -3.38682569, -3.96306477, -3.73378849,\n       -3.63803438, -3.63803438, -3.43853594, -3.28096112, -3.48947999,\n       -3.68622236, -3.68622236, -3.33431358, -3.73378849, -3.38682569]), 'split9_test_neg_root_mean_squared_error': array([-3.78075623, -3.38682569, -2.75467517, -3.48947999, -3.33431358,\n       -3.68622236, -3.43853594, -3.63803438, -3.78075623, -3.63803438,\n       -3.17156484, -3.58919948, -3.96306477, -3.91828294, -3.58919948,\n       -3.96306477, -3.17156484, -3.11542651, -3.82714761, -3.78075623]), 'mean_test_neg_root_mean_squared_error': array([-3.57092182, -3.65388663, -3.36122874, -3.59162099, -3.49793207,\n       -3.3714021 , -3.41492021, -3.44613488, -3.7395553 , -3.6813221 ,\n       -3.37826389, -3.33973436, -3.50168909, -3.36065131, -3.56708788,\n       -3.7568505 , -3.5245751 , -3.4375352 , -3.67191326, -3.41611685]), 'std_test_neg_root_mean_squared_error': array([0.31892108, 0.26842811, 0.44950784, 0.323593  , 0.30378666,\n       0.34851546, 0.29205264, 0.43564281, 0.21383677, 0.2908441 ,\n       0.33384242, 0.42510257, 0.27213208, 0.38003437, 0.18787182,\n       0.29750852, 0.23545187, 0.37291559, 0.28134292, 0.33226161]), 'rank_test_neg_root_mean_squared_error': array([14, 16,  3, 15, 10,  4,  6,  9, 19, 18,  5,  1, 11,  2, 13, 20, 12,\n        8, 17,  7]), 'split0_train_neg_root_mean_squared_error': array([-3.6910951 , -3.63219086, -3.37474279, -3.4890117 , -3.8624216 ,\n       -3.4890117 , -3.46645927, -3.20181729, -3.4607982 , -3.74907396,\n       -3.61053288, -3.10860076, -3.56682243, -2.99291101, -3.39212853,\n       -3.68577907, -3.52813158, -3.72809506, -4.00204196, -3.52256962]), 'split1_train_neg_root_mean_squared_error': array([-3.40960513, -3.7689802 , -3.20880304, -3.50569569, -3.48332463,\n       -3.07188575, -3.33425612, -3.16588081, -3.90648004, -3.47770938,\n       -3.7062321 , -3.65846482, -3.15970147, -3.32838938, -3.61547524,\n       -3.61006555, -3.51682786, -3.46080897, -3.7220183 , -3.32838938]), 'split2_train_neg_root_mean_squared_error': array([-3.58698334, -3.58698334, -3.66780162, -3.48192167, -3.45939687,\n       -3.24363571, -3.3327904 , -3.30333954, -3.3327904 , -3.5541415 ,\n       -3.5320773 , -3.3210414 , -3.14575356, -3.21944418, -3.52653968,\n       -4.04776047, -4.20872368, -3.29148541, -3.69963463, -3.36779149]), 'split3_train_neg_root_mean_squared_error': array([-3.30383254, -3.58743736, -3.57652498, -3.32741059, -3.59288113,\n       -3.57105629, -3.50476641, -3.38563742, -3.46551179, -3.28603798,\n       -3.50476641, -3.58743736, -3.29198019, -3.18945739, -3.4258074 ,\n       -3.54358621, -3.48238939, -3.25616429, -3.58198533, -3.46551179]), 'split4_train_neg_root_mean_squared_error': array([-3.66024509, -3.83749715, -3.40578163, -3.69743286, -3.47958214,\n       -3.42295375, -3.09302041, -3.24112419, -3.75512679, -3.38274988,\n       -3.48519437, -3.70798944, -3.18639208, -3.15557518, -3.5628375 ,\n       -3.3769674 , -3.52977101, -3.36537262, -3.5463428 , -3.24112419]), 'split5_train_neg_root_mean_squared_error': array([-3.5683188 , -3.58471238, -3.50755351, -3.51312105, -3.65490167,\n       -3.5628375 , -3.51867979, -3.44571679, -3.7447031 , -3.32447248,\n       -3.55734777, -3.75512679, -3.34790517, -3.1986357 , -3.65490167,\n       -3.72376819, -3.47958214, -3.39428529, -3.50755351, -3.47958214]), 'split6_train_neg_root_mean_squared_error': array([-3.39428529, -3.47396084, -3.14316382, -3.5683188 , -3.75512679,\n       -3.38852249, -3.07400576, -3.30678899, -3.60103134, -3.72376819,\n       -3.4570421 , -3.45138409, -3.53530357, -3.49079758, -3.36537262,\n       -3.5792562 , -3.44571679, -3.3769674 , -3.6226756 , -3.37117499]), 'split7_train_neg_root_mean_squared_error': array([-3.47067754, -3.80382115, -3.17050741, -3.23760478, -3.58153062,\n       -3.52099335, -3.5651224 , -3.40817182, -3.43103293, -3.61952721,\n       -3.21944418, -3.32692109, -3.39092485, -3.61412358, -3.40243255,\n       -3.58153062, -3.45374272, -3.34449813, -3.7259544 , -3.24363571]), 'split8_train_neg_root_mean_squared_error': array([-3.4650418 , -3.55963619, -3.08299951, -3.75729475, -3.69963463,\n       -3.53760625, -3.48753014, -3.6356899 , -3.71544886, -3.819204  ,\n       -3.57060018, -3.50430168, -3.05113852, -3.31515128, -3.44807929,\n       -3.57606958, -3.47067754, -3.15196025, -3.65178106, -3.4987201 ]), 'split9_train_neg_root_mean_squared_error': array([-3.35033665, -3.7728673 , -3.38515633, -3.43103293, -3.43103293,\n       -3.52653968, -3.17666574, -3.35616502, -3.7259544 , -3.66246922,\n       -3.5651224 , -3.54312658, -3.52653968, -3.53760625, -3.44240655,\n       -3.8396186 , -3.28554231, -3.24363571, -3.65712904, -3.43103293]), 'mean_train_neg_root_mean_squared_error': array([-3.49004213, -3.66080868, -3.35230347, -3.50088448, -3.5999833 ,\n       -3.43350425, -3.35532964, -3.34503318, -3.61388779, -3.55991538,\n       -3.52083597, -3.4964394 , -3.32024615, -3.30420915, -3.4835981 ,\n       -3.65644019, -3.5401105 , -3.36132731, -3.67171166, -3.39495324]), 'std_train_neg_root_mean_squared_error': array([0.12479876, 0.11769483, 0.18661883, 0.14624874, 0.13516478,\n       0.15324117, 0.17426318, 0.12922153, 0.17424514, 0.17679116,\n       0.12031198, 0.18984116, 0.17398969, 0.18344978, 0.09491535,\n       0.17409757, 0.23255686, 0.14821223, 0.13003896, 0.09632761]), 'split0_test_neg_mean_absolute_error': array([-3.8       , -3.51428571, -2.48571429, -3.22857143, -3.57142857,\n       -3.17142857, -2.48571429, -2.42857143, -3.11428571, -3.4       ,\n       -3.11428571, -1.85714286, -3.11428571, -1.97142857, -3.11428571,\n       -3.34285714, -3.05714286, -2.65714286, -3.62857143, -2.6       ]), 'split1_test_neg_mean_absolute_error': array([-2.67647059, -3.44117647, -2.67647059, -3.79411765, -2.61764706,\n       -2.73529412, -3.20588235, -3.67647059, -3.5       , -2.85294118,\n       -2.55882353, -3.26470588, -2.38235294, -3.08823529, -2.61764706,\n       -2.61764706, -2.79411765, -3.79411765, -2.85294118, -2.67647059]), 'split2_test_neg_mean_absolute_error': array([-2.94117647, -2.52941176, -2.70588235, -2.88235294, -2.47058824,\n       -2.52941176, -2.41176471, -2.35294118, -2.76470588, -2.82352941,\n       -2.64705882, -2.82352941, -2.47058824, -2.47058824, -2.76470588,\n       -3.41176471, -3.58823529, -2.58823529, -3.        , -2.64705882]), 'split3_test_neg_mean_absolute_error': array([-2.79411765, -3.55882353, -2.08823529, -3.55882353, -3.44117647,\n       -2.14705882, -2.44117647, -2.61764706, -3.61764706, -3.79411765,\n       -3.55882353, -1.97058824, -3.08823529, -2.79411765, -3.20588235,\n       -3.85294118, -2.85294118, -2.91176471, -3.73529412, -1.97058824]), 'split4_test_neg_mean_absolute_error': array([-2.97058824, -3.02941176, -3.44117647, -3.14705882, -2.97058824,\n       -2.38235294, -2.44117647, -2.67647059, -2.97058824, -2.73529412,\n       -2.38235294, -3.02941176, -2.85294118, -2.61764706, -3.14705882,\n       -2.67647059, -2.73529412, -2.44117647, -3.02941176, -3.02941176]), 'split5_test_neg_mean_absolute_error': array([-2.61764706, -3.08823529, -3.85294118, -2.61764706, -2.61764706,\n       -2.97058824, -3.38235294, -2.91176471, -2.91176471, -2.67647059,\n       -3.02941176, -3.02941176, -3.02941176, -2.73529412, -3.02941176,\n       -3.08823529, -2.85294118, -3.14705882, -2.85294118, -3.38235294]), 'split6_test_neg_mean_absolute_error': array([-2.61764706, -3.02941176, -2.44117647, -2.67647059, -3.14705882,\n       -2.26470588, -2.73529412, -2.20588235, -3.08823529, -3.08823529,\n       -2.38235294, -2.5       , -2.67647059, -2.38235294, -2.67647059,\n       -3.02941176, -2.67647059, -2.32352941, -2.91176471, -2.97058824]), 'split7_test_neg_mean_absolute_error': array([-3.52941176, -3.        , -3.        , -2.76470588, -2.82352941,\n       -3.05882353, -3.11764706, -3.88235294, -3.17647059, -3.58823529,\n       -2.41176471, -2.82352941, -3.11764706, -3.41176471, -3.29411765,\n       -3.52941176, -3.05882353, -3.35294118, -2.58823529, -2.82352941]), 'split8_test_neg_mean_absolute_error': array([-2.70588235, -2.88235294, -2.82352941, -2.58823529, -2.64705882,\n       -3.23529412, -3.        , -2.76470588, -3.47058824, -3.17647059,\n       -3.05882353, -3.05882353, -2.82352941, -2.64705882, -2.88235294,\n       -3.11764706, -3.11764706, -2.70588235, -3.17647059, -2.76470588]), 'split9_test_neg_mean_absolute_error': array([-3.23529412, -2.76470588, -2.11764706, -2.88235294, -2.70588235,\n       -3.11764706, -2.82352941, -3.05882353, -3.23529412, -3.05882353,\n       -2.52941176, -3.        , -3.47058824, -3.41176471, -3.        ,\n       -3.47058824, -2.52941176, -2.47058824, -3.29411765, -3.23529412]), 'mean_test_neg_mean_absolute_error': array([-2.98882353, -3.08378151, -2.76327731, -3.01403361, -2.9012605 ,\n       -2.7612605 , -2.80445378, -2.85756303, -3.18495798, -3.11941176,\n       -2.76731092, -2.73571429, -2.90260504, -2.75302521, -2.97319328,\n       -3.21369748, -2.92630252, -2.8392437 , -3.10697479, -2.81      ]), 'std_test_neg_mean_absolute_error': array([0.38790048, 0.31644744, 0.52637653, 0.38964966, 0.35511162,\n       0.38394377, 0.34004823, 0.52216749, 0.26119195, 0.35552048,\n       0.37919416, 0.45330838, 0.31326542, 0.42893615, 0.21847849,\n       0.36510686, 0.28179919, 0.44158301, 0.34064993, 0.37117647]), 'rank_test_neg_mean_absolute_error': array([14, 16,  4, 15, 10,  3,  6,  9, 19, 18,  5,  1, 11,  2, 13, 20, 12,\n        8, 17,  7]), 'split0_train_neg_mean_absolute_error': array([-3.12091503, -3.04901961, -2.74836601, -2.87908497, -3.33660131,\n       -2.87908497, -2.85294118, -2.55882353, -2.84640523, -3.19281046,\n       -3.02287582, -2.46078431, -2.97058824, -2.34313725, -2.76797386,\n       -3.11437908, -2.9248366 , -3.16666667, -3.51960784, -2.91830065]), 'split1_train_neg_mean_absolute_error': array([-2.78501629, -3.21498371, -2.56351792, -2.89576547, -2.86970684,\n       -2.42019544, -2.70032573, -2.51791531, -3.39087948, -2.86319218,\n       -3.13680782, -3.0781759 , -2.51140065, -2.69381107, -3.02605863,\n       -3.01954397, -2.90879479, -2.84364821, -3.15635179, -2.69381107]), 'split2_train_neg_mean_absolute_error': array([-2.99022801, -2.99022801, -3.08794788, -2.86644951, -2.84039088,\n       -2.59934853, -2.6970684 , -2.66449511, -2.6970684 , -2.95114007,\n       -2.92508143, -2.68403909, -2.49511401, -2.5732899 , -2.91856678,\n       -3.57654723, -3.7980456 , -2.6514658 , -3.12703583, -2.73615635]), 'split3_train_neg_mean_absolute_error': array([-2.66775244, -2.99348534, -2.98045603, -2.69381107, -3.        ,\n       -2.97394137, -2.89576547, -2.75895765, -2.85016287, -2.64820847,\n       -2.89576547, -2.99348534, -2.65472313, -2.54397394, -2.80456026,\n       -2.94136808, -2.86970684, -2.61563518, -2.98697068, -2.85016287]), 'split4_train_neg_mean_absolute_error': array([-3.0781759 , -3.29967427, -2.77850163, -3.1237785 , -2.86319218,\n       -2.7980456 , -2.43973941, -2.59609121, -3.19543974, -2.752443  ,\n       -2.86970684, -3.13680782, -2.53745928, -2.50488599, -2.96091205,\n       -2.74592834, -2.9218241 , -2.73289902, -2.94136808, -2.59609121]), 'split5_train_neg_mean_absolute_error': array([-2.96742671, -2.98697068, -2.89576547, -2.90228013, -3.07166124,\n       -2.96091205, -2.90879479, -2.82410423, -3.18241042, -2.68729642,\n       -2.95439739, -3.19543974, -2.71335505, -2.5504886 , -3.07166124,\n       -3.15635179, -2.86319218, -2.76547231, -2.89576547, -2.86319218]), 'split6_train_neg_mean_absolute_error': array([-2.76547231, -2.85667752, -2.49185668, -2.96742671, -3.19543974,\n       -2.75895765, -2.42019544, -2.66775244, -3.00651466, -3.15635179,\n       -2.83713355, -2.83061889, -2.92833876, -2.8762215 , -2.73289902,\n       -2.98045603, -2.82410423, -2.74592834, -3.03257329, -2.73941368]), 'split7_train_neg_mean_absolute_error': array([-2.8534202 , -3.25732899, -2.52117264, -2.59283388, -2.98371336,\n       -2.91205212, -2.96416938, -2.78175896, -2.80781759, -3.02931596,\n       -2.5732899 , -2.69055375, -2.76221498, -3.0228013 , -2.7752443 ,\n       -2.98371336, -2.83387622, -2.71009772, -3.15960912, -2.59934853]), 'split8_train_neg_mean_absolute_error': array([-2.84690554, -2.95765472, -2.42996743, -3.19869707, -3.12703583,\n       -2.93159609, -2.87296417, -3.04885993, -3.1465798 , -3.27687296,\n       -2.97068404, -2.89250814, -2.39739414, -2.67752443, -2.82736156,\n       -2.9771987 , -2.8534202 , -2.50162866, -3.06840391, -2.88599349]), 'split9_train_neg_mean_absolute_error': array([-2.71661238, -3.21824104, -2.75570033, -2.80781759, -2.80781759,\n       -2.91856678, -2.5276873 , -2.72312704, -3.15960912, -3.08143322,\n       -2.96416938, -2.93811075, -2.91856678, -2.93159609, -2.82084691,\n       -3.3029316 , -2.64495114, -2.59934853, -3.07491857, -2.80781759]), 'mean_train_neg_mean_absolute_error': array([-2.87919248, -3.08242639, -2.7253252 , -2.89279449, -3.0095559 ,\n       -2.81527006, -2.72796513, -2.71418854, -3.02828873, -2.96390645,\n       -2.91499116, -2.89005237, -2.6889155 , -2.67177301, -2.87060846,\n       -3.07984182, -2.94427519, -2.73327904, -3.09626046, -2.76902876]), 'std_train_neg_mean_absolute_error': array([0.14587173, 0.14386591, 0.20964773, 0.17037389, 0.16438507,\n       0.17035348, 0.19311098, 0.14559208, 0.20928493, 0.20896715,\n       0.13901742, 0.21739336, 0.19327084, 0.2023959 , 0.11060862,\n       0.21621627, 0.29456376, 0.17142721, 0.16407797, 0.10919297])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete", "only_totals", "only_binary"], "type_of_labels": "floors", "only_BMI": 1}, "task": "Classification", "pipe": {"feature_extraction": "MaskedSVD(mask=mask)", "scaler": "MinMaxScaler()", "estimator": "OrdinalBinaryClassifier(estimator = DecisionTreeClassifier())"}, "hp_optimizer": {"type": "RandomizeSearchCV", "n_iter": 20, "params": [{"feature_extraction": "[MaskedSVD(mask=mask), MaskedPCA(mask=mask)]", "feature_extraction__n_components": "np.arange(1, X[:, mask].shape[1])", "estimator__estimator__max_depth": "[3, 4, 5, 6]", "estimator__binary_threshold": "[2, 3, 4, 5]", "estimator__estimator__splitter": "['best', 'random']"}], "metrics": ["accuracy", "f1_micro", "f1_macro", "neg_root_mean_squared_error", "neg_mean_absolute_error"], "n_split_outer_cv": 10}}}, {"experiment_name": "Experiment_5_24_11_21", "dataset_variant": "only_binary", "estimator": "OrdinalBinaryClassifier(estimator = DecisionTreeClassifier())", "task": "Classification", "hp_optimizer": "RandomizeSearchCV", "cv_type": "n_split_outer_cv", "mean_test_score": {"accuracy": 0.16428571428571428, "f1_micro": 0.16428571428571428, "f1_macro": 0.07165797043976697, "neg_root_mean_squared_error": -3.202931110750047, "neg_mean_absolute_error": -2.585294117647059}, "mean_train_score": {"accuracy": 0.17692086606629626, "f1_micro": 0.17692086606629626, "f1_macro": 0.07975755346863553, "neg_root_mean_squared_error": -3.15384234644146, "neg_mean_absolute_error": -2.509030039811799}, "best_params": "[{'feature_extraction__n_components': 3, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}]", "cv_results": "{'mean_fit_time': array([0.02579949, 0.01980643, 0.02440052, 0.01949961, 0.02129815,\n       0.02730012, 0.0187011 , 0.01899984, 0.03260088, 0.01720011,\n       0.01929989, 0.02610083, 0.01960015, 0.02289686, 0.01720045,\n       0.01850009, 0.01939981, 0.02080026, 0.01889944, 0.0170001 ]), 'std_fit_time': array([0.00177813, 0.00784825, 0.0038521 , 0.0046526 , 0.00613196,\n       0.00888814, 0.003823  , 0.00249011, 0.00469539, 0.00074839,\n       0.0014868 , 0.00700561, 0.00293984, 0.0078935 , 0.00442279,\n       0.00300854, 0.00993247, 0.00876189, 0.00520362, 0.00272056]), 'mean_score_time': array([0.08630037, 0.08495867, 0.1023    , 0.10690141, 0.11110485,\n       0.09100082, 0.07910013, 0.08640132, 0.0744993 , 0.0901999 ,\n       0.07440014, 0.08760076, 0.10005441, 0.10220068, 0.07559948,\n       0.08109982, 0.0837009 , 0.1059999 , 0.09330463, 0.09319963]), 'std_score_time': array([0.02511999, 0.02186398, 0.02980962, 0.02135611, 0.02604539,\n       0.02057068, 0.00668448, 0.00548115, 0.0092655 , 0.01212271,\n       0.00753805, 0.00463061, 0.01790255, 0.01626057, 0.00634378,\n       0.01476075, 0.01100038, 0.02252561, 0.01327599, 0.01142589]), 'param_feature_extraction__n_components': masked_array(data=[17, 11, 6, 3, 9, 11, 8, 13, 18, 9, 6, 13, 11, 3, 3, 13,\n                   2, 3, 11, 5],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_feature_extraction': masked_array(data=[MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]),\n                             n_components=3)                                                           ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ,\n                   MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True,  True,  True,  True,  True,\n                           True,  True,  True,  True,  True]))                                         ],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__estimator__splitter': masked_array(data=['best', 'random', 'best', 'best', 'random', 'best',\n                   'random', 'random', 'best', 'random', 'best', 'best',\n                   'best', 'best', 'best', 'random', 'random', 'random',\n                   'random', 'random'],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__estimator__max_depth': masked_array(data=[6, 5, 6, 5, 5, 3, 4, 6, 6, 6, 3, 6, 3, 6, 4, 4, 6, 5,\n                   3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'param_estimator__binary_threshold': masked_array(data=[2, 4, 2, 5, 5, 4, 2, 3, 2, 5, 2, 3, 5, 5, 4, 4, 4, 3,\n                   3, 3],\n             mask=[False, False, False, False, False, False, False, False,\n                   False, False, False, False, False, False, False, False,\n                   False, False, False, False],\n       fill_value='?',\n            dtype=object), 'params': [{'feature_extraction__n_components': 17, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 11, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 6, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 9, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 11, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 8, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 13, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 18, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 9, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 6, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 2}, {'feature_extraction__n_components': 13, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 11, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 5}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'best', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 13, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 4, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 2, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 6, 'estimator__binary_threshold': 4}, {'feature_extraction__n_components': 3, 'feature_extraction': MaskedPCA(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True]),\n          n_components=3), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 5, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 11, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 3}, {'feature_extraction__n_components': 5, 'feature_extraction': MaskedSVD(mask=array([False, False, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True])), 'estimator__estimator__splitter': 'random', 'estimator__estimator__max_depth': 3, 'estimator__binary_threshold': 3}], 'split0_test_accuracy': array([0.17142857, 0.17142857, 0.05714286, 0.11428571, 0.14285714,\n       0.17142857, 0.14285714, 0.14285714, 0.14285714, 0.02857143,\n       0.14285714, 0.17142857, 0.14285714, 0.22857143, 0.14285714,\n       0.14285714, 0.2       , 0.14285714, 0.11428571, 0.14285714]), 'split1_test_accuracy': array([0.20588235, 0.14705882, 0.11764706, 0.11764706, 0.20588235,\n       0.20588235, 0.20588235, 0.17647059, 0.02941176, 0.11764706,\n       0.        , 0.17647059, 0.11764706, 0.14705882, 0.14705882,\n       0.11764706, 0.14705882, 0.14705882, 0.05882353, 0.08823529]), 'split2_test_accuracy': array([0.08823529, 0.20588235, 0.05882353, 0.08823529, 0.05882353,\n       0.14705882, 0.11764706, 0.05882353, 0.11764706, 0.11764706,\n       0.11764706, 0.08823529, 0.02941176, 0.08823529, 0.17647059,\n       0.11764706, 0.14705882, 0.14705882, 0.11764706, 0.05882353]), 'split3_test_accuracy': array([0.14705882, 0.20588235, 0.08823529, 0.17647059, 0.11764706,\n       0.17647059, 0.05882353, 0.08823529, 0.11764706, 0.08823529,\n       0.20588235, 0.17647059, 0.17647059, 0.11764706, 0.20588235,\n       0.11764706, 0.14705882, 0.11764706, 0.11764706, 0.05882353]), 'split4_test_accuracy': array([0.14705882, 0.14705882, 0.14705882, 0.14705882, 0.08823529,\n       0.14705882, 0.20588235, 0.11764706, 0.11764706, 0.14705882,\n       0.11764706, 0.17647059, 0.14705882, 0.11764706, 0.05882353,\n       0.14705882, 0.11764706, 0.20588235, 0.14705882, 0.17647059]), 'split5_test_accuracy': array([0.17647059, 0.11764706, 0.14705882, 0.08823529, 0.14705882,\n       0.11764706, 0.14705882, 0.14705882, 0.20588235, 0.14705882,\n       0.05882353, 0.14705882, 0.11764706, 0.11764706, 0.14705882,\n       0.08823529, 0.14705882, 0.17647059, 0.14705882, 0.11764706]), 'split6_test_accuracy': array([0.11764706, 0.14705882, 0.14705882, 0.14705882, 0.11764706,\n       0.11764706, 0.14705882, 0.17647059, 0.11764706, 0.14705882,\n       0.14705882, 0.11764706, 0.11764706, 0.14705882, 0.17647059,\n       0.20588235, 0.20588235, 0.14705882, 0.17647059, 0.14705882]), 'split7_test_accuracy': array([0.14705882, 0.17647059, 0.17647059, 0.14705882, 0.08823529,\n       0.17647059, 0.05882353, 0.11764706, 0.17647059, 0.08823529,\n       0.11764706, 0.14705882, 0.17647059, 0.05882353, 0.20588235,\n       0.14705882, 0.11764706, 0.20588235, 0.14705882, 0.11764706]), 'split8_test_accuracy': array([0.11764706, 0.17647059, 0.17647059, 0.14705882, 0.14705882,\n       0.14705882, 0.17647059, 0.11764706, 0.11764706, 0.11764706,\n       0.14705882, 0.14705882, 0.14705882, 0.14705882, 0.11764706,\n       0.17647059, 0.26470588, 0.11764706, 0.11764706, 0.08823529]), 'split9_test_accuracy': array([0.11764706, 0.14705882, 0.17647059, 0.14705882, 0.11764706,\n       0.14705882, 0.17647059, 0.11764706, 0.05882353, 0.08823529,\n       0.        , 0.14705882, 0.14705882, 0.14705882, 0.26470588,\n       0.17647059, 0.11764706, 0.14705882, 0.08823529, 0.08823529]), 'mean_test_accuracy': array([0.14361345, 0.16420168, 0.1292437 , 0.13201681, 0.12310924,\n       0.15537815, 0.14369748, 0.12605042, 0.12016807, 0.1087395 ,\n       0.10546218, 0.1494958 , 0.13193277, 0.13168067, 0.16428571,\n       0.14369748, 0.16117647, 0.15546218, 0.12319328, 0.10840336]), 'std_test_accuracy': array([0.03294814, 0.02677813, 0.04429106, 0.02731661, 0.0387854 ,\n       0.02611932, 0.04999117, 0.03469886, 0.04802431, 0.035116  ,\n       0.0630938 , 0.02730368, 0.0398695 , 0.0425679 , 0.05309601,\n       0.03339213, 0.04550372, 0.02971037, 0.03175581, 0.03690788]), 'rank_test_accuracy': array([ 9,  2, 13, 10, 16,  5,  7, 14, 17, 18, 20,  6, 11, 12,  1,  7,  3,\n        4, 15, 19]), 'split0_train_accuracy': array([0.22222222, 0.14052288, 0.19607843, 0.18954248, 0.17320261,\n       0.17320261, 0.17320261, 0.2124183 , 0.20588235, 0.14052288,\n       0.16993464, 0.23202614, 0.18627451, 0.23202614, 0.14705882,\n       0.13398693, 0.17320261, 0.16993464, 0.15359477, 0.17320261]), 'split1_train_accuracy': array([0.21498371, 0.1465798 , 0.19869707, 0.15635179, 0.17915309,\n       0.16286645, 0.16612378, 0.17589577, 0.18241042, 0.2019544 ,\n       0.09771987, 0.21498371, 0.14332248, 0.23452769, 0.19218241,\n       0.13029316, 0.14006515, 0.15960912, 0.1237785 , 0.1237785 ]), 'split2_train_accuracy': array([0.14983713, 0.16938111, 0.2247557 , 0.18892508, 0.14983713,\n       0.14332248, 0.15635179, 0.19218241, 0.20521173, 0.19543974,\n       0.17589577, 0.17915309, 0.17589577, 0.21824104, 0.17915309,\n       0.13029316, 0.14983713, 0.11726384, 0.18241042, 0.10423453]), 'split3_train_accuracy': array([0.20521173, 0.1237785 , 0.19543974, 0.19869707, 0.20521173,\n       0.15309446, 0.18566775, 0.22801303, 0.21172638, 0.21172638,\n       0.17589577, 0.19218241, 0.15309446, 0.23127036, 0.18241042,\n       0.14332248, 0.15960912, 0.18241042, 0.18241042, 0.15635179]), 'split4_train_accuracy': array([0.19218241, 0.16938111, 0.2019544 , 0.15309446, 0.15960912,\n       0.2019544 , 0.17589577, 0.18892508, 0.18892508, 0.18892508,\n       0.14983713, 0.19869707, 0.16612378, 0.17915309, 0.17589577,\n       0.17915309, 0.15309446, 0.16612378, 0.17915309, 0.15309446]), 'split5_train_accuracy': array([0.18241042, 0.14332248, 0.18241042, 0.17263844, 0.18241042,\n       0.17263844, 0.17915309, 0.20521173, 0.23127036, 0.18566775,\n       0.15635179, 0.18892508, 0.16938111, 0.2019544 , 0.13680782,\n       0.13680782, 0.17915309, 0.17263844, 0.17915309, 0.14006515]), 'split6_train_accuracy': array([0.19218241, 0.14332248, 0.21498371, 0.17589577, 0.18892508,\n       0.17915309, 0.16938111, 0.18892508, 0.18241042, 0.20846906,\n       0.15960912, 0.19543974, 0.1465798 , 0.17263844, 0.19869707,\n       0.17263844, 0.18241042, 0.13029316, 0.17589577, 0.13680782]), 'split7_train_accuracy': array([0.21498371, 0.11400651, 0.2019544 , 0.18892508, 0.18892508,\n       0.17263844, 0.10749186, 0.17915309, 0.19869707, 0.17589577,\n       0.18241042, 0.21498371, 0.17915309, 0.16286645, 0.17263844,\n       0.21498371, 0.15635179, 0.18241042, 0.18241042, 0.13680782]), 'split8_train_accuracy': array([0.16938111, 0.14983713, 0.19869707, 0.16612378, 0.17263844,\n       0.10423453, 0.18892508, 0.17915309, 0.20846906, 0.16938111,\n       0.2019544 , 0.16938111, 0.12703583, 0.20521173, 0.17589577,\n       0.17263844, 0.17263844, 0.11074919, 0.16286645, 0.15960912]), 'split9_train_accuracy': array([0.20846906, 0.11400651, 0.19869707, 0.21498371, 0.18566775,\n       0.11400651, 0.16938111, 0.2019544 , 0.19543974, 0.19218241,\n       0.17589577, 0.19869707, 0.18566775, 0.18566775, 0.20846906,\n       0.13680782, 0.14006515, 0.17263844, 0.18566775, 0.12703583]), 'mean_train_accuracy': array([0.19518639, 0.14141385, 0.2013668 , 0.18051777, 0.17855805,\n       0.15771114, 0.16715739, 0.1951832 , 0.20104426, 0.18701646,\n       0.16455047, 0.19844691, 0.16325286, 0.20235571, 0.17692087,\n       0.1550925 , 0.16064274, 0.15640714, 0.17073407, 0.14109876]), 'std_train_accuracy': array([0.02166906, 0.01866382, 0.01084885, 0.01835175, 0.01496258,\n       0.02850899, 0.02181963, 0.01579409, 0.01414872, 0.01998341,\n       0.02628234, 0.01740875, 0.01892342, 0.02504288, 0.02063677,\n       0.02695226, 0.01469083, 0.02542773, 0.01833278, 0.01909048]), 'split0_test_f1_micro': array([0.17142857, 0.17142857, 0.05714286, 0.11428571, 0.14285714,\n       0.17142857, 0.14285714, 0.14285714, 0.14285714, 0.02857143,\n       0.14285714, 0.17142857, 0.14285714, 0.22857143, 0.14285714,\n       0.14285714, 0.2       , 0.14285714, 0.11428571, 0.14285714]), 'split1_test_f1_micro': array([0.20588235, 0.14705882, 0.11764706, 0.11764706, 0.20588235,\n       0.20588235, 0.20588235, 0.17647059, 0.02941176, 0.11764706,\n       0.        , 0.17647059, 0.11764706, 0.14705882, 0.14705882,\n       0.11764706, 0.14705882, 0.14705882, 0.05882353, 0.08823529]), 'split2_test_f1_micro': array([0.08823529, 0.20588235, 0.05882353, 0.08823529, 0.05882353,\n       0.14705882, 0.11764706, 0.05882353, 0.11764706, 0.11764706,\n       0.11764706, 0.08823529, 0.02941176, 0.08823529, 0.17647059,\n       0.11764706, 0.14705882, 0.14705882, 0.11764706, 0.05882353]), 'split3_test_f1_micro': array([0.14705882, 0.20588235, 0.08823529, 0.17647059, 0.11764706,\n       0.17647059, 0.05882353, 0.08823529, 0.11764706, 0.08823529,\n       0.20588235, 0.17647059, 0.17647059, 0.11764706, 0.20588235,\n       0.11764706, 0.14705882, 0.11764706, 0.11764706, 0.05882353]), 'split4_test_f1_micro': array([0.14705882, 0.14705882, 0.14705882, 0.14705882, 0.08823529,\n       0.14705882, 0.20588235, 0.11764706, 0.11764706, 0.14705882,\n       0.11764706, 0.17647059, 0.14705882, 0.11764706, 0.05882353,\n       0.14705882, 0.11764706, 0.20588235, 0.14705882, 0.17647059]), 'split5_test_f1_micro': array([0.17647059, 0.11764706, 0.14705882, 0.08823529, 0.14705882,\n       0.11764706, 0.14705882, 0.14705882, 0.20588235, 0.14705882,\n       0.05882353, 0.14705882, 0.11764706, 0.11764706, 0.14705882,\n       0.08823529, 0.14705882, 0.17647059, 0.14705882, 0.11764706]), 'split6_test_f1_micro': array([0.11764706, 0.14705882, 0.14705882, 0.14705882, 0.11764706,\n       0.11764706, 0.14705882, 0.17647059, 0.11764706, 0.14705882,\n       0.14705882, 0.11764706, 0.11764706, 0.14705882, 0.17647059,\n       0.20588235, 0.20588235, 0.14705882, 0.17647059, 0.14705882]), 'split7_test_f1_micro': array([0.14705882, 0.17647059, 0.17647059, 0.14705882, 0.08823529,\n       0.17647059, 0.05882353, 0.11764706, 0.17647059, 0.08823529,\n       0.11764706, 0.14705882, 0.17647059, 0.05882353, 0.20588235,\n       0.14705882, 0.11764706, 0.20588235, 0.14705882, 0.11764706]), 'split8_test_f1_micro': array([0.11764706, 0.17647059, 0.17647059, 0.14705882, 0.14705882,\n       0.14705882, 0.17647059, 0.11764706, 0.11764706, 0.11764706,\n       0.14705882, 0.14705882, 0.14705882, 0.14705882, 0.11764706,\n       0.17647059, 0.26470588, 0.11764706, 0.11764706, 0.08823529]), 'split9_test_f1_micro': array([0.11764706, 0.14705882, 0.17647059, 0.14705882, 0.11764706,\n       0.14705882, 0.17647059, 0.11764706, 0.05882353, 0.08823529,\n       0.        , 0.14705882, 0.14705882, 0.14705882, 0.26470588,\n       0.17647059, 0.11764706, 0.14705882, 0.08823529, 0.08823529]), 'mean_test_f1_micro': array([0.14361345, 0.16420168, 0.1292437 , 0.13201681, 0.12310924,\n       0.15537815, 0.14369748, 0.12605042, 0.12016807, 0.1087395 ,\n       0.10546218, 0.1494958 , 0.13193277, 0.13168067, 0.16428571,\n       0.14369748, 0.16117647, 0.15546218, 0.12319328, 0.10840336]), 'std_test_f1_micro': array([0.03294814, 0.02677813, 0.04429106, 0.02731661, 0.0387854 ,\n       0.02611932, 0.04999117, 0.03469886, 0.04802431, 0.035116  ,\n       0.0630938 , 0.02730368, 0.0398695 , 0.0425679 , 0.05309601,\n       0.03339213, 0.04550372, 0.02971037, 0.03175581, 0.03690788]), 'rank_test_f1_micro': array([ 9,  2, 13, 10, 16,  5,  7, 14, 17, 18, 20,  6, 11, 12,  1,  7,  3,\n        4, 15, 19]), 'split0_train_f1_micro': array([0.22222222, 0.14052288, 0.19607843, 0.18954248, 0.17320261,\n       0.17320261, 0.17320261, 0.2124183 , 0.20588235, 0.14052288,\n       0.16993464, 0.23202614, 0.18627451, 0.23202614, 0.14705882,\n       0.13398693, 0.17320261, 0.16993464, 0.15359477, 0.17320261]), 'split1_train_f1_micro': array([0.21498371, 0.1465798 , 0.19869707, 0.15635179, 0.17915309,\n       0.16286645, 0.16612378, 0.17589577, 0.18241042, 0.2019544 ,\n       0.09771987, 0.21498371, 0.14332248, 0.23452769, 0.19218241,\n       0.13029316, 0.14006515, 0.15960912, 0.1237785 , 0.1237785 ]), 'split2_train_f1_micro': array([0.14983713, 0.16938111, 0.2247557 , 0.18892508, 0.14983713,\n       0.14332248, 0.15635179, 0.19218241, 0.20521173, 0.19543974,\n       0.17589577, 0.17915309, 0.17589577, 0.21824104, 0.17915309,\n       0.13029316, 0.14983713, 0.11726384, 0.18241042, 0.10423453]), 'split3_train_f1_micro': array([0.20521173, 0.1237785 , 0.19543974, 0.19869707, 0.20521173,\n       0.15309446, 0.18566775, 0.22801303, 0.21172638, 0.21172638,\n       0.17589577, 0.19218241, 0.15309446, 0.23127036, 0.18241042,\n       0.14332248, 0.15960912, 0.18241042, 0.18241042, 0.15635179]), 'split4_train_f1_micro': array([0.19218241, 0.16938111, 0.2019544 , 0.15309446, 0.15960912,\n       0.2019544 , 0.17589577, 0.18892508, 0.18892508, 0.18892508,\n       0.14983713, 0.19869707, 0.16612378, 0.17915309, 0.17589577,\n       0.17915309, 0.15309446, 0.16612378, 0.17915309, 0.15309446]), 'split5_train_f1_micro': array([0.18241042, 0.14332248, 0.18241042, 0.17263844, 0.18241042,\n       0.17263844, 0.17915309, 0.20521173, 0.23127036, 0.18566775,\n       0.15635179, 0.18892508, 0.16938111, 0.2019544 , 0.13680782,\n       0.13680782, 0.17915309, 0.17263844, 0.17915309, 0.14006515]), 'split6_train_f1_micro': array([0.19218241, 0.14332248, 0.21498371, 0.17589577, 0.18892508,\n       0.17915309, 0.16938111, 0.18892508, 0.18241042, 0.20846906,\n       0.15960912, 0.19543974, 0.1465798 , 0.17263844, 0.19869707,\n       0.17263844, 0.18241042, 0.13029316, 0.17589577, 0.13680782]), 'split7_train_f1_micro': array([0.21498371, 0.11400651, 0.2019544 , 0.18892508, 0.18892508,\n       0.17263844, 0.10749186, 0.17915309, 0.19869707, 0.17589577,\n       0.18241042, 0.21498371, 0.17915309, 0.16286645, 0.17263844,\n       0.21498371, 0.15635179, 0.18241042, 0.18241042, 0.13680782]), 'split8_train_f1_micro': array([0.16938111, 0.14983713, 0.19869707, 0.16612378, 0.17263844,\n       0.10423453, 0.18892508, 0.17915309, 0.20846906, 0.16938111,\n       0.2019544 , 0.16938111, 0.12703583, 0.20521173, 0.17589577,\n       0.17263844, 0.17263844, 0.11074919, 0.16286645, 0.15960912]), 'split9_train_f1_micro': array([0.20846906, 0.11400651, 0.19869707, 0.21498371, 0.18566775,\n       0.11400651, 0.16938111, 0.2019544 , 0.19543974, 0.19218241,\n       0.17589577, 0.19869707, 0.18566775, 0.18566775, 0.20846906,\n       0.13680782, 0.14006515, 0.17263844, 0.18566775, 0.12703583]), 'mean_train_f1_micro': array([0.19518639, 0.14141385, 0.2013668 , 0.18051777, 0.17855805,\n       0.15771114, 0.16715739, 0.1951832 , 0.20104426, 0.18701646,\n       0.16455047, 0.19844691, 0.16325286, 0.20235571, 0.17692087,\n       0.1550925 , 0.16064274, 0.15640714, 0.17073407, 0.14109876]), 'std_train_f1_micro': array([0.02166906, 0.01866382, 0.01084885, 0.01835175, 0.01496258,\n       0.02850899, 0.02181963, 0.01579409, 0.01414872, 0.01998341,\n       0.02628234, 0.01740875, 0.01892342, 0.02504288, 0.02063677,\n       0.02695226, 0.01469083, 0.02542773, 0.01833278, 0.01909048]), 'split0_test_f1_macro': array([0.07403123, 0.07403123, 0.02484472, 0.04741897, 0.06527094,\n       0.07403123, 0.05727452, 0.06292517, 0.06571429, 0.01587302,\n       0.0670908 , 0.07428571, 0.05714286, 0.10034014, 0.05726601,\n       0.05820106, 0.08865048, 0.03861004, 0.04741897, 0.05727452]), 'split1_test_f1_macro': array([0.089599  , 0.06578947, 0.05687831, 0.0515528 , 0.093702  ,\n       0.09254658, 0.09589947, 0.0833872 , 0.01142857, 0.05318491,\n       0.        , 0.0707672 , 0.03940887, 0.04761905, 0.05981703,\n       0.05380334, 0.06583851, 0.06578947, 0.01785714, 0.03873016]), 'split2_test_f1_macro': array([0.03913043, 0.1004329 , 0.02694236, 0.0401979 , 0.02721088,\n       0.05986395, 0.05687831, 0.02779573, 0.05460317, 0.05318491,\n       0.05054945, 0.03878474, 0.01058201, 0.04099379, 0.06989247,\n       0.05559147, 0.06076277, 0.06583851, 0.0585034 , 0.02670807]), 'split3_test_f1_macro': array([0.06428571, 0.0922619 , 0.03896104, 0.07570208, 0.0520556 ,\n       0.07594149, 0.02686203, 0.03726708, 0.04395604, 0.03789474,\n       0.10430839, 0.07653061, 0.07570208, 0.05293233, 0.09082707,\n       0.04962779, 0.06190476, 0.05477747, 0.05372405, 0.02619048]), 'split4_test_f1_macro': array([0.06583851, 0.06617192, 0.06679035, 0.06836735, 0.03571429,\n       0.06679035, 0.1040293 , 0.05015873, 0.0585034 , 0.08311688,\n       0.05341615, 0.07915894, 0.06679035, 0.04960317, 0.02670807,\n       0.06746032, 0.05015873, 0.09440994, 0.06578947, 0.08082707]), 'split5_test_f1_macro': array([0.07977737, 0.04960317, 0.07526882, 0.04197995, 0.07526882,\n       0.05194805, 0.06746032, 0.06555349, 0.1031746 , 0.06583851,\n       0.02659246, 0.06578947, 0.05145929, 0.04965986, 0.06617192,\n       0.04197995, 0.06658048, 0.08082707, 0.06265664, 0.04996481]), 'split6_test_f1_macro': array([0.05701754, 0.06870748, 0.06770186, 0.05291005, 0.04960317,\n       0.05318491, 0.07526882, 0.0833872 , 0.05388471, 0.06746032,\n       0.06679035, 0.05256648, 0.05687831, 0.06007326, 0.08012422,\n       0.09437621, 0.09254658, 0.06617192, 0.07977737, 0.06658048]), 'split7_test_f1_macro': array([0.06583851, 0.06966925, 0.08082707, 0.05981703, 0.02857143,\n       0.07977737, 0.02779573, 0.05341615, 0.08082707, 0.03878474,\n       0.05145929, 0.06583851, 0.0877551 , 0.02197802, 0.09333333,\n       0.06679035, 0.05015873, 0.09276438, 0.06617192, 0.03088803]), 'split8_test_f1_macro': array([0.05015873, 0.07769424, 0.07756949, 0.06679035, 0.06679035,\n       0.0615873 , 0.08022519, 0.04965986, 0.05701754, 0.05015873,\n       0.07239819, 0.06076277, 0.06067588, 0.06603175, 0.05318491,\n       0.0833872 , 0.12111801, 0.04977376, 0.03463203, 0.03174603]), 'split9_test_f1_macro': array([0.05380334, 0.06265664, 0.08012422, 0.06603175, 0.05054945,\n       0.06583851, 0.0833872 , 0.05341615, 0.02597403, 0.04197995,\n       0.        , 0.06583851, 0.06076277, 0.06679035, 0.11925466,\n       0.07826087, 0.04960317, 0.06583851, 0.03174603, 0.03957947]), 'mean_test_f1_macro': array([0.06394804, 0.07270182, 0.05959082, 0.05707682, 0.05447369,\n       0.06815097, 0.06750809, 0.05669668, 0.05550834, 0.05074767,\n       0.04926051, 0.06503229, 0.05671575, 0.05560217, 0.07165797,\n       0.06494786, 0.07073222, 0.06748011, 0.0518277 , 0.04484891]), 'std_test_f1_macro': array([0.01405161, 0.01388642, 0.02065288, 0.01144724, 0.02012623,\n       0.0119627 , 0.02461882, 0.01693684, 0.02445554, 0.01780018,\n       0.03095422, 0.01146613, 0.01978173, 0.01934315, 0.02432426,\n       0.01553213, 0.0220162 , 0.01691438, 0.01794352, 0.01748223]), 'rank_test_f1_macro': array([ 9,  1, 10, 11, 16,  4,  5, 13, 15, 18, 19,  7, 12, 14,  2,  8,  3,\n        6, 17, 20]), 'split0_train_f1_macro': array([0.10373862, 0.06325135, 0.0872034 , 0.08699465, 0.08072504,\n       0.07633611, 0.08138823, 0.09729442, 0.09455846, 0.06652076,\n       0.07166531, 0.11123597, 0.087442  , 0.10943257, 0.06590017,\n       0.06046767, 0.07762595, 0.08365578, 0.06887538, 0.07855266]), 'split1_train_f1_macro': array([0.09722222, 0.06573783, 0.0867351 , 0.06696808, 0.08068588,\n       0.07181054, 0.0755578 , 0.07613181, 0.07619254, 0.08919662,\n       0.03591479, 0.09977949, 0.06621315, 0.11226708, 0.08712959,\n       0.05879699, 0.06239667, 0.07225564, 0.03667954, 0.05090646]), 'split2_train_f1_macro': array([0.06948659, 0.07192807, 0.10380387, 0.08775363, 0.0682754 ,\n       0.06103441, 0.07150211, 0.08414852, 0.09212227, 0.08842105,\n       0.0759596 , 0.08369408, 0.08385136, 0.09831385, 0.0805767 ,\n       0.0583456 , 0.06715163, 0.0557714 , 0.08050752, 0.04829932]), 'split3_train_f1_macro': array([0.09247385, 0.05636525, 0.09203772, 0.0956718 , 0.09405332,\n       0.06771037, 0.08781585, 0.10803547, 0.09662175, 0.09954317,\n       0.09306695, 0.08473226, 0.07137898, 0.11129316, 0.08097838,\n       0.06252517, 0.07205285, 0.08442321, 0.08717472, 0.0724784 ]), 'split4_train_f1_macro': array([0.08683171, 0.07602678, 0.09112258, 0.07815838, 0.06668953,\n       0.09047732, 0.0811274 , 0.08181935, 0.09012954, 0.094952  ,\n       0.06223893, 0.08817599, 0.07453776, 0.08300628, 0.08014572,\n       0.08096142, 0.06706546, 0.07645042, 0.08119723, 0.06987173]), 'split5_train_f1_macro': array([0.08148449, 0.06288156, 0.09172483, 0.07714263, 0.09740804,\n       0.07731731, 0.08994709, 0.09152445, 0.10983318, 0.09333339,\n       0.06847867, 0.08429582, 0.08415033, 0.09361418, 0.06164322,\n       0.06170073, 0.0789297 , 0.07863313, 0.08077887, 0.06415915]), 'split6_train_f1_macro': array([0.08350669, 0.06231676, 0.0976072 , 0.07873377, 0.08693669,\n       0.08030075, 0.08272275, 0.08853311, 0.0848007 , 0.0995116 ,\n       0.07491331, 0.08489796, 0.06822511, 0.08165348, 0.08974359,\n       0.07746032, 0.08114962, 0.05931566, 0.07988662, 0.0570402 ]), 'split7_train_f1_macro': array([0.09831434, 0.04805721, 0.09850251, 0.09408233, 0.09104801,\n       0.07736512, 0.05216217, 0.07630592, 0.09092971, 0.07868867,\n       0.07860088, 0.09795015, 0.08782827, 0.07052154, 0.07793456,\n       0.09634683, 0.07001144, 0.08283772, 0.08382633, 0.04967651]), 'split8_train_f1_macro': array([0.07244423, 0.06664574, 0.08923687, 0.07637339, 0.07952636,\n       0.04517568, 0.09407375, 0.07359755, 0.09286899, 0.07376025,\n       0.09362568, 0.07214969, 0.051598  , 0.09533957, 0.07959097,\n       0.07685063, 0.07585139, 0.05276564, 0.07564253, 0.07350544]), 'split9_train_f1_macro': array([0.09224809, 0.05051863, 0.08818156, 0.10441682, 0.08851936,\n       0.05121343, 0.08035911, 0.09505245, 0.08682213, 0.09191866,\n       0.07815452, 0.08730159, 0.09033072, 0.0853585 , 0.09393264,\n       0.06151253, 0.0598349 , 0.08122384, 0.08851651, 0.05519368]), 'mean_train_f1_macro': array([0.08777508, 0.06237292, 0.09261556, 0.08462955, 0.08338676,\n       0.0698741 , 0.07966563, 0.08724431, 0.09148793, 0.08758462,\n       0.07326186, 0.0894213 , 0.07655557, 0.09408002, 0.07975755,\n       0.06949679, 0.07120696, 0.07273324, 0.07630852, 0.06196835]), 'std_train_f1_macro': array([0.01060863, 0.00830601, 0.00532029, 0.01063465, 0.00971826,\n       0.01315783, 0.01111133, 0.01040485, 0.00822944, 0.01052903,\n       0.01552775, 0.0103043 , 0.01173185, 0.01338135, 0.0093852 ,\n       0.0120969 , 0.00681145, 0.01159932, 0.01422707, 0.01056574]), 'split0_test_neg_root_mean_squared_error': array([-3.57371355, -3.3763886 , -4.10922308, -3.93881781, -3.66839786,\n       -2.94230231, -3.66839786, -3.66839786, -3.47645139, -4.46894043,\n       -3.98210282, -3.47645139, -3.93881781, -3.57371355, -3.62136517,\n       -3.47645139, -2.76198686, -3.89505181, -3.80601028, -3.80601028]), 'split1_test_neg_root_mean_squared_error': array([-3.37377429, -3.26748689, -3.42568156, -4.08368346, -3.26748689,\n       -2.86459113, -2.9852579 , -3.47681396, -4.29431909, -3.42568156,\n       -4.41588043, -3.67423461, -3.81560264, -3.26748689, -3.15762383,\n       -3.81560264, -3.26748689, -3.47681396, -4.16921491, -3.95191688]), 'split2_test_neg_root_mean_squared_error': array([-3.91828294, -3.28096112, -3.73378849, -3.78075623, -4.30458032,\n       -3.05825787, -3.73378849, -4.0944726 , -3.58919948, -3.91828294,\n       -3.68622236, -3.87298335, -4.2217922 , -3.73378849, -3.22672662,\n       -3.53969091, -3.43853594, -3.63803438, -3.68622236, -3.87298335]), 'split3_test_neg_root_mean_squared_error': array([-3.68223078, -3.11070259, -3.91452799, -3.58509988, -3.77686456,\n       -3.48526309, -4.17626346, -3.77686456, -3.58509988, -4.04751194,\n       -3.27647587, -3.38248082, -3.58509988, -3.77686456, -2.93558292,\n       -3.53553391, -3.38248082, -3.77686456, -3.95935229, -4.13379188]), 'split4_test_neg_root_mean_squared_error': array([-3.40846697, -3.02441049, -3.56040315, -3.40846697, -3.98157521,\n       -3.30329604, -3.45985379, -3.65818984, -3.60962765, -3.60962765,\n       -3.56040315, -3.30329604, -3.51048849, -3.45985379, -3.65818984,\n       -3.24943434, -3.45985379, -3.40846697, -3.51048849, -3.51048849]), 'split5_test_neg_root_mean_squared_error': array([-3.35629347, -3.56040315, -3.51048849, -4.06925344, -3.51048849,\n       -3.51048849, -3.60962765, -3.45985379, -3.1389395 , -3.65818984,\n       -3.84631221, -3.45985379, -3.70611577, -3.56040315, -3.40846697,\n       -3.56040315, -3.02441049, -3.51048849, -3.70611577, -3.65818984]), 'split6_test_neg_root_mean_squared_error': array([-3.60962765, -3.45985379, -3.56040315, -3.7534298 , -3.60962765,\n       -3.7534298 , -3.40846697, -3.19466467, -3.40846697, -3.56040315,\n       -3.24943434, -3.51048849, -3.51048849, -3.45985379, -3.40846697,\n       -3.24943434, -2.71704857, -3.56040315, -3.35629347, -3.56040315]), 'split7_test_neg_root_mean_squared_error': array([-3.38682569, -3.22672662, -3.33431358, -3.63803438, -3.82714761,\n       -3.43853594, -4.05114363, -3.48947999, -3.43853594, -3.87298335,\n       -3.78075623, -3.38682569, -3.22672662, -4.0073462 , -2.94058818,\n       -3.33431358, -3.58919948, -3.22672662, -3.48947999, -3.58919948]), 'split8_test_neg_root_mean_squared_error': array([-3.38682569, -3.43853594, -3.28096112, -3.05825787, -3.33431358,\n       -3.78075623, -3.38682569, -3.63803438, -3.53969091, -3.53969091,\n       -3.38682569, -3.22672662, -3.33431358, -3.22672662, -3.48947999,\n       -3.43853594, -2.75467517, -3.68622236, -3.78075623, -3.87298335]), 'split9_test_neg_root_mean_squared_error': array([-3.73378849, -3.17156484, -3.63803438, -3.28096112, -3.82714761,\n       -3.17156484, -3.68622236, -3.48947999, -4.0073462 , -3.78075623,\n       -4.34538295, -3.33431358, -3.43853594, -3.48947999, -2.18282063,\n       -3.22672662, -3.33431358, -3.63803438, -3.87298335, -4.05114363]), 'mean_test_neg_root_mean_squared_error': array([-3.54298295, -3.2917034 , -3.6067825 , -3.65967609, -3.71076298,\n       -3.33084857, -3.61658478, -3.59462516, -3.6087677 , -3.7882068 ,\n       -3.7529796 , -3.46276544, -3.62879814, -3.5555517 , -3.20293111,\n       -3.44261268, -3.17299916, -3.58171067, -3.73369171, -3.80071103]), 'std_test_neg_root_mean_squared_error': array([0.18231345, 0.15898722, 0.24311151, 0.31987044, 0.29116307,\n       0.30290313, 0.32289955, 0.22551011, 0.30690493, 0.29132009,\n       0.38840491, 0.18036862, 0.28339272, 0.22338494, 0.41623203,\n       0.17469618, 0.31284925, 0.18058021, 0.22855035, 0.20347571]), 'rank_test_neg_root_mean_squared_error': array([ 7,  3, 11, 15, 16,  4, 13, 10, 12, 19, 18,  6, 14,  8,  2,  5,  1,\n        9, 17, 20]), 'split0_train_neg_root_mean_squared_error': array([-3.26848689, -3.37474279, -3.51141928, -3.53368478, -3.64834997,\n       -3.10228674, -3.50583081, -3.35142151, -3.45512786, -3.78550728,\n       -3.53922927, -3.19568745, -3.38054797, -3.20181729, -3.35142151,\n       -3.44944819, -3.09595984, -3.52813158, -3.63758521, -3.51699887]), 'split1_train_neg_root_mean_squared_error': array([-3.31662479, -3.3750377 , -3.51682786, -3.76379114, -3.57743562,\n       -3.25115865, -3.54450531, -3.65846482, -3.65846482, -3.54450531,\n       -4.04896738, -3.32838938, -3.7062321 , -3.22702352, -3.04633063,\n       -3.52238075, -3.47208505, -3.7220183 , -3.80510543, -3.8307006 ]), 'split2_train_neg_root_mean_squared_error': array([-3.80895567, -3.15815474, -3.3210414 , -3.5651224 , -3.71544886,\n       -3.31515128, -3.7259544 , -3.60871186, -3.50987439, -3.64642523,\n       -3.5651224 , -3.61952721, -3.59786401, -3.3386494 , -3.07665371,\n       -3.48753014, -3.30925068, -3.86498522, -3.57606958, -3.96975536]), 'split3_train_neg_root_mean_squared_error': array([-3.42009772, -3.46551179, -3.51033838, -3.40291119, -3.42009772,\n       -3.36246768, -3.48238939, -3.27412121, -3.4485516 , -3.45421425,\n       -3.31564252, -3.5655792 , -3.68419461, -3.11505747, -3.04526118,\n       -3.32741059, -3.26814653, -3.47114678, -3.49918557, -3.66291388]), 'split4_train_neg_root_mean_squared_error': array([-3.51867979, -3.19251976, -3.44004015, -3.67622877, -3.69743286,\n       -2.9836689 , -3.55184954, -3.58471238, -3.51867979, -3.4570421 ,\n       -3.55734777, -3.5628375 , -3.66024509, -3.57379168, -3.20473997,\n       -3.09302041, -3.31269397, -3.67622877, -3.4172393 , -3.67622877]), 'split5_train_neg_root_mean_squared_error': array([-3.71851604, -3.38274988, -3.38852249, -3.7447031 , -3.40003832,\n       -3.24112419, -3.5463428 , -3.42295375, -3.24714859, -3.51867979,\n       -3.66558073, -3.64419131, -3.49079758, -3.40003832, -3.47396084,\n       -3.47396084, -3.05487276, -3.58471238, -3.54082749, -3.70798944]), 'split6_train_neg_root_mean_squared_error': array([-3.5792562 , -3.33034611, -3.41151528, -3.66024509, -3.41151528,\n       -3.15557518, -3.55734777, -3.50197711, -3.50197711, -3.32447248,\n       -3.53530357, -3.50197711, -3.78106029, -3.59016028, -2.95073557,\n       -3.22904167, -3.02271531, -3.90314331, -3.47396084, -3.74991857]), 'split7_train_neg_root_mean_squared_error': array([-3.39092485, -3.65712904, -3.24363571, -3.30333954, -3.39092485,\n       -3.22550908, -4.02354633, -3.79353127, -3.43672445, -3.62492278,\n       -3.39092485, -3.40817182, -3.44807929, -3.80382115, -3.21944418,\n       -2.87978465, -3.3210414 , -3.47067754, -3.53760625, -3.61952721]), 'split8_train_neg_root_mean_squared_error': array([-3.66780162, -3.2974178 , -3.54863831, -3.64106152, -3.51543826,\n       -3.74165739, -3.5320773 , -3.7259544 , -3.48753014, -3.80895567,\n       -3.29148541, -3.67844323, -3.91522544, -3.3735897 , -3.24965546,\n       -3.09565209, -3.06392267, -3.98449765, -3.60329202, -3.65712904]), 'split9_train_neg_root_mean_squared_error': array([-3.43103293, -3.54863831, -3.5320773 , -3.21944418, -3.40243255,\n       -3.69963463, -3.57060018, -3.44240655, -3.54312658, -3.41390145,\n       -3.52653968, -3.47630415, -3.4987201 , -3.4931296 , -2.92022042,\n       -3.42533196, -3.32692109, -3.50987439, -3.27958844, -3.89520711]), 'mean_train_neg_root_mean_squared_error': array([-3.51203765, -3.37822479, -3.44240562, -3.55105317, -3.51791143,\n       -3.30782337, -3.60404438, -3.53642549, -3.48072053, -3.55786263,\n       -3.54361436, -3.49811084, -3.61629665, -3.41170784, -3.15384235,\n       -3.29835613, -3.22476093, -3.67154159, -3.53704601, -3.72863689]), 'std_train_neg_root_mean_squared_error': array([0.16935309, 0.14360691, 0.09609618, 0.17669841, 0.12492203,\n       0.23015299, 0.15276348, 0.15824261, 0.09821301, 0.15000915,\n       0.20251982, 0.14359231, 0.15650048, 0.19788615, 0.16814458,\n       0.20490606, 0.14483507, 0.18064264, 0.13188676, 0.12886235]), 'split0_test_neg_mean_absolute_error': array([-2.94285714, -2.71428571, -3.62857143, -3.4       , -3.05714286,\n       -2.25714286, -3.05714286, -3.05714286, -2.82857143, -4.14285714,\n       -3.45714286, -2.82857143, -3.4       , -2.94285714, -3.        ,\n       -2.82857143, -2.08571429, -3.34285714, -3.22857143, -3.22857143]), 'split1_test_neg_mean_absolute_error': array([-2.73529412, -2.61764706, -2.79411765, -3.61764706, -2.61764706,\n       -2.20588235, -2.32352941, -2.85294118, -3.91176471, -2.79411765,\n       -4.08823529, -3.08823529, -3.26470588, -2.61764706, -2.5       ,\n       -3.26470588, -2.61764706, -2.85294118, -3.73529412, -3.44117647]), 'split2_test_neg_mean_absolute_error': array([-3.41176471, -2.64705882, -3.17647059, -3.23529412, -3.94117647,\n       -2.41176471, -3.17647059, -3.64705882, -3.        , -3.41176471,\n       -3.11764706, -3.35294118, -3.82352941, -3.17647059, -2.58823529,\n       -2.94117647, -2.82352941, -3.05882353, -3.11764706, -3.35294118]), 'split3_test_neg_mean_absolute_error': array([-3.08823529, -2.44117647, -3.38235294, -2.97058824, -3.20588235,\n       -2.85294118, -3.73529412, -3.20588235, -2.97058824, -3.55882353,\n       -2.61764706, -2.73529412, -2.97058824, -3.20588235, -2.26470588,\n       -2.91176471, -2.73529412, -3.20588235, -3.44117647, -3.67647059]), 'split4_test_neg_mean_absolute_error': array([-2.79411765, -2.38235294, -2.97058824, -2.79411765, -3.5       ,\n       -2.67647059, -2.85294118, -3.08823529, -3.02941176, -3.02941176,\n       -2.97058824, -2.67647059, -2.91176471, -2.85294118, -3.08823529,\n       -2.61764706, -2.85294118, -2.79411765, -2.91176471, -2.91176471]), 'split5_test_neg_mean_absolute_error': array([-2.73529412, -2.97058824, -2.91176471, -3.61764706, -2.91176471,\n       -2.91176471, -3.02941176, -2.85294118, -2.5       , -3.08823529,\n       -3.32352941, -2.85294118, -3.14705882, -2.97058824, -2.79411765,\n       -2.97058824, -2.38235294, -2.91176471, -3.14705882, -3.08823529]), 'split6_test_neg_mean_absolute_error': array([-3.02941176, -2.85294118, -2.97058824, -3.20588235, -3.02941176,\n       -3.20588235, -2.79411765, -2.55882353, -2.79411765, -2.97058824,\n       -2.61764706, -2.91176471, -2.91176471, -2.85294118, -2.79411765,\n       -2.61764706, -2.08823529, -2.97058824, -2.73529412, -2.97058824]), 'split7_test_neg_mean_absolute_error': array([-2.76470588, -2.58823529, -2.70588235, -3.05882353, -3.29411765,\n       -2.82352941, -3.58823529, -2.88235294, -2.82352941, -3.35294118,\n       -3.23529412, -2.76470588, -2.58823529, -3.52941176, -2.29411765,\n       -2.70588235, -3.        , -2.58823529, -2.88235294, -3.        ]), 'split8_test_neg_mean_absolute_error': array([-2.76470588, -2.82352941, -2.64705882, -2.41176471, -2.70588235,\n       -3.23529412, -2.76470588, -3.05882353, -2.94117647, -2.94117647,\n       -2.76470588, -2.58823529, -2.70588235, -2.58823529, -2.88235294,\n       -2.82352941, -2.11764706, -3.11764706, -3.23529412, -3.35294118]), 'split9_test_neg_mean_absolute_error': array([-3.17647059, -2.52941176, -3.05882353, -2.64705882, -3.29411765,\n       -2.52941176, -3.11764706, -2.88235294, -3.52941176, -3.23529412,\n       -4.        , -2.70588235, -2.82352941, -2.88235294, -1.64705882,\n       -2.58823529, -2.70588235, -3.05882353, -3.35294118, -3.58823529]), 'mean_test_neg_mean_absolute_error': array([-2.94428571, -2.65672269, -3.02462185, -3.09588235, -3.15571429,\n       -2.7110084 , -3.04394958, -3.00865546, -3.03285714, -3.25252101,\n       -3.2192437 , -2.8505042 , -3.05470588, -2.96193277, -2.58529412,\n       -2.82697479, -2.54092437, -2.99016807, -3.1787395 , -3.26109244]), 'std_test_neg_mean_absolute_error': array([0.21790357, 0.17675098, 0.2885847 , 0.38027535, 0.36787994,\n       0.34318333, 0.38645378, 0.27210392, 0.38195592, 0.37223405,\n       0.49346216, 0.21303091, 0.34692969, 0.26763461, 0.40933104,\n       0.19793313, 0.32791765, 0.20541365, 0.27841594, 0.25187162]), 'rank_test_neg_mean_absolute_error': array([ 7,  3, 11, 15, 16,  4, 13, 10, 12, 19, 18,  6, 14,  8,  2,  5,  1,\n        9, 17, 20]), 'split0_train_neg_mean_absolute_error': array([-2.63071895, -2.74836601, -2.90522876, -2.93137255, -3.06862745,\n       -2.45424837, -2.89869281, -2.72222222, -2.83986928, -3.23856209,\n       -2.9379085 , -2.55228758, -2.75490196, -2.55882353, -2.72222222,\n       -2.83333333, -2.44771242, -2.9248366 , -3.05555556, -2.91176471]), 'split1_train_neg_mean_absolute_error': array([-2.68078176, -2.74592834, -2.90879479, -3.20846906, -2.98045603,\n       -2.60912052, -2.94136808, -3.0781759 , -3.0781759 , -2.94136808,\n       -3.57980456, -2.69381107, -3.13680782, -2.58306189, -2.39413681,\n       -2.91530945, -2.85667752, -3.15635179, -3.26058632, -3.29315961]), 'split2_train_neg_mean_absolute_error': array([-3.26384365, -2.50814332, -2.68403909, -2.96416938, -3.1465798 ,\n       -2.67752443, -3.15960912, -3.01628664, -2.8990228 , -3.06188925,\n       -2.96416938, -3.02931596, -3.00325733, -2.70358306, -2.42345277,\n       -2.87296417, -2.67100977, -3.33550489, -2.9771987 , -3.4723127 ]), 'split3_train_neg_mean_absolute_error': array([-2.7980456 , -2.85016287, -2.90228013, -2.77850163, -2.7980456 ,\n       -2.73289902, -2.86970684, -2.63517915, -2.83061889, -2.83713355,\n       -2.68078176, -2.96742671, -3.11074919, -2.46579805, -2.39413681,\n       -2.69381107, -2.6286645 , -2.85667752, -2.88925081, -3.08469055]), 'split4_train_neg_mean_absolute_error': array([-2.90879479, -2.54397394, -2.81758958, -3.09771987, -3.1237785 ,\n       -2.32899023, -2.94788274, -2.98697068, -2.90879479, -2.83713355,\n       -2.95439739, -2.96091205, -3.0781759 , -2.97394137, -2.55700326,\n       -2.43973941, -2.6742671 , -3.09771987, -2.79153094, -3.09771987]), 'split5_train_neg_mean_absolute_error': array([-3.14983713, -2.752443  , -2.75895765, -3.18241042, -2.77198697,\n       -2.59609121, -2.94136808, -2.7980456 , -2.60260586, -2.90879479,\n       -3.08469055, -3.05863192, -2.8762215 , -2.77198697, -2.85667752,\n       -2.85667752, -2.40065147, -2.98697068, -2.93485342, -3.13680782]), 'split6_train_neg_mean_absolute_error': array([-2.98045603, -2.69381107, -2.78501629, -3.0781759 , -2.78501629,\n       -2.50488599, -2.95439739, -2.88925081, -2.88925081, -2.68729642,\n       -2.92833876, -2.88925081, -3.22801303, -2.99348534, -2.29641694,\n       -2.58306189, -2.36807818, -3.38436482, -2.85667752, -3.18892508]), 'split7_train_neg_mean_absolute_error': array([-2.76221498, -3.07491857, -2.59934853, -2.66449511, -2.76221498,\n       -2.57980456, -3.54397394, -3.24429967, -2.81433225, -3.03583062,\n       -2.76221498, -2.78175896, -2.82736156, -3.25732899, -2.5732899 ,\n       -2.22801303, -2.68403909, -2.8534202 , -2.93159609, -3.02931596]), 'split8_train_neg_mean_absolute_error': array([-3.08794788, -2.65798046, -2.94462541, -3.05537459, -2.90553746,\n       -3.17915309, -2.92508143, -3.15960912, -2.87296417, -3.26384365,\n       -2.6514658 , -3.1009772 , -3.40065147, -2.74267101, -2.60586319,\n       -2.44299674, -2.41042345, -3.49185668, -3.00977199, -3.07491857]), 'split9_train_neg_mean_absolute_error': array([-2.80781759, -2.94462541, -2.92508143, -2.5732899 , -2.7752443 ,\n       -3.12703583, -2.97068404, -2.82084691, -2.93811075, -2.78827362,\n       -2.91856678, -2.85993485, -2.88599349, -2.87947883, -2.26710098,\n       -2.80130293, -2.69055375, -2.8990228 , -2.63843648, -3.37459283]), 'mean_train_neg_mean_absolute_error': array([-2.90704584, -2.7520353 , -2.82309617, -2.95339784, -2.91174874,\n       -2.67897533, -3.01527645, -2.93508867, -2.86737455, -2.96001256,\n       -2.94623385, -2.88943071, -3.03021332, -2.7930159 , -2.50903004,\n       -2.66672096, -2.58320772, -3.09867259, -2.93454578, -3.16642077]), 'std_train_neg_mean_absolute_error': array([0.19865176, 0.16310539, 0.10978365, 0.20577716, 0.14798281,\n       0.26052429, 0.190901  , 0.18573385, 0.11300059, 0.17974097,\n       0.2476573 , 0.16387116, 0.18938918, 0.22648573, 0.17876674,\n       0.22092046, 0.15568047, 0.22291204, 0.15642311, 0.16055258])}", "experiment_setup": {"dataset_settings": {"dataset_variants": ["complete", "only_totals", "only_binary"], "type_of_labels": "floors", "only_BMI": 1}, "task": "Classification", "pipe": {"feature_extraction": "MaskedSVD(mask=mask)", "scaler": "MinMaxScaler()", "estimator": "OrdinalBinaryClassifier(estimator = DecisionTreeClassifier())"}, "hp_optimizer": {"type": "RandomizeSearchCV", "n_iter": 20, "params": [{"feature_extraction": "[MaskedSVD(mask=mask), MaskedPCA(mask=mask)]", "feature_extraction__n_components": "np.arange(1, X[:, mask].shape[1])", "estimator__estimator__max_depth": "[3, 4, 5, 6]", "estimator__binary_threshold": "[2, 3, 4, 5]", "estimator__estimator__splitter": "['best', 'random']"}], "metrics": ["accuracy", "f1_micro", "f1_macro", "neg_root_mean_squared_error", "neg_mean_absolute_error"], "n_split_outer_cv": 10}}}]